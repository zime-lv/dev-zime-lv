{"version":3,"sources":["components/submitButton/SubmitButton.js","components/locale lazy /^/.*$/ groupOptions: {} namespace object","translations/i18n.js","utils/config.js","utils/state.js","utils/useTimeout.js","components/card/Card.js","components/errorBoundary/ErrorBoundary.js","components/modalMessage/ModalMessage.js","components/accountRegistration/AccountRegistration.js","components/pagination/Pagination.js","components/search/Search.js","components/datePicker/DatePickerWrapper.js","components/datePicker/DatePicker.js","components/dateRangePicker/DateRangePicker.js","components/transactions/Transactions.js","components/shareholder/Shareholder.js","components/shares/Shares.js","components/transfer/Balance.js","components/transfer/TransferToSelf.js","components/tanInput/TanInput.js","components/transfer/TransferToPerson.js","components/transfer/TransferToBusiness.js","components/businessRegistration/businessRegistration.js","components/purposeRegistration/PurposeRegistration.js","components/shareholderRegistration/shareholderRegistration.js","components/myBusiness/MyBusiness.js","components/userEditor/UserEditor.js","components/currencies/Currencies.js","components/currencyRegistration/CurrencyRegistration.js","components/idleTimer/IdleTimer.js","utils/useInterval.js","utils/useEventListener.js","components/pages/summary/Summary.js","components/currencyContainer/CurrencyContainer.js","components/transfer/Transfer.js","components/contact/Contact.js","components/overlay/Overlay.js","components/alertContainer/AlertContainer.js","components/alert/Alert.js","components/login/LogIn.js","components/signup/SignUp.js","components/language-selector/LanguageSelector.js","components/pages/main/Routes.js","components/auth/Auth.js","components/validateEmail/ValidateEmail.js","components/changePassword/ChangePassword.js","components/logout/Logout.js","components/passwordReset/passwordReset.js","components/leads/Leads.js","components/pages/main/Main.js","components/pages/underConstruction/UnderConstruction.js","components/underConstruction/UnderConstruction.js","components/pages/notConnected/NotConnected.js","components/notConnected/NotConnected.js","utils/sockets.js","utils/userResponseHandler.js","Dispatcher.js","utils/requestHandler.js","utils/userErrorHandler.js","utils/systemErrorHandler.js","utils/systemResponseHandler.js","components/loading/Loading.js","index.js"],"names":["args","props","Object","assign","caption","request","namespace","visible","marginTop","timeout","variant","onSubmit","barrelGetters","barrelSetters","setError","setInfo","useState","requestExpired","Button","type","onClick","block","disabled","style","whiteSpace","Spinner","as","animation","size","role","aria-hidden","hidden","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","module","exports","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","defaultNS","keySeparator","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","config","dev","uri","ENDPOINT","SITEMODE","window","location","hostname","useStickyState","defaultValue","key","stickyValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","useTimeout","callback","delay","savedCallback","useRef","current","setTimeout","clearTimeout","defaults","title","navigation","undefined","footer","header","body","headerContent","onNavigationClick","Footer","Header","className","length","Title","Nav","defaultActiveKey","navigationdefaultActiveKey","item","Item","Link","href","link","color","name","Body","React","Children","children","child","cloneElement","styles","ErrorBoundary","state","hasError","error","errorInfo","console","log","this","Component","centered","message","onHide","file","backdrop","useTranslation","ExternalFile","lazy","Modal","aria-labelledby","closeButton","Navbar","borderRadius","background","backgroundColor","boxShadow","Brand","src","width","height","alt","maxHeight","overflowY","signedIn","accountNumber","userData","language","userBirthYear","userBirthMonth","userBirthDay","userBirthDateError","userTimezone","setUserBirthYear","setUserBirthMonth","setUserBirthDay","setUserBirthDateError","setUserTimezone","barrelFunctions","getReviser","getWorkplace","sendRequest","userAgreementShow","setUserAgreementShow","privacyPolicyShow","setPrivacyPolicyShow","schema","yup","timezone","required","birthYear","birthMonth","birthDay","timezones_sorted","timezones","composeDate","year","month","day","newDate","dateString","match","datepart","split","parseInt","leapYear","isValidDate","yearNow","Date","getFullYear","Alert","Heading","Trans","i18nKey","ModalMessage","show","component","handleSubmit","handleChange","values","handleBlur","touched","errors","isValid","validateForm","setFieldValue","Form","noValidate","Row","margin","Group","Col","controlId","Label","Control","custom","onChange","target","isInvalid","Array","from","Feedback","monthName","toLocaleString","monthNumber","toString","padStart","dayNumber","element","Offset","Name","paddingBottom","KeyboardArrowRight","onMouseDown","validationSchema","data","birthDate","reviser","workplace","email","sendAccountRegistrationRequest","initialValues","countItems","itemsPerPage","active","align","pages","Math","ceil","getPages","items","number","push","Pagination","Ellipsis","textAlign","display","padding","First","Prev","Next","Last","getJSX","advancedSearch","placeholder","captionAdvancedSearch","search","setSearch","refSearch","createRef","tempRefSearch","optional","InputGroup","ref","autoComplete","Append","Text","cursor","Search","refDatePicker","fp","flatpickr","options","destroy","datePicker","aria-describedby","open","DateRange","locale","showMonths","inline","shorthandCurrentMonth","allowInput","clickOpens","monthSelectorType","altInput","altFormat","dateFormat","maxDate","defaultDate","selectedDates","dateStr","instance","captionStartDate","captionEndDate","captionUpdate","dateRangeStart","dateRangeEnd","setDateRangeStart","setDateRangeEnd","getTransactions","formatDate","clearRequestStatus","dateStart","dateEnd","Replay","transactions","countTransactions","activePageTransactions","transactionsPerPage","findTransactions","showRequestStatus","format","formatPerCent","cnt","marginBottom","DateRangePicker","ListGroup","transaction","keyTransactions","business_title","comment","conv_amount","created","sender_firstname","sender_lastname","recipient_firstname","recipient_lastname","purpose_id","purpose_title","recipient_id","roles","share","share_per_cent","sender_id","from_account","to_account","i_am_sender","i_am_recipient","t_from_account","t_to_account","roles_available","arrRoles","shares_available","action","float","ArrowRightAlt","sender","Badge","pill","purpose","shareholder","rangeControl","sharePerCent","businessTitle","purposeTitle","businessOwnerFirstname","businessOwnerLastname","sharesCreated","purposeShareholders","setPurposeShareholders","userQuery","setUserQuery","delayedQuery","_","debounce","q","sendQuery","onClose","shareholder_id","ps","sharesLabelId","Toast","minWidth","firstname","lastname","Settings","fontSize","min","max","step","shares","countShares","activePageShares","sharesPerPage","getShares","findShares","keyShares","owner_firstname","owner_lastname","shares_created","shares_roles","shares_share","Shareholder","accordionView","setAccountType","setRedirectTo","setAccordionView","setResponseProps","setClearRefs","getAccountData","copyToClipboard","showMessage","refAccountNumber","userDataParsed","onAccountTypeSelected","available","acc_curr","acc_cred","acc_save","toggleView","view","newView","Accordion","Toggle","Card","eventKey","Collapse","readOnly","border","document","queryCommandSupported","marginLeft","FileCopy","Transactions","Shares","accountType","currencyAbbr","transferFromAccount","transferToAccount","transferAmount","setTransferFromAccount","setTransferToAccount","setTransferAmount","parseLocaleNumber","refAmount","tempRefAmount","fromAccount","toAccount","amount","matches","RegExp","Prepend","uid","Intl","NumberFormat","notation","minimumFractionDigits","useGrouping","transferToSelf","tanRequired","tanInputTAN","setTanRequired","setTanInputTAN","refTAN","tempRef","tan","transferToUID","transferDescription","setTransferRequest","setTransferToUID","setTransferDescription","refPersonalID","refDescription","tempRefPersonalID","tempRefDescription","toPersonalID","TanInput","rows","description","transferType","transferToPerson","transferToPurpose","setTransferToPurpose","refPurposeID","tempRefPurposeID","purposeID","currency","transferToBusiness","businessRegistrationAddTitle","businessRegistrationAddDescription","setBusinessRegistrationAddTitle","setBusinessRegistrationAddDescription","refBusinessTitle","refBusinessDescription","tempRefBusinessTitle","tempRefBusinessDescription","trim","businessDescription","requestInsert","requestUpdate","businessID","category","subcategory","subcategory2","keywords","barrels","purposeRegistrationTitle","purposeRegistrationDescription","purposeRegistrationKeywords","setPurposeRegistrationTitle","setPurposeRegistrationDescription","setPurposeRegistrationKeywords","onPurposeRegistration","barrelEventHandlers","refPurposeTitle","refPurposeDescription","refPurposeKeywords","tempRefPurposeTitle","tempRefPurposeDescription","tempRefPurposeKeywords","purposeDescription","purposeKeywords","RegisterPurpose","shareholderRoles","typeError","personalID","userBusinesses","countBusinesses","businessesPerPage","activePageBusinesses","userBusinessesLoaded","activeBusiness","activeBusinessID","businessPurposes","countBusinessPurposes","businessPurposesPerPage","activePageBusinessPurposes","activeBusinesPurpose","activePurposeProperty","activePurposeData","setBusinessPurposes","setActiveBusiness","setActiveBusinesPurpose","setActivePurposeProperty","setActivePageBusinessPurposes","setActivePurposeData","getBusinesses","getBusinessPurposes","getPurposeShareholders","findPurposes","refBusinessID","menuItems","purposes","cntPurposes","countShareholders","business","keyBusiness","keyPurpose","business_id","TogglePurpose","Edit","stopPropagation","Tab","Pane","bg","Add","keyShareholder","bp","status","purpose_status","Check","label","checked","jsx","date","businessSince","ToggleBusiness","Store","Container","sm","Content","PurposeRegistration","mode","userEditorEditFirstname","userEditorFirstname","userEditorEditLastname","userEditorLastname","userEditorEditEmail","userEditorEmail","userEditorEditPassword","userEditorPassword","userEditorPasswordVisible","userEditorSubmitButtonVisible","setUserEditorEditFirstname","setUserEditorFirstname","setUserEditorEditLastname","setUserEditorLastname","setUserEditorEmail","setUserEditorEditEmail","setUserEditorEditPassword","setUserEditorPassword","setUserEditorPasswordVisible","setUserEditorSubmitButtonVisible","refFirstName","refLastName","refEmail","refPassword","tempRefFirstName","tempRefLastName","tempRefEmail","tempRefPassword","togglePassword","yupObject","firstName","lastName","password","Close","VisibilityOff","Visibility","sendUserRegistrationRequest","currencies","settings","countCurrencies","activePageCurrencies","currenciesPerPage","setCurrencyAbbr","setCurrencyRate","getCurrencies","findCurrencies","formatExchangeRate","getObjectArrayElementIndex","onCurrencySelected","currency_id","rate","onPageSelect","Table","responsive","striped","bordered","hover","keyCurrency","abbr","region","includes","paddingLeft","aria-label","curr_abbr","curr_title","curr_region","curr_rate","currencyCode","currencyName","currencyRegion","currencyNewRate","setCurrencyCode","setCurrencyName","setCurrencyRegion","setCurrencyNewRate","refAbbr","refTitle","refRegion","refRate","tempRefAbbr","tempRefTitle","tempRefRegion","tempRefRate","timestamp","stage2","stage3","onTick","onTimerReset","onTimeout","events","onSessionTimeout","seconds","setSeconds","modalMessageShow","setModalMessageShow","setInterval","clearInterval","useInterval","eventHandler","i","addEventListener","removeEventListener","useEventListener","currTime","timeFormatted","minute","second","modalMessage","fontWeight","OverlayTrigger","placement","overlay","Tooltip","AvTimer","sessionTimeout","useLocation","fluid","paddingRight","PowerSettingsNew","IdleTimer","collapseOnSelect","expand","pathname","aria-controls","pageBody","exact","path","Balance","AccountRegistration","UserEditor","accordionViewCurrency","setAccordionViewCurrency","Currencies","CurrencyRegistration","CurrencyContainer","MyBusiness","onTransferTypeChange","transferCard","setTransferCard","TransferToSelf","TransferToPerson","TransferToBusiness","Transfer","contactSubject","contactMessage","setContactSubject","setContactMessage","refSubject","refMessage","tempRefSubject","tempRefMessage","subject","Contact","dismissible","info","onAlertClose","errorStrings","infoStrings","msgError","msg","msgInfo","ip","logInEmail","logInPassword","setLoggingIn","setUpdateInterval","setLogInEmail","setLogInPassword","getUri","sendUserLogInRequest","signUpFirstName","signUpLastName","signUpEmail","signUpPassword","setSignUpFirstName","setSignUpLastName","setSignUpEmail","setSignUpPassword","passwordVisible","setPasswordVisible","validateEmail","changeLanguage","lng","selectLanguage","getRedirect","getContainerClass","wrapperClass","innerClass","appClass","Summary","Login","SignUp","cartContent","cartPurposes","Cart","priceTotal","priceReal","price","product_found","find","products","product","Auth","validationTokenEmail","validationTokenEmailResent","setValidateTokenEmail","getUrlParam","token","ValidateEmail","passwordResetTokenValidated","passwordResetTokenEmail","ChangePassword","setLanguage","onLogOut","tempError","tempInfo","tempLanguage","Logout","passwordResetEmail","setValidateTokenPasswordReset","setPasswordResetEmail","PasswordReset","LanguageSelector","marginRight","leadFile","now","session","serverResponseReceived","dailyAllowanceDispatched","externalRequest","validateTokenEmail","validateTokenPasswordReset","connected","isExternalRequest","clearRefs","setRequestTimedOut","setDailyAllowanceDispatched","setRequest","setIsExternalRequest","getIP","getCart","getCartPurposes","sendEmailValidationRequest","sendPasswordResetRequest","onRedirect","onSessionStart","setDate","getDate","customer","cart","xl","lg","md","Routes","Build","UnderConstruction","PowerOff","NotConnected","socket","openSocket","connect","secure","reconnect","sendData","emit","responseProps","transferRequest","lastInsertId","setSession","setSettings","setCurrencies","setTransactions","setShares","setCountCurrencies","setCountTransactions","setCountShares","setConnected","setUserData","setSignedIn","setCartContent","setLastInsertId","setAccountNumber","setUserSequence","setUID","setUserBusinesses","setCountBusinesses","setUserBusinessesLoaded","setCartPurposes","setCountBusinessPurposes","setAccountPhotoPath","setPasswordResetTokenValidated","setPasswordResetTokenEmail","setValidationTokenEmail","setValidationTokenEmailResent","getTransactionById","sortObjectArray","deleteObjectArrayElement","onSessionEnd","responseFound","onResponse","res","reqData","tempRP","saveResponseProps","results","sequence","content","queryCnt","insertId","tags","resent","affectedRows","currency_abbr","isNaN","currency_rate","count_businesses","count_purposes","index","splice","temp","count_currencies","count_transaction_positions","count_shares","isLocalhost","setDebug","loggingOut","setLoggingOut","loggingIn","pageLoading","setPageLoading","setServerResponseReceived","requestTimedOut","setInstance","uuidv4","setSessionTimeout","reconnecting","setReconnecting","setIP","setExternalRequest","updateInterval","currencyRate","setActivePageCurrencies","setActivePageTransactions","setActivePageShares","setCurrenciesPerPage","setTransactionsPerPage","setSharesPerPage","userSequence","setBusinessesPerPage","setActivePageBusinesses","setActiveBusinessID","setBusinessPurposesPerPage","searchTransactions","setSearchTransactions","searchPurposes","setSearchPurposes","searchShares","setSearchShares","redirectTo","setTransferType","accountPhotoPath","processRequest","requestFound","onRequest","dt","fullyear","getMonth","slice","initial","toUpperCase","icode","charCodeAt","scode","tcode","requestHandler","processUserResponse","context","errorFound","onError","userErrorHandler","userResponseHandler","processSystemResponse","systemErrorHandler","hideMessage","systemResponseHandler","getArrayObject","array","property","getRequestStatus","obj","ts","hour","isUTC","locales","diff","getTimezoneOffset","moment","add","toDate","DateTimeFormat","param","queryString","URLSearchParams","get","newPage","page","limit","selected","arr","filter","roundTo","n","digits","negative","multiplicator","pow","parseFloat","toFixed","round","sort","a","b","properties","indexOf","strLoading","strNotFound","finalStatus","retIntl","maximumFractionDigits","substr","to","fetch","method","headers","json","catch","select","execCommand","blur","stringNumber","parts_local","formatToParts","group","decimal","forEach","replace","on","onSignUp","onTransferSuccess","onTransfer","startSession","endSession","onSessionReset","clear","responseData","setResponseData","useSocket","latency","reason","attemptNumber","useSystemSocket","root","getElementById","construction","ReactDOM","render","fallback","Dispatcher"],"mappings":"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AAKC,MAAMyP,IACzB2E,OAAQrU,KAAKC,MAAMoU,IACnBa,iBACAsT,yBACA3F,mBACAlT,qBACA2E,eACAwO,wBACAlT,0BACA2E,oBACAwO,qBACAlT,uBACA2E,iBACAxP,SAAUhF,KAAKC,MAAM+E,IAErB4xB,cACA3F,gBACAnC,aACAuG,gBACAvwB,YACA4pB,4BACAK,qBACAJ,gBAAiB3uB,KAAKC,MAAM0uB,IAC5BrC,YAAatsB,KAAKC,MAAMqsB,IACxBnV,gBACAue,gBAEA3wB,iBACAkxB,gBACA/e,eACAiB,OACA0E,eAAgB7c,KAAKC,MAAM4c,IAC3BC,mBACAC,qBACAC,wBACAC,wBACAC,kBACAC,oBACAC,iBAAkBpd,KAAKC,MAAMmd,IAC7BmP,aAAcvsB,KAAKC,MAAMssB,IACzBlP,yBACAC,2BACAC,8BACAC,wBACAC,yBAEAC,kBAAmB1d,KAAKC,MAAMyd,IAC9B3K,oBAAqB/S,KAAKC,MAAM8S,IAChCic,aACAxE,cACAC,iBACAO,mBACAC,kBACAC,eACAC,kBACAnc,kBACAC,gBACAsL,gCACAC,sCACAiB,4BACAC,kCAIAC,+BACA2E,2BACAC,uBACAC,0BACAC,sBACAC,uBACAC,mBACAC,0BACAC,sBACAC,6BACAC,iCACAiN,sBACArV,eACAnM,UACA8pB,sBACAE,kBACAE,gBAEAhe,eAEAkW,sBACAC,8BACAtB,+BACAC,2BACAP,wBACAC,8BACA8D,gBAAiBhxB,KAAKC,MAAM+wB,IAC5B5Z,uBACAC,qBACAC,kBACA2B,iBACAe,qBACAd,uBACAmQ,kBACAC,kBACApkB,iBACAC,kBACAC,gBACAC,sBACAC,gBACAmf,gBACAC,gBACAC,kBACAC,mBACA3f,YACA6U,gBAEAgd,oBACA7zB,MAAOjD,KAAKC,MAAMgD,IAClB+mB,KAAMhqB,KAAKC,MAAM+pB,KAObpuB,GAAgB,CACpB84B,WACAE,gBACAlK,eAGAqK,iBACA5F,aACA6F,4BACA/F,qBAEAiG,cACA5f,oBAGA4b,aAEAkE,qBAEAjE,eACAoE,SACA5K,qBACAyG,iBACAC,mBACAC,aACAjc,oBACAoT,4BACA8I,sBACAC,wBACAC,kBACAkE,2BACAC,6BACAC,uBACAC,wBACAC,0BACAC,oBACAtE,gBACA4D,mBACA5H,eACAiE,eAEAC,eACA1C,+BACAE,wBACAoG,sBACA3D,kBACA7O,mBACAC,mBAEA7N,iBACA0c,mBACAC,oBACAC,mBACA7c,kBACA8c,UACAC,qBACAC,sBACA+D,wBACAC,2BACA/D,2BACAxU,qBACAwY,uBACAzY,uBACA0U,mBACAC,4BACA+D,8BACAtY,iCACAF,2BACAC,4BAEAE,wBACAhL,0BACAuC,gBACAqV,iBACAC,oBACAO,sBACAC,qBACAC,kBACAC,qBACArc,qBACAC,mBACAsL,mCACAC,yCACAkB,+BACAC,qCAIAC,kCACAkF,8BACAC,0BACAC,6BACAC,yBACAE,0BACAD,sBACAE,6BACAC,yBACAC,gCACAC,oCACAyM,yBACArV,kBACApM,aACA8pB,yBACAE,qBACAE,mBACA96B,YACAC,WAEAy2B,uBACApF,yBACAc,iCACAuE,kCACAC,8BACAC,2BACAC,iCACAxZ,sBACA5B,0BACAC,wBACAC,qBACA2B,oBACAa,wBACAZ,0BACAkQ,qBACAC,qBACAjkB,oBACAC,qBACAC,mBACAC,yBACAC,mBACAkf,mBACAC,mBACAC,qBACAC,sBACApM,mBAeI7S,GAAc,SAAC,GAA0B,IAAxB9I,EAAuB,EAAvBA,IAAuB,IAAlBwN,YAAkB,MAAX,KAAW,EAC5C,OAAIssB,GAAe,CAAE95B,MAAKwN,OAAM+jB,UAASrW,IAAK,MAAOqD,cAEnDwZ,GAA0B,IACnB,IAEP7xB,QAAQC,IAAI,gCACLytB,GAAS,CAAE5zB,MAAKkb,IAAK,MAAOqW,UAAS/jB,QAAQlM,KAQlDw4B,GAAiB,SAAC,GAA0C,IAAxC95B,EAAuC,EAAvCA,IAAKwN,EAAkC,EAAlCA,KAAM+jB,EAA4B,EAA5BA,QAASrW,EAAmB,EAAnBA,IAAKqD,EAAc,EAAdA,QAOjD,OANA/Q,EAAKmE,SAAWA,EAGhBugB,EAAWlyB,GClyBA,SAAClC,GAId,IAKMC,EAAQC,OAAOC,OALN,GAKuBH,GAC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","file":"static/js/main.9d650def.chunk.js","sourcesContent":["/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    caption: \"Submit\",\r\n    request: null,\r\n    namespace: \"Button\",\r\n    visible: true,\r\n    marginTop: 0,\r\n    timeout: 15000, // milliseconds\r\n    variant: \"primary\", // primary | secondary\r\n    onSubmit: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { request } = props.barrelGetters;\r\n  const { setError, setInfo } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const [requestExpired] = useState(false);\r\n\r\n  const onSubmit = () => {\r\n    setError(null);\r\n    setInfo(null);\r\n    props.onSubmit();\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return !props.visible ? (\r\n      <></>\r\n    ) : (\r\n      <Button\r\n        type=\"submit\"\r\n        onClick={onSubmit}\r\n        block\r\n        variant={props.variant === \"primary\" ? \"primary\" : \"outline-primary\"}\r\n        disabled={request === props.request && !requestExpired}\r\n        style={{\r\n          marginTop: props.marginTop + \"px\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n      >\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={request !== props.request || requestExpired}\r\n        />\r\n        &nbsp;\r\n        {props.caption}\r\n        &nbsp;\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","var map = {\n\t\"./document.css\": [\n\t\t271,\n\t\t7,\n\t\t11\n\t],\n\t\"./en/PrivacyPolicy\": [\n\t\t195,\n\t\t9,\n\t\t0\n\t],\n\t\"./en/PrivacyPolicy.js\": [\n\t\t195,\n\t\t9,\n\t\t0\n\t],\n\t\"./en/UserAgreement\": [\n\t\t196,\n\t\t9,\n\t\t1\n\t],\n\t\"./en/UserAgreement.js\": [\n\t\t196,\n\t\t9,\n\t\t1\n\t],\n\t\"./en/leads/LeadLogIn\": [\n\t\t197,\n\t\t9,\n\t\t4\n\t],\n\t\"./en/leads/LeadLogIn.js\": [\n\t\t197,\n\t\t9,\n\t\t4\n\t],\n\t\"./en/leads/LeadSignUp\": [\n\t\t198,\n\t\t9,\n\t\t5\n\t],\n\t\"./en/leads/LeadSignUp.js\": [\n\t\t198,\n\t\t9,\n\t\t5\n\t],\n\t\"./lv/PrivacyPolicy\": [\n\t\t199,\n\t\t9,\n\t\t2\n\t],\n\t\"./lv/PrivacyPolicy.js\": [\n\t\t199,\n\t\t9,\n\t\t2\n\t],\n\t\"./lv/UserAgreement\": [\n\t\t200,\n\t\t9,\n\t\t3\n\t],\n\t\"./lv/UserAgreement.js\": [\n\t\t200,\n\t\t9,\n\t\t3\n\t],\n\t\"./lv/leads/LeadLogIn\": [\n\t\t201,\n\t\t9,\n\t\t6\n\t],\n\t\"./lv/leads/LeadLogIn.js\": [\n\t\t201,\n\t\t9,\n\t\t6\n\t],\n\t\"./lv/leads/LeadSignUp\": [\n\t\t202,\n\t\t9,\n\t\t7\n\t],\n\t\"./lv/leads/LeadSignUp.js\": [\n\t\t202,\n\t\t9,\n\t\t7\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 156;\nmodule.exports = webpackAsyncContext;","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n// not like to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    // lng: \"lv\",\r\n    // ns: [\"LogIn\", \"SignUp\"],\r\n    defaultNS: \"Default\",\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: \"languageChanged loaded\",\r\n      bindStore: \"added removed\",\r\n      nsMode: \"default\",\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","const dev = {\r\n  uri: {\r\n    ENDPOINT: \"http://localhost:9000\",\r\n    SITEMODE: \"DEVELOPMENT\",\r\n    // ENDPOINT: \"http://192.168.2.100:9000\"\r\n  },\r\n};\r\n\r\nconst dev2 = {\r\n  uri: {\r\n    ENDPOINT: \"http://192.168.2.100:5000\",\r\n    SITEMODE: \"DEVELOPMENT2\",\r\n  },\r\n};\r\n\r\nconst staging = {\r\n  uri: {\r\n    ENDPOINT: \"https://dev.local-currency.com\",\r\n    SITEMODE: \"STAGING\",\r\n  },\r\n};\r\n\r\nconst prod = {\r\n  uri: {\r\n    ENDPOINT: \"https://local-currency.com\",\r\n    SITEMODE: \"PRODUCTION\",\r\n  },\r\n};\r\n\r\nconst hostname = window && window.location && window.location.hostname;\r\n\r\nlet config;\r\nswitch (hostname) {\r\n  case \"localhost\":\r\n    config = dev;\r\n    break;\r\n  case \"192.168.2.100\":\r\n    config = dev2;\r\n    break;\r\n  case \"dev.local-currency.com\":\r\n    config = staging;\r\n    break;\r\n  case \"local-currency.com\":\r\n    config = prod;\r\n    break;\r\n  default:\r\n    config = dev;\r\n    break;\r\n}\r\n\r\nexport default {\r\n  ...config,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nexport const useStickyState = (defaultValue, key) => {\r\n  const [value, setValue] = useState(() => {\r\n    const stickyValue = window.localStorage.getItem(key);\r\n    return stickyValue !== null ? JSON.parse(stickyValue) : defaultValue;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n  return [value, setValue];\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useTimeout = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setTimeout(tick, delay);\r\n      return () => clearTimeout(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","import \"./Card.css\";\r\nimport React, { cloneElement } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n// import { Container, Row, Col, Button } from \"react-bootstrap\";\r\n// import Button from \"react-bootstrap/Button\";\r\n\r\nexport default (args) => {\r\n  let defaults = {\r\n    title: \"Untitled\",\r\n    navigation: undefined,\r\n    footer: undefined,\r\n    header: true,\r\n    body: true,\r\n    headerContent: null,\r\n    onNavigationClick: () => {},\r\n  };\r\n  let props = Object.assign(defaults, args);\r\n\r\n  let key = 0;\r\n\r\n  let footer = props.footer ? <Card.Footer>{props.footer}</Card.Footer> : \"\";\r\n\r\n  return (\r\n    <Card>\r\n      {/* <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" /> */}\r\n      {props.header && (\r\n        <Card.Header className=\"custom-card\">\r\n          {props.headerContent !== null ? (\r\n            props.headerContent\r\n          ) : (\r\n            <>\r\n              {props.title.length > 0 && <Card.Title>{props.title}</Card.Title>}\r\n              <Nav\r\n                variant=\"tabs\"\r\n                defaultActiveKey={props.navigationdefaultActiveKey}\r\n              >\r\n                {props.navigation &&\r\n                  props.navigation.map((item, key) => (\r\n                    <Nav.Item key={key}>\r\n                      <Nav.Link\r\n                        className=\"custom-card\"\r\n                        href={item.link}\r\n                        onClick={() => props.onNavigationClick(item.link)}\r\n                        style={{ color: \"black\" }}\r\n                      >\r\n                        {item.name}\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  ))}\r\n              </Nav>\r\n            </>\r\n          )}\r\n        </Card.Header>\r\n      )}\r\n\r\n      {props.body && (\r\n        <Card.Body className=\"custom-card\">\r\n          {React.Children.map(args.children, (child) => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                styles: null,\r\n                key: key,\r\n              });\r\n            }\r\n          })}\r\n        </Card.Body>\r\n      )}\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n    console.log(\"Error boundary:\", error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      //   return <h1>Something went wrong.</h1>;\r\n      return <></>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Modal, Navbar, Nav } from \"react-bootstrap\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ModalMessage\",\r\n    centered: true,\r\n    message: \"\",\r\n    title: null,\r\n    footer: null,\r\n    // bodyStyle: { padding: \"1rem\" },\r\n    onHide: () => {},\r\n    size: \"sm\",\r\n    file: null,\r\n    backdrop: true, // \"static\"\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const ExternalFile =\r\n    props.file !== null\r\n      ? React.lazy(() => import(`../locale/${props.file}`))\r\n      : \"\";\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size={props.size}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered={props.centered}\r\n        backdrop={props.backdrop}\r\n      >\r\n        {props.title !== null && (\r\n          <Modal.Header closeButton>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src=\"gfx/zlogo_light.png\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  alt=\"\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                  {props.title}\r\n                </Modal.Title>\r\n              </Nav>\r\n            </Navbar>\r\n          </Modal.Header>\r\n        )}\r\n        <Modal.Body\r\n          style={{ maxHeight: \"calc(100vh - 210px)\", overflowY: \"auto\" }}\r\n        >\r\n          {props.message !== \"\" ? (\r\n            props.message\r\n          ) : (\r\n            <ErrorBoundary>\r\n              <ExternalFile />\r\n            </ErrorBoundary>\r\n          )}\r\n        </Modal.Body>\r\n        {props.footer !== null && (\r\n          <Modal.Footer>\r\n            <Button block onClick={props.onHide}>\r\n              {t(\"Close\")}\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","// System CSS\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// System imports\r\nimport React from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, Alert, Col } from \"react-bootstrap\";\r\n// import { Redirect } from \"react-router-dom\";\r\n// import ChevronRight from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\r\n// import moment from \"moment-timezone\";\r\n// import DatePicker from \"react-datepicker\";\r\n// import { Today } from \"@material-ui/icons\";\r\n// import { Today } from \"@material-ui/icons\";\r\n// import DatePicker from \"react-date-picker\";\r\n// import MomentUtils from \"@date-io/moment\";\r\n// import { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n// import { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n// import _ from \"lodash\";\r\n\r\n// User imports\r\nimport Card from \"../card\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n// import Dropzone from \"../dropzone\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport ModalMessage from \"../modalMessage\";\r\n// import { useStickyState } from \"../../utils/state\";\r\nimport timezones from \"./timezones.en.json\";\r\n\r\n// const UserAgreement = React.lazy(() => import(\"../locale/en/UserAgreement\"));\r\n\r\nexport default (args) => {\r\n  // console.log(\"ACCOUNT REGISTRATION ARGS:\", args);\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"get user sequence\", // \"register account\",\r\n    namespace: \"AccountRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    signedIn,\r\n    accountNumber,\r\n    // accountPhotoPath,\r\n    userData,\r\n    language,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    debug,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    // formatDate,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [userAgreementShow, setUserAgreementShow] = useStickyState(\r\n    false,\r\n    \"userAgreementShow\"\r\n  );\r\n  const [privacyPolicyShow, setPrivacyPolicyShow] = useStickyState(\r\n    false,\r\n    \"privacyPolicyShow\"\r\n  );\r\n\r\n  // const [offsetList, setOffsetList] = useStickyState(null, \"offsetList\");\r\n  // const [calenarVisible, setCalenarVisible] = useState(false);\r\n  // const [birthDateError, setBirthDateError] = useState(\"\");\r\n  // const [birthDate, setBirthDate] = useState(\"\");\r\n\r\n  // const [birthYear, setBirthYear] = useState(\"\");\r\n  // const [birthMonth, setBirthMonth] = useState(\"\");\r\n  // const [birthDay, setBirthDay] = useState(\"\");\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    // dropzoneHook: yup.string().required(t(\"Photo ID is required\")),\r\n    // dropzoneHook: yup.string().optional(),\r\n    // terms: yup.array().required(t(\"Terms is required\")),\r\n    timezone: yup.string().required(t(\"Timezone at birth is required\")),\r\n    birthYear: yup.number().required(t(\"Year is required\")),\r\n    birthMonth: yup.number().required(t(\"Month is required\")),\r\n    birthDay: yup.number().required(t(\"Day is required\")),\r\n    // birthDateHook: yup.string().required(t(\"Birth date is required\")).length(5),\r\n    // birthDate: yup\r\n    //   .string()\r\n    //   .required(t(\"Date of birth is required\"))\r\n    //   // .max(new Date(), t(\"Date of birth must be today or earlier\"))\r\n    //   // .string()\r\n    //   .matches(new RegExp(t(\"Date Regex\")), t(\"Wrong date format\")),\r\n\r\n    // .test({\r\n    //   name: \"regex\",\r\n    //   exclusive: true,\r\n    //   params: {},\r\n    //   message: t(\"Date must be valid\"),\r\n    //   test: (value) => {\r\n    //     if (typeof value === \"undefined\") return false;\r\n\r\n    //     // return Date.parse(value);\r\n    //     return value !== \"error\";\r\n\r\n    //     console.log(\"TEST\");\r\n\r\n    //     // Test regex\r\n    //     // if (!RegExp(t(\"Date Regex\")).test(value)) return false;\r\n\r\n    //     let date2en;\r\n    //     try {\r\n    //       date2en = formatDate(\r\n    //         value,\r\n    //         { month: \"numeric\", day: \"numeric\", year: \"numeric\" },\r\n    //         false,\r\n    //         \"en-US\"\r\n    //       );\r\n    //     } catch (error) {\r\n    //       console.log(\"error\", error);\r\n    //       return false;\r\n    //     }\r\n\r\n    //     // // console.log(\"date2en\", date2en);\r\n    //     // console.log(\"date2en\", date2en);\r\n\r\n    //     // // console.log(\"IS DATE\", _.isDate(new Date(date2en)));\r\n    //     // console.log(\"IS DATE\", _.isDate(new Date(date2en)));\r\n\r\n    //     return true;\r\n    //   },\r\n    // }),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  /**\r\n   * Send account registration request\r\n   * @param {object} data\r\n   */\r\n  const sendAccountRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.email = userData.email;\r\n\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    delete data.birthYear;\r\n    delete data.birthMonth;\r\n    delete data.birthDay;\r\n\r\n    const newDate = composeDate(userBirthYear, userBirthMonth, userBirthDay);\r\n    data.birthDate = newDate;\r\n\r\n    if (newDate !== \"\") {\r\n      // console.log(data);\r\n      if (sendAccountRegistrationRequest(data)) {\r\n        // Account registration request was submitted\r\n      }\r\n    }\r\n  };\r\n\r\n  // const timezones = 1;\r\n  // const timezones_sorted = timezones.sort((a, b) =>\r\n  //   (a.Offset + 12) % 24 > (b.Offset + 12) % 24\r\n  //     ? 1\r\n  //     : (a.Offset + 12) % 24 === (b.Offset + 12) % 24\r\n  //     ? a.Name > b.Name\r\n  //       ? 1\r\n  //       : -1\r\n  //     : -1\r\n  // );\r\n\r\n  const timezones_sorted = timezones;\r\n\r\n  const isValidDate = (dateString) => {\r\n    let dateformat = /^(0?[1-9]|1[0-2])[\\/](0?[1-9]|[1-2][0-9]|3[01])[\\/]\\d{4}$/;\r\n\r\n    // Match the date format through regular expression\r\n    if (dateString.match(dateformat)) {\r\n      let operator = dateString.split(\"/\");\r\n\r\n      // Extract the string into month, date and year\r\n      let datepart = [];\r\n      if (operator.length > 1) {\r\n        datepart = dateString.split(\"/\");\r\n      }\r\n      let month = parseInt(datepart[0]);\r\n      let day = parseInt(datepart[1]);\r\n      let year = parseInt(datepart[2]);\r\n\r\n      // Create list of days of a month\r\n      let ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n      if (month === 1 || month > 2) {\r\n        if (day > ListofDays[month - 1]) {\r\n          ///This check is for Confirming that the date is not out of its range\r\n          return false;\r\n        }\r\n      } else if (month === 2) {\r\n        let leapYear = false;\r\n        if ((!(year % 4) && year % 100) || !(year % 400)) {\r\n          leapYear = true;\r\n        }\r\n        if (leapYear === false && day >= 29) {\r\n          return false;\r\n        } else if (leapYear === true && day > 29) {\r\n          // console.log(\"Invalid date format!\");\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      // console.log(\"Invalid date format!\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const composeDate = (year, month, day) => {\r\n    // console.log(year, month, day);\r\n    const newDate = `${month}/${day}/${year}`;\r\n    // const newDate = `${year}-${month}-${day}`;\r\n    if (isValidDate(newDate)) {\r\n      // setBirthDateComposed(newDate);\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        // console.log(\"ok\");\r\n        setUserBirthDateError(\"\");\r\n        // setBirthDate(newDate);\r\n\r\n        // return \"ok\";\r\n        return newDate;\r\n      } else {\r\n        // console.log(\"incomplete\");\r\n        setUserBirthDateError(\"\");\r\n        // return \"incomplete\";\r\n        return \"\";\r\n      }\r\n    } else {\r\n      // setBirthDateComposed(\"error\");\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        // console.log(\"error\");\r\n        setUserBirthDateError(t(\"Date must be valid\"));\r\n        // return \"error\";\r\n        return \"\";\r\n      } else {\r\n        // console.log(\"incomplete\");\r\n        setUserBirthDateError(\"\");\r\n        // return \"incomplete\";\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  // let timeZoneID = 0;\r\n  // let prevTimeZoneID = 0;\r\n  const yearNow = new Date().getFullYear();\r\n\r\n  const AccountRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    setFieldValue,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Form.Row style={{ margin: \"0 0\" }}>\r\n        <Form.Group\r\n          as={Col}\r\n          controlId=\"formGridDateOfBirth\"\r\n          style={{ margin: \"0 0\" }}\r\n        >\r\n          <Form.Label>{t(\"Date of birth\")}</Form.Label>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridYear\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthYear\"\r\n            value={values.birthYear}\r\n            // autoFocus\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthYear(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthYear && touched.birthYear}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Year\")}\r\n            </option>\r\n            {Array.from(Array(120).keys()).map((key) => {\r\n              let year = yearNow - key;\r\n\r\n              return (\r\n                <option key={key} value={year}>\r\n                  {year}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthYear}\r\n          </Form.Control.Feedback>\r\n          <div className=\"invalid-feedback-custom\">{userBirthDateError}</div>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridMonth\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthMonth\"\r\n            value={values.birthMonth}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthMonth(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthMonth && touched.birthMonth}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Month\")}\r\n            </option>\r\n            {Array.from(Array(12).keys()).map((key) => {\r\n              let date = new Date(`${key + 1}/1/1970`);\r\n              let monthName = date.toLocaleString(language, { month: \"long\" });\r\n              let monthNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={monthNumber}>\r\n                  {monthNumber} - {monthName}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthMonth}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridDay\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthDay\"\r\n            value={values.birthDay}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthDay(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthDay && touched.birthDay}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Day\")}\r\n            </option>\r\n            {Array.from(Array(31).keys()).map((key) => {\r\n              let dayNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={dayNumber}>\r\n                  {dayNumber}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthDay}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Group controlId=\"validationFormikTimezone\">\r\n        <Form.Label>{t(\"Timezone at birth\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          custom\r\n          name=\"timezone\"\r\n          value={values.timezone}\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n            setUserTimezone(e.target.value);\r\n          }}\r\n          isInvalid={!!errors.timezone && touched.timezone}\r\n        >\r\n          <option value=\"\">{t(\"Choose...\")}</option>\r\n          {timezones_sorted.map((element, key) => (\r\n            <option\r\n              key={key}\r\n              value={`${(((element.Offset + 12) % 24) + 1)\r\n                .toString()\r\n                .padStart(2, \"0\")} - ${element.Name}`}\r\n            >\r\n              {element.Name}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.timezone}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <div style={{ paddingBottom: \"10px\" }}>\r\n        {t(\"Agree to terms and conditions\")}\r\n      </div>\r\n\r\n      <Trans i18nKey=\"AccountRegistration:The User Agreement and the Privacy Policy\">\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setUserAgreementShow(true)}>\r\n          User Agreement\r\n        </a>\r\n\r\n        <br />\r\n\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setPrivacyPolicyShow(true)}>\r\n          Privacy Policy\r\n        </a>\r\n      </Trans>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  if (signedIn === false)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"User not logged in\")}</Alert.Heading>\r\n          <p>\r\n            <Trans i18nKey=\"AccountRegistration:Please log in first\">\r\n              Please log in first.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  if (!debug && accountNumber !== null)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"Account successfully registered\")}</Alert.Heading>\r\n          <p>\r\n            <Trans\r\n              i18nKey=\"AccountRegistration:Account with your personal ID successfully registered\"\r\n              accountNumber={accountNumber}\r\n            >\r\n              Account with the personal ID\r\n              <strong>{{ accountNumber }}</strong>\r\n              successfully registered.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        show={userAgreementShow}\r\n        file={`${language}/UserAgreement`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"User Agreement\")}\r\n        footer=\"\"\r\n        onHide={() => setUserAgreementShow(false)}\r\n      />\r\n\r\n      <ModalMessage\r\n        show={privacyPolicyShow}\r\n        file={`${language}/PrivacyPolicy`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"Privacy Policy\")}\r\n        footer=\"\"\r\n        onHide={() => setPrivacyPolicyShow(false)}\r\n      />\r\n\r\n      <Card title={t(\"Open account\")}>\r\n        <Formik\r\n          component={AccountRegistrationForm}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            // personalID: \"\",\r\n            // terms: \"\",\r\n            // dropzoneHook: accountPhotoPath,\r\n            timezone: userTimezone,\r\n            // birthDate: \"\",\r\n            birthYear: userBirthYear,\r\n            birthMonth: userBirthMonth,\r\n            birthDay: userBirthDay,\r\n            // birthDateHook: \"\",\r\n          }}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Pagination\",\r\n    size: \"md\",\r\n    countItems: 0,\r\n    itemsPerPage: 5,\r\n    active: 0, // active page\r\n    onClick: () => {},\r\n    align: \"center\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const pages = Math.ceil(props.countItems / props.itemsPerPage);\r\n\r\n  if (pages < 2) return <></>;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  const onClick = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = props.active > 1 ? props.active - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          props.active < Math.ceil(props.countItems / props.itemsPerPage)\r\n            ? props.active + 1\r\n            : Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // getBusinesses(number);\r\n    props.onClick(number);\r\n  };\r\n\r\n  const getPages = () => {\r\n    let items = [];\r\n    for (let number = 1; number <= pages; number++) {\r\n      if (\r\n        number === 1 ||\r\n        number === pages ||\r\n        (number >= props.active - 1 && number <= props.active + 1)\r\n      ) {\r\n        items.push(\r\n          <Pagination.Item\r\n            key={number}\r\n            active={number === props.active}\r\n            onClick={() => onClick(number)}\r\n          >\r\n            {number}\r\n          </Pagination.Item>\r\n        );\r\n      } else if (number === 2 || number === pages - 1) {\r\n        items.push(<Pagination.Ellipsis key={number} disabled />);\r\n      }\r\n    }\r\n    return items;\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const { align } = props;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: `${align}`,\r\n          // backgroundColor: \"red\",\r\n        }}\r\n      >\r\n        <span style={{ display: \"inline-block\" }}>\r\n          <Pagination size={props.size} style={{ padding: 0, margin: 0 }}>\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.First onClick={() => props.onClick(\"First\")} />\r\n                <Pagination.Prev onClick={() => props.onClick(\"Prev\")} />\r\n              </>\r\n            )}\r\n\r\n            {getPages()}\r\n\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.Next onClick={() => props.onClick(\"Next\")} />\r\n                <Pagination.Last onClick={() => props.onClick(\"Last\")} />\r\n              </>\r\n            )}\r\n          </Pagination>\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"react-calendar/dist/Calendar.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Col, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search as SearchIcon, Replay as ReplayIcon } from \"@material-ui/icons\";\r\n// import Autosuggest from \"react-autosuggest\";\r\n// import Calendar from \"react-calendar\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n// import DatePicker from \"../datePicker\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Search\",\r\n    request: \"find currencies\",\r\n    advancedSearch: false,\r\n    placeholder: \"SEARCH...\",\r\n    captionAdvancedSearch: \"Advanced search\",\r\n    onSubmit: () => {},\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { search } = props.barrelGetters;\r\n  const { setSearch } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /** \r\n    * Hooks\r\n    ============================================================================ */\r\n  // const [suggestions, setSuggestions] = useStickyState([], \"suggestions\");\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  const refSearch = React.createRef();\r\n\r\n  /**\r\n    * Clear refs\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    const tempRefSearch = refSearch.current;\r\n    return () => {\r\n      if (tempRefSearch !== null && search !== tempRefSearch.value)\r\n        setSearch(tempRefSearch.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    search: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    // findCurrencies(data.search);\r\n    props.onSubmit(data.search);\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * Search\r\n         */}\r\n        <Form.Group style={{ padding: 0, margin: 0 }}>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={props.placeholder}\r\n              name=\"search\"\r\n              ref={refSearch}\r\n              value={values.search}\r\n              autoComplete=\"search\"\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.search && touched.search}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text\r\n                id=\"inputGroupAppend\"\r\n                onClick={() => onSubmit(values)}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <SearchIcon style={{ color: \"var(--dark)\" }} />\r\n              </InputGroup.Text>\r\n            </InputGroup.Append>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.search}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n          {props.advancedSearch && (\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <button\r\n                className=\"button-transparent\"\r\n                style={{ margin: \"0\", padding: \"0\" }}\r\n              >\r\n                <small className=\"text-muted\">\r\n                  {props.captionAdvancedSearch}\r\n                </small>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        search: search,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport flatpickr from \"flatpickr\";\r\n// import { Latvian } from \"flatpickr/dist/l10n/lv.js\";\r\nimport * as language from \"flatpickr/dist/l10n\"; // DO NOT REMOVE !!!\r\nimport { DateRange } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DatePickerWrapper\",\r\n    request: \"get something\",\r\n    value: \"\",\r\n    placeholder: \"Date\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  const refDatePicker = React.createRef();\r\n\r\n  /**\r\n    * States\r\n    ============================================================================ */\r\n  // const [isOpen, setIsOpen] = useState(false);\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  let fp = null; // flatPicker instance\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    fp = flatpickr(refDatePicker.current, props.options);\r\n\r\n    return () => {\r\n      // on unmount\r\n      fp.destroy();\r\n      fp = null;\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (fp === null) return;\r\n\r\n  //   console.log(\"isOpen:\", isOpen);\r\n\r\n  //   // isOpen ? fp.open() : fp.close();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [isOpen]);\r\n\r\n  // useEffect(() => {\r\n  //   if (fp !== null) return;\r\n\r\n  //   fp = flatpickr(refDatePicker.current, props.options);\r\n\r\n  //   // eslint-disable-next-line\r\n  // });\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    datePicker: yup.string().required(t(\"Date is required\")),\r\n  });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <InputGroup>\r\n      <Form.Control\r\n        type=\"string\"\r\n        placeholder={props.placeholder}\r\n        aria-describedby=\"inputGroupPrepend\"\r\n        ref={refDatePicker}\r\n        name=\"datePicker\"\r\n        autoComplete=\"off\"\r\n        value={values.datePicker}\r\n        onChange={handleChange}\r\n        isInvalid={!!errors.datePicker && touched.datePicker}\r\n      />\r\n      <InputGroup.Append>\r\n        <InputGroup.Text\r\n          onClick={() => {\r\n            // console.log(\"click\");\r\n            if (fp !== null) fp.open();\r\n\r\n            // setIsOpen(!isOpen);\r\n          }}\r\n          style={{\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <DateRange style={{ color: \"var(--dark)\" }} />\r\n        </InputGroup.Text>\r\n      </InputGroup.Append>\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        {errors.datePicker}\r\n      </Form.Control.Feedback>\r\n    </InputGroup>\r\n  );\r\n\r\n  /**\r\n     * Formik return\r\n     ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        datePicker: props.value,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"flatpickr/dist/themes/material_green.css\";\r\nimport \"./DatePicker.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { Form, InputGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import Flatpickr from \"react-flatpickr\";\r\n// eslint-disable-next-line\r\n// import { Latvian } from \"flatpickr/dist/l10n/lv.js\";\r\n// import { DateRange } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\nimport Flatpickr from \"./DatePickerWrapper\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DatePicker\",\r\n    request: \"get something\",\r\n    value: \"\",\r\n    onChange: () => {},\r\n    placeholder: \"Date\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  // const [placeholder, setPlaceholder] = useState(props.placeholder);\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  // const refFlatpickr = React.createRef();\r\n\r\n  // Flatpickr(myElem, {\r\n  //   locale: Latvian, // locale for this instance only\r\n  // });\r\n\r\n  // Flatpickr.localize(Latvian);\r\n  // Flatpickr.localize(Flatpickr.l10ns.lv);\r\n  // flatpickr(\"mySelector\");\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  // const schema = yup.object({\r\n  //   dateStart: yup.string().required(t(\"Start date is required\")),\r\n  // });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  // const onSubmit = (data) => {\r\n  //   console.log(data);\r\n  // };\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <Flatpickr\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      options={{\r\n        locale: language,\r\n        showMonths: 1,\r\n        inline: false,\r\n        shorthandCurrentMonth: false,\r\n        allowInput: true,\r\n        clickOpens: false,\r\n        monthSelectorType: \"static\",\r\n        altInput: true,\r\n        altFormat: t(\"Y-m-d\"),\r\n        dateFormat: \"Y-m-d\", // \"d.m.Y\",\r\n        // dateFormat: \"Y-m-d\",\r\n        // minDate: new Date().fp_incr(-7),\r\n        maxDate: \"today\",\r\n        // mode: \"range\",\r\n        defaultDate: props.value,\r\n        onChange: function (selectedDates, dateStr, instance) {\r\n          console.log(selectedDates, dateStr, instance);\r\n          props.onChange(dateStr);\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"react-calendar/dist/Calendar.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Col, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search as SearchIcon, Replay as ReplayIcon } from \"@material-ui/icons\";\r\n// import Autosuggest from \"react-autosuggest\";\r\n// import Calendar from \"react-calendar\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n// import { useStickyState } from \"../../utils/state\";\r\nimport DatePicker from \"../datePicker\";\r\n// import SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DateRangePicker\",\r\n    request: \"find currencies\",\r\n    caption: \"Period of time\",\r\n    captionStartDate: \"Start date\",\r\n    captionEndDate: \"End date\",\r\n    captionUpdate: \"Update\",\r\n    onSubmit: () => {},\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { search, dateRangeStart, dateRangeEnd } = props.barrelGetters;\r\n  const { setSearch, setDateRangeStart, setDateRangeEnd } = props.barrelSetters;\r\n  const {\r\n    getTransactions,\r\n    formatDate,\r\n    clearRequestStatus,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /** \r\n     * Hooks\r\n     ============================================================================ */\r\n  // const [suggestions, setSuggestions] = useStickyState([], \"suggestions\");\r\n\r\n  /**\r\n     * Create refs\r\n     ============================================================================ */\r\n  const refSearch = React.createRef();\r\n  // const refDateRangeStart = React.createRef();\r\n  // const refDateRangeEnd = React.createRef();\r\n\r\n  // useEffect(() => {\r\n  //   const tempRefDateRangeStart = refDateRangeStart.current;\r\n  //   const tempRefDateRangeEnd = refDateRangeEnd.current;\r\n  //   return () => {\r\n  //     if (\r\n  //       tempRefDateRangeStart !== null &&\r\n  //       dateRangeStart !== tempRefDateRangeStart.value\r\n  //     )\r\n  //       setDateRangeStart(tempRefDateRangeStart.value);\r\n\r\n  //     if (\r\n  //       tempRefDateRangeEnd !== null &&\r\n  //       dateRangeEnd !== tempRefDateRangeEnd.value\r\n  //     )\r\n  //       setDateRangeEnd(tempRefDateRangeEnd.value);\r\n  //   };\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, []);\r\n\r\n  /**\r\n     * Clear refs\r\n     ============================================================================ */\r\n  useEffect(() => {\r\n    const tempRefSearch = refSearch.current;\r\n    return () => {\r\n      if (tempRefSearch !== null && search !== tempRefSearch.value)\r\n        setSearch(tempRefSearch.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    dateStart: yup.string().required(t(\"Date start is required\")),\r\n    dateEnd: yup.string().required(t(\"Date end is required\")),\r\n  });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = () => {\r\n    getTransactions(1);\r\n\r\n    // findCurrencies(data.search);\r\n    // props.onSubmit(data.search);\r\n  };\r\n\r\n  // const handleChange = (data) => {\r\n  //   console.log(data);\r\n  // };\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const DateRangePickerForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * Caption: Period of time\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          <Form.Group\r\n            as={Col}\r\n            controlId=\"formGridPeriodOfTime\"\r\n            style={{ margin: \"0\", padding: \"0 0\" }}\r\n          >\r\n            <Form.Label>{props.caption}</Form.Label>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        {/**\r\n         * Date start / Date end\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          {/**\r\n           * Date start\r\n           */}\r\n          <Form.Group\r\n            as={Col}\r\n            style={{ margin: \"0\", padding: \"0\" }}\r\n            controlId=\"validationFormikDateStart\"\r\n          >\r\n            <DatePicker\r\n              name=\"dateStart\"\r\n              value={values.dateStart}\r\n              onChange={(data) => {\r\n                // console.log(data);\r\n                setDateRangeStart(data);\r\n              }}\r\n              isInvalid={!!errors.dateStart && touched.dateStart}\r\n              placeholder={props.captionStartDate}\r\n              {...args}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.dateStart}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          {/**\r\n           * Dash\r\n           */}\r\n          <span style={{ margin: \"0\", padding: \"0.4rem 0.5rem\" }}>-</span>\r\n\r\n          {/**\r\n           * Date end\r\n           */}\r\n          <Form.Group\r\n            as={Col}\r\n            style={{ padding: \"0 0\" }}\r\n            controlId=\"validationFormikDateEnd\"\r\n          >\r\n            <DatePicker\r\n              name=\"dateEnd\"\r\n              value={values.dateEnd}\r\n              onChange={(data) => {\r\n                // console.log(data);\r\n                setDateRangeEnd(data);\r\n              }}\r\n              isInvalid={!!errors.dateEnd && touched.dateEnd}\r\n              placeholder={props.captionEndDate}\r\n              {...args}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.dateEnd}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        {/**\r\n         * Update\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onSubmit}\r\n            className=\"button-transparent\"\r\n            style={{ margin: \"-0.5rem 0 0 0\", padding: \"0\" }}\r\n          >\r\n            <ReplayIcon className=\"sm\" style={{ color: \"var(--dark)\" }} />\r\n            <span\r\n              style={{\r\n                margin: \"0 0.5rem\",\r\n              }}\r\n            >\r\n              {props.captionUpdate}\r\n            </span>\r\n          </button>\r\n        </Form.Row>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n     * Formik return\r\n     ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={DateRangePickerForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        dateStart: dateRangeStart,\r\n        dateEnd: dateRangeEnd,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { ListGroup, Badge } from \"react-bootstrap\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { ArrowRightAlt } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\nimport DateRangePicker from \"../dateRangePicker\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    request: \"get transactions\",\r\n    namespace: \"Transactions\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    transactions,\r\n    countTransactions,\r\n    activePageTransactions,\r\n    transactionsPerPage,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const {\r\n    getTransactions,\r\n    findTransactions,\r\n    showRequestStatus,\r\n    format,\r\n    formatDate,\r\n    formatPerCent,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageTransactions > 1 ? activePageTransactions - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageTransactions <\r\n          Math.ceil(countTransactions / transactionsPerPage)\r\n            ? activePageTransactions + 1\r\n            : Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getTransactions(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <Search\r\n          advancedSearch={false}\r\n          placeholder={t(\"Find transactions...\")}\r\n          captionAdvancedSearch={t(\"Advanced search\")}\r\n          onSubmit={findTransactions}\r\n          {...args}\r\n        />\r\n        <br />\r\n        <DateRangePicker\r\n          caption={t(\"Period of time\")}\r\n          captionStartDate={t(\"Start date\")}\r\n          captionEndDate={t(\"End date\")}\r\n          captionUpdate={t(\"Update\")}\r\n          {...args}\r\n        />\r\n      </div>\r\n      <ListGroup variant=\"flush\">\r\n        {transactions !== null &&\r\n          transactions.map((transaction, keyTransactions) => {\r\n            cnt++;\r\n\r\n            const {\r\n              // business_description,\r\n              // business_id,\r\n              // business_image,\r\n              // business_link,\r\n              // business_status,\r\n              business_title,\r\n              comment,\r\n              conv_amount,\r\n              created,\r\n              // currency,\r\n              // exchange_rate,\r\n              sender_firstname,\r\n              sender_lastname,\r\n              recipient_firstname,\r\n              recipient_lastname,\r\n              // purpose_description,\r\n              purpose_id,\r\n              // purpose_image,\r\n              // purpose_link,\r\n              // purpose_status,\r\n              purpose_title,\r\n              recipient_id,\r\n              roles,\r\n              share,\r\n              share_per_cent,\r\n              sender_id,\r\n              // sender_status,\r\n              // recipient_status,\r\n              from_account,\r\n              to_account,\r\n              type,\r\n            } = transaction;\r\n\r\n            const i_am_sender = sender_id === accountNumber;\r\n            const i_am_recipient = recipient_id === accountNumber;\r\n            const t_from_account = t(from_account);\r\n            const t_to_account = t(to_account);\r\n\r\n            const roles_available =\r\n              roles !== null && roles !== \"-\" && typeof roles !== \"undefined\";\r\n            const arrRoles = roles_available ? roles.split(\",\") : [];\r\n\r\n            const shares_available =\r\n              typeof share !== \"undefined\" && share !== null && share !== \"-\";\r\n\r\n            if (type === \"transfer U2S\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n\r\n                  <Trans\r\n                    i18nKey=\"Transactions:fromAccountToAccount\"\r\n                    t_from_account={t_from_account}\r\n                    t_to_account={t_to_account}\r\n                  >\r\n                    {{ t_from_account }}{\" \"}\r\n                    <ArrowRightAlt style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                    {{ t_to_account }}\r\n                  </Trans>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {i_am_recipient ? (\r\n                    <>\r\n                      {sender_firstname} {sender_lastname}\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {recipient_firstname} {recipient_lastname}\r\n                    </>\r\n                  )}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  {comment !== \"\" && <br />}\r\n                  {comment}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer V2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {t(\"Daily allowance\")}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2B\") {\r\n              const sender = !i_am_sender ? (\r\n                <>\r\n                  {sender_firstname} {sender_lastname}\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              );\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {sender}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  {!i_am_sender && <br />}\r\n                  {purpose_id}\r\n                  {comment !== \"\" && <br />}\r\n                  {comment}\r\n                  <br />\r\n                  {business_title} &middot; {purpose_title}\r\n                  {roles_available && (\r\n                    <>\r\n                      <br />\r\n                      {arrRoles.map((role, key) => {\r\n                        return (\r\n                          <span key={key}>\r\n                            {\" \"}\r\n                            <Badge pill variant=\"secondary\">\r\n                              {role}\r\n                            </Badge>\r\n                          </span>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  )}{\" \"}\r\n                  {shares_available && (\r\n                    <>\r\n                      <br />\r\n                      {share} {t(\"shares\")} ({formatPerCent(share_per_cent)})\r\n                    </>\r\n                  )}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n\r\n              // TODO: check if this works\r\n            } else {\r\n              console.log(\"Unknown transfer type:\", type);\r\n\r\n              return <></>;\r\n            }\r\n          })}\r\n      </ListGroup>\r\n\r\n      {showRequestStatus(\r\n        \"get transactions / SELECT transactions\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No transactions\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <br />\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countTransactions}\r\n        itemsPerPage={transactionsPerPage}\r\n        active={activePageTransactions}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Toast, Badge } from \"react-bootstrap\";\r\nimport { Settings } from \"@material-ui/icons\";\r\nimport _ from \"lodash\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Shareholder\",\r\n    request: \"change share\",\r\n    purpose: null,\r\n    shareholder: null,\r\n    closeButton: true,\r\n    rangeControl: true,\r\n    sharePerCent: null,\r\n    businessTitle: null,\r\n    purposeTitle: null,\r\n    businessOwnerFirstname: null,\r\n    businessOwnerLastname: null,\r\n    sharesCreated: null,\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { purposeShareholders } = props.barrelGetters;\r\n  const { setPurposeShareholders } = props.barrelSetters;\r\n  const { sendRequest, formatPerCent, formatDate } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const [userQuery, setUserQuery] = useState(props.share);\r\n  const delayedQuery = useRef(_.debounce((q) => sendQuery(q), 2000)).current;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const onChange = (e) => {\r\n    setUserQuery(e.target.value);\r\n    delayedQuery(e.target.value);\r\n  };\r\n\r\n  const onClose = () => {\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    return sendRequest({ req: \"remove shareholder\", data });\r\n  };\r\n\r\n  const sendQuery = (delayedQuery) => {\r\n    const ps = purposeShareholders;\r\n    ps[props.id].share = delayedQuery;\r\n    setPurposeShareholders(JSON.stringify(ps));\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    data.share = delayedQuery;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const sharesLabelId = `sharesLabel${props.key}`;\r\n    return (\r\n      <Toast key={props.key} onClose={onClose} style={{ minWidth: \"100%\" }}>\r\n        <Toast.Header closeButton={props.closeButton}>\r\n          <strong className=\"mr-auto\">\r\n            {props.firstname} {props.lastname}{\" \"}\r\n            <small>\r\n              <Settings\r\n                hidden={true}\r\n                fontSize=\"small\"\r\n                style={{ color: \"var(--dark)\" }}\r\n              />\r\n            </small>\r\n          </strong>\r\n          <small>\r\n            <span id={sharesLabelId}>{userQuery}</span> {t(\"shares\")}\r\n          </small>\r\n        </Toast.Header>\r\n        <Toast.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formRoles\">\r\n              <div>\r\n                {props.roles.map((role, key) => {\r\n                  return (\r\n                    <span key={key}>\r\n                      <Badge pill variant=\"secondary\">\r\n                        {role}\r\n                      </Badge>{\" \"}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Form.Group>\r\n\r\n            {props.rangeControl && (\r\n              <Form.Group controlId=\"formBasicRange\">\r\n                <Form.Control\r\n                  type=\"range\"\r\n                  custom\r\n                  variant=\"light\"\r\n                  // value={share}\r\n                  defaultValue={userQuery}\r\n                  // value={userQuery}\r\n                  min={1}\r\n                  max={1000}\r\n                  step={1}\r\n                  // ref={this.input}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            )}\r\n          </Form>\r\n          <span>\r\n            {props.sharePerCent !== null && formatPerCent(props.sharePerCent)}{\" \"}\r\n            {props.businessTitle !== null && props.businessTitle}{\" \"}\r\n            {props.businessTitle !== null && props.purposeTitle !== null && (\r\n              <> &middot; </>\r\n            )}\r\n            {props.purposeTitle !== null && props.purposeTitle}{\" \"}\r\n          </span>\r\n          {props.sharesCreated !== null && (\r\n            <>\r\n              <br />\r\n              {formatDate(props.sharesCreated, {\r\n                month: \"long\",\r\n                day: \"numeric\",\r\n                year: \"numeric\",\r\n              })}\r\n            </>\r\n          )}{\" \"}\r\n          {(props.businessOwnerFirstname !== null ||\r\n            props.businessOwnerLastname !== null) && <br />}\r\n          {props.businessOwnerFirstname !== null &&\r\n            props.businessOwnerFirstname}{\" \"}\r\n          {props.businessOwnerLastname !== null && props.businessOwnerLastname}{\" \"}\r\n        </Toast.Body>\r\n      </Toast>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Form, InputGroup, Button, Table, ListGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n// import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Search from \"../search\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    request: \"get shares\",\r\n    namespace: \"Shares\",\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    shares,\r\n    countShares,\r\n    activePageShares,\r\n    sharesPerPage,\r\n    // accountNumber,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  // const {  } = props.barrelSetters;\r\n  const {\r\n    getShares,\r\n    // getRequestStatus,\r\n    showRequestStatus,\r\n    findShares,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onPageSelect = (number) => {\r\n    console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageShares > 1 ? activePageShares - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageShares < Math.ceil(countShares / sharesPerPage)\r\n            ? activePageShares + 1\r\n            : Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getShares(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <>\r\n      <Search\r\n        advancedSearch={false}\r\n        placeholder={t(\"Find shares...\")}\r\n        captionAdvancedSearch={t(\"Advanced search\")}\r\n        onSubmit={findShares}\r\n        {...args}\r\n      />\r\n      <br />\r\n      {shares !== null &&\r\n        shares.map((share, keyShares) => {\r\n          cnt++;\r\n\r\n          const {\r\n            // business_description,\r\n            // business_id,\r\n            // business_image,\r\n            // business_link,\r\n            // business_status,\r\n            business_title,\r\n            owner_firstname,\r\n            owner_lastname,\r\n            // owner_status,\r\n            // owner_uid,\r\n            // purpose_description,\r\n            purpose_id,\r\n            // purpose_image,\r\n            // purpose_link,\r\n            // purpose_status,\r\n            purpose_title,\r\n            shareholder_id,\r\n            shares_created,\r\n            // shares_description,\r\n            share_per_cent,\r\n            shares_roles,\r\n            shares_share,\r\n            // shares_status,\r\n            // shares_title,\r\n          } = share;\r\n\r\n          const arrRoles = shares_roles !== null ? shares_roles.split(\",\") : [];\r\n          // const content = `${owner_firstname} ${owner_lastname} / ${formatDate(\r\n          //   shares_created\r\n          // )}`;\r\n\r\n          // console.log(\"keyShares:\", keyShares);\r\n\r\n          return (\r\n            <Shareholder\r\n              {...args}\r\n              key={keyShares}\r\n              id={keyShares}\r\n              shareholder={shareholder_id}\r\n              purpose={purpose_id}\r\n              firstname={userData.firstname}\r\n              lastname={userData.lastname}\r\n              share={shares_share}\r\n              roles={arrRoles}\r\n              closeButton={false}\r\n              rangeControl={false}\r\n              sharePerCent={share_per_cent}\r\n              businessOwnerFirstname={owner_firstname}\r\n              businessOwnerLastname={owner_lastname}\r\n              businessTitle={business_title}\r\n              purposeTitle={purpose_title}\r\n              sharesCreated={shares_created}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {showRequestStatus(\r\n        \"get shares / SELECT shares\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No shares\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"md\"\r\n        countItems={countShares}\r\n        itemsPerPage={sharesPerPage}\r\n        active={activePageShares}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Badge, Accordion, Card } from \"react-bootstrap\";\r\n// import { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\n// import { Redirect } from \"react-router-dom\";\r\n// import Octicon, { ChevronRight } from \"@primer/octicons-react\";\r\n// import AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport { FileCopy as FileCopyIcon } from \"@material-ui/icons\";\r\n\r\n// import ZCard from \"../card\";\r\nimport Transactions from \"../transactions\";\r\nimport Shares from \"../shares\";\r\n\r\nexport default (args) => {\r\n  // let defaults = {};\r\n  // const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    accordionView,\r\n    // currencyAbbr,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setAccountType,\r\n    setRedirectTo,\r\n    setAccordionView,\r\n    // setDeleteResponseProp,\r\n    setResponseProps,\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    getAccountData,\r\n    getTransactions,\r\n    getShares,\r\n    showMessage,\r\n    copyToClipboard,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userData = props.data.userData;\r\n  // let format = props.format;\r\n  const { t } = useTranslation(\"Balance\");\r\n  // const [redirect, setRedirect] = useState(false);\r\n\r\n  const refAccountNumber = useRef(null);\r\n\r\n  // console.log(\"BALANCE DATA:\", props);\r\n  // console.log(\"BALANCE userData\", userData);\r\n  // const userDataParsed = JSON.parse(userData);\r\n  const userDataParsed = userData;\r\n\r\n  // let footer = <small className=\"text-muted\">Last updated 3 mins ago</small>;\r\n\r\n  /**\r\n   *\r\n   * @param {*} type\r\n   */\r\n  const onAccountTypeSelected = (type) => {\r\n    setAccountType(type);\r\n    setRedirectTo(\"/transfer\");\r\n  };\r\n\r\n  const available =\r\n    userDataParsed !== null\r\n      ? format(\r\n          userDataParsed.acc_curr +\r\n            userDataParsed.acc_cred +\r\n            userDataParsed.acc_save\r\n        )\r\n      : null;\r\n  let acc_curr =\r\n    userDataParsed !== null ? format(userDataParsed.acc_curr) : null;\r\n  let acc_cred =\r\n    userDataParsed !== null ? format(userDataParsed.acc_cred) : null;\r\n  let acc_save =\r\n    userDataParsed !== null ? format(userDataParsed.acc_save) : null;\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n   *\r\n   * @param {*} view\r\n   */\r\n  const toggleView = (view) => {\r\n    const newView = accordionView !== view ? view : null;\r\n\r\n    setResponseProps(null);\r\n    setAccordionView(newView);\r\n    setClearRefs(true);\r\n\r\n    if (newView !== null) {\r\n      switch (view) {\r\n        case \"balance\":\r\n          getAccountData();\r\n          break;\r\n\r\n        case \"transactions\":\r\n          getTransactions(1);\r\n          break;\r\n\r\n        case \"shares\":\r\n          // setDeleteResponseProp(\"get shares\");\r\n          getShares(1);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  // const copyToClipboard = () => {\r\n  //   refAccountNumber.current.select();\r\n  //   document.execCommand(\"copy\");\r\n  //   refAccountNumber.current.blur();\r\n  //   showMessage(\"COPIED_TO_CLIPBOARD\", \"info\", false);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <Accordion defaultActiveKey={accordionView}>\r\n        {/**\r\n         * Account number\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"accountNumber\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"accountNumber\")}\r\n          >\r\n            {t(\"Account number\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"accountNumber\">\r\n            <Card.Body>\r\n              <Card.Text>\r\n                <input\r\n                  ref={refAccountNumber}\r\n                  className=\"no-focus\"\r\n                  readOnly\r\n                  style={{\r\n                    border: 0,\r\n                    width: \"10rem\",\r\n                    background: \"Transparent\",\r\n                  }}\r\n                  type=\"text\"\r\n                  defaultValue={accountNumber}\r\n                />\r\n                {document.queryCommandSupported(\"copy\") && (\r\n                  <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n                    <button\r\n                      className=\"button-transparent\"\r\n                      onClick={() => copyToClipboard(refAccountNumber)}\r\n                    >\r\n                      <FileCopyIcon style={{ color: \"var(--dark)\" }} />\r\n                    </button>\r\n                  </span>\r\n                )}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        {/**\r\n         * Balance\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"balance\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n              // backgroundColor: \"#e8f6f3\",\r\n            }}\r\n            onClick={() => toggleView(\"balance\")}\r\n          >\r\n            {t(\"Balance\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"balance\">\r\n            <Card.Body>\r\n              <Form noValidate>\r\n                <Form.Group>\r\n                  <Form.Label>{t(\"Available\")}</Form.Label>\r\n\r\n                  <Form.Text>\r\n                    <div style={{ fontSize: \"3em\" }}>{available}</div>\r\n                  </Form.Text>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Current account\")}</div>\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_curr\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_curr}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Credit account\")}</div>\r\n\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_cred\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_cred}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                      <div style={{}}>{t(\"Savings account\")}</div>\r\n                      <span\r\n                        className=\"link\"\r\n                        onClick={() => onAccountTypeSelected(\"acc_save\")}\r\n                      >\r\n                        <Badge variant=\"Light\">{acc_save}</Badge>\r\n                        &nbsp;\r\n                        <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        {/**\r\n         * Transactions\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"transactions\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"transactions\")}\r\n          >\r\n            {t(\"Transactions\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"transactions\">\r\n            <Card.Body>\r\n              <Transactions {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        {/**\r\n         * Shares\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"shares\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => toggleView(\"shares\")}\r\n          >\r\n            {t(\"Shares\")}\r\n          </Accordion.Toggle>\r\n\r\n          <Accordion.Collapse eventKey=\"shares\">\r\n            <Card.Body>\r\n              <Shares {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"transfer U2S\",\r\n    namespace: \"Transfer\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    accountType,\r\n    language,\r\n    currencyAbbr,\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userData = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [fromAccountSaved, setFromAccountSaved] = useStickyState(\r\n  //   \"\",\r\n  //   \"fromAccountSaved\"\r\n  // );\r\n  // const [toAccountSaved, setToAccountSaved] = useStickyState(\r\n  //   \"\",\r\n  //   \"toAccountSaved\"\r\n  // );\r\n  // const [amountSaved, setAmountSaved] = useStickyState(\"\", \"amountSaved\");\r\n\r\n  // useEffect(() => {\r\n  //   if (accountNumber === null) return;\r\n\r\n  //   setFromAccountSaved(\"\");\r\n  //   setToAccountSaved(\"\");\r\n  //   setAmountSaved(\"\");\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [accountNumber]);\r\n\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toAccount: yup.string().required(t(\"To Account is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} Form data\r\n   */\r\n  const transferToSelf = (data) => {\r\n    // console.log(\"TRANSFER U2S DATA:\", data);\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // console.log(\"BEFORE SEND\");\r\n\r\n    // onTransfer({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n\r\n    // setFromAccountSaved(\"\");\r\n    // setToAccountSaved(\"\");\r\n    // setAmountSaved(\"\");\r\n\r\n    setTransferAmount(\"\");\r\n\r\n    // console.log(\"AFTER SEND\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToSelf(data);\r\n  };\r\n\r\n  const TransferToSelfForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * To account\r\n         */}\r\n        <Form.Group controlId=\"validationToAccount\">\r\n          <Form.Label>{t(\"To account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"toAccount\"\r\n            value={values.toAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferToAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.toAccount && touched.toAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option value=\"acc_curr\" hidden={accountType === \"acc_curr\"}>\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option value=\"acc_cred\" hidden={accountType === \"acc_cred\"}>\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option value=\"acc_save\" hidden={accountType === \"acc_save\"}>\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.toAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setTransferAmount(e.target.value);\r\n              }}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"transfer U2S\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={TransferToSelfForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        fromAccount: transferFromAccount,\r\n        toAccount: transferToAccount,\r\n        amount: transferAmount,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\nimport ModalMessage from \"../modalMessage\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"TanInput\",\r\n    request: \"submit tan\",\r\n    show: false,\r\n    size: \"lg\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { tanRequired, userData, tanInputTAN } = props.barrelGetters;\r\n  const { setTanRequired, setTanInputTAN } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refTAN = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    const tempRef = refTAN.current;\r\n    return () => {\r\n      if (tempRef !== null && tanInputTAN !== tempRef.value)\r\n        setTanInputTAN(tempRef.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    tan: yup.string().required(t(\"TAN is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    setTanRequired(false);\r\n    data.email = userData.email;\r\n    setTanInputTAN(\"\");\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div>\r\n        {t(\"A transaction number has been sent to your email account.\")}\r\n      </div>\r\n      <br />\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFormikTAN\">\r\n          <Form.Label>{t(\"TAN\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"tan\"\r\n              ref={refTAN}\r\n              value={values.tan}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.tan && touched.tan}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.tan}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  const message = (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        tan: tanInputTAN,\r\n      }}\r\n    />\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        message={message}\r\n        show={tanRequired}\r\n        size={props.size}\r\n        centered={true}\r\n        onHide={() => setTanRequired(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport TanInput from \"../tanInput\";\r\n\r\n/**\r\n * Component: TransferToPerson\r\n */\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2U\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const [transferDescriptionTemp, setTransferDescriptionTemp] = useStickyState(\r\n  //   \"\",\r\n  //   \"transferDescriptionTemp\"\r\n  // );\r\n\r\n  const refPersonalID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPersonalID = refPersonalID.current;\r\n    const tempRefDescription = refDescription.current;\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      setTransferToUID(tempRefPersonalID.value);\r\n      setTransferDescription(tempRefDescription.value);\r\n      setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toPersonalID: yup\r\n      .string()\r\n      .required(t(\"Recipients Personal ID is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Personal ID Regex\")),\r\n        t(\"Wrong Personal ID format\")\r\n      ),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToPerson = (data) => {\r\n    // console.log(\"TRANSFER U2U DATA:\", data);\r\n    data.transferType = props.request;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  // return <>test</>;\r\n\r\n  const onSubmit = (data) => {\r\n    transferToPerson(data);\r\n  };\r\n\r\n  const TransferToPersonForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Recipients Personal ID\r\n         */}\r\n        <Form.Group controlId=\"validationFormikToPersonalID\">\r\n          <Form.Label>{t(\"To Personal ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={t(\"XXXXXX-XXXXX\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"toPersonalID\"\r\n              ref={refPersonalID}\r\n              value={values.toPersonalID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.toPersonalID && touched.toPersonalID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.toPersonalID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Transfer Description\r\n         */}\r\n        <Form.Group controlId=\"validationFormikDescription\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Button: Next */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToPersonForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          toPersonalID: transferToUID,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport TanInput from \"../tanInput\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2B\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPurposeID = refPurposeID.current;\r\n    const tempRefDescription = refDescription.current;\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      setTransferToPurpose(tempRefPurposeID.value);\r\n      setTransferDescription(tempRefDescription.value);\r\n      setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    // businessTitle: yup\r\n    //   .string()\r\n    //   .required(t(\"Recipients Business ID is required\")),\r\n    purposeID: yup.string().required(t(\"Purpose ID is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToBusiness = (data) => {\r\n    data.transferType = props.request;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.currency = currencyAbbr;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // data.amount = parseFloat(data.amount);\r\n    // data.amount = Number(data.amount.replace(/[^0-9.-]+/g, \"\"));\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToBusiness(data);\r\n  };\r\n\r\n  const TransferToBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n    >\r\n      {/* From account */}\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Business ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"businessTitle\"\r\n              value={values.businessTitle}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.businessTitle}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n        */}\r\n\r\n        {/* To purpose */}\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Purpose ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"PXXXXXXXXXXXXXXXXXXXXXXX\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"purposeID\"\r\n              ref={refPurposeID}\r\n              value={values.purposeID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.purposeID && touched.purposeID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.purposeID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Field: Description */}\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/* Amount */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"string\" // do NOT change to number!!\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          purposeID: transferToPurpose,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"BusinessRegistration\",\r\n    request: \"register business\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refBusinessTitle = React.createRef();\r\n  const refBusinessDescription = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefBusinessTitle = refBusinessTitle.current;\r\n    const tempRefBusinessDescription = refBusinessDescription.current;\r\n    return () => {\r\n      if (\r\n        tempRefBusinessTitle !== null &&\r\n        businessRegistrationAddTitle !== tempRefBusinessTitle.value\r\n      )\r\n        setBusinessRegistrationAddTitle(tempRefBusinessTitle.value);\r\n\r\n      if (\r\n        tempRefBusinessDescription !== null &&\r\n        businessRegistrationAddDescription !== tempRefBusinessDescription.value\r\n      )\r\n        setBusinessRegistrationAddDescription(tempRefBusinessDescription.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [addOwnerAsShareholder, setAddOwnerAsShareholder] = useStickyState(\r\n  //   false,\r\n  //   \"addOwnerAsShareholder\"\r\n  // );\r\n\r\n  const schema = yup.object({\r\n    businessTitle: yup\r\n      .string()\r\n      .required(t(\"Business title is a required field\"))\r\n      .min(3, t(\"Business title too short\"))\r\n      .max(70, t(\"Business title too long\"))\r\n      .trim(),\r\n    businessDescription: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * On business registration\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n\r\n    // console.log(\"REGISTER BUSINESS DATA:\", data);\r\n\r\n    // onBusinessRegistration({ req: \"register business\", data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Business Title (Business ID) */}\r\n      <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n        <Form.Label>{t(\"Business Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"businessTitle\"\r\n            ref={refBusinessTitle}\r\n            value={values.businessTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.businessTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/* Business Description */}\r\n      <Form.Group controlId=\"businessDescription\">\r\n        <Form.Label>{t(\"Business Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"businessDescription\"\r\n          ref={refBusinessDescription}\r\n          value={values.businessDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={RegisterBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          businessTitle: businessRegistrationAddTitle,\r\n          businessDescription: businessRegistrationAddDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"PurposeRegistration\",\r\n    requestInsert: \"register purpose\",\r\n    requestUpdate: \"update purpose property\",\r\n    businessID: null,\r\n    purposeID: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    subcategory: \"\",\r\n    subcategory2: \"\",\r\n    keywords: \"\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"PURPOSE REGISTRATION PROPS:\", props);\r\n\r\n  const barrels = props;\r\n  const { businessID, purposeID, id } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    language,\r\n    // businessPurposes,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    // purposeRegistrationCategory,\r\n    // purposeRegistrationSubcategory,\r\n    // purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    // setBusinessPurposes,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n  } = barrels.barrelSetters;\r\n  const { getReviser, getWorkplace } = barrels.barrelFunctions;\r\n  const { onPurposeRegistration } = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeTitle = React.createRef();\r\n  const refPurposeDescription = React.createRef();\r\n  // const refPurposeCategory = React.createRef();\r\n  // const refPurposeSubcategory = React.createRef();\r\n  // const refPurposeSubcategory2 = React.createRef();\r\n  const refPurposeKeywords = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPurposeTitle = refPurposeTitle.current;\r\n    const tempRefPurposeDescription = refPurposeDescription.current;\r\n    const tempRefPurposeKeywords = refPurposeKeywords.current;\r\n    return () => {\r\n      if (\r\n        tempRefPurposeTitle !== null &&\r\n        purposeRegistrationTitle !== tempRefPurposeTitle.value\r\n      )\r\n        setPurposeRegistrationTitle(tempRefPurposeTitle.value);\r\n\r\n      if (\r\n        tempRefPurposeDescription !== null &&\r\n        purposeRegistrationDescription !== tempRefPurposeDescription.value\r\n      )\r\n        setPurposeRegistrationDescription(tempRefPurposeDescription.value);\r\n\r\n      if (\r\n        tempRefPurposeKeywords !== null &&\r\n        purposeRegistrationKeywords !== tempRefPurposeKeywords.value\r\n      )\r\n        setPurposeRegistrationKeywords(tempRefPurposeKeywords.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const schema = yup.object({\r\n    purposeTitle: yup\r\n      .string()\r\n      .required(t(\"Purpose title is a required field\"))\r\n      .min(3, t(\"Purpose title too short\"))\r\n      .max(70, t(\"Purpose title too long\"))\r\n      .trim(),\r\n    purposeDescription: yup.string().optional(),\r\n    // purposeCategory: yup\r\n    //   .string()\r\n    //   .required(t(\"Purpose category is a required field\"))\r\n    //   .max(70, t(\"Purpose category too long\"))\r\n    //   .trim(),\r\n    // purposeSubcategory: yup.string().optional(),\r\n    // purposeSubcategory2: yup.string().optional(),\r\n    purposeKeywords: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const RegisterPurpose = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.businessID = businessID;\r\n    data.id = id;\r\n    data.purposeID = purposeID;\r\n    data.uid = accountNumber;\r\n    data.language = language;\r\n\r\n    // console.log(\"REGISTER PURPOSE DATA:\", data);\r\n\r\n    onPurposeRegistration({\r\n      req: props.purposeID === null ? props.requestInsert : props.requestUpdate,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    RegisterPurpose(data);\r\n  };\r\n\r\n  const RegisterPurposeForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/*\r\n       * Purpose Title (Purpose ID)\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeID\">\r\n        <Form.Label>{t(\"Purpose Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"purposeTitle\"\r\n            ref={refPurposeTitle}\r\n            value={values.purposeTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeTitle && touched.purposeTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Description\r\n       */}\r\n      <Form.Group controlId=\"purposeDescription\">\r\n        <Form.Label>{t(\"Purpose Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"purposeDescription\"\r\n          ref={refPurposeDescription}\r\n          value={values.purposeDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Keywords\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeKeywords\">\r\n        <Form.Label>{t(\"Purpose Keywords\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeKeywords\"\r\n            ref={refPurposeKeywords}\r\n            value={values.purposeKeywords}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeKeywords && touched.purposeKeywords}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeKeywords}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Submit button\r\n       */}\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(props.purposeID === null ? \"Submit\" : \"Save\")}\r\n        request={\r\n          props.purposeID === null ? props.requestInsert : props.requestUpdate\r\n        }\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterPurposeForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        purposeTitle: purposeRegistrationTitle,\r\n        purposeDescription: purposeRegistrationDescription,\r\n        // purposeCategory: purposeRegistrationCategory,\r\n        // purposeSubcategory: purposeRegistrationSubcategory,\r\n        // purposeSubcategory2: purposeRegistrationSubcategory2,\r\n        purposeKeywords: purposeRegistrationKeywords,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"register shareholder\",\r\n    namespace: \"ShareholderRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const barrels = props;\r\n  const { purposeID } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber } = barrels.barrelGetters;\r\n  // const {} = barrels.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n  } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const thisRef = createRef();\r\n\r\n  const schema = yup.object({\r\n    // personalID: yup\r\n    //   .string()\r\n    //   .required(t(\"Personal ID is required\"))\r\n    //   .matches(\r\n    //     new RegExp(t(\"Personal ID Regex\")),\r\n    //     t(\"Wrong Personal ID format\")\r\n    //   ),\r\n    shareholderRoles: yup.string().optional(),\r\n    shares: yup\r\n      .number()\r\n      .typeError(t(\"Shares must be a number\"))\r\n      .required(t(\"Shares is required\"))\r\n      .min(1, t(\"Shares too few\"))\r\n      .max(1000, t(\"Shares too many\")),\r\n  });\r\n\r\n  /**\r\n   * Send shareholder registration request\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.purposeID = purposeID;\r\n\r\n    // console.log(\"REGISTER SHAREHOLDER DATA:\", data);\r\n\r\n    // onShareholderRegistration({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterShareholderForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* id=\"shareholderRegistrationForm\" */}\r\n      <Toast style={{ minWidth: \"100%\" }}>\r\n        {/*\r\n        <Toast.Header closeButton={false}>\r\n          <strong className=\"mr-auto\">{t(\"Add Shareholder\")}</strong>\r\n        </Toast.Header>\r\n        */}\r\n        <Toast.Body>\r\n          <Form.Group controlId=\"validationFormikShareholderPersonalID\">\r\n            <Form.Label>{t(\"Shareholder Personal ID\")}</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={t(\"XXXXXX-XXXXX\")}\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"personalID\"\r\n                value={values.personalID}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.personalID && touched.personalID}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.personalID}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          {/* Shareholder Roles */}\r\n          <Form.Group controlId=\"validationFormikShareholderRoles\">\r\n            <Form.Label>{t(\"Shareholder Roles\")}</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"shareholderRoles\"\r\n                value={values.shareholderRoles}\r\n                onChange={handleChange}\r\n                isInvalid={\r\n                  !!errors.shareholderRoles && touched.shareholderRoles\r\n                }\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.shareholderRoles}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          {/* Shares */}\r\n          <Form.Group controlId=\"validationFormikShares\">\r\n            <Form.Label>{t(\"Shares\")}</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type=\"number\"\r\n                min={1}\r\n                max={1000}\r\n                step={1}\r\n                placeholder=\"\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"shares\"\r\n                value={values.shares}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.shares && touched.shares}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.shares}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Toast.Body>\r\n      </Toast>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterShareholderForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        personalID: \"\",\r\n        shares: 1,\r\n        shareholderRoles: \"\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useRef } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Card,\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  // Nav,\r\n  Form,\r\n  // Toast,\r\n  // Badge,\r\n  // Container,\r\n  // Button,\r\n} from \"react-bootstrap\";\r\n// import { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import Octicon, { Plus, PlusSmall, Gear } from \"@primer/octicons-react\";\r\nimport { Add, Store, Edit, FileCopy as FileCopyIcon } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Dropzone from \"../dropzone\";\r\nimport BusinessRegistration from \"../businessRegistration\";\r\nimport PurposeRegistration from \"../purposeRegistration\";\r\n// import PurposeProperty from \"../purposeProperty\";\r\nimport ShareholderRegistration from \"../shareholderRegistration\";\r\n// import shareholderRegistration from \"../shareholderRegistration\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"MyBusiness\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    userBusinesses,\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes,\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    purposeShareholders,\r\n    // purposeID,\r\n    activePurposeData,\r\n    // language,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRedirectTo,\r\n    setResponseProps,\r\n    setBusinessPurposes,\r\n    setActiveBusiness,\r\n    setActiveBusinesPurpose,\r\n    // setActiveBusinessID,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePageBusinessPurposes,\r\n    setActivePurposeData,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    sendRequest,\r\n    showRequestStatus,\r\n    formatDate,\r\n    copyToClipboard,\r\n    findPurposes,\r\n  } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refBusinessID = useRef(null);\r\n  const refPurposeID = useRef(null);\r\n\r\n  /**\r\n   * Toggle business (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const ToggleBusiness = ({ eventKey, businessID }) => {\r\n    if (activeBusiness === eventKey) {\r\n      setActiveBusiness(null);\r\n      setActivePageBusinessPurposes(null);\r\n    } else {\r\n      setResponseProps(null);\r\n      getBusinessPurposes(businessID, eventKey, 1);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Toggle purpose (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const TogglePurpose = ({ eventKey, purposeID }) => {\r\n    setResponseProps(null);\r\n    getPurposeShareholders(purposeID, eventKey);\r\n  };\r\n\r\n  /**\r\n   * Create:\r\n   * - business menu\r\n   * - business purposes menu\r\n   */\r\n  let menuItems = [];\r\n  let purposes = [];\r\n  let cntBusinesses = 0;\r\n  let cntPurposes = 0;\r\n  let countShareholders = 0;\r\n  userBusinesses !== null &&\r\n    Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n      cntBusinesses++;\r\n      menuItems[keyBusiness] = [];\r\n      purposes[keyBusiness] = [];\r\n      businessPurposes !== null &&\r\n        Object.keys(businessPurposes).map((purpose, keyPurpose) => {\r\n          cntPurposes++;\r\n          if (\r\n            businessPurposes[purpose].business_id ===\r\n            userBusinesses[business].business_id\r\n          ) {\r\n            menuItems[keyBusiness][keyPurpose] = (\r\n              <ListGroup.Item\r\n                action\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n                style={{ cursor: \"default\" }}\r\n                onClick={() =>\r\n                  TogglePurpose({\r\n                    eventKey: keyPurpose,\r\n                    purposeID: businessPurposes[purpose].purpose_id,\r\n                  })\r\n                }\r\n              >\r\n                <span style={{ whiteSpace: \"nowrap\", cursor: \"pointer\" }}>\r\n                  {businessPurposes[purpose].title}\r\n                </span>\r\n\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={(e) => {\r\n                      setPurposeRegistrationTitle(\r\n                        businessPurposes[purpose].title !== null\r\n                          ? businessPurposes[purpose].title\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationDescription(\r\n                        businessPurposes[purpose].description !== null\r\n                          ? businessPurposes[purpose].description\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationKeywords(\r\n                        businessPurposes[purpose].keywords !== null\r\n                          ? businessPurposes[purpose].keywords\r\n                          : \"\"\r\n                      );\r\n\r\n                      setActivePurposeData(\r\n                        JSON.stringify(businessPurposes[purpose])\r\n                      );\r\n                      setActiveBusinesPurpose(\"addPurpose\");\r\n                      e.stopPropagation();\r\n                    }}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </ListGroup.Item>\r\n            );\r\n\r\n            purposes[keyBusiness][keyPurpose] = (\r\n              <Tab.Pane\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n              >\r\n                <Accordion\r\n                  defaultActiveKey={\r\n                    activePurposeProperty !== null\r\n                      ? activePurposeProperty\r\n                      : \"purpose_id\" // \"shareholders\"\r\n                  }\r\n                >\r\n                  {/* Purpose ID */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      eventKey=\"purpose_id\"\r\n                      onClick={() => setActivePurposeProperty(\"purpose_id\")}\r\n                    >\r\n                      {t(\"Purpose ID\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"purpose_id\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          <input\r\n                            ref={refPurposeID}\r\n                            className=\"no-focus\"\r\n                            readOnly\r\n                            style={{\r\n                              border: 0,\r\n                              width: \"15rem\",\r\n                              background: \"Transparent\",\r\n                            }}\r\n                            type=\"text\"\r\n                            defaultValue={businessPurposes[purpose].purpose_id}\r\n                          />\r\n                          {document.queryCommandSupported(\"copy\") && (\r\n                            <span\r\n                              style={{ float: \"right\", marginLeft: \"0.25rem\" }}\r\n                            >\r\n                              <button\r\n                                className=\"button-transparent\"\r\n                                onClick={() => copyToClipboard(refPurposeID)}\r\n                              >\r\n                                <FileCopyIcon\r\n                                  style={{ color: \"var(--dark)\" }}\r\n                                />\r\n                              </button>\r\n                            </span>\r\n                          )}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose shareholders */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"shareholders\"\r\n                      onClick={() => setActivePurposeProperty(\"shareholders\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Shareholders\")}\r\n                      </span>\r\n                      <span style={{ float: \"right\" }}>\r\n                        <Add\r\n                          onClick={(e) => {\r\n                            setActivePurposeProperty(\"addShareholder\");\r\n                            e.stopPropagation();\r\n                          }}\r\n                          fontSize=\"small\"\r\n                          style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                        />\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    {/* Toggle: Add shareholder */}\r\n                    <Accordion.Collapse eventKey=\"addShareholder\">\r\n                      <Card.Body>\r\n                        <ShareholderRegistration\r\n                          {...args}\r\n                          purposeID={businessPurposes[purpose].purpose_id}\r\n                        />\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n\r\n                    {/* Toggle: Shareholders list */}\r\n                    <Accordion.Collapse eventKey=\"shareholders\">\r\n                      <Card.Body>\r\n                        {typeof purposeShareholders !== \"undefined\" &&\r\n                          purposeShareholders !== null &&\r\n                          Object.keys(purposeShareholders).map(\r\n                            (shareholder, keyShareholder) => {\r\n                              if (\r\n                                purposeShareholders[shareholder].purpose_id ===\r\n                                businessPurposes[purpose].purpose_id\r\n                              ) {\r\n                                const { purpose_id } = purposeShareholders[\r\n                                  shareholder\r\n                                ];\r\n                                const {\r\n                                  shareholder_id,\r\n                                  firstname,\r\n                                  lastname,\r\n                                  // email,\r\n                                  roles,\r\n                                  share,\r\n                                } = purposeShareholders[shareholder];\r\n\r\n                                countShareholders++;\r\n\r\n                                const arrRoles =\r\n                                  roles !== null ? roles.split(\",\") : [];\r\n\r\n                                return (\r\n                                  <Shareholder\r\n                                    {...args}\r\n                                    key={keyShareholder}\r\n                                    id={keyShareholder}\r\n                                    shareholder={shareholder_id}\r\n                                    purpose={purpose_id}\r\n                                    firstname={firstname}\r\n                                    lastname={lastname}\r\n                                    share={share}\r\n                                    roles={arrRoles}\r\n                                  />\r\n                                );\r\n                              } else {\r\n                                return \"\"; // TODO: check if this works\r\n                              }\r\n                            }\r\n                          )}\r\n\r\n                        {showRequestStatus(\r\n                          \"get purpose shareholders / SELECT shares\",\r\n                          countShareholders,\r\n                          t(\"Loading shareholders...\"),\r\n                          t(\"No shareholders\"),\r\n                          \"finished\"\r\n                        )}\r\n\r\n                        {/* End shareholders list */}\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose status */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      eventKey=\"productStatus\"\r\n                      onClick={() => setActivePurposeProperty(\"productStatus\")}\r\n                    >\r\n                      {t(\"Purpose Status\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"productStatus\">\r\n                      <Card.Body\r\n                        onClick={(e) => {\r\n                          // console.log(\"Click\", e);\r\n\r\n                          const bp = businessPurposes;\r\n                          bp[purpose].status =\r\n                            businessPurposes[purpose].status === 0 ? 1 : 0;\r\n                          setBusinessPurposes(JSON.stringify(bp));\r\n\r\n                          let data = {};\r\n                          data.purpose_id =\r\n                            businessPurposes[purpose].purpose_id;\r\n                          data.purpose_status =\r\n                            businessPurposes[purpose].status;\r\n                          return sendRequest({\r\n                            req: \"change purpose status\",\r\n                            data,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Form>\r\n                          {typeof purposeShareholders === \"undefined\" ||\r\n                            (purposeShareholders === null && (\r\n                              <Form.Text>\r\n                                {t(\r\n                                  \"To publish, please add at least one shareholder\"\r\n                                )}\r\n                                <br />\r\n                                <br />\r\n                              </Form.Text>\r\n                            ))}\r\n\r\n                          {typeof purposeShareholders !== \"undefined\" &&\r\n                            purposeShareholders !== null && (\r\n                              <Form.Check\r\n                                type=\"switch\"\r\n                                custom\r\n                                disabled={\r\n                                  typeof purposeShareholders === \"undefined\" ||\r\n                                  purposeShareholders === null\r\n                                }\r\n                                label={t(\r\n                                  businessPurposes[purpose].status === 0\r\n                                    ? \"Not published\"\r\n                                    : \"Published\"\r\n                                )}\r\n                                checked={businessPurposes[purpose].status === 1}\r\n                                onChange={(e) => {\r\n                                  console.log(e);\r\n                                }}\r\n                              />\r\n                            )}\r\n                        </Form>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose title */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"title\"\r\n                      onClick={() => setActivePurposeProperty(\"title\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Title\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"title\">\r\n                      <Card.Body>\r\n                        <Card.Text>{businessPurposes[purpose].title}</Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose description\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"description\"\r\n                      onClick={() => setActivePurposeProperty(\"description\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Description\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"description\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].description}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Keywords\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"keywords\"\r\n                      onClick={() => setActivePurposeProperty(\"keywords\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Keywords\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"keywords\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].keywords}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* End of purpose properties */}\r\n                </Accordion>\r\n              </Tab.Pane>\r\n            );\r\n          }\r\n          countShareholders = 0;\r\n          return true;\r\n        });\r\n\r\n      return true;\r\n    });\r\n\r\n  const jsx = (\r\n    <>\r\n      <Accordion\r\n        defaultActiveKey={\r\n          activeBusiness !== null || !userBusinessesLoaded\r\n            ? activeBusiness\r\n            : \"myBusinesses\"\r\n        }\r\n      >\r\n        {/* Add business location top */}\r\n\r\n        {/* List user businesses */}\r\n        {userBusinesses !== null &&\r\n          Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n            const date = new Date(userBusinesses[business].created);\r\n            const businessSince = formatDate(date, {\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n              year: \"numeric\",\r\n            });\r\n\r\n            return (\r\n              <Card key={keyBusiness}>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey={keyBusiness}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    ToggleBusiness({\r\n                      eventKey: keyBusiness,\r\n                      businessID: userBusinesses[business].business_id,\r\n                    })\r\n                  }\r\n                >\r\n                  <Store style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                  {userBusinesses[business].title}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={keyBusiness}>\r\n                  <Card.Body>\r\n                    <Tab.Container\r\n                      id=\"left-tabs-example\"\r\n                      defaultActiveKey={\r\n                        activeBusinesPurpose !== null\r\n                          ? activeBusinesPurpose\r\n                          : \"aboutBusiness\"\r\n                      }\r\n                    >\r\n                      {/**\r\n                       * Row: Search\r\n                       */}\r\n                      <Row style={{ marginBottom: \"1.2rem\" }}>\r\n                        <Col>\r\n                          <Search\r\n                            advancedSearch={false}\r\n                            placeholder={t(\"Find purposes...\")}\r\n                            captionAdvancedSearch={t(\"Advanced search\")}\r\n                            onSubmit={findPurposes}\r\n                            {...args}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      {/**\r\n                       * Row: Purposes\r\n                       */}\r\n                      <Row>\r\n                        {/**\r\n                         * Layout: Left side - Menu\r\n                         */}\r\n                        <Col sm={5}>\r\n                          <ListGroup variant=\"flush\">\r\n                            {/* Menu item: About business */}\r\n                            <ListGroup.Item\r\n                              action\r\n                              eventKey=\"aboutBusiness\"\r\n                              style={{ cursor: \"default\" }}\r\n                              onClick={(e) => {\r\n                                setActivePurposeData(null);\r\n                                setActiveBusinesPurpose(null);\r\n                                e.stopPropagation();\r\n                              }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  whiteSpace: \"nowrap\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              >\r\n                                {t(\"About\")}\r\n                              </span>\r\n                              <span style={{ float: \"right\" }}>\r\n                                <Add\r\n                                  onClick={(e) => {\r\n                                    setClearRefs(true);\r\n                                    setActivePurposeData(null);\r\n                                    setActiveBusinesPurpose(\"addPurpose\");\r\n                                    e.stopPropagation();\r\n                                  }}\r\n                                  fontSize=\"small\"\r\n                                  style={{\r\n                                    color: \"var(--dark)\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                />\r\n                              </span>\r\n                            </ListGroup.Item>\r\n\r\n                            {/* Menu items: Registered purposes */}\r\n                            {menuItems[keyBusiness]}\r\n\r\n                            {/* old add purpose */}\r\n                          </ListGroup>\r\n                          {countBusinessPurposes !== null && (\r\n                            <>\r\n                              <br />\r\n                              <Pagination\r\n                                {...args}\r\n                                size=\"sm\"\r\n                                countItems={countBusinessPurposes}\r\n                                itemsPerPage={businessPurposesPerPage}\r\n                                active={activePageBusinessPurposes}\r\n                                onClick={(number) =>\r\n                                  getBusinessPurposes(\r\n                                    activeBusinessID,\r\n                                    0,\r\n                                    number\r\n                                  )\r\n                                }\r\n                              />\r\n                            </>\r\n                          )}\r\n\r\n                          {showRequestStatus(\r\n                            \"get business purposes / SELECT purposes\",\r\n                            cntPurposes,\r\n                            t(\"Loading purposes...\"),\r\n                            t(\"No purposes\"),\r\n                            \"finished\"\r\n                          )}\r\n                        </Col>\r\n\r\n                        {/**\r\n                         * Layout: Right side - Content\r\n                         */}\r\n                        <Col sm={7}>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"aboutBusiness\">\r\n                              <Accordion defaultActiveKey=\"businessID\">\r\n                                {/* Business ID */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessID\"\r\n                                  >\r\n                                    {t(\"Business ID\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessID\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          <input\r\n                                            ref={refBusinessID}\r\n                                            className=\"no-focus\"\r\n                                            readOnly\r\n                                            style={{\r\n                                              border: 0,\r\n                                              width: \"13rem\",\r\n                                              background: \"Transparent\",\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            defaultValue={\r\n                                              userBusinesses[business]\r\n                                                .business_id\r\n                                            }\r\n                                          />\r\n                                          {document.queryCommandSupported(\r\n                                            \"copy\"\r\n                                          ) && (\r\n                                            <span\r\n                                              style={{\r\n                                                float: \"right\",\r\n                                                marginLeft: \"0.25rem\",\r\n                                              }}\r\n                                            >\r\n                                              <button\r\n                                                className=\"button-transparent\"\r\n                                                onClick={() =>\r\n                                                  copyToClipboard(refBusinessID)\r\n                                                }\r\n                                              >\r\n                                                <FileCopyIcon\r\n                                                  style={{\r\n                                                    color: \"var(--dark)\",\r\n                                                  }}\r\n                                                />\r\n                                              </button>\r\n                                            </span>\r\n                                          )}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business description */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessDescription\"\r\n                                  >\r\n                                    {t(\"Business Description\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessDescription\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          {userBusinesses[business]\r\n                                            .description !== \"\" ? (\r\n                                            userBusinesses[business].description\r\n                                          ) : (\r\n                                            <span className=\"text-center text-muted\">\r\n                                              {t(\"No description\")}\r\n                                            </span>\r\n                                          )}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business Creation Date */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessCreationDate\"\r\n                                  >\r\n                                    {t(\"Business Created\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessCreationDate\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>{businessSince}</Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n\r\n                            {/* Start Business purposes */}\r\n                            {purposes[keyBusiness]}\r\n                            {/* End Business purposes */}\r\n\r\n                            {/*\r\n                             * Add new purpose / update existing purpose\r\n                             */}\r\n                            <Tab.Pane eventKey=\"addPurpose\">\r\n                              <Accordion defaultActiveKey=\"newPurpose\">\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    eventKey=\"newPurpose\"\r\n                                    style={{ cursor: \"default\" }}\r\n                                  >\r\n                                    {t(\r\n                                      activePurposeData === null\r\n                                        ? \"New Purpose\"\r\n                                        : \"Edit Purpose\"\r\n                                    )}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"newPurpose\">\r\n                                    <Card.Body>\r\n                                      <PurposeRegistration\r\n                                        {...args}\r\n                                        businessID={\r\n                                          userBusinesses[business].business_id\r\n                                        }\r\n                                        id={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.id\r\n                                            : null\r\n                                        }\r\n                                        purposeID={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.purpose_id\r\n                                            : null\r\n                                        }\r\n                                        title={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.title\r\n                                            : \"\"\r\n                                        }\r\n                                        description={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.description\r\n                                            : \"\"\r\n                                        }\r\n                                        category={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.category\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory2={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory2\r\n                                            : \"\"\r\n                                        }\r\n                                        keywords={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.keywords\r\n                                            : \"\"\r\n                                        }\r\n                                      />\r\n                                    </Card.Body>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>\r\n                        </Col>\r\n                      </Row>\r\n                    </Tab.Container>\r\n                    {/* pagination prev */}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            );\r\n            // console.log(\"BUSINESS:\", userBusinesses[business]);\r\n          })}\r\n\r\n        {/**\r\n         * Card: Add business\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"addBusiness\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() =>\r\n              setActiveBusiness(\r\n                activeBusiness !== \"addBusiness\" ? \"addBusiness\" : null\r\n              )\r\n            }\r\n          >\r\n            <span>\r\n              <Add fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              &nbsp;\r\n              {t(\"Add Business\")}\r\n            </span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"addBusiness\">\r\n            <Card.Body>\r\n              <BusinessRegistration {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      {userBusinesses !== null && (\r\n        <>\r\n          <br />\r\n\r\n          <Pagination\r\n            {...args}\r\n            size=\"md\"\r\n            countItems={countBusinesses}\r\n            itemsPerPage={businessesPerPage}\r\n            active={activePageBusinesses}\r\n            onClick={(number) => getBusinesses(number)}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","import \"./UserEditor.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup, Form, InputGroup } from \"react-bootstrap\";\r\nimport {\r\n  Visibility,\r\n  VisibilityOff,\r\n  Close,\r\n  Edit,\r\n  // Done,\r\n} from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"UserEditor\",\r\n    request: \"update user\",\r\n    mode: \"label\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"USER EDITOR PROPS:\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    // currencies,\r\n    // currencyAbbr,\r\n    // language,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getReviser, getWorkplace } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefFirstName = refFirstName.current;\r\n    const tempRefLastName = refLastName.current;\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (\r\n        tempRefFirstName !== null &&\r\n        userEditorFirstname !== tempRefFirstName.value\r\n      )\r\n        setUserEditorFirstname(tempRefFirstName.value);\r\n\r\n      if (\r\n        tempRefLastName !== null &&\r\n        userEditorLastname !== tempRefLastName.value\r\n      )\r\n        setUserEditorLastname(tempRefLastName.value);\r\n\r\n      if (tempRefEmail !== null && userEditorEmail !== tempRefEmail.value)\r\n        setUserEditorEmail(tempRefEmail.value);\r\n\r\n      if (\r\n        tempRefPassword !== null &&\r\n        userEditorPassword !== tempRefPassword.value\r\n      )\r\n        setUserEditorPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userEditorEditFirstname ||\r\n      userEditorEditLastname ||\r\n      userEditorEditEmail ||\r\n      userEditorEditPassword\r\n    ) {\r\n      setUserEditorSubmitButtonVisible(true);\r\n    } else {\r\n      setUserEditorSubmitButtonVisible(false);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [\r\n    userEditorEditFirstname,\r\n    userEditorEditLastname,\r\n    userEditorEditEmail,\r\n    userEditorEditPassword,\r\n  ]);\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  const togglePassword = () => {\r\n    setUserEditorPasswordVisible(!userEditorPasswordVisible);\r\n  };\r\n\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    // data.language = language;\r\n    // data.email = userData.email;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.personalID = accountNumber;\r\n    if (!userEditorEditFirstname) data.firstname = null;\r\n    if (!userEditorEditLastname) data.lastname = null;\r\n    if (!userEditorEditEmail) data.email = userData.email;\r\n    if (!userEditorEditPassword) data.password = null;\r\n\r\n    // console.log(\"onSubmit:\", data);\r\n\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const yupObject = {\r\n    firstName: userEditorEditFirstname\r\n      ? yup.string().required(t(\"First name is required\"))\r\n      : yup.string().optional(),\r\n    lastName: userEditorEditLastname\r\n      ? yup.string().required(t(\"Last name is required\"))\r\n      : yup.string().optional(),\r\n    email: userEditorEditEmail\r\n      ? yup\r\n          .string()\r\n          .email(t(\"Invalid email address\"))\r\n          .required(t(\"Email is required\"))\r\n      : yup.string().optional(),\r\n    password: userEditorEditPassword\r\n      ? yup\r\n          .string()\r\n          .required(t(\"No password provided\"))\r\n          .min(8, t(\"Password is too short\"))\r\n          // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n          .matches(\r\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n            t(\"Password is too weak\")\r\n          )\r\n      : yup.string().optional(),\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object(yupObject);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (userData === null) return <></>;\r\n\r\n  /**\r\n   * Destructuring\r\n   */\r\n  const { mode } = props;\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    email,\r\n    // language,\r\n    // currency_name,\r\n    // currency_abbr,\r\n  } = userData;\r\n  // const currency = `${currency_name} (${currency_abbr})`;\r\n\r\n  const UserEditorForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Card title={t(\"Profile\")}>\r\n        {/* First name */}\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"First name\")}</Form.Label>\r\n            {!userEditorEditFirstname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditFirstname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{firstname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditFirstname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditFirstname && (\r\n              <Form.Group controlId=\"validationFormikFirstName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter first name\")}\r\n                    name=\"firstName\"\r\n                    ref={refFirstName}\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.firstName && touched.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Last name */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Last name\")}</Form.Label>\r\n            {!userEditorEditLastname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditLastname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{lastname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditLastname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditLastname && (\r\n              <Form.Group controlId=\"validationFormikLastName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter last name\")}\r\n                    name=\"lastName\"\r\n                    ref={refLastName}\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.lastName && touched.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Email */}\r\n          {false && accountNumber !== null && (\r\n            <ListGroup.Item as=\"div\" action>\r\n              <Form.Label>{t(\"Email address\")}</Form.Label>\r\n              {!userEditorEditEmail ? (\r\n                <>\r\n                  <span style={{ float: \"right\" }}>\r\n                    <Edit\r\n                      onClick={() => setUserEditorEditEmail(true)}\r\n                      fontSize=\"small\"\r\n                      style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                    />\r\n                  </span>\r\n                  <br />\r\n                  <small>{email}</small>\r\n                </>\r\n              ) : (\r\n                <span style={{ float: \"right\" }}>\r\n                  <Close\r\n                    onClick={() => setUserEditorEditEmail(false)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              )}\r\n\r\n              {userEditorEditEmail && (\r\n                <Form.Group controlId=\"validationFormikEmail\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      placeholder={t(\"Enter email\")}\r\n                      name=\"email\"\r\n                      value={values.email}\r\n                      ref={refEmail}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.email && touched.email}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.email}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              )}\r\n            </ListGroup.Item>\r\n          )}\r\n\r\n          {/* Password */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Password\")}</Form.Label>\r\n            {!userEditorEditPassword ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditPassword(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditPassword(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditPassword && (\r\n              <>\r\n                {/* New password */}\r\n                <Form.Group controlId=\"validationFormikPassword\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      type={userEditorPasswordVisible ? \"text\" : \"password\"}\r\n                      placeholder={t(\"Enter new password\")}\r\n                      name=\"password\"\r\n                      ref={refPassword}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.password && touched.password}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <InputGroup.Text\r\n                        id=\"inputGroupAppend\"\r\n                        onClick={togglePassword}\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        {userEditorPasswordVisible ? (\r\n                          <VisibilityOff\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        ) : (\r\n                          <Visibility\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        )}\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.password}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              </>\r\n            )}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n\r\n        <Form.Group controlId=\"validationSubmitButton\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            visible={userEditorSubmitButtonVisible}\r\n            marginTop={20}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n      </Card>\r\n    </Form>\r\n  );\r\n\r\n  const jsx =\r\n    mode === \"label\" ? (\r\n      <span style={{ whiteSpace: \"nowrap\" }}>\r\n        {firstname} {lastname}\r\n      </span>\r\n    ) : (\r\n      <Formik\r\n        component={UserEditorForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          // firstName: userData.firstname,\r\n          // lastName: userData.lastname,\r\n          // email: userData.email,\r\n          // password: \"\",\r\n          firstName: userEditorFirstname,\r\n          lastName: userEditorLastname,\r\n          email: userEditorEmail,\r\n          password: userEditorPassword,\r\n        }}\r\n      />\r\n    );\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    request: \"get currencies\", // \"register currency\",\r\n    namespace: \"Currencies\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencies,\r\n    settings,\r\n    countCurrencies,\r\n    activePageCurrencies,\r\n    currenciesPerPage,\r\n    currencyAbbr,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyAbbr,\r\n    setResponseProps,\r\n    setCurrencyRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    showRequestStatus,\r\n    getCurrencies,\r\n    findCurrencies,\r\n    formatExchangeRate,\r\n    getObjectArrayElementIndex,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onCurrencySelected = (e) => {\r\n    setCurrencyAbbr(e.target.id);\r\n    sendRequest({\r\n      req: \"register user currency\",\r\n      data: { email: userData.email, currency_id: e.target.id },\r\n    });\r\n\r\n    // Fetch the selected currency rate\r\n    const id = getObjectArrayElementIndex(currencies, \"abbr\", e.target.id);\r\n    setCurrencyRate(currencies[id].rate);\r\n  };\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    setResponseProps(null);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageCurrencies > 1 ? activePageCurrencies - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageCurrencies < Math.ceil(countCurrencies / currenciesPerPage)\r\n            ? activePageCurrencies + 1\r\n            : Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getCurrencies(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrenciesForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <Search\r\n          placeholder={t(\"Find currency...\")}\r\n          onSubmit={findCurrencies}\r\n          {...args}\r\n        />\r\n      </div>\r\n      <Table responsive striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Currency\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Abbr\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Region\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Rate\")}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currencies !== null &&\r\n            currencies.map((currency, keyCurrency) => {\r\n              cnt++;\r\n              // console.log(\"CURRENCY\", currency);\r\n\r\n              const { name, abbr, rate, region } = currency;\r\n\r\n              if (\r\n                typeof settings[\"currencies\"] === \"undefined\" ||\r\n                settings[\"currencies\"] === null ||\r\n                settings[\"currencies\"].length === 0 ||\r\n                settings[\"currencies\"].includes(abbr)\r\n              ) {\r\n                // valid currency - continue\r\n              } else {\r\n                return \"\"; // invalid currency\r\n              }\r\n\r\n              return (\r\n                <tr key={keyCurrency}>\r\n                  <td style={{ textAlign: \"left\", paddingLeft: \"1rem\" }}>\r\n                    <Form.Check\r\n                      id={abbr}\r\n                      type=\"radio\"\r\n                      checked={currencyAbbr === abbr}\r\n                      aria-label=\"option 1\"\r\n                      label={name}\r\n                      custom\r\n                      inline\r\n                      onChange={onCurrencySelected}\r\n                      name=\"selected-currency\"\r\n                    />\r\n                  </td>\r\n                  <td style={{ textAlign: \"center\" }}>{abbr}</td>\r\n                  <td style={{ textAlign: \"left\" }}>{region}</td>\r\n                  <td style={{ textAlign: \"right\" }}>\r\n                    {formatExchangeRate(rate)}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {showRequestStatus(\r\n        \"get currencies / SELECT currencies\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No currencies\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countCurrencies}\r\n        itemsPerPage={currenciesPerPage}\r\n        active={activePageCurrencies}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  // onSubmit={onSubmit}\r\n  return (\r\n    <Formik\r\n      component={CurrenciesForm}\r\n      initialValues={{\r\n        curr_abbr: \"\",\r\n        curr_title: \"\",\r\n        curr_region: \"\",\r\n        curr_rate: 1.0,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"CurrencyRegistration\",\r\n    request: \"register currency\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    formatExchangeRate,\r\n    // getCurrencies,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([\"CurrencyRegistration\"]);\r\n\r\n  const refAbbr = React.createRef();\r\n  const refTitle = React.createRef();\r\n  const refRegion = React.createRef();\r\n  const refRate = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefAbbr = refAbbr.current;\r\n    const tempRefTitle = refTitle.current;\r\n    const tempRefRegion = refRegion.current;\r\n    const tempRefRate = refRate.current;\r\n    return () => {\r\n      if (tempRefAbbr !== null && currencyCode !== tempRefAbbr.value)\r\n        setCurrencyCode(tempRefAbbr.value);\r\n\r\n      if (tempRefTitle !== null && currencyName !== tempRefTitle.value)\r\n        setCurrencyName(tempRefTitle.value);\r\n\r\n      if (tempRefRegion !== null && currencyRegion !== tempRefRegion.value)\r\n        setCurrencyRegion(tempRefRegion.value);\r\n\r\n      if (tempRefRate !== null && currencyNewRate !== tempRefRate.value)\r\n        setCurrencyNewRate(tempRefRate.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    curr_abbr: yup\r\n      .string()\r\n      .required(t(\"Currency abbreviation is required\"))\r\n      .min(3, t(\"Currency abbreviation is too short\"))\r\n      .max(5, t(\"Currency abbreviation is too long\")),\r\n    curr_title: yup\r\n      .string()\r\n      .required(t(\"Currency name is required\"))\r\n      .min(3, t(\"Currency name is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency name is too long\")), // must be at most 70 characters\r\n    curr_region: yup\r\n      .string()\r\n      .required(t(\"Currency region is required\"))\r\n      .min(3, t(\"Currency region is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency region is too long\")), // must be at most 70 characters\r\n    curr_rate: yup\r\n      .string()\r\n      .required(t(\"Exchange rate is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Exchange Rate Regex\")),\r\n        t(\"Wrong exchange rate format\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrencyRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/* Currency abbreviation */}\r\n        <Form.Group controlId=\"validationFormikCurrAbbr\">\r\n          <Form.Label>{t(\"Abbreviation\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_abbr\"\r\n              ref={refAbbr}\r\n              value={values.curr_abbr}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_abbr && touched.curr_abbr}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_abbr}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency name */}\r\n        <Form.Group controlId=\"validationFormikCurrName\">\r\n          <Form.Label>{t(\"Currency Name\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_title\"\r\n              ref={refTitle}\r\n              value={values.curr_title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_title && touched.curr_title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_title}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency region */}\r\n        <Form.Group controlId=\"validationFormikCurrRegion\">\r\n          <Form.Label>{t(\"Currency Region\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_region\"\r\n              ref={refRegion}\r\n              value={values.curr_region}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_region && touched.curr_region}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_region}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Initial exchange rate */}\r\n        <Form.Group controlId=\"validationFormikCurrRate\">\r\n          <Form.Label>{t(\"Initial Exchange Rate\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={formatExchangeRate(1)}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_rate\"\r\n              value={values.curr_rate}\r\n              ref={refRate}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_rate && touched.curr_rate}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_rate}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={CurrencyRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        curr_abbr: currencyCode,\r\n        curr_title: currencyName,\r\n        curr_region: currencyRegion,\r\n        curr_rate: currencyNewRate,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AvTimer } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n//  let time = new Date().toLocaleString();\r\nimport { useInterval } from \"../../utils/useInterval\";\r\nimport { useEventListener } from \"../../utils/useEventListener\";\r\n\r\nimport ModalMessage from \"../modalMessage\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Constants\r\n     ============================================================================ */\r\n  const minute = 60; // seconds, for testing purposes > 60\r\n\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"IdleTimer\",\r\n    timeout: 5 * minute,\r\n    timestamp: null,\r\n    stage2: 60, // show seconds (vs minutes) in stage 2\r\n    stage3: 20, // show modal message on stage 3\r\n    onTick: () => {},\r\n    onTimerReset: () => {},\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { formatDate } = props.barrelFunctions;\r\n  const { onSessionTimeout } = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const [seconds, setSeconds] = useState(props.timeout);\r\n  const [modalMessageShow, setModalMessageShow] = React.useState(false);\r\n\r\n  useInterval(() => {\r\n    // Your custom logic here\r\n\r\n    setSeconds(seconds - 1);\r\n    props.onTick(seconds);\r\n  }, 1000);\r\n\r\n  useEventListener(() => {\r\n    setSeconds(props.timeout);\r\n    props.onTimerReset();\r\n  }, [\"mousedown\", \"click\", \"scroll\", \"keypress\"]); // \"click\",\r\n\r\n  useEffect(() => {\r\n    if (seconds === props.timeout) setModalMessageShow(false);\r\n    if (seconds === props.stage3) setModalMessageShow(true);\r\n    if (seconds === 0) onSessionTimeout();\r\n\r\n    // eslint-disable-next-line\r\n  }, [seconds]);\r\n\r\n  // useEffect(() => {\r\n  //   setSeconds(props.timeout);\r\n  //   props.onTimerReset();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [session]);\r\n\r\n  const getJSX = () => {\r\n    let currTime;\r\n    if (seconds > props.stage2) currTime = Math.ceil(seconds / minute);\r\n    else currTime = seconds;\r\n\r\n    const timeFormatted = formatDate(new Date(1970, 1, 1, 0, 0, currTime), {\r\n      minute: \"numeric\",\r\n      second: \"numeric\",\r\n    });\r\n\r\n    const onSessionContinue = () => {\r\n      // console.log(\"onSessionContinue\");\r\n      setSeconds(props.timeout);\r\n      setModalMessageShow(false);\r\n    };\r\n\r\n    const modalMessage = (\r\n      <>\r\n        <Trans\r\n          i18nKey=\"IdleTimer:Automatic logout\"\r\n          timeFormatted={timeFormatted}\r\n        >\r\n          <div className=\"text-center\">Automatic logout in</div>\r\n          <div\r\n            className=\"text-center\"\r\n            style={{ fontSize: \"4em\", fontWeight: \"bold\", color: \"#A93226\" }}\r\n          >\r\n            {{ timeFormatted }}\r\n          </div>\r\n          <div className=\"text-center\">\r\n            Do you want to continue the session?\r\n          </div>\r\n        </Trans>\r\n        <br />\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Continue now\")}\r\n          request=\"continue session\"\r\n          onSubmit={onSessionContinue}\r\n          namespace={props.namespace}\r\n        />\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <ModalMessage\r\n          show={modalMessageShow}\r\n          message={modalMessage}\r\n          onHide={() => setModalMessageShow(false)}\r\n        />\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip>\r\n              {seconds > props.stage2 ? (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Minutes to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  minutes.\r\n                </Trans>\r\n              ) : (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Seconds to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  seconds.\r\n                </Trans>\r\n              )}\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <div style={{ whiteSpace: \"nowrap\", cursor: \"default\" }}>\r\n            <AvTimer style={{ color: \"var(--dark)\" }} />\r\n            &nbsp;\r\n            {seconds > props.stage2 ? (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:minutes\" currTime={currTime}>\r\n                    {{ currTime }} minutes\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:min\" currTime={currTime}>\r\n                    {{ currTime }} min\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:seconds\" currTime={currTime}>\r\n                    {{ currTime }} seconds\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:sec\" currTime={currTime}>\r\n                    <span>{{ currTime }}</span> sec\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </OverlayTrigger>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useEventListener = (callback, events) => {\r\n  let defaults = {\r\n    namespace: \"EventListener\",\r\n\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, { events: events });\r\n\r\n  useEffect(() => {\r\n    const eventHandler = (e) => {\r\n      callback(e);\r\n    };\r\n\r\n    for (let i in props.events) {\r\n      window.addEventListener(props.events[i], eventHandler);\r\n    }\r\n\r\n    return () => {\r\n      for (let i in props.events) {\r\n        window.removeEventListener(props.events[i], eventHandler);\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import _ from \"lodash\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Button,\r\n  // Breadcrumb,\r\n  // NavDropdown,\r\n  // Alert,\r\n} from \"react-bootstrap\";\r\n// import Octicon, { SignOut } from \"@primer/octicons-react\";\r\nimport { PowerSettingsNew } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../../settings.json\";\r\nimport AccountRegistration from \"../../accountRegistration\";\r\n// import BusinessRegistration from \"../../businessRegistration\";\r\nimport { Balance, Transfer } from \"../../transfer\";\r\nimport MyBusiness from \"../../myBusiness\";\r\nimport UserEditor from \"../../userEditor\";\r\nimport CurrencyContainer from \"../../currencyContainer\";\r\nimport IdleTimer from \"../../idleTimer\";\r\n// import Login from \"../../login\";\r\nimport Contact from \"../../contact\";\r\n\r\n/**\r\n * Component: Summary\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"Summary\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    settings,\r\n    signedIn,\r\n    accountNumber,\r\n    sessionTimeout,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getBusinesses } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (signedIn === false) {\r\n    // setRedirectTo(\"/sign-out\");\r\n    return <>User not logged in</>;\r\n  }\r\n\r\n  const location = useLocation();\r\n\r\n  const navigation = (\r\n    <>\r\n      <Container\r\n        fluid\r\n        style={{\r\n          paddingRight: \"0\",\r\n          paddingLeft: \"0\",\r\n        }}\r\n      >\r\n        <Row>\r\n          {/*\r\n           * Top Menu\r\n           */}\r\n          <Col>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                // background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"var(--light)\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src={\r\n                    settings !== null && typeof settings[\"logo\"] !== \"undefined\"\r\n                      ? settings[\"logo\"]\r\n                      : \"gfx/zlogo_light.png\"\r\n                  }\r\n                  alt=\"\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link eventKey=\"profile\" href=\"/profile\">\r\n                  <UserEditor {...args} />\r\n                </Nav.Link>\r\n              </Nav>\r\n              <Nav>\r\n                <Nav.Link eventKey=\"sign-out\" href=\"/sign-out\">\r\n                  <span style={{ whiteSpace: \"nowrap\" }}>\r\n                    <span>\r\n                      <PowerSettingsNew style={{ color: \"var(--dark)\" }} />\r\n                    </span>\r\n\r\n                    <span className=\"d-none d-sm-inline\">\r\n                      &nbsp;\r\n                      {t(\"Sign out\")}\r\n                    </span>\r\n                  </span>\r\n                </Nav.Link>\r\n              </Nav>\r\n              {true && (\r\n                <Nav>\r\n                  <Nav.Item>\r\n                    <IdleTimer timeout={sessionTimeout} {...args} />\r\n                  </Nav.Item>\r\n                </Nav>\r\n              )}\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <div style={{ height: \"7px\" }}></div>\r\n            <Navbar\r\n              collapseOnSelect\r\n              expand=\"sm\"\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"dark\"\r\n              variant=\"dark\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                backgroundColor: \"var(--dark)\",\r\n                boxShadow: \"none\",\r\n              }}\r\n            >\r\n              <Nav>\r\n                <Nav.Link\r\n                  className=\"nav-link-2\"\r\n                  eventKey=\"balance\"\r\n                  href=\"/balance\"\r\n                  style={{\r\n                    fontWeight:\r\n                      window.location.pathname === \"/balance\"\r\n                        ? \"bold\"\r\n                        : \"normal\",\r\n                  }}\r\n                >\r\n                  {t(\"Balance\")}\r\n                </Nav.Link>\r\n              </Nav>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                  {accountNumber !== null && (\r\n                    <>\r\n                      <Nav.Link\r\n                        className=\"nav-link-2\"\r\n                        eventKey=\"transfer\"\r\n                        href=\"/transfer\"\r\n                        style={{\r\n                          fontWeight:\r\n                            window.location.pathname === \"/transfer\"\r\n                              ? \"bold\"\r\n                              : \"normal\",\r\n                        }}\r\n                      >\r\n                        {t(\"Transfer\")}\r\n                      </Nav.Link>\r\n                      <Nav.Link\r\n                        className=\"nav-link-2\"\r\n                        eventKey=\"my-business\"\r\n                        onClick={() => getBusinesses(1)}\r\n                        href=\"#\"\r\n                        style={{\r\n                          fontWeight:\r\n                            window.location.pathname === \"/my-business\"\r\n                              ? \"bold\"\r\n                              : \"normal\",\r\n                        }}\r\n                      >\r\n                        {t(\"Business\")}\r\n                      </Nav.Link>\r\n\r\n                      {/**\r\n                       * Currency\r\n                       */}\r\n                      {settings !== null &&\r\n                        typeof settings[\"currencies\"] !== \"undefined\" &&\r\n                        (settings[\"currencies\"] === null ||\r\n                          settings[\"currencies\"].length === 0 ||\r\n                          settings[\"currencies\"].length > 1) && (\r\n                          <Nav.Link\r\n                            className=\"nav-link-2\"\r\n                            eventKey=\"currency\"\r\n                            href=\"/currency\"\r\n                            style={{\r\n                              fontWeight:\r\n                                window.location.pathname === \"/currency\"\r\n                                  ? \"bold\"\r\n                                  : \"normal\",\r\n                            }}\r\n                          >\r\n                            {t(\"Currency\")}\r\n                          </Nav.Link>\r\n                        )}\r\n                    </>\r\n                  )}\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n\r\n  const pageBody = (\r\n    <Router>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/summary\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/account-registration\"\r\n          component={() => {\r\n            return AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/profile\"\r\n          component={() => {\r\n            return UserEditor({ ...args, mode: \"profile\" });\r\n          }}\r\n        />\r\n        {settings !== null &&\r\n          typeof settings[\"currencies\"] !== \"undefined\" &&\r\n          (settings[\"currencies\"] === null ||\r\n            settings[\"currencies\"].length === 0 ||\r\n            settings[\"currencies\"].length > 1) && (\r\n            <Route\r\n              exact\r\n              path=\"/currency\"\r\n              component={() => {\r\n                return CurrencyContainer({ ...args });\r\n              }}\r\n            />\r\n          )}\r\n\r\n        <Route\r\n          exact\r\n          path=\"/my-business\"\r\n          component={() => {\r\n            return MyBusiness(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/balance\"\r\n          component={() => {\r\n            return Balance(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/transfer\"\r\n          component={() => {\r\n            return Transfer(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/contact\"\r\n          component={() => {\r\n            return Contact(args);\r\n          }}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n\r\n      {/* Content */}\r\n      {/*<h3>{t(\"Summary\")}</h3>*/}\r\n\r\n      <Container fluid=\"md\">\r\n        <Row>\r\n          <Col>\r\n            {navigation}\r\n            <div style={{ height: \"7px\" }}></div>\r\n          </Col>\r\n        </Row>\r\n        {/*\r\n        <Row>{viewAccountRegistration}</Row>\r\n        */}\r\n        <Row>\r\n          <Col>{pageBody}</Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../settings.json\";\r\n// import Card from \"../card\";\r\nimport Currencies from \"../currencies\";\r\nimport CurrencyRegistration from \"../currencyRegistration\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    accordionViewCurrency,\r\n    activePageCurrencies,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setAccordionViewCurrency,\r\n    setRedirectTo,\r\n    setResponseProps,\r\n  } = props.barrelSetters;\r\n  const { getCurrencies } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const ToggleCurrencies = () => {\r\n    if (accordionViewCurrency !== \"currencies\") {\r\n      setResponseProps(null);\r\n      setAccordionViewCurrency(\"currencies\");\r\n      getCurrencies(activePageCurrencies);\r\n    } else {\r\n      setAccordionViewCurrency(null);\r\n    }\r\n  };\r\n\r\n  const ToggleCurrencyRegistration = () => {\r\n    setAccordionViewCurrency(\r\n      accordionViewCurrency !== \"currencyRegistration\"\r\n        ? \"currencyRegistration\"\r\n        : null\r\n    );\r\n  };\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  if (\r\n    typeof settings[\"currencies\"] !== \"undefined\" &&\r\n    settings[\"currencies\"] !== null &&\r\n    settings[\"currencies\"].length < 2\r\n  ) {\r\n    return <></>; // currency creation is disabled\r\n  } else {\r\n    return (\r\n      <>\r\n        <Accordion defaultActiveKey={accordionViewCurrency}>\r\n          <Card>\r\n            <Accordion.Toggle\r\n              as={Card.Header}\r\n              eventKey=\"currencies\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={ToggleCurrencies}\r\n            >\r\n              {t(\"Currencies\")}\r\n            </Accordion.Toggle>\r\n\r\n            <Accordion.Collapse eventKey=\"currencies\">\r\n              <Card.Body>\r\n                <Currencies {...args} />\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n\r\n          {typeof settings[\"currencyCreationAllowed\"] !== \"undefined\" &&\r\n            settings[\"currencyCreationAllowed\"] && (\r\n              <Card>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey=\"currencyRegistration\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={ToggleCurrencyRegistration}\r\n                >\r\n                  {t(\"Currency Registration\")}\r\n                </Accordion.Toggle>\r\n\r\n                <Accordion.Collapse eventKey=\"currencyRegistration\">\r\n                  <Card.Body>\r\n                    <CurrencyRegistration {...args} />\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            )}\r\n        </Accordion>\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { TransferToSelf, TransferToPerson, TransferToBusiness } from \"./index\";\r\n// import { Alert } from \"react-bootstrap\";\r\n\r\n// const navigation = [\r\n//   {\r\n//     name: \"U2S\",\r\n//     link: \"#u2s\",\r\n//   },\r\n//   {\r\n//     name: \"U2U\",\r\n//     link: \"#u2u\",\r\n//   },\r\n//   {\r\n//     name: \"U2B\",\r\n//     link: \"#u2b\",\r\n//   },\r\n// ];\r\n\r\n/**\r\n * Component: Transfer\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber, transferType } = props.barrelGetters;\r\n  const { setRedirectTo } = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  const { onTransferTypeChange } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"Transfer\");\r\n\r\n  const data = props.data;\r\n  const type = transferType;\r\n  // const onTypeChange = args.onTypeChange;\r\n\r\n  // console.log(\"TRANSFER DATA TYPE:\", type);\r\n\r\n  const [transferCard, setTransferCard] = useState(null);\r\n\r\n  const onNavigationClick = (id) => {\r\n    onTransferTypeChange(id);\r\n  };\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"U2S\"),\r\n      link: \"#u2s\",\r\n    },\r\n    {\r\n      name: t(\"U2U\"),\r\n      link: \"#u2u\",\r\n    },\r\n    {\r\n      name: t(\"U2B\"),\r\n      link: \"#u2b\",\r\n    },\r\n  ];\r\n\r\n  // console.log(\"TRANSFER DATA\", data);\r\n  // const title = t(\"Transfer to account\");\r\n\r\n  useEffect(() => {\r\n    if (type === null) return;\r\n\r\n    // setTransferCard()\r\n    switch (type) {\r\n      case \"#u2s\": // User to self\r\n        setTransferCard(\r\n          <TransferToSelf\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      case \"#u2u\": // User to user\r\n        setTransferCard(\r\n          <TransferToPerson\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      case \"#u2b\": // User to business\r\n        setTransferCard(\r\n          <TransferToBusiness\r\n            title={t(\"Transfer to account\")}\r\n            args={props}\r\n            navigation={navigation}\r\n            navigationdefaultActiveKey={type}\r\n            onNavigationClick={onNavigationClick}\r\n          />\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [data, format, type]);\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  // return (\r\n  //   <>\r\n  //     <Alert variant=\"warning\">\r\n  //       <Alert.Heading>{t(\"Account not yet registered\")}</Alert.Heading>\r\n  //       <p>\r\n  //         <Trans i18nKey=\"Balance:Please set up your account first.\">\r\n  //           Please set up your account first. Use this{\" \"}\r\n  //           <a href=\"/account-registration\">link</a>.\r\n  //         </Trans>\r\n  //       </p>\r\n  //     </Alert>\r\n  //   </>\r\n  // );\r\n\r\n  return <>{transferCard}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Contact\", request: \"send message\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    language,\r\n    accountNumber,\r\n    contactSubject,\r\n    contactMessage,\r\n  } = props.barrelGetters;\r\n  const { setContactSubject, setContactMessage } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refSubject = React.createRef();\r\n  const refMessage = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefSubject = refSubject.current;\r\n    const tempRefMessage = refMessage.current;\r\n    return () => {\r\n      // console.log(\"ON UNMOUNT:\", tempRefSubject.value);\r\n      if (tempRefSubject !== null && contactSubject !== tempRefSubject.value)\r\n        setContactSubject(tempRefSubject.value);\r\n\r\n      if (tempRefMessage !== null && contactMessage !== tempRefMessage.value)\r\n        setContactMessage(tempRefMessage.value);\r\n      // console.log(\"CONTACT UNMOUNTS\");\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    subject: yup.string().required(t(\"Subject is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.sender = accountNumber;\r\n    data.language = language;\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  // const navigation = [\r\n  //   {\r\n  //     name: t(\"U2S\"),\r\n  //     link: \"#u2s\",\r\n  //   },\r\n  // ];\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card header={false}>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * Subject\r\n         */}\r\n        <Form.Group controlId=\"validationFormikSubject\">\r\n          <Form.Label>{t(\"Subject\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={t(\"Enter message subject\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"subject\"\r\n              ref={refSubject}\r\n              value={values.subject}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setContactSubject(e.target.value);\r\n              }}\r\n              isInvalid={!!errors.subject && touched.subject}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.subject}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Message\r\n         */}\r\n        <Form.Group controlId=\"validationFormikMessage\">\r\n          <Form.Label>{t(\"Message\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter message\")}\r\n            name=\"message\"\r\n            value={values.message}\r\n            ref={refMessage}\r\n            onChange={handleChange}\r\n            as=\"textarea\"\r\n            rows=\"10\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        subject: contactSubject,\r\n        message: contactMessage,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Overlay.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { cloneElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Overlay\",\r\n    visible: false,\r\n    variant: \"info\",\r\n    dismissible: false,\r\n    onClose: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"dismissible:\", props.dismissible);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  useTimeout(\r\n    () => {\r\n      props.onClose();\r\n    },\r\n    !props.dismissible ? 5000 : -1 // millisec till overlay closes, -1 never\r\n  );\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      let className = \"custom-overlay\";\r\n\r\n      /**\r\n       * Implement property: dismissible\r\n       */\r\n      if (props.dismissible) {\r\n        className += \" alert-dismissible\";\r\n      }\r\n\r\n      /**\r\n       * Implement property: variant\r\n       */\r\n      switch (props.variant) {\r\n        case \"danger\":\r\n          className += \" alert-danger\";\r\n          break;\r\n\r\n        default:\r\n          className += \" alert-info\";\r\n          break;\r\n      }\r\n      let key = 0;\r\n      return (\r\n        <div className={className}>\r\n          {props.dismissible && (\r\n            <button type=\"button\" className=\"close\" onMouseDown={props.onClose}>\r\n              <span aria-hidden=\"true\">×</span>\r\n              <span className=\"sr-only\">Close alert</span>\r\n            </button>\r\n          )}\r\n          {React.Children.map(args.children, (child) => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                ...args,\r\n                styles: null,\r\n                key: key,\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./AlertContainer.css\";\r\n\r\n/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = { namespace: \"AlertContainer\", visible: false }; // TODO: adjust namespace\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      return (\r\n        <div className=\"alert-container\">\r\n          {React.Children.map(args.children, (child) => child)}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Alert } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Overlay from \"../overlay\";\r\nimport AlertContainer from \"../alertContainer\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args.data);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onAlertClose: onClose } = props.barrelEventHandlers;\r\n\r\n  // let t;\r\n  const errorStrings = useTranslation(\"Errors\").t;\r\n  const infoStrings = useTranslation(\"Infos\").t;\r\n\r\n  if (error !== null && info !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <>\r\n        <AlertContainer visible={true}>\r\n          {msgError !== \"\" && msgError !== null && (\r\n            <Overlay\r\n              visible={true}\r\n              variant=\"danger\"\r\n              onClose={() => onClose(\"error\")}\r\n              dismissible={error.dismissible}\r\n            >\r\n              {msgError}\r\n            </Overlay>\r\n          )}\r\n\r\n          {msgInfo !== \"\" && msgInfo !== null && (\r\n            <Overlay\r\n              visible={true}\r\n              variant=\"info\"\r\n              onClose={() => onClose(\"info\")}\r\n              dismissible={info.dismissible}\r\n            >\r\n              {msgInfo}\r\n            </Overlay>\r\n          )}\r\n        </AlertContainer>\r\n      </>\r\n    );\r\n  } else if (error !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        {msgError !== \"\" && msgError !== null && (\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"danger\"\r\n            onClose={() => onClose(\"error\")}\r\n            dismissible={error.dismissible}\r\n          >\r\n            {msgError}\r\n          </Overlay>\r\n        )}\r\n      </AlertContainer>\r\n    );\r\n  } else if (info !== null) {\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        {msgInfo !== \"\" && msgInfo !== null && (\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"info\"\r\n            onClose={() => onClose(\"info\")}\r\n            dismissible={info.dismissible}\r\n          >\r\n            {msgInfo}\r\n          </Overlay>\r\n        )}\r\n      </AlertContainer>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  // Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Spinner,\r\n} from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Alert from \"../alert\";\r\n// import LanguageSelector from \"../language-selector\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"ALERT DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { ip, logInEmail, logInPassword } = props.barrelGetters;\r\n  const {\r\n    setLoggingIn,\r\n    setUpdateInterval,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    getUri,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"LogIn\");\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (tempRefEmail !== null && logInEmail !== tempRefEmail.value)\r\n        setLogInEmail(tempRefEmail.value);\r\n\r\n      if (tempRefPassword !== null && logInPassword !== tempRefPassword.value)\r\n        setLogInPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup.string().required(t(\"No password provided\")),\r\n  });\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserLogInRequest = (data) => {\r\n    // data.pw = data.password;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.ip = ip;\r\n    data.uri = getUri();\r\n    sendRequest({ req: \"sign in user\", data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    setUpdateInterval(-1);\r\n    setLoggingIn(true);\r\n    sendUserLogInRequest(data);\r\n  };\r\n\r\n  const UserLogInForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Sign In\")}</h3>\r\n\r\n      {/**\r\n       * Email\r\n       */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            // autoFocus\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Password\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"Password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            ref={refPassword}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Submit button\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"sign in user\"\r\n          namespace=\"LogIn\"\r\n        />\r\n      </Form.Group>\r\n\r\n      <Container fluid=\"md\">\r\n        <Row>\r\n          {/**\r\n           * Register\r\n           */}\r\n          <Col>\r\n            <p className=\"other-options text-left\">\r\n              <Trans i18nKey=\"LogIn:Not yet registered\">\r\n                Not yet <a href=\"/sign-up\">registered?</a>\r\n              </Trans>\r\n            </p>\r\n          </Col>\r\n\r\n          {/**\r\n           * Forgot password\r\n           */}\r\n          <Col>\r\n            <p className=\"other-options text-right\">\r\n              <Trans i18nKey=\"LogIn:Forgot password\">\r\n                Forgot <a href=\"/reset\">password?</a>\r\n              </Trans>\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={UserLogInForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          email: logInEmail,\r\n          password: logInPassword,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"register user\", namespace: \"SignUp\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    language,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n  } = props.barrelSetters;\r\n  const { getReviser, getWorkplace, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefFirstName = refFirstName.current;\r\n    const tempRefLastName = refLastName.current;\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (\r\n        tempRefFirstName !== null &&\r\n        signUpFirstName !== tempRefFirstName.value\r\n      )\r\n        setSignUpFirstName(tempRefFirstName.value);\r\n\r\n      if (tempRefLastName !== null && signUpLastName !== tempRefLastName.value)\r\n        setSignUpLastName(tempRefLastName.value);\r\n\r\n      if (tempRefEmail !== null && signUpEmail !== tempRefEmail.value)\r\n        setSignUpEmail(tempRefEmail.value);\r\n\r\n      if (tempRefPassword !== null && signUpPassword !== tempRefPassword.value)\r\n        setSignUpPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    firstName: yup.string().required(t(\"First name is required\")),\r\n    lastName: yup.string().required(t(\"Last name is required\")),\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.language = language;\r\n    data.validateEmail = true;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const UserRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Sign Up\")}</h3>\r\n\r\n      {/**\r\n       * First name\r\n       */}\r\n      <Form.Group controlId=\"validationFormikFirstName\">\r\n        <Form.Label>{t(\"First name\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter first name\")}\r\n            name=\"firstName\"\r\n            ref={refFirstName}\r\n            // autoFocus\r\n            value={values.firstName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.firstName && touched.firstName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.firstName}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Last name\r\n       */}\r\n      <Form.Group controlId=\"validationFormikLastName\">\r\n        <Form.Label>{t(\"Last name\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter last name\")}\r\n            name=\"lastName\"\r\n            ref={refLastName}\r\n            value={values.lastName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.lastName && touched.lastName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.lastName}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Email\r\n       */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Password\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"Password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            ref={refPassword}\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Submit button\r\n       */}\r\n      <Form.Group controlId=\"validationSubmitButton\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/**\r\n       * Login link\r\n       */}\r\n      <p className=\"other-options text-right\">\r\n        <Trans i18nKey=\"SignUp:Already registered\">\r\n          Already registered <a href=\"/sign-in\">sign in?</a>\r\n        </Trans>\r\n      </p>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={UserRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        firstName: signUpFirstName,\r\n        lastName: signUpLastName,\r\n        email: signUpEmail,\r\n        password: signUpPassword,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../../translations/i18n\";\r\n// import { withNamespaces } from \"react-i18next\";\r\nimport { Form, Badge } from \"react-bootstrap\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { userData } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"LanguageSelector\");\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n  const languages = [\r\n    { id: 1, language: \"Latviešu\", code: \"lv\" },\r\n    { id: 2, language: \"English\", code: \"en\" },\r\n  ];\r\n  const handleLanguageSelect = (e) => {\r\n    changeLanguage(e.target.value);\r\n  };\r\n  const selectLanguage = (language) => {\r\n    changeLanguage(language);\r\n\r\n    if (userData !== null) {\r\n      sendRequest({\r\n        req: \"register user language\",\r\n        data: { email: userData.email, language },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (1) {\r\n    return (\r\n      <>\r\n        <div style={{ height: \"7px\" }}></div>\r\n        <Badge\r\n          pill\r\n          variant=\"light\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            selectLanguage(\"en\");\r\n          }}\r\n        >\r\n          en\r\n        </Badge>{\" \"}\r\n        <Badge\r\n          pill\r\n          variant=\"light\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            selectLanguage(\"lv\");\r\n          }}\r\n        >\r\n          lv\r\n        </Badge>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <Form.Control\r\n        as=\"select\"\r\n        id=\"languageSelector\"\r\n        onChange={handleLanguageSelect}\r\n        custom\r\n      >\r\n        <option key=\"0\" value={props.language}>\r\n          {t(\"Language\")}\r\n        </option>\r\n        {languages.map((el) => (\r\n          <option key={el.id} value={el.code}>\r\n            {el.language}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    );\r\n  }\r\n};\r\n\r\n// function selectElement(id, valueToSelect) {\r\n//   let element = document.getElementById(id);\r\n//   if (!element) return;\r\n//   element.value = valueToSelect;\r\n// }\r\n\r\n// // catch the event and make changes accordingly\r\n// i18n.on(\"languageChanged\", function (lng) {\r\n//   selectElement(\"languageSelector\", lng);\r\n// });\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Summary from \"../summary\";\r\nimport Alert from \"../../alert\";\r\nimport Login from \"../../login\";\r\nimport Logout from \"../../logout\";\r\nimport SignUp from \"../../signup\";\r\nimport PasswordReset from \"../../passwordReset\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport ValidateEmail from \"../../validateEmail\";\r\nimport ChangePassword from \"../../changePassword\";\r\nimport Auth from \"../../auth\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { signedIn } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getRedirect, getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n  // const appClass = \"App\";\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * The alert\r\n           */}\r\n          <Alert data={args} />\r\n\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(args) : Login(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign in\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-in\"\r\n                  component={() => {\r\n                    return !signedIn ? Login(args) : Summary(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign up\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-up\"\r\n                  component={() => {\r\n                    return SignUp(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign up\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/auth\"\r\n                  component={() => (signedIn ? Auth(args) : Login(args))}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Validate mail\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/validate-email\"\r\n                  component={() => {\r\n                    return ValidateEmail(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Change password\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/password\"\r\n                  component={() => {\r\n                    return ChangePassword(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: User profile\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/profile\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(args) : Login(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Currency\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/currency\"\r\n                  component={() => {\r\n                    return signedIn ? Summary(args) : Login(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Sign out\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/sign-out\"\r\n                  component={() => {\r\n                    return Logout(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Password reset\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/reset\"\r\n                  component={() => {\r\n                    return PasswordReset(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Account registration\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/account-registration\"\r\n                  component={() => {\r\n                    return Summary(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Business registration\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/business-registration\"\r\n                  component={() => {\r\n                    return Summary(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: My business\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/my-business\"\r\n                  component={() => {\r\n                    return Summary(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Balance\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/balance\"\r\n                  component={() => {\r\n                    return Summary(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Transfer\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/transfer\"\r\n                  component={() => {\r\n                    return Summary(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Contact\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/contact\"\r\n                  component={() => {\r\n                    return Summary(args);\r\n                  }}\r\n                />\r\n\r\n                {/**\r\n                 * Route: Summary\r\n                 */}\r\n                <Route\r\n                  exact\r\n                  path=\"/summary\"\r\n                  component={() => {\r\n                    return Summary(args);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span style={{ width: \"40%\" }}>\r\n                  <LanguageSelector {...args} />\r\n                </span>\r\n\r\n                <span\r\n                  className=\"text-muted\"\r\n                  style={{\r\n                    float: \"left\",\r\n                    marginLeft: \"18px\",\r\n                    width: \"30%\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                >\r\n                  {signedIn &&\r\n                    window.location.pathname !== \"/contact\" &&\r\n                    window.location.pathname !== \"/account-registration\" && (\r\n                      <small>&nbsp;</small>\r\n                    )}\r\n                </span>\r\n\r\n                <span\r\n                  className=\"text-muted\"\r\n                  style={{\r\n                    float: \"right\",\r\n                    marginRight: \"18px\",\r\n                    width: \"30%\",\r\n                    textAlign: \"right\",\r\n                    // backgroundColor: \"red\",\r\n                  }}\r\n                >\r\n                  {signedIn &&\r\n                    window.location.pathname !== \"/contact\" &&\r\n                    window.location.pathname !== \"/account-registration\" && (\r\n                      <small>\r\n                        <a href=\"/contact\">{t(\"Contact\")}</a>\r\n                      </small>\r\n                    )}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Checkout\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    // externalRequest,\r\n    // accountNumber,\r\n    cartContent,\r\n    cartPurposes,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const Cart = () => {\r\n    let priceTotal = 0;\r\n    let priceReal = 0;\r\n\r\n    return (\r\n      <>\r\n        {cartContent !== null &&\r\n          cartContent.map((element, key) => {\r\n            priceTotal += element.price * element.amount;\r\n            let product_found = \"N\";\r\n\r\n            if (cartPurposes !== null) {\r\n              let product = cartPurposes.find(\r\n                (products) => products.purpose_id === element.product\r\n              );\r\n\r\n              if (typeof product !== \"undefined\") {\r\n                product_found = \"Y\";\r\n                priceReal += element.price * element.amount;\r\n              }\r\n              // console.log(\"product:\", product);\r\n            }\r\n\r\n            //   if (typeof product !== \"undefined\") {\r\n            //     product_found = product.title;\r\n            //   }\r\n            // }\r\n            return (\r\n              <div key={key}>\r\n                <div>product: {element.product}</div>\r\n                <div>price: {element.price}</div>\r\n                <div>amount: {element.amount}</div>\r\n                <div>found: {product_found}</div>\r\n                <br />\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        <div>Total: {format(priceTotal)}</div>\r\n        <div>Real: {format(priceReal)}</div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const cart = typeof externalRequest.cart ? externalRequest.cart : \"\";\r\n    // <div>External request: {JSON.stringify(externalRequest)}</div>\r\n    return (\r\n      <Card title={t(\"Checkout\")}>\r\n        <div>\r\n          <Cart />\r\n        </div>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ValidateEmail\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    // validateTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    language,\r\n  } = props.barrelGetters;\r\n  const { setValidateTokenEmail } = props.barrelSetters;\r\n  const { getUrlParam, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Hooks\r\n    ============================================================================ */\r\n\r\n  // setToken(getUrlParam(\"token\"));\r\n  // setEmail(getUrlParam(\"email\"));\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenEmail(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (data) => {\r\n    // const vte = JSON.parse(validateTokenEmail);\r\n    // if (vte === null) return;\r\n    // const { token, email } = vte;\r\n    // console.log(data, validationTokenEmail);\r\n    sendRequest({\r\n      req: \"resend validate email token\",\r\n      data: {\r\n        token: validationTokenEmail.token,\r\n        email: validationTokenEmail.email,\r\n        language,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const queryString = window.location.search;\r\n    // const urlParams = new URLSearchParams(queryString);\r\n\r\n    return token === null ? (\r\n      <>\r\n        <h4>{t(\"A verification link has been sent to your email account.\")}</h4>\r\n        <hr />\r\n        <p>\r\n          {t(\r\n            \"Please click on the link that has just been sent to your email account\"\r\n          )}\r\n        </p>\r\n        {validationTokenEmailResent < 5 && (\r\n          <>\r\n            <br />\r\n            <h5>{t(\"Didn't receive email?\")}</h5>\r\n\r\n            <SubmitButton\r\n              {...args}\r\n              caption={t(\"Submit\")}\r\n              visible={true}\r\n              marginTop={20}\r\n              request={\"resend validate email token\"}\r\n              namespace={props.namespace}\r\n              onSubmit={handleSubmit}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    ) : (\r\n      <div className=\"text-center\">\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"border\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={false}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ChangePassword\",\r\n    request: \"change password\",\r\n    email: null,\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([\r\n    passwordResetTokenValidated === true ? \"SignUp\" : \"ChangePassword\",\r\n  ]); // adjust namespace\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.email = passwordResetTokenEmail;\r\n    // console.log(data);\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ChangePasswordForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Password */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"New password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  if (passwordResetTokenValidated === true) {\r\n    // if (true) {\r\n    return (\r\n      <Formik\r\n        component={ChangePasswordForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          password: \"\",\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    // if (passwordResetTokenValidated === false)\r\n    return <>{t(\"Awaiting validation\")}</>;\r\n    // } else {\r\n    //   // null\r\n    //   return <>How did you land here???</>;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(\"Logout\");\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info, language } = props.barrelGetters;\r\n  const { setLanguage, setInfo, setError } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onLogOut } = props.barrelEventHandlers;\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Save vars\r\n     */\r\n    const tempError = error;\r\n    const tempInfo = info;\r\n    const tempLanguage = language;\r\n    // const tempSessionTimeoutApplied = sessionTimeoutApplied;\r\n\r\n    /**\r\n     * Log out\r\n     */\r\n    onLogOut();\r\n\r\n    /**\r\n     * Restore vars\r\n     */\r\n    setLanguage(tempLanguage);\r\n    // setSessionTimeoutApplied(tempSessionTimeoutApplied);\r\n    // onSessionStart();\r\n    // onSessionReset();\r\n\r\n    // console.log(\"tempInfo: \", tempInfo);\r\n\r\n    // if (tempError !== null) {\r\n    //   showMessage(tempError, \"error\");\r\n    // } else {\r\n    //   if (tempInfo !== null) {\r\n    //     showMessage(tempInfo, \"info\");\r\n    //   }\r\n    // }\r\n\r\n    if (tempError !== null) {\r\n      // showMessage(tempError, \"error\");\r\n      setError(JSON.stringify(tempError));\r\n    } else {\r\n      setError(null);\r\n    }\r\n\r\n    if (tempInfo !== null) {\r\n      // showMessage(tempInfo, \"info\");\r\n      setInfo(JSON.stringify(tempInfo));\r\n    } else {\r\n      setInfo(null);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, []); // JSON.stringify(error), JSON.stringify(info) - logOut\r\n\r\n  return (\r\n    <>\r\n      <h4>{t(\"See you soon\")}</h4>\r\n      <hr />\r\n\r\n      <br />\r\n      <p className=\"text-center\">\r\n        <a href=\"/\">{t(\"Sign in\")}</a>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n  * Default export\r\n  ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ResetPassword\", request: \"reset password\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { language, passwordResetEmail } = props.barrelGetters;\r\n  const {\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetEmail,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getUrlParam } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  const refEmail = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    const tempRefEmail = refEmail.current;\r\n    return () => {\r\n      if (tempRefEmail !== null && passwordResetEmail !== tempRefEmail.value)\r\n        setPasswordResetEmail(tempRefEmail.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenPasswordReset(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n    * Event listeners\r\n    ============================================================================ */\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    data.language = language;\r\n    sendRequest({\r\n      req: props.request,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n  });\r\n\r\n  const passwordResetForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <h3>{t(\"Reset password\")}</h3>\r\n\r\n      {/* Email */}\r\n      <Form.Group controlId=\"validationFormikEmail\">\r\n        <Form.Label>{t(\"Email address\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            ref={refEmail}\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n\r\n  // return (\r\n  //   <Formik\r\n  //     component={passwordResetForm}\r\n  //     validationSchema={schema}\r\n  //     onSubmit={onSubmit}\r\n  //     initialValues={{\r\n  //       email: \"\",\r\n  //     }}\r\n  //   />\r\n  // );\r\n\r\n  return token === null ? (\r\n    <Formik\r\n      component={passwordResetForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        email: passwordResetEmail,\r\n      }}\r\n    />\r\n  ) : (\r\n    <div className=\"text-center\">\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n        hidden={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Leads.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n    * User imports\r\n    ============================================================================ */\r\nimport Alert from \"../alert\";\r\nimport LanguageSelector from \"../language-selector\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n      * Default Properties\r\n      ============================================================================ */\r\n  let defaults = { namespace: \"Leads\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const { signedIn, language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n      * Destructured vars\r\n      ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n  // const appClass = \"App\";\r\n\r\n  /**\r\n      * Functions\r\n      ============================================================================ */\r\n  const getJSX = () => {\r\n    let leadFile = null;\r\n    switch (window.location.pathname) {\r\n      case \"/\":\r\n      case \"/sign-in\":\r\n        leadFile = \"LeadLogIn.js\";\r\n        break;\r\n\r\n      case \"/sign-up\":\r\n        leadFile = \"LeadSignUp.js\";\r\n        break;\r\n\r\n      default:\r\n        leadFile = \"LeadLogIn.js\";\r\n        break;\r\n    }\r\n\r\n    const ExternalFile =\r\n      leadFile !== null\r\n        ? React.lazy(() => import(`../locale/${language}/leads/${leadFile}`))\r\n        : \"\";\r\n\r\n    return (\r\n      <div className={appClass} style={{ padding: \"0 0% 0 7%\" }}>\r\n        {/**\r\n         * The alert\r\n         */}\r\n        <Alert data={args} />\r\n\r\n        {/**\r\n         * Wrapper for the main window\r\n         */}\r\n        <div className={wrapperClass} style={{}}>\r\n          {/**\r\n           * Top margin of the main window (only for >= sm)\r\n           */}\r\n          <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n          {/**\r\n           * The main window\r\n           */}\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              background: \"Transparent\",\r\n              boxShadow: \"none\",\r\n              paddingRight: \"4rem\",\r\n            }}\r\n          >\r\n            <ErrorBoundary>\r\n              <ExternalFile {...args} />\r\n            </ErrorBoundary>\r\n\r\n            {/**\r\n             * Footer\r\n             */}\r\n            <div className=\"text-center\">\r\n              <span style={{}}>\r\n                <LanguageSelector {...args} />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n      * Return\r\n      ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport { useTimeout } from \"../../../utils/useTimeout\";\r\nimport Routes from \"./Routes\";\r\nimport Leads from \"../../leads\";\r\n\r\n/**\r\n * Component: Main\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const {\r\n    session,\r\n    serverResponseReceived,\r\n    signedIn,\r\n    userData,\r\n    dailyAllowanceDispatched,\r\n    accountNumber,\r\n    externalRequest,\r\n    cartContent,\r\n    validateTokenEmail,\r\n    passwordResetTokenValidated,\r\n    validateTokenPasswordReset,\r\n    connected,\r\n    isExternalRequest,\r\n    clearRefs,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRequestTimedOut,\r\n    setUpdateInterval,\r\n    setDailyAllowanceDispatched,\r\n    setRequest,\r\n    setIsExternalRequest,\r\n    setUserEditorFirstname,\r\n    setUserEditorLastname,\r\n    setUserEditorEmail,\r\n    setUserEditorPassword,\r\n\r\n    // Currency registration\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n\r\n    // Business registration\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n\r\n    // Purpose registration\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationKeywords,\r\n\r\n    // Contact\r\n    setContactSubject,\r\n    setContactMessage,\r\n\r\n    // Date range\r\n    setDateRangeStart,\r\n    setDateRangeEnd,\r\n\r\n    // Search\r\n    setSearch,\r\n\r\n    //\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // processUserResponse,\r\n    getIP,\r\n    getCart,\r\n    getCartPurposes,\r\n    // updateLastSeenUser,\r\n    getAccountData,\r\n    sendRequest,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    showMessage,\r\n  } = props.barrelFunctions;\r\n  const {\r\n    onRedirect,\r\n    onSessionStart,\r\n    // onSessionEnd,\r\n  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  /** \r\n   * Effect hooks\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On mount / on unmount\r\n   */\r\n  useEffect(() => {\r\n    getIP();\r\n\r\n    getCart();\r\n\r\n    return () => {\r\n      // on unmount\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * On session ID change\r\n   */\r\n  useEffect(() => {\r\n    if (session === null) return;\r\n\r\n    onSessionStart();\r\n\r\n    // eslint-disable-next-line\r\n  }, [session]);\r\n\r\n  /**\r\n   * On connected\r\n   */\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n  }, [connected]);\r\n\r\n  /**\r\n   * On request timeout\r\n   */\r\n  useTimeout(\r\n    () => {\r\n      setRequestTimedOut(true);\r\n      setRequest(null);\r\n      showMessage(\"REQUEST_EXPIRED\", \"info\");\r\n    },\r\n    serverResponseReceived === false ? 7000 : -1 // 7 sec till socket request timeout\r\n  );\r\n\r\n  /**\r\n   * Map user data to user editor vars\r\n   */\r\n  useEffect(() => {\r\n    if (userData === null) return;\r\n    setUserEditorFirstname(userData.firstname);\r\n    setUserEditorLastname(userData.lastname);\r\n    setUserEditorEmail(userData.email);\r\n    setUserEditorPassword(\"\");\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(userData)]);\r\n\r\n  /**\r\n   * On signed in status change\r\n   */\r\n  useEffect(() => {\r\n    if (!signedIn) return;\r\n\r\n    setUpdateInterval(-1);\r\n\r\n    // Dispatch daily allowance\r\n    if (accountNumber !== null && !dailyAllowanceDispatched) {\r\n      getAccountData();\r\n      sendRequest({\r\n        req: \"dispatch daily allowance\",\r\n        data: { uid: accountNumber },\r\n      });\r\n      setDailyAllowanceDispatched(true);\r\n    }\r\n\r\n    /**\r\n     * Handle external request\r\n     */\r\n    // let redirectTarget;\r\n    if (accountNumber !== null) {\r\n      if (isExternalRequest) {\r\n        // redirectTarget = \"/auth\";\r\n        setIsExternalRequest(false);\r\n        onRedirect(\"/auth\");\r\n      }\r\n    } else {\r\n      onRedirect(\"/account-registration\");\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [signedIn]);\r\n\r\n  /**\r\n   * On account number change\r\n   */\r\n  useEffect(() => {\r\n    if (accountNumber === null) return;\r\n\r\n    // eslint-disable-next-line\r\n  }, [accountNumber]);\r\n\r\n  /**\r\n   * Clear refs\r\n   */\r\n  useEffect(() => {\r\n    if (clearRefs === false) return;\r\n\r\n    // Business registration\r\n    setBusinessRegistrationAddTitle(\"\");\r\n    setBusinessRegistrationAddDescription(\"\");\r\n\r\n    // Purpose registration\r\n    setPurposeRegistrationTitle(\"\");\r\n    setPurposeRegistrationDescription(\"\");\r\n    setPurposeRegistrationKeywords(\"\");\r\n\r\n    // Currency registration\r\n    setCurrencyCode(\"\");\r\n    setCurrencyName(\"\");\r\n    setCurrencyRegion(\"\");\r\n    setCurrencyNewRate(\"\");\r\n\r\n    // Contact\r\n    setContactSubject(\"\");\r\n    setContactMessage(\"\");\r\n\r\n    // Date range\r\n    setDateRangeStart(now.setDate(now.getDate() - 7));\r\n    setDateRangeEnd(\"today\");\r\n\r\n    // Search\r\n    setSearch(\"\");\r\n\r\n    setClearRefs(false);\r\n\r\n    // eslint-disable-next-line\r\n  }, [clearRefs]);\r\n\r\n  /**\r\n   * On external request\r\n   */\r\n  useEffect(() => {\r\n    if (externalRequest === null) return;\r\n\r\n    const data = {\r\n      customer: accountNumber,\r\n      cart: externalRequest.cart,\r\n    };\r\n\r\n    sendRequest({ req: \"get cart\", data: data });\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(externalRequest)]);\r\n\r\n  /**\r\n   * On cart content change\r\n   */\r\n  useEffect(() => {\r\n    if (cartContent === null) return;\r\n\r\n    getCartPurposes();\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(cartContent)]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenEmail === null) return;\r\n\r\n    sendEmailValidationRequest(JSON.parse(validateTokenEmail));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenEmail]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (passwordResetTokenValidated === null) return;\r\n\r\n    onRedirect(\"/password\");\r\n\r\n    // eslint-disable-next-line\r\n  }, [passwordResetTokenValidated]);\r\n\r\n  /**\r\n   * On password reset validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenPasswordReset === null) return;\r\n\r\n    sendPasswordResetRequest(JSON.parse(validateTokenPasswordReset));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenPasswordReset]);\r\n\r\n  const getJSX = () => {\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          <Row>\r\n            <Col xl={4} lg={6} className=\"d-none d-lg-block\" style={{}}>\r\n              <Leads {...barrels} />\r\n            </Col>\r\n            <Col lg={6} md={12}>\r\n              <Routes {...barrels} />\r\n            </Col>\r\n            <Col className=\"d-none d-xl-block\" style={{}}>\r\n              {/** Right column */}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../main/Main.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport UnderConstruction from \"../../underConstruction\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n\r\n/**\r\n * Component: Main\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass, getRedirect } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const signedIn = false;\r\n\r\n  // const { t } = useTranslation(props.namespace);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              <div>\r\n                <Alert data={barrels} />\r\n              </div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return UnderConstruction(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Build } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"UnderConstruction\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <Build style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"We are constructing\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../main/Main.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Alert from \"../../alert\";\r\nimport LanguageSelector from \"../../language-selector\";\r\nimport NotConnected from \"../../notConnected\";\r\n// import { useEventListener } from \"../../../utils/useEventListener\";\r\n\r\n/**\r\n * Component: Main\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass, getRedirect } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const signedIn = false;\r\n\r\n  // const { t } = useTranslation(props.namespace);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  // if (!signedIn) setRedirectTo(\"/sign-in\");\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        {getRedirect()}\r\n\r\n        <div className={appClass} style={{}}>\r\n          {/**\r\n           * Wrapper for the main window\r\n           */}\r\n          <div className={wrapperClass} style={{}}>\r\n            {/**\r\n             * Top margin of the main window (only for >= sm)\r\n             */}\r\n            <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n            {/**\r\n             * The main window\r\n             */}\r\n            <div className={innerClass}>\r\n              {/**\r\n               * Top padding of the main window\r\n               */}\r\n              <div style={{ height: \"16px\" }}></div>\r\n\r\n              {/**\r\n               * The alert\r\n               */}\r\n              <div>\r\n                <Alert data={barrels} />\r\n              </div>\r\n\r\n              {/**\r\n               * Routes\r\n               */}\r\n              <Switch>\r\n                {/**\r\n                 * Route: Home\r\n                 */}\r\n\r\n                <Route\r\n                  path=\"/\"\r\n                  component={() => {\r\n                    return NotConnected(barrels);\r\n                  }}\r\n                />\r\n              </Switch>\r\n\r\n              {/**\r\n               * Footer\r\n               */}\r\n              <div className=\"text-center\">\r\n                <span>\r\n                  <LanguageSelector {...barrels} />\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { PowerOff } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"NotConnected\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <PowerOff style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"Not connected\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport config from \"./config\";\r\nimport openSocket from \"socket.io-client\";\r\n// import { useTimeout } from \"./useTimeout\";\r\n\r\nlet socket = openSocket.connect(config.uri.ENDPOINT, {\r\n  secure: true,\r\n  reconnect: true,\r\n});\r\n\r\n/**\r\n * Send request to the server\r\n * @param {*} param0\r\n */\r\nexport const sendData = (data, debug = false) => {\r\n  if (debug) console.log(`request: ${data.req}`, data);\r\n\r\n  // No data - do not send\r\n  // if (req.length === 0) return false;\r\n\r\n  // useTimeout(() => {\r\n  //   console.log(\"Socket timeout\");\r\n  // }, 3000);\r\n\r\n  socket.emit(`onDataReceived`, data);\r\n  return true;\r\n};\r\n\r\n// Start a session\r\nexport const startSession = (data, session, debug = false) => {\r\n  // console.log(\"startSession\");\r\n  if (debug) console.log(`request: start session`, data, session);\r\n\r\n  socket.emit(`start session`, {\r\n    data: data,\r\n    session: session,\r\n    req: \"start session\",\r\n  });\r\n};\r\n\r\n// End the session\r\nexport const endSession = (data, session, debug = false) => {\r\n  if (debug) console.log(`request: end session`, data, session);\r\n  socket.emit(`end session`, {\r\n    // char: data,\r\n    data: data,\r\n    // uid: uid,\r\n    session: session,\r\n    req: \"end session\",\r\n  });\r\n};\r\n\r\n// Custom hook: useSocket\r\nexport const useSocket = (callback) => {\r\n  const [responseData, setResponseData] = useState(null);\r\n\r\n  socket.on(`onDataReceived`, (data) => {\r\n    setResponseData(data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (responseData === null) return;\r\n\r\n    callback(responseData);\r\n    // eslint-disable-next-line\r\n  }, [responseData]);\r\n};\r\n\r\nexport const useSystemSocket = (callback, instance) => {\r\n  useEffect(() => {\r\n    // socket.on(\"onDataReceived\", (data) => {\r\n    //   callback(data);\r\n    // });\r\n\r\n    /**\r\n     * System error listeners\r\n     */\r\n    socket.on(\"connect_error\", () => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_error\",\r\n          context: {},\r\n          error: { code: \"none\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"connect_timeout\", (timeout) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_timeout\",\r\n          context: {},\r\n          error: { code: \"connect_timeout\", timeout },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_error\",\r\n          context: {},\r\n          error: { code: error.type, error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_failed\", () => {\r\n      // This should never occur\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_failed\",\r\n          context: {},\r\n          error: { code: \"reconnect_failed\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"error\",\r\n          context: {},\r\n          error: { code: \"error\", error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    /**\r\n     * System status listeners\r\n     */\r\n    socket.on(\"ping\", () => {\r\n      // callback({ data: \"ping\" }, true);\r\n    });\r\n    socket.on(\"pong\", (latency) => {\r\n      // callback({ data: \"pong\", latency }, true);\r\n    });\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n      if (reason === \"io server disconnect\") {\r\n        // the disconnection was initiated by the server, you need to reconnect manually\r\n        socket.connect();\r\n      } else {\r\n        // else the socket will automatically try to reconnect\r\n      }\r\n      // Reasons:\r\n      // - \"transport close\": Server was stopped\r\n      callback({ req: \"disconnect\", status: \"success\", reason }, true);\r\n    });\r\n    socket.on(\"reconnect\", (attemptNumber) => {\r\n      // Successfully reconnected on attempt: attemptNumber\r\n      callback({ req: \"reconnect\", status: \"success\", attemptNumber }, true);\r\n    });\r\n    socket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnect attempt\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnecting\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnecting\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n  }, [instance]);\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"RESPONSE HANDLER: \", props, barrels);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    debug,\r\n    // requestTS,\r\n    // session,\r\n    // sessionTimeout,\r\n    // settings,\r\n    // loggingIn,\r\n    // isExternalRequest,\r\n    signedIn,\r\n    instance,\r\n    responseProps,\r\n    currencies,\r\n    transactions,\r\n    transferRequest,\r\n    shares,\r\n    // transactionsPerPage,\r\n    // sharesPerPage,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    // uid,\r\n    userBusinesses,\r\n    cartPurposes,\r\n    businessPurposes,\r\n    purposeShareholders,\r\n    activeBusinesPurpose,\r\n    lastInsertId,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setSession,\r\n    // setSessionTimeoutApplied,\r\n    setResponseProps,\r\n    setSettings,\r\n    setLoggingIn,\r\n    // setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setConnected,\r\n    // setLanguage,\r\n    setUserData,\r\n    setSignedIn,\r\n    // setIsExternalRequest,\r\n    setCartContent,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    // setTransferSuccess,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setCartPurposes,\r\n    setBusinessPurposes,\r\n    setCountBusinessPurposes,\r\n    setPurposeShareholders,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidateTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setActivePurposeData,\r\n    setTanRequired,\r\n    // setRedirect,\r\n    setClearRefs,\r\n  } = barrels.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    // processUserResponse,\r\n    // getBusinesses,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    showMessage,\r\n    changeLanguage,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    // endSession,\r\n    // updateLastSeenUser,\r\n    // showTanInput,\r\n    // updateTimestamp,\r\n    // hideMessage,\r\n  } = barrels.barrelFunctions;\r\n  const {\r\n    // onTransferSuccess,\r\n    onRedirect,\r\n    // onSessionTimeout,\r\n    onSessionEnd,\r\n    // onLogOut,\r\n  } = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug) console.log(`response: ${req} (${props.status})`, props, barrels);\r\n\r\n  /**\r\n   * Save response properties\r\n   * @param {string} req\r\n   * @param {string} name\r\n   * @param {string} status\r\n   */\r\n  const saveResponseProps = ({ req, name, status }) => {\r\n    const res = typeof name !== \"undefined\" ? `${req} / ${name}` : req;\r\n    if (responseProps === null) {\r\n      setResponseProps(JSON.stringify([{ res, status }]));\r\n    } else {\r\n      const tempRP = deleteObjectArrayElement(responseProps, \"res\", res);\r\n      setResponseProps(JSON.stringify([...tempRP, { res, status }]));\r\n    }\r\n  };\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (instance === props.reqData.instance &&\r\n        res === \"*\" &&\r\n        status === props.status &&\r\n        name === props.name) ||\r\n      (instance === props.reqData.instance &&\r\n        res === props.req &&\r\n        status === props.status) ||\r\n      (instance === props.reqData.instance && res === \"unknown\")\r\n    ) {\r\n      saveResponseProps({ req, name: props.name, status: props.status });\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n    if (typeof props.token !== \"undefined\") {\r\n      console.log(\"Renewing session...\");\r\n\r\n      onSessionEnd();\r\n      setSession(props.token);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Start session (success)\r\n   */\r\n  onResponse([\"start session\", \"success\"], () => {\r\n    if (signedIn) {\r\n      sendRequest({ req: \"validate session\", data: {} });\r\n    }\r\n    setConnected(true);\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * End session (success)\r\n   */\r\n  onResponse([\"end session\", \"success\"], () => {\r\n    // console.log(\"ON END SESSION\");\r\n\r\n    setConnected(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM users\") {\r\n      setUserSequence(props.results.sequence);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"success\"], () => {\r\n    // register user\r\n    sendRequest({ req: \"register account\", data: props.reqData });\r\n  });\r\n\r\n  onResponse([\"get tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n    setTanRequired(true);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get cart\", \"continue\"], () => {\r\n    if (props.name === \"SELECT carts\") {\r\n      setCartContent(props.results.content);\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"pending\"], () => {\r\n    // setTanRequired(false);\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"finished\"], () => {\r\n    if (props.name === \"UPDATE tans\") {\r\n      if (props.queryCnt > 0) {\r\n        // setTanRequired(true);\r\n        return false;\r\n      } else {\r\n        // setTanRequired(false);\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n\r\n    sendRequest({ req: transferRequest.transferType, data: transferRequest });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (pending)\r\n   */\r\n  onResponse([\"register user\", \"pending\"], () => {\r\n    // Might show some user feedback\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register user\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO users\") {\r\n      if (props.results.insertId > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    } else if (props.name === \"INSERT INTO validation_tokens\") {\r\n      // const { token, email } = props.tags;\r\n      // setValidateTokenEmail(\r\n      //   JSON.stringify({\r\n      //     token,\r\n      //     email,\r\n      //   })\r\n      // );\r\n      setValidationTokenEmail({\r\n        token: props.tags.token,\r\n        email: props.tags.email,\r\n      });\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (success)\r\n   */\r\n  onResponse([\"register user\", \"success\"], () => {\r\n    // console.log(\"REGISTER USER PROPS:\", props);\r\n    const noEmailValidation = false;\r\n\r\n    if (noEmailValidation) {\r\n      setSignedIn(true);\r\n      setSession(props.email); // TODO: Might restore\r\n      onRedirect(\"/account-registration\");\r\n      sendRequest({ req: \"get user\", data: { email: props.email } }); // to not require a log in\r\n      return false;\r\n    } else {\r\n      onRedirect(\"/validate-email\");\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"continue\"], () => {\r\n    if (props.name === \"SELECT validation_tokens\") {\r\n      setValidationTokenEmailResent(props.results.resent);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"continue\"], () => {\r\n    if (props.name === \"UPDATE validation tokens\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        // onRedirect(\"/sign-in\");\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (props.name === \"UPDATE users\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        onRedirect(\"/sign-in\");\r\n        return true;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"success\"], () => {\r\n    setValidateTokenEmail(null); // email validation token not needed any more + prevent the unnecessary resend\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"validate password reset token\", \"continue\"], () => {\r\n  //   if (props.name === \"UPDATE validation tokens\") {\r\n  //     if (props.results.affectedRows > 0) {\r\n  //       // onRedirect(\"/password\");\r\n  //       setPasswordResetTokenValidated(true);\r\n  //       return true;\r\n  //     } else {\r\n  //       // No row was inserted - an error was returned\r\n  //       return true;\r\n  //     }\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"validate password reset token\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(true);\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get URI settings (continue)\r\n   */\r\n  onResponse([\"get uri settings\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM uri_settings\") {\r\n      const results = JSON.parse(props.results.settings);\r\n\r\n      // console.log(\"results.settings\", results);\r\n\r\n      setSettings(JSON.stringify(results));\r\n\r\n      // Force single currency\r\n      if (\r\n        typeof results[\"currency\"] !== \"undefined\" &&\r\n        results[\"currency\"] !== null\r\n      ) {\r\n        const abbr = results[\"currency\"];\r\n        // setCurrencyAbbr(abbr);\r\n        sendRequest({\r\n          req: \"register user currency\",\r\n          data: { email: userData.email, currency_id: abbr },\r\n        });\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user currency (success)\r\n   */\r\n  onResponse([\"register user currency\", \"success\"], () => {\r\n    setCurrencyAbbr(props.reqData.currency_id);\r\n    // return false;\r\n  });\r\n\r\n  /**\r\n   * Sign in user (continue)\r\n   */\r\n  onResponse([\"sign in user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      /**\r\n       * Validated user\r\n       */\r\n      if (props.results.status === 1) {\r\n        setUserData(JSON.stringify(props.results));\r\n        setAccountNumber(props.results.uid);\r\n        // setSession(props.results.email); // TODO: Might restore\r\n        setCurrencyAbbr(props.results.currency_abbr);\r\n        setCurrencyRate(\r\n          isNaN(props.results.currency_rate) ? 1 : props.results.currency_rate\r\n        );\r\n\r\n        changeLanguage(props.results.language);\r\n\r\n        return false;\r\n\r\n        /**\r\n         * Not yet validated user\r\n         */\r\n      } else if (props.results.status === 0) {\r\n        onRedirect(\"/validate-email\");\r\n        return true;\r\n\r\n        /**\r\n         * Suspended user\r\n         */\r\n      } else if (props.results.status === 2) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_SUSPENDED\", \"error\");\r\n        return true;\r\n\r\n        /**\r\n         * Deleted user\r\n         */\r\n      } else if (props.results.status === 3) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_DELETED\", \"error\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Sign in user (finished)\r\n   */\r\n  onResponse([\"sign in user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt > 0) {\r\n        return false;\r\n      } else {\r\n        showMessage(\"INVALID_SIGN_IN\", \"error\");\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"sign in user\", \"success\"], () => {\r\n    setSignedIn(true);\r\n    setLoggingIn(false);\r\n    onSessionEnd();\r\n    setSession(props.token);\r\n    setRedirectTo(\"/balance\");\r\n\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"update last seen user\", \"success\"], () => {\r\n  //   // onSessionEnd();\r\n  //   // setSession(props.token); // TODO: Might restore\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Update user (success)\r\n   */\r\n  onResponse([\"update user\", \"success\"], () => {\r\n    sendRequest({ req: \"get user\", data: { email: userData.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user (continue)\r\n   */\r\n  onResponse([\"get user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUserData(JSON.stringify(props.results));\r\n      setUID(props.results.uid);\r\n      setAccountNumber(props.results.uid);\r\n      if (accountNumber === null && props.results.uid !== null) {\r\n        setRedirectTo(\"/summary\");\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user (finished)\r\n   */\r\n  onResponse([\"get user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 1) {\r\n        // exactly one user found - all is good\r\n        return false;\r\n      } else if (props.queryCnt === 0) {\r\n        // Something wrong with (accessing) the user data\r\n        // Probable causes:\r\n        // - user was deleted from the DB\r\n        // - user status was set to >= 2\r\n        // - multiple users with the same email address, most improbable (db constraint)\r\n        // - user changed the email address or password\r\n        setRedirectTo(\"/sign-out\");\r\n        // showMessage(\"INVALID_DATA\", \"error\");\r\n        return true;\r\n      }\r\n      return true;\r\n    }\r\n    // if (props.rowNum === 1) {\r\n    //   return true;\r\n    // } else {\r\n    //   // Something wrong with (accessing) the user data\r\n    //   // Probable causes:\r\n    //   // - user was deleted from the DB\r\n    //   // - user status was set to >= 2\r\n    //   // - multiple users with the same email address, most improbable (db constraint)\r\n    //   // - user changed the email address or password\r\n    //   // onLogOut();\r\n    //   setRedirectTo(\"/sign-out\");\r\n    //   // showMessage(\"INVALID_DATA\", \"error\");\r\n    //   return true;\r\n    // }\r\n  });\r\n\r\n  onResponse([\"get user\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (continue)\r\n   */\r\n  onResponse([\"get user businesses\", \"continue\"], () => {\r\n    if (props.name === \"SELECT businesses\") {\r\n      const business = props.results;\r\n      const { business_id } = business;\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([business]));\r\n        getBusinessPurposes(business_id, 0, 1);\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, business]));\r\n      }\r\n    } else if (props.name === \"COUNT businesses\") {\r\n      setCountBusinesses(props.results.count_businesses);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (finished)\r\n   */\r\n  onResponse([\"get user businesses\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    setUserBusinessesLoaded(true);\r\n    setRedirectTo(\"/my-business\");\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get user businesses\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (continue)\r\n   */\r\n  onResponse([\"get cart purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (cartPurposes === null) {\r\n        setCartPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setCartPurposes(JSON.stringify([...cartPurposes, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      // setCartPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (success)\r\n   */\r\n  onResponse([\"get cart purposes\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (continue)\r\n   */\r\n  onResponse([\"get business purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (businessPurposes === null) {\r\n        setBusinessPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setBusinessPurposes(\r\n          JSON.stringify([...businessPurposes, props.results])\r\n        );\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      setCountBusinessPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (finished)\r\n   */\r\n  onResponse([\"get business purposes\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (continue)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"continue\"], () => {\r\n    if (props.name === \"SELECT shares\") {\r\n      if (purposeShareholders === null) {\r\n        setPurposeShareholders(JSON.stringify([props.results]));\r\n      } else {\r\n        setPurposeShareholders(\r\n          JSON.stringify([...purposeShareholders, props.results])\r\n        );\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (finished)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user business by id (continue)\r\n   */\r\n  // onResponse([\"get business by id\", \"continue\"], () => {\r\n  //   if (userBusinesses === null) {\r\n  //     setUserBusinesses(JSON.stringify([props.results]));\r\n  //   } else {\r\n  //     setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"get business by id\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.name === \"SELECT businesses\") {\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([props.results]));\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business by id (finished)\r\n   */\r\n  onResponse([\"get business by id\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.queryCnt > 0) {\r\n      // getting business was successful - query returned results\r\n      return false;\r\n    } else {\r\n      console.log(\"Error getting business by id\");\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get business by id\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (continue)\r\n   */\r\n  onResponse([\"get purpose by id\", \"continue\"], () => {\r\n    /**\r\n     * Replace the purpose if it is already there\r\n     */\r\n    const index = getObjectArrayElementIndex(\r\n      businessPurposes,\r\n      \"purpose_id\",\r\n      props.results.purpose_id\r\n    );\r\n    if (index > -1) {\r\n      businessPurposes.splice(index, 1);\r\n      let temp = [...businessPurposes, props.results];\r\n      temp = sortObjectArray(temp, \"title\");\r\n      setBusinessPurposes(JSON.stringify(temp));\r\n      setActivePurposeData(JSON.stringify(props.results));\r\n\r\n      /**\r\n       * ... otherwise add the purpose\r\n       */\r\n    } else {\r\n      if (props.name === \"SELECT purposes\") {\r\n        if (businessPurposes === null) {\r\n          setBusinessPurposes(JSON.stringify([props.results]));\r\n        } else {\r\n          setBusinessPurposes(\r\n            JSON.stringify([...businessPurposes, props.results])\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (finished)\r\n   */\r\n  onResponse([\"get purpose by id\", \"finished\"], () => {\r\n    if (props.queryCnt < 1) {\r\n      // Something went wrong\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (success)\r\n   */\r\n  onResponse([\"get purpose by id\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (continue)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"continue\"], () => {\r\n    if (purposeShareholders === null) {\r\n      setPurposeShareholders(JSON.stringify([props.results]));\r\n    } else {\r\n      setPurposeShareholders(\r\n        JSON.stringify([...purposeShareholders, props.results])\r\n      );\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (finished)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Upload file (ready)\r\n   */\r\n  onResponse([\"upload file\", \"continue\"], () => {\r\n    // console.log(\"UPLOAD FILE =========== \");\r\n\r\n    // if (props.name === \"SELECT 1\") {\r\n    // setAccountPhotoPath(props + \"?r=\" + Math.random());\r\n    setAccountPhotoPath(Date.now()); // ok\r\n    return false;\r\n    // }\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"finished\"], () => {\r\n    if (props.name === \"SELECT 1\") {\r\n      if (props.queryCnt === 0) {\r\n        // something went wrong\r\n        // setAccountPhotoPath(\"ok\");\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"continue\"], () => {\r\n    if (props.results.affectedRows < 1) {\r\n      // error registering account\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"INVALID_DATA\", \"error\");\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"success\"], () => {\r\n    // getAccountData();\r\n    sendRequest({ req: \"get user\", data: { email: props.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (continue)\r\n   */\r\n  onResponse([\"get account data\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUID(props.results.uid);\r\n      setUserData(JSON.stringify(props.results));\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (finished)\r\n   */\r\n  onResponse([\"get account data\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 0) {\r\n        // Account not reachable\r\n        // - user session timed out\r\n        showMessage(\"SESSION_TIMED_OUT\", \"info\", false);\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get account data\", \"success\"], () => {\r\n    if (userData === null) return true;\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2S\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (continue)\r\n   */\r\n  onResponse([\"transfer U2S\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (success)\r\n   */\r\n  onResponse([\"transfer U2S\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2U\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (continue)\r\n   */\r\n  onResponse([\"transfer U2U\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (success)\r\n   */\r\n  onResponse([\"transfer U2U\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2B\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (continue)\r\n   */\r\n  onResponse([\"transfer U2B\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (success)\r\n   */\r\n  onResponse([\"transfer U2B\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register business\r\n   ============================================================================================*/\r\n  onResponse([\"register business\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    if (props.name === \"INSERT INTO businesses\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register business\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    // <ModalConfirm\r\n    //   title=\"Add Shareholders\"\r\n    //   message=\"Do you want to add yourself as a shareholder?\"\r\n    // />;\r\n\r\n    setClearRefs(true);\r\n\r\n    showMessage(\"REGISTER_BUSINESS_SUCCESS\", \"info\", false);\r\n\r\n    sendRequest({\r\n      req: \"get business by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    // getBusinesses();\r\n    return false;\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"register currency\", \"continue\"], () => {\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    if (props.results.insertId > 0) {\r\n      setLastInsertId(props.results.insertId);\r\n\r\n      return false;\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register currency\", \"success\"], () => {\r\n    showMessage(\"REGISTER_CURRENCY_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get currency by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (continue)\r\n   */\r\n  onResponse([\"get currencies\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT currencies\") {\r\n      setCountCurrencies(props.results.count_currencies);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (finished)\r\n   */\r\n  onResponse([\"get currencies\", \"finished\"], () => {\r\n    // setRedirectTo(\"/currency\");\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Find currencies (continue)\r\n  //  */\r\n  // onResponse([\"find currencies\", \"continue\"], () => {\r\n  //   // console.log(\"PROPS NAME:\", props.name);\r\n\r\n  //   if (props.name === \"SELECT currencies\") {\r\n  //     if (currencies === null) {\r\n  //       setCurrencies(JSON.stringify([props.results]));\r\n  //     } else {\r\n  //       setCurrencies(JSON.stringify([...currencies, props.results]));\r\n  //     }\r\n  //   } else if (props.name === \"COUNT currencies\") {\r\n  //     setCountCurrencies(props.results.count_currencies);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get currency by id (continue)\r\n   */\r\n  onResponse([\"get currency by id\", \"continue\"], () => {\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get currency by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transactions (continue)\r\n   */\r\n  onResponse([\"get transactions\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT transactions\") {\r\n      if (transactions === null) {\r\n        setTransactions(JSON.stringify([props.results]));\r\n      } else {\r\n        setTransactions(JSON.stringify([...transactions, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT transactions\") {\r\n      setCountTransactions(props.results.count_transaction_positions);\r\n      // } else if (props.name === \"VALIDATE SESSION\") {\r\n      //   if (typeof props.token !== \"undefined\") {\r\n      //     console.log(\"RESET SESSION\");\r\n      //     onSessionEnd();\r\n      //     // setSession(props.newToken);\r\n      //     setSession(props.token);\r\n      //   }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get transactions (finished)\r\n   */\r\n  onResponse([\"get transactions\", \"finished\"], () => {\r\n    setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Find transactions (continue)\r\n  //  */\r\n  // onResponse([\"find transactions\", \"continue\"], () => {\r\n  //   // console.log(\"PROPS NAME:\", props.name);\r\n\r\n  //   if (props.name === \"SELECT transactions\") {\r\n  //     if (transactions === null) {\r\n  //       setTransactions(JSON.stringify([props.results]));\r\n  //     } else {\r\n  //       setTransactions(JSON.stringify([...transactions, props.results]));\r\n  //     }\r\n  //   } else if (props.name === \"COUNT transactions\") {\r\n  //     setCountTransactions(props.results.count_transaction_positions);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get shares (continue)\r\n   */\r\n  onResponse([\"get shares\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT shares\") {\r\n      if (shares === null) {\r\n        setShares(JSON.stringify([props.results]));\r\n      } else {\r\n        setShares(JSON.stringify([...shares, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT shares\") {\r\n      setCountShares(props.results.count_shares);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shares (finished)\r\n   */\r\n  onResponse([\"get shares\", \"finished\"], () => {\r\n    // setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transaction by id (continue)\r\n   */\r\n  onResponse([\"get transaction by id\", \"continue\"], () => {\r\n    if (transactions === null) {\r\n      setTransactions(JSON.stringify([props.results]));\r\n    } else {\r\n      setTransactions(JSON.stringify([...transactions, props.results]));\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get transaction by id\", \"finished\"], () => {\r\n    getAccountData();\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"send message\", \"success\"], () => {\r\n    setClearRefs(true);\r\n    showMessage(\"SEND_MESSAGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"continue\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get purpose by id\",\r\n    //   data: { id: props.results.insertId },\r\n    // });\r\n    if (props.name === \"INSERT INTO purposes\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"success\"], () => {\r\n    showMessage(\"REGISTER_PURPOSE_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: lastInsertId, language: language },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"update purpose property\", \"success\"], () => {\r\n    showMessage(\"UPDATE_PURPOSE_SUCCESS\", \"info\", false);\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: props.reqData.id, language: language },\r\n    });\r\n    // getBusinessPurposes(props.reqData.business_id, 0, 1);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"continue\"], () => {\r\n    if (props.results.insertId > 0) {\r\n      // showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\");\r\n\r\n      // return sendRequest({\r\n      //   req: \"get shareholder by id\",\r\n      //   data: { id: props.results.insertId },\r\n      // });\r\n      setLastInsertId(props.results.insertId);\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"success\"], () => {\r\n    showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\", false);\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"change share\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    // getPurposeShareholders(activeBusinesPurpose);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"remove shareholder\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"reset password\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"change password\", \"success\"], () => {\r\n    // TOTO: If NO_ROWS_CHANGE - probably the currently saved password was submitted\r\n    setPasswordResetTokenValidated(null);\r\n    setPasswordResetTokenEmail(null);\r\n    onRedirect(\"/sign-in\");\r\n    showMessage(\"PASSWORD_CHANGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"unknown\"], () => {\r\n  //   if (\r\n  //     status === \"pending\" ||\r\n  //     status === \"continue\" ||\r\n  //     status === \"finished\" ||\r\n  //     status === \"success\"\r\n  //   ) {\r\n  //     return false;\r\n  //   } else {\r\n  //     showMessage(`${req}: ${status}`, \"info\");\r\n  //     return true;\r\n  //   }\r\n  // });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport {\r\n  // BrowserRouter as Router,\r\n  // Switch,\r\n  // Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport i18n from \"./translations/i18n\";\r\nimport config from \"./utils/config\";\r\nimport { useStickyState } from \"./utils/state\";\r\nimport Main from \"./components/pages/main\";\r\nimport UnderConstruction from \"./components/pages/underConstruction\";\r\nimport NotConnected from \"./components/pages/notConnected\";\r\n\r\nimport {\r\n  useSocket,\r\n  useSystemSocket,\r\n  sendData,\r\n  startSession,\r\n  endSession,\r\n} from \"./utils/sockets\";\r\n// import { useInterval } from \"./utils/useInterval\";\r\n// import { useTimeout } from \"./utils/useTimeout\";\r\nimport requestHandler from \"./utils/requestHandler\";\r\nimport userErrorHandler from \"./utils/userErrorHandler\";\r\nimport userResponseHandler from \"./utils/userResponseHandler\";\r\nimport systemErrorHandler from \"./utils/systemErrorHandler\";\r\nimport systemResponseHandler from \"./utils/systemResponseHandler\";\r\n// import {\r\n//   useSocket,\r\n//   sendData,\r\n//   startSession,\r\n//   endSession,\r\n// } from \"../../../utils/sockets\";\r\n// import functions from \"./barrelFunctions\";\r\n\r\n/**\r\n * Component: Dispatcher\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Dispatcher\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const isLocalhost =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\";\r\n\r\n  /** \r\n   * Hooks\r\n   ============================================================================ */\r\n  const [debug, setDebug] = useState(\r\n    isLocalhost || config.uri.SITEMODE === \"STAGING\"\r\n  );\r\n  const [loggingOut, setLoggingOut] = useState(false);\r\n  const [loggingIn, setLoggingIn] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(true);\r\n  const [request, setRequest] = useStickyState(null, \"request\");\r\n  const [serverResponseReceived, setServerResponseReceived] = useStickyState(\r\n    null,\r\n    \"serverResponseReceived\"\r\n  );\r\n  const [requestTimedOut, setRequestTimedOut] = useStickyState(\r\n    false,\r\n    \"requestTimedOut\"\r\n  );\r\n  const [instance, setInstance] = useState(Date.now());\r\n  const [session, setSession] = useStickyState(uuidv4(), \"session\");\r\n  const [settings, setSettings] = useStickyState(null, \"settings\");\r\n  const [responseProps, setResponseProps] = useStickyState(\r\n    null,\r\n    \"responseProps\"\r\n  );\r\n  const [sessionTimeout, setSessionTimeout] = useStickyState(\r\n    (!debug ? 5 : 120) * 60, // 30 | 5 * 60\r\n    \"sessionTimeout\"\r\n  );\r\n  const [connected, setConnected] = useStickyState(false, \"connected\");\r\n  const [reconnecting, setReconnecting] = useStickyState(false, \"reconnecting\");\r\n  const [ip, setIP] = useStickyState(\"\", \"ip\");\r\n  const [signedIn, setSignedIn] = useStickyState(false, \"signedIn\");\r\n  const [\r\n    dailyAllowanceDispatched,\r\n    setDailyAllowanceDispatched,\r\n  ] = useStickyState(false, \"dailyAllowanceDispatched\");\r\n  const [isExternalRequest, setIsExternalRequest] = useStickyState(\r\n    false,\r\n    \"isExternalRequest\"\r\n  );\r\n  const [externalRequest, setExternalRequest] = useStickyState(\r\n    null,\r\n    \"externalRequest\"\r\n  );\r\n  const [cartContent, setCartContent] = useStickyState(null, \"cartContent\");\r\n  const [updateInterval, setUpdateInterval] = useStickyState(\r\n    -1,\r\n    \"updateInterval\"\r\n  );\r\n  const [currencyAbbr, setCurrencyAbbr] = useStickyState(\"Z\", \"currencyAbbr\");\r\n  const [currencyRate, setCurrencyRate] = useStickyState(1.0, \"currencyRate\");\r\n  const [currencies, setCurrencies] = useStickyState(null, \"currencies\");\r\n  const [transactions, setTransactions] = useStickyState(null, \"transactions\");\r\n  const [shares, setShares] = useStickyState(null, \"shares\");\r\n  const [accordionView, setAccordionView] = useStickyState(\r\n    \"balance\",\r\n    \"accordionView\"\r\n  );\r\n  const [accordionViewCurrency, setAccordionViewCurrency] = useStickyState(\r\n    null,\r\n    \"accordionViewCurrency\"\r\n  );\r\n  const [countCurrencies, setCountCurrencies] = useStickyState(\r\n    null,\r\n    \"countCurrencies\"\r\n  );\r\n  const [countTransactions, setCountTransactions] = useStickyState(\r\n    null,\r\n    \"countTransactions\"\r\n  );\r\n  const [countShares, setCountShares] = useStickyState(null, \"countShares\");\r\n  const [activePageCurrencies, setActivePageCurrencies] = useStickyState(\r\n    1,\r\n    \"activePageCurrencies\"\r\n  );\r\n  const [activePageTransactions, setActivePageTransactions] = useStickyState(\r\n    1,\r\n    \"activePageTransactions\"\r\n  );\r\n  const [activePageShares, setActivePageShares] = useStickyState(\r\n    1,\r\n    \"activePageShares\"\r\n  );\r\n  const [currenciesPerPage, setCurrenciesPerPage] = useStickyState(\r\n    5,\r\n    \"currenciesPerPage\"\r\n  );\r\n  const [transactionsPerPage, setTransactionsPerPage] = useStickyState(\r\n    5,\r\n    \"transactionsPerPage\"\r\n  );\r\n  const [sharesPerPage, setSharesPerPage] = useStickyState(5, \"sharesPerPage\");\r\n  const [userData, setUserData] = useStickyState(null, \"userData\");\r\n  const [uid, setUID] = useStickyState(null, \"uid\");\r\n  const [accountNumber, setAccountNumber] = useStickyState(\r\n    null,\r\n    \"accountNumber\"\r\n  );\r\n  const [userSequence, setUserSequence] = useStickyState(null, \"userSequence\");\r\n  const [accountType, setAccountType] = useStickyState(null, \"accountType\");\r\n  const [userBusinesses, setUserBusinesses] = useStickyState(\r\n    null,\r\n    \"userBusinesses\"\r\n  );\r\n  const [countBusinesses, setCountBusinesses] = useStickyState(\r\n    null,\r\n    \"countBusinesses\"\r\n  );\r\n  const [businessesPerPage, setBusinessesPerPage] = useStickyState(\r\n    1,\r\n    \"businessesPerPage\"\r\n  );\r\n  const [activePageBusinesses, setActivePageBusinesses] = useStickyState(\r\n    1,\r\n    \"activePageBusinesses\"\r\n  );\r\n  const [userBusinessesLoaded, setUserBusinessesLoaded] = useStickyState(\r\n    false,\r\n    \"userBusinessesLoaded\"\r\n  );\r\n  const [activeBusiness, setActiveBusiness] = useStickyState(\r\n    null,\r\n    \"activeBusiness\"\r\n  );\r\n  const [activeBusinessID, setActiveBusinessID] = useStickyState(\r\n    null,\r\n    \"activeBusinessID\"\r\n  );\r\n\r\n  const [businessPurposes, setBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"businessPurposes\"\r\n  );\r\n\r\n  const [cartPurposes, setCartPurposes] = useStickyState(null, \"cartPurposes\");\r\n\r\n  const [countBusinessPurposes, setCountBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"countBusinessPurposes\"\r\n  );\r\n  const [businessPurposesPerPage, setBusinessPurposesPerPage] = useStickyState(\r\n    5,\r\n    \"businessPurposesPerPage\"\r\n  );\r\n  const [\r\n    activePageBusinessPurposes,\r\n    setActivePageBusinessPurposes,\r\n  ] = useStickyState(1, \"activePageBusinessPurposes\");\r\n\r\n  const [activeBusinesPurpose, setActiveBusinesPurpose] = useStickyState(\r\n    null,\r\n    \"activeBusinesPurpose\"\r\n  );\r\n\r\n  const [activePurposeData, setActivePurposeData] = useStickyState(\r\n    null,\r\n    \"activePurposeData\"\r\n  );\r\n\r\n  const [activePurposeProperty, setActivePurposeProperty] = useStickyState(\r\n    null,\r\n    \"activePurposeProperty\"\r\n  );\r\n\r\n  const [purposeShareholders, setPurposeShareholders] = useStickyState(\r\n    null,\r\n    \"purposeShareholders\"\r\n  );\r\n\r\n  const [clearRefs, setClearRefs] = useStickyState(false, \"clearRefs\");\r\n\r\n  /**\r\n   * Log in\r\n   */\r\n  const [logInEmail, setLogInEmail] = useStickyState(\"\", \"logInEmail\");\r\n  const [logInPassword, setLogInPassword] = useStickyState(\"\", \"logInPassword\");\r\n\r\n  /**\r\n   * Sign Up\r\n   */\r\n  const [signUpFirstName, setSignUpFirstName] = useStickyState(\r\n    \"\",\r\n    \"signUpFirstName\"\r\n  );\r\n  const [signUpLastName, setSignUpLastName] = useStickyState(\r\n    \"\",\r\n    \"signUpLastName\"\r\n  );\r\n  const [signUpEmail, setSignUpEmail] = useStickyState(\"\", \"signUpEmail\");\r\n  const [signUpPassword, setSignUpPassword] = useStickyState(\r\n    \"\",\r\n    \"signUpPassword\"\r\n  );\r\n\r\n  /**\r\n   * Transactions\r\n   */\r\n  const [dateRangeStart, setDateRangeStart] = useStickyState(\r\n    now.setDate(now.getDate() - 7), // new Date().fp_incr(-7),\r\n    \"dateRangeStart\"\r\n  );\r\n  const [dateRangeEnd, setDateRangeEnd] = useStickyState(\r\n    \"today\",\r\n    \"dateRangeEnd\"\r\n  );\r\n\r\n  /**\r\n   * Business registration\r\n   */\r\n  const [\r\n    businessRegistrationAddTitle,\r\n    setBusinessRegistrationAddTitle,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddTitle\");\r\n  const [\r\n    businessRegistrationAddDescription,\r\n    setBusinessRegistrationAddDescription,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddDescription\");\r\n\r\n  /**\r\n   * Purpose registration\r\n   */\r\n  const [\r\n    purposeRegistrationTitle,\r\n    setPurposeRegistrationTitle,\r\n  ] = useStickyState(\"\", \"purposeRegistrationTitle\");\r\n  const [\r\n    purposeRegistrationDescription,\r\n    setPurposeRegistrationDescription,\r\n  ] = useStickyState(\"\", \"purposeRegistrationDescription\");\r\n  const [\r\n    purposeRegistrationKeywords,\r\n    setPurposeRegistrationKeywords,\r\n  ] = useStickyState(\"\", \"purposeRegistrationKeywords\");\r\n\r\n  /**\r\n   * User editor\r\n   */\r\n  const [userEditorEditFirstname, setUserEditorEditFirstname] = useStickyState(\r\n    false,\r\n    \"userEditorEditFirstname\"\r\n  );\r\n  const [userEditorFirstname, setUserEditorFirstname] = useStickyState(\r\n    \"\",\r\n    \"userEditorFirstname\"\r\n  );\r\n  const [userEditorEditLastname, setUserEditorEditLastname] = useStickyState(\r\n    false,\r\n    \"userEditorEditLastname\"\r\n  );\r\n  const [userEditorLastname, setUserEditorLastname] = useStickyState(\r\n    \"\",\r\n    \"userEditorLastname\"\r\n  );\r\n  const [userEditorEditEmail, setUserEditorEditEmail] = useStickyState(\r\n    false,\r\n    \"userEditorEditEmail\"\r\n  );\r\n  const [userEditorEmail, setUserEditorEmail] = useStickyState(\r\n    \"\",\r\n    \"userEditorEmail\"\r\n  );\r\n  const [userEditorEditPassword, setUserEditorEditPassword] = useStickyState(\r\n    false,\r\n    \"userEditorEditPassword\"\r\n  );\r\n  const [userEditorPassword, setUserEditorPassword] = useStickyState(\r\n    \"\",\r\n    \"userEditorPassword\"\r\n  );\r\n  const [\r\n    userEditorPasswordVisible,\r\n    setUserEditorPasswordVisible,\r\n  ] = useStickyState(false, \"userEditorPasswordVisible\");\r\n  const [\r\n    userEditorSubmitButtonVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  ] = useStickyState(false, \"userEditorSubmitButtonVisible\");\r\n\r\n  /**\r\n   * Password reset\r\n   */\r\n  const [passwordResetEmail, setPasswordResetEmail] = useStickyState(\r\n    \"\",\r\n    \"passwordResetEmail\"\r\n  );\r\n\r\n  /**\r\n   * TAN input\r\n   */\r\n  const [tanInputTAN, setTanInputTAN] = useStickyState(\"\", \"tanInputTAN\");\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  const [search, setSearch] = useStickyState(\"\", \"search\");\r\n  const [searchTransactions, setSearchTransactions] = useStickyState(\r\n    \"\",\r\n    \"searchTransactions\"\r\n  );\r\n  const [searchPurposes, setSearchPurposes] = useStickyState(\r\n    \"\",\r\n    \"searchPurposes\"\r\n  );\r\n  const [searchShares, setSearchShares] = useStickyState(\"\", \"searchShares\");\r\n\r\n  /**\r\n   * Misc\r\n   */\r\n\r\n  // const [businessLoaded, setBusinessLoaded] = useState(null);\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [redirectTo, setRedirectTo] = useState(null);\r\n  const [lastInsertId, setLastInsertId] = useState(null);\r\n  // const [responseData, setResponseData] = useState(null);\r\n\r\n  const [validateTokenEmail, setValidateTokenEmail] = useState(null);\r\n  const [validateTokenPasswordReset, setValidateTokenPasswordReset] = useState(\r\n    null\r\n  );\r\n\r\n  const [\r\n    passwordResetTokenValidated,\r\n    setPasswordResetTokenValidated,\r\n  ] = useState(null);\r\n  const [passwordResetTokenEmail, setPasswordResetTokenEmail] = useState(null);\r\n\r\n  // const [tmrConnected] = useState(null);\r\n  const [validationTokenEmail, setValidationTokenEmail] = useStickyState(\r\n    null,\r\n    \"validationTokenEmail\"\r\n  ); //\r\n  const [\r\n    validationTokenEmailResent,\r\n    setValidationTokenEmailResent,\r\n  ] = useStickyState(0, \"validationTokenEmailResent\"); //\r\n  const [language, setLanguage] = useStickyState(\r\n    i18n.options.fallbackLng[0],\r\n    \"language\"\r\n  ); //\r\n  const [transferType, setTransferType] = useStickyState(\r\n    \"#u2s\",\r\n    \"transferType\"\r\n  );\r\n  const [transferRequest, setTransferRequest] = useStickyState(\r\n    null,\r\n    \"transferRequest\"\r\n  );\r\n  const [transferFromAccount, setTransferFromAccount] = useStickyState(\r\n    \"\",\r\n    \"transferFromAccount\"\r\n  );\r\n  const [transferToAccount, setTransferToAccount] = useStickyState(\r\n    \"\",\r\n    \"transferToAccount\"\r\n  );\r\n  const [transferAmount, setTransferAmount] = useStickyState(\r\n    \"\",\r\n    \"transferAmount\"\r\n  );\r\n  const [transferToUID, setTransferToUID] = useStickyState(\"\", \"transferToUID\");\r\n  const [transferToPurpose, setTransferToPurpose] = useStickyState(\r\n    \"\",\r\n    \"transferToPurpose\"\r\n  );\r\n  const [transferDescription, setTransferDescription] = useStickyState(\r\n    \"\",\r\n    \"transferDescription\"\r\n  );\r\n  const [contactSubject, setContactSubject] = useStickyState(\r\n    \"\",\r\n    \"contactSubject\"\r\n  );\r\n  const [contactMessage, setContactMessage] = useStickyState(\r\n    \"\",\r\n    \"contactMessage\"\r\n  );\r\n  const [userBirthYear, setUserBirthYear] = useStickyState(\"\", \"userBirthYear\");\r\n  const [userBirthMonth, setUserBirthMonth] = useStickyState(\r\n    \"\",\r\n    \"userBirthMonth\"\r\n  );\r\n  const [userBirthDay, setUserBirthDay] = useStickyState(\"\", \"userBirthDay\");\r\n  const [userBirthDateError, setUserBirthDateError] = useState(\r\n    \"\",\r\n    \"userBirthDateError\"\r\n  );\r\n  const [userTimezone, setUserTimezone] = useStickyState(\"\", \"userTimezone\");\r\n\r\n  const [currencyCode, setCurrencyCode] = useStickyState(\"\", \"currencyCode\");\r\n  const [currencyName, setCurrencyName] = useStickyState(\"\", \"currencyName\");\r\n  const [currencyRegion, setCurrencyRegion] = useStickyState(\r\n    \"\",\r\n    \"currencyRegion\"\r\n  );\r\n  const [currencyNewRate, setCurrencyNewRate] = useStickyState(\r\n    1.0,\r\n    \"currencyNewRate\"\r\n  );\r\n\r\n  const [tanRequired, setTanRequired] = useStickyState(false, \"tanRequired\");\r\n  // const [transferSuccess, setTransferSuccess] = useStickyState(\r\n  //   false,\r\n  //   \"transferSuccess\"\r\n  // );\r\n  const [accountPhotoPath, setAccountPhotoPath] = useState(\"\");\r\n  const [error, setError] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  const [info, setInfo] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  // const [alertVisible, setAlertVisible] = useState(false);\r\n\r\n  // const gotEvent = useEventListener();\r\n  // console.log(gotEvent);\r\n\r\n  /**\r\n   * Barrel: Getters\r\n   */\r\n  const barrelGetters = {\r\n    debug,\r\n    // instance,\r\n    loggingOut,\r\n    loggingIn,\r\n    // timestamp,\r\n    // startTimestamp,\r\n    pageLoading,\r\n    request,\r\n    serverResponseReceived,\r\n    requestTimedOut,\r\n    // requestTS,\r\n    instance,\r\n    responseProps: JSON.parse(responseProps),\r\n    // deleteResponseProp,\r\n    // lastRequest,\r\n    session,\r\n    // secureSession,\r\n    sessionTimeout,\r\n    // sessionTimeoutApplied,\r\n    settings: JSON.parse(settings),\r\n    ip,\r\n    updateInterval,\r\n    currencies: JSON.parse(currencies),\r\n    transactions: JSON.parse(transactions),\r\n    shares: JSON.parse(shares),\r\n    accordionView,\r\n    accordionViewCurrency,\r\n    countCurrencies,\r\n    countTransactions,\r\n    countShares,\r\n    activePageCurrencies,\r\n    activePageTransactions,\r\n    activePageShares,\r\n    currenciesPerPage,\r\n    transactionsPerPage,\r\n    sharesPerPage,\r\n    userData: JSON.parse(userData),\r\n    // redirect,\r\n    redirectTo,\r\n    lastInsertId,\r\n    connected,\r\n    reconnecting,\r\n    signedIn,\r\n    dailyAllowanceDispatched,\r\n    isExternalRequest,\r\n    externalRequest: JSON.parse(externalRequest),\r\n    cartContent: JSON.parse(cartContent),\r\n    currencyAbbr,\r\n    currencyRate,\r\n    // currencyStatus,\r\n    accountNumber,\r\n    userSequence,\r\n    accountType,\r\n    uid,\r\n    userBusinesses: JSON.parse(userBusinesses),\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes: JSON.parse(businessPurposes),\r\n    cartPurposes: JSON.parse(cartPurposes),\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    // purposeID,\r\n    activePurposeData: JSON.parse(activePurposeData),\r\n    purposeShareholders: JSON.parse(purposeShareholders),\r\n    clearRefs,\r\n    logInEmail,\r\n    logInPassword,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n    dateRangeStart,\r\n    dateRangeEnd,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    // purposeRegistrationCategory,\r\n    // purposeRegistrationSubcategory,\r\n    // purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n    passwordResetEmail,\r\n    tanInputTAN,\r\n    search,\r\n    searchTransactions,\r\n    searchPurposes,\r\n    searchShares,\r\n    // businessLoaded,\r\n    tanRequired,\r\n    // tmrConnected,\r\n    validateTokenEmail,\r\n    validateTokenPasswordReset,\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    transferRequest: JSON.parse(transferRequest),\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    contactSubject,\r\n    contactMessage,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n    language,\r\n    transferType,\r\n    // transferSuccess,\r\n    accountPhotoPath,\r\n    error: JSON.parse(error),\r\n    info: JSON.parse(info),\r\n    // alertVisible,\r\n  };\r\n\r\n  /**\r\n   * Barrel: Setters\r\n   */\r\n  const barrelSetters = {\r\n    setDebug,\r\n    setLoggingOut,\r\n    setLoggingIn,\r\n    // setTimestamp,\r\n    // setStartTimestamp,\r\n    setPageLoading,\r\n    setRequest,\r\n    setServerResponseReceived,\r\n    setRequestTimedOut,\r\n    // setRequestTS,\r\n    setInstance,\r\n    setResponseProps,\r\n    // setDeleteResponseProp,\r\n    // setLastRequest,\r\n    setSession,\r\n    // setSecureSession,\r\n    setSessionTimeout,\r\n    // setSessionTimeoutApplied,\r\n    setSettings,\r\n    setIP,\r\n    setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setAccordionView,\r\n    setAccordionViewCurrency,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setActivePageCurrencies,\r\n    setActivePageTransactions,\r\n    setActivePageShares,\r\n    setCurrenciesPerPage,\r\n    setTransactionsPerPage,\r\n    setSharesPerPage,\r\n    setConnected,\r\n    setReconnecting,\r\n    setLanguage,\r\n    setUserData,\r\n    // sendRequest,\r\n    setSignedIn,\r\n    setDailyAllowanceDispatched,\r\n    setIsExternalRequest,\r\n    setExternalRequest,\r\n    setCartContent,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setAccountType,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setBusinessesPerPage,\r\n    setActivePageBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setActiveBusiness,\r\n    setActiveBusinessID,\r\n    setBusinessPurposes,\r\n    setCartPurposes,\r\n    setCountBusinessPurposes,\r\n    setBusinessPurposesPerPage,\r\n    setActivePageBusinessPurposes,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePurposeData,\r\n    setPurposeShareholders,\r\n    setClearRefs,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n    setDateRangeStart,\r\n    setDateRangeEnd,\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n    setPasswordResetEmail,\r\n    setTanInputTAN,\r\n    setSearch,\r\n    setSearchTransactions,\r\n    setSearchPurposes,\r\n    setSearchShares,\r\n    setError,\r\n    setInfo,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setValidateTokenEmail,\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setContactSubject,\r\n    setContactMessage,\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n    setTanRequired,\r\n    // setTransferSuccess,\r\n    // setRedirect,\r\n    // showMessage,\r\n  };\r\n\r\n  /** \r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Sends requests to the server\r\n   * @param {string} request Request name\r\n   * @param {object} data Request data\r\n   */\r\n  const sendRequest = ({ req, data = null }) => {\r\n    if (processRequest({ req, data, session, uid: \"STA\", barrels })) {\r\n      // request processed successfully\r\n      setServerResponseReceived(false);\r\n      return true;\r\n    } else {\r\n      console.log(\"THIS SHOULD NEVER BE REACHED\");\r\n      return sendData({ req, uid: \"STA\", session, data }, debug);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Processes user request\r\n   * @param {*} param0\r\n   */\r\n  const processRequest = ({ req, data, session, uid, barrels }) => {\r\n    data.instance = instance;\r\n\r\n    // if (req !== \"update last seen user\") {\r\n    setRequest(req);\r\n    // }\r\n\r\n    return requestHandler({\r\n      req,\r\n      data,\r\n      session,\r\n      uid,\r\n      barrels,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Processes server response\r\n   *\r\n   * Chooses a handler depending on response status:\r\n   * Error or other (success | continue | finished | pending etc.)\r\n   *\r\n   * @param {*} param0\r\n   */\r\n  const processUserResponse = ({ args, barrels }) => {\r\n    return args.status === \"error\"\r\n      ? userErrorHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        })\r\n      : userResponseHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  const processSystemResponse = ({ args, barrels }) => {\r\n    // console.log(\"SYSTEM RESPONSE DATA:\", args);\r\n    return args.status === \"error\"\r\n      ? systemErrorHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        })\r\n      : systemResponseHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  /**\r\n   * Shows a messgae (error or info)\r\n   *\r\n   * @param {string} msg, Messgae text\r\n   * @param {string} type, Message type (\"error\" | \"info\")\r\n   */\r\n  const showMessage = (msg, type = \"error\", dismissible = true) => {\r\n    type === \"error\"\r\n      ? setError(JSON.stringify({ msg, dismissible }))\r\n      : setInfo(JSON.stringify({ msg, dismissible }));\r\n  };\r\n\r\n  /**\r\n   * Hides the message\r\n   */\r\n  const hideMessage = (type = null) => {\r\n    if (type === \"error\") {\r\n      setError(null);\r\n    } else if (type === \"info\") {\r\n      setInfo(null);\r\n    } else {\r\n      setError(null);\r\n      setInfo(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the object-element of an array\r\n   * @param {object array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const getArrayObject = (array, property, value) => {\r\n    if (array === null) return null;\r\n    return array.find((o) => o[property] === value);\r\n  };\r\n\r\n  /**\r\n   * Returns the current processing status of the request\r\n   * @param {string} req\r\n   */\r\n  const getRequestStatus = (req) => {\r\n    const obj = getArrayObject(barrelGetters.responseProps, \"res\", req);\r\n    if (obj === null) return \"undefined\";\r\n    return typeof obj !== \"undefined\" ? obj.status : \"undefined\";\r\n  };\r\n\r\n  /**\r\n   * Clears the current processing status of the request\r\n   * @param {string} req\r\n   */\r\n  const clearRequestStatus = (req) => {\r\n    deleteObjectArrayElement(barrelGetters.responseProps, \"res\", req);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {*} status\r\n   * @param {*} cnt\r\n   * @param {*} strLoading\r\n   * @param {*} strNotFound\r\n   */\r\n  const showRequestStatus = (\r\n    req,\r\n    cnt,\r\n    strLoading,\r\n    strNotFound,\r\n    finalStatus = \"success\"\r\n  ) => {\r\n    const status = getRequestStatus(req);\r\n    if (status === \"undefined\") return \"\";\r\n\r\n    if (status === \"undefined\" || status !== finalStatus) {\r\n      return <p className=\"text-center text-muted\">{strLoading}</p>;\r\n    } else if (status === finalStatus && cnt === 0) {\r\n      return <p className=\"text-center text-muted\">{strNotFound}</p>;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Changes the website language\r\n   */\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n    setLanguage(lng);\r\n  };\r\n\r\n  const roundTo = (n, digits) => {\r\n    let negative = false;\r\n    if (digits === undefined) {\r\n      digits = 0;\r\n    }\r\n    if (n < 0) {\r\n      negative = true;\r\n      n = n * -1;\r\n    }\r\n    const multiplicator = Math.pow(10, digits);\r\n    n = parseFloat((n * multiplicator).toFixed(11));\r\n    n = (Math.round(n) / multiplicator).toFixed(2);\r\n    if (negative) {\r\n      n = (n * -1).toFixed(2);\r\n    }\r\n    return n;\r\n  };\r\n\r\n  /**\r\n   * Format number\r\n   * @param {number} number\r\n   */\r\n  const format = (number, currency = currencyAbbr, useGrouping = true) => {\r\n    const retIntl = new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      useGrouping: useGrouping,\r\n    }).format(number * currencyRate);\r\n\r\n    if (parseFloat(number) !== 0 && number.toString().substr(0, 4) === \"0.00\")\r\n      return t(\"micro amount\");\r\n\r\n    return retIntl + \" \" + currency;\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   * @param {number} number\r\n   */\r\n  const formatPerCent = (number) => {\r\n    return (\r\n      new Intl.NumberFormat(language, {\r\n        notation: \"standard\",\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2,\r\n      }).format(number) + \"%\"\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   *\r\n   * @param {number} number\r\n   */\r\n  const formatExchangeRate = (number) => {\r\n    return new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 5,\r\n      maximumFractionDigits: 5,\r\n    }).format(number);\r\n  };\r\n\r\n  /**\r\n   * Parses a number according to a locale\r\n   *\r\n   * @param {string} stringNumber\r\n   * @param {string} locale\r\n   */\r\n  const parseLocaleNumber = (stringNumber, locale) => {\r\n    let num = 123456.789,\r\n      fmt_local = new Intl.NumberFormat(locale, {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n      }),\r\n      parts_local = fmt_local.formatToParts(num),\r\n      group = \"\",\r\n      decimal = \"\",\r\n      currency = \"\";\r\n\r\n    // separators\r\n    parts_local.forEach(function (i) {\r\n      switch (i.type) {\r\n        case \"group\":\r\n          group = i.value;\r\n          break;\r\n        case \"decimal\":\r\n          decimal = i.value;\r\n          break;\r\n        case \"currency\":\r\n          currency = i.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return parseFloat(\r\n      stringNumber\r\n        .replace(new RegExp(\"\\\\\" + group, \"g\"), \"\")\r\n        .replace(new RegExp(\"\\\\\" + decimal), \".\")\r\n        .replace(new RegExp(\"\\\\\" + currency, \"g\"), \"\")\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Formates a date\r\n   *\r\n   * @param {date} ts A timestamp.\r\n   * @param {object} options The date options.\r\n   * @param {boolean} isUTC\r\n   * @param {string} locales e.g. \"lv\"\r\n   * @param {string} format e.g. \"YYYY-MM-DD HH:mm:ss\"\r\n   */\r\n  const formatDate = (\r\n    ts,\r\n    options = {\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    },\r\n    isUTC = true,\r\n    locales = language,\r\n    format = null\r\n  ) => {\r\n    let date = new Date(ts);\r\n    if (isUTC) {\r\n      const diff = date.getTimezoneOffset();\r\n      date = moment(date).add(-diff, \"m\").toDate();\r\n    }\r\n    return format === null\r\n      ? new Intl.DateTimeFormat(locales, options).format(date)\r\n      : moment(date).format(format);\r\n  };\r\n\r\n  /**\r\n   * Retrieves an URL parameter\r\n   */\r\n  const getUrlParam = (param) => {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    return urlParams.get(param);\r\n  };\r\n\r\n  const sendEmailValidationRequest = ({ token, email }) => {\r\n    sendRequest({\r\n      req: \"validate email token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Sends the password reset request\r\n   *\r\n   * @param {string} token The password reset token\r\n   * @param {string} email User's email\r\n   */\r\n  const sendPasswordResetRequest = ({ token, email }) => {\r\n    setPasswordResetTokenEmail(email);\r\n    sendRequest({\r\n      req: \"validate password reset token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets client URI\r\n   */\r\n  const getUri = () => {\r\n    return `${window.location.hostname}`;\r\n  };\r\n\r\n  /**\r\n   * Gets client IP\r\n   */\r\n  const getIP = () => {\r\n    if (debug) return;\r\n    fetch(`${config.uri.ENDPOINT}/ip`, {\r\n      method: \"post\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((results) => results.json())\r\n      .then((data) => {\r\n        setIP(typeof data.ip === \"string\" ? data.ip : \"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Gets the cart\r\n   */\r\n  const getCart = () => {\r\n    const cart = getUrlParam(\"cart\");\r\n\r\n    if (cart !== null) {\r\n      setExternalRequest(JSON.stringify({ cart }));\r\n      if (!signedIn) setIsExternalRequest(true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets cart purposses\r\n   */\r\n  const getCartPurposes = () => {\r\n    if (cartContent === null) return;\r\n\r\n    let cartPurposes = [];\r\n\r\n    barrelGetters.cartContent.map((element) =>\r\n      cartPurposes.push(element.product)\r\n    );\r\n\r\n    setCartPurposes(null);\r\n\r\n    sendRequest({\r\n      req: \"get cart purposes\",\r\n      data: {\r\n        purposes: JSON.stringify(cartPurposes),\r\n        language: language,\r\n        page: 1,\r\n        limit: 5,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the currencies\r\n   *\r\n   * @param {*} newPage\r\n   */\r\n  const getCurrencies = (newPage) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: {\r\n        uid: accountNumber,\r\n        search: null,\r\n        page: newPage,\r\n        limit: currenciesPerPage,\r\n      },\r\n    });\r\n    setActivePageCurrencies(newPage);\r\n  };\r\n\r\n  /**\r\n   * Finds currencies\r\n   *\r\n   * @param {string} search The search sring.\r\n   */\r\n  const findCurrencies = (search) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: {\r\n        uid: accountNumber,\r\n        search,\r\n        page: 1,\r\n        limit: currenciesPerPage,\r\n      },\r\n    });\r\n    setActivePageCurrencies(1);\r\n  };\r\n\r\n  /**\r\n   * Gets user transactions\r\n   *\r\n   * @param {integer} newPage\r\n   */\r\n  const getTransactions = (newPage, search = null) => {\r\n    setTransactions(null);\r\n\r\n    let dateStart = dateRangeStart;\r\n    let dateEnd = dateRangeEnd;\r\n    if (dateEnd === \"today\") {\r\n      const now = new Date();\r\n      dateEnd = now.setDate(now.getDate());\r\n    }\r\n    dateStart = formatDate(dateStart, null, true, null, \"YYYY-MM-DD\");\r\n    dateEnd = formatDate(dateEnd, null, true, null, \"YYYY-MM-DD\");\r\n\r\n    sendRequest({\r\n      req: \"get transactions\",\r\n      data: {\r\n        page: newPage,\r\n        limit: transactionsPerPage,\r\n        uid: accountNumber,\r\n        language,\r\n        dateStart,\r\n        dateEnd,\r\n        search: search !== null ? search : searchTransactions,\r\n      },\r\n    });\r\n    setActivePageTransactions(newPage);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {ref} ref\r\n   */\r\n  const copyToClipboard = (ref) => {\r\n    ref.current.select();\r\n    document.execCommand(\"copy\");\r\n    ref.current.blur();\r\n    showMessage(\"COPIED_TO_CLIPBOARD\", \"info\", false);\r\n  };\r\n\r\n  /**\r\n   * Finds transactions\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findTransactions = (search) => {\r\n    setSearchTransactions(search);\r\n    getTransactions(1, search);\r\n  };\r\n\r\n  /**\r\n   * Finds transactions\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findPurposes = (search) => {\r\n    setSearchPurposes(search);\r\n    setResponseProps(null);\r\n    getBusinessPurposes(activeBusinessID, activeBusiness, 1, search);\r\n  };\r\n\r\n  /**\r\n   * Gets user shares\r\n   *\r\n   * @param {*} newPage\r\n   */\r\n  const getShares = (newPage, search = null) => {\r\n    setShares(null);\r\n    sendRequest({\r\n      req: \"get shares\",\r\n      data: {\r\n        page: newPage,\r\n        limit: sharesPerPage,\r\n        uid: accountNumber,\r\n        language: language,\r\n        search: search !== null ? search : searchShares,\r\n      },\r\n    });\r\n    setActivePageShares(newPage);\r\n  };\r\n\r\n  /**\r\n   * Finds shares\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findShares = (search) => {\r\n    setSearchShares(search);\r\n    getShares(1, search);\r\n  };\r\n\r\n  /**\r\n   * Gets user businesses\r\n   *\r\n   * @param {integer} newPage\r\n   */\r\n  const getBusinesses = (newPage = 1) => {\r\n    setUserBusinesses(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(1);\r\n    setActiveBusinessID(null);\r\n    sendRequest({\r\n      req: \"get user businesses\",\r\n      data: { uid: accountNumber, page: newPage, limit: businessesPerPage },\r\n    });\r\n    setActivePageBusinesses(newPage);\r\n  };\r\n\r\n  /**\r\n   * Gets the business purposes\r\n   *\r\n   * @param {*} business_id\r\n   * @param {*} selected\r\n   * @param {*} newPage\r\n   */\r\n  const getBusinessPurposes = (\r\n    business_id,\r\n    selected = null,\r\n    newPage = 1,\r\n    search = null\r\n  ) => {\r\n    // console.log(\"BUSINESS PURPOSES FOR ID \" + business_id, businessPurposes);\r\n\r\n    if (selected !== null) {\r\n      setActiveBusiness(selected);\r\n      setActiveBusinesPurpose(null);\r\n      setActivePurposeProperty(null);\r\n    }\r\n    setBusinessPurposes(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(newPage);\r\n    setActiveBusinessID(business_id);\r\n    return sendRequest({\r\n      req: \"get business purposes\",\r\n      data: {\r\n        business_id: business_id,\r\n        language: language,\r\n        search: search !== null ? search : searchPurposes,\r\n        page: newPage,\r\n        limit: businessPurposesPerPage,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the purpose shareholders\r\n   *\r\n   * @param {*} purpose_id\r\n   * @param {*} selected\r\n   */\r\n  const getPurposeShareholders = (purpose_id, selected = null) => {\r\n    if (selected !== null) {\r\n      setActiveBusinesPurpose(purpose_id);\r\n    }\r\n    setPurposeShareholders(null);\r\n    return sendRequest({\r\n      req: \"get purpose shareholders\",\r\n      data: { purpose_id: purpose_id },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get account data\r\n   */\r\n  const getAccountData = () => {\r\n    if (accountNumber === null) return;\r\n    sendRequest({\r\n      req: \"get account data\",\r\n      data: {\r\n        uid: accountNumber,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get transaction by id\r\n   *\r\n   * @param {integer} id The primary key\r\n   */\r\n  const getTransactionById = (id) => {\r\n    sendRequest({\r\n      req: \"get transaction by id\",\r\n      data: { id: id, language: language },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get conatainer class\r\n   *\r\n   * Returns object cantaining the classes for layout container appearance.\r\n   *\r\n   * @param {boolean} signedIn, True if user has signed in, otherwise false.\r\n   */\r\n  const getContainerClass = (signedIn) => {\r\n    return {\r\n      wrapperClass: signedIn\r\n        ? \"auth-wrapper auth-wrapper-summary\"\r\n        : \"auth-wrapper\",\r\n      innerClass: signedIn\r\n        ? \"auth-inner auth-inner-summary\"\r\n        : \"auth-inner autoWidth\",\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Get redirect\r\n   *\r\n   * Returns router redirect component.\r\n   */\r\n  const getRedirect = () => {\r\n    return redirectTo === null ? \"\" : <Redirect push to={redirectTo} />;\r\n  };\r\n\r\n  /**\r\n   * Sorts an object array by value of the property\r\n   *\r\n   * @param {array} array The array\r\n   * @param {string} property The property name\r\n   */\r\n  const sortObjectArray = (array, property) => {\r\n    return array.sort((a, b) =>\r\n      a[property] > b[property] ? 1 : b[property] > a[property] ? -1 : 0\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Returns an array index of the object\r\n   * containing the property with the certain value.\r\n   *\r\n   * @param {array} array The array\r\n   * @param {string} property The property name\r\n   * @param {any} value The property value\r\n   */\r\n  const getObjectArrayElementIndex = (array, property, value) => {\r\n    if (array === null) return -1;\r\n    return array\r\n      .map((properties) => {\r\n        return properties[property];\r\n      })\r\n      .indexOf(value);\r\n  };\r\n\r\n  /**\r\n   * Deletes an object array element\r\n   *\r\n   * @param {array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const deleteObjectArrayElement = (arr, property, value) => {\r\n    return arr.filter((obj) => {\r\n      return obj[property] !== value;\r\n    });\r\n  };\r\n\r\n  const getReviser = () => {\r\n    return \"STA\";\r\n  };\r\n\r\n  const getWorkplace = () => {\r\n    return \"LAPSTA\";\r\n  };\r\n\r\n  const barrelFunctions = {\r\n    sendRequest,\r\n    processUserResponse,\r\n    showMessage,\r\n    hideMessage,\r\n    changeLanguage,\r\n    roundTo,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    getArrayObject,\r\n    getRequestStatus,\r\n    clearRequestStatus,\r\n    showRequestStatus,\r\n    format,\r\n    formatPerCent,\r\n    formatExchangeRate,\r\n    getContainerClass,\r\n    formatDate,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    getRedirect,\r\n    getUri,\r\n    getIP,\r\n    getCart,\r\n    getCartPurposes,\r\n    getUrlParam,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    getCurrencies,\r\n    findCurrencies,\r\n    getTransactions,\r\n    copyToClipboard,\r\n    findTransactions,\r\n    findPurposes,\r\n    getShares,\r\n    findShares,\r\n    parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n  };\r\n\r\n  /** \r\n   * Event handlers\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On language change\r\n   */\r\n  i18n.on(\"languageChanged\", function (lng) {\r\n    setLanguage(lng);\r\n  });\r\n\r\n  /**\r\n   * On redirect\r\n   * @param {string} to Redirect path (e.g. \"/sign-in\")\r\n   */\r\n  const onRedirect = (to) => {\r\n    setRedirectTo(to);\r\n  };\r\n\r\n  const onSessionStart = () => {\r\n    // start new session\r\n    let data = {};\r\n    data.request = \"hello\";\r\n    data.instance = instance;\r\n    startSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionEnd = () => {\r\n    // end current session\r\n    sendRequest({ req: \"end session\", data: {} });\r\n\r\n    let data = {};\r\n    data.request = \"bye\";\r\n    data.instance = instance;\r\n    endSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionReset = () => {\r\n    setSession(uuidv4());\r\n  };\r\n\r\n  /**\r\n   * On signup\r\n   * @param {object} data Signup data\r\n   */\r\n  const onSignUp = (data) => {\r\n    return sendRequest({ req: \"register user\", data });\r\n  };\r\n\r\n  const onSessionTimeout = () => {\r\n    // console.log(\"Session timed out...\");\r\n    setLoggingOut(true);\r\n    setRedirectTo(\"/sign-out\");\r\n  };\r\n\r\n  /**\r\n   * On transfer type change\r\n   * @param {string} id The transfer type id (\"U2S\", \"U2U\", \"U2B\" etc.)\r\n   */\r\n  const onTransferTypeChange = (id) => {\r\n    // console.log(\"setTransferType: \" + id);\r\n    setTransferType(id);\r\n  };\r\n\r\n  const onTransferSuccess = () => {\r\n    // console.log(\"ON TRANSFER SUCCESS\", barrels);\r\n  };\r\n\r\n  /**\r\n   * On transfer\r\n   * @param {object} data Transfer data\r\n   */\r\n  const onTransfer = (data) => {\r\n    // console.log(\"ON TRANSFER (data):\", data);\r\n    // sendRequest({ req: \"register account\", data: data });\r\n    sendRequest(data);\r\n  };\r\n\r\n  const onPurposeRegistration = (data) => {\r\n    sendRequest(data);\r\n  };\r\n\r\n  const onLogOut = () => {\r\n    window.localStorage.clear();\r\n    setSignedIn(false);\r\n    // onSessionEnd(); // DO NOT ACTIVATE THIS HERE - EXECUTING MULTIPLE TIMES\r\n    // setSession(uuidv4()); // DO NOT SET SESSION HERE - INFINITE LOOP!!\r\n  };\r\n\r\n  const onAlertClose = (type = null) => {\r\n    hideMessage(type);\r\n  };\r\n\r\n  /**\r\n   * Barrel: Event handlers\r\n   */\r\n  const barrelEventHandlers = {\r\n    onRedirect,\r\n    onSignUp,\r\n    onSessionTimeout,\r\n    onTransferTypeChange,\r\n    onTransferSuccess,\r\n    onTransfer,\r\n    onSessionStart,\r\n    onSessionEnd,\r\n    onSessionReset,\r\n    onPurposeRegistration,\r\n    onLogOut,\r\n    onAlertClose,\r\n  };\r\n\r\n  /**\r\n   * Barrel of barrels\r\n   */\r\n  const barrels = {\r\n    barrelGetters,\r\n    barrelSetters,\r\n    barrelFunctions,\r\n    barrelEventHandlers,\r\n  };\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  useSocket((data) => {\r\n    setServerResponseReceived(true);\r\n    setRequestTimedOut(false);\r\n    processUserResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  });\r\n\r\n  useSystemSocket((data) => {\r\n    processSystemResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  }, instance);\r\n\r\n  /** \r\n   * Return\r\n   ============================================================================ */\r\n\r\n  if (props.mode !== \"construction\") {\r\n    if (!reconnecting || debug) {\r\n      return <Main {...barrels} />;\r\n    } else {\r\n      return <NotConnected {...barrels} />;\r\n    }\r\n  } else {\r\n    return <UnderConstruction {...barrels} />;\r\n  }\r\n};\r\n","import { sendData } from \"../utils/sockets\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const { req, data, session, uid, barrels } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, userData, userSequence } = barrels.barrelGetters;\r\n  const {\r\n    setUserData,\r\n    setUID,\r\n    // setAccountNumber,\r\n    // setRequest,\r\n    // setUserBusinesses,\r\n  } = barrels.barrelSetters;\r\n  // const {} = barrels.barrelFunctions;\r\n  //   const {} = barrels.barrelEventHandlers;\r\n\r\n  let requestFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onRequest = (req, callback) => {\r\n    if (requestFound) return;\r\n    if (req === props.req || req === \"default\") {\r\n      callback();\r\n      requestFound = true;\r\n    }\r\n  };\r\n\r\n  /** \r\n   * Request handlers\r\n  ============================================================================ */\r\n\r\n  onRequest(\"sign in user\", () => {\r\n    setUserData(JSON.stringify(data));\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"get user sequence\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"register account\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const year = fullyear.slice(-2);\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n    const birthDate = `${day}${month}${year}`;\r\n    const timezone = data.timezone.slice(0, 2);\r\n    const initial = userData.lastname.slice(0, 1).toUpperCase();\r\n    const icode = initial.charCodeAt(0).toString().padStart(5, \"0\");\r\n\r\n    data.scode = `${timezone}${birthDate}${initial}`;\r\n    data.tcode = `${timezone}${birthDate}${icode}`;\r\n    data.timezone = data.timezone.slice(5);\r\n    data.sequence = userSequence.toString().padStart(5, \"0\");\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    setUID(data.personalID);\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"default\", () => {\r\n    sendData({ req, data, uid, session }, debug);\r\n\r\n    return true;\r\n  });\r\n\r\n  // onRequest(\"unknown\", () => {\r\n  //   showMessage(`UNKNOWN REQUEST ${req}`, \"info\");\r\n\r\n  //   return true;\r\n  // });\r\n\r\n  return requestFound;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setUID,\r\n    setAccountNumber,\r\n    setRedirectTo,\r\n  } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug) console.log(`ERROR: ${req}`, error, context, props, barrels);\r\n  // const { showMessage } = barrels.barrelFunctions;\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n    // console.log(res, status);\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onError([\"*\", \"INVALID_SESSION\"], () => {\r\n    showMessage(\"SESSION_TIMED_OUT\", \"info\", false);\r\n    setRedirectTo(\"/sign-out\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer errors\r\n   */\r\n  onError([\"transfer U2S\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2B\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_USER_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // user selected the same language again - just ignore\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate email token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate password reset token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"reset password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // showMessage(\"REQUEST_ALREADY_SENT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same language again - that's ok\r\n    return true;\r\n  });\r\n\r\n  onError([\"update user\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same password again - that's ok\r\n    return true;\r\n  });\r\n\r\n  // onError([\"update last seen user\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Same last seen time was submitted (shouldn't be possible) - ignore for now\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"sign in user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"change password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"SAME_PASSWORD_RESET\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"submit tan\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"INVALID_TAN\", \"error\", false);\r\n    return true;\r\n  });\r\n\r\n  onError([\"get cart\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User accessed the same cart again - it's fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer V2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Allowance already dispatched today - totally fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    // The same currency was selected again - no problem\r\n    return true;\r\n  });\r\n\r\n  onError([\"end session\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Session updated to the same data ??\r\n    return true;\r\n  });\r\n\r\n  onError([\"register currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_CURRENCY_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"update purpose property\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register purpose\", \"ER_DUP_ENTRY\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  // onError([\"get user sequence\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Session updated to the same data ??\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"register account\", \"ER_DUP_ENTRY\"], () => {\r\n    setUID(null);\r\n    setAccountNumber(null);\r\n    showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError(\r\n    [\"register account\", \"ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO\"],\r\n    () => {\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n      return true;\r\n    }\r\n  );\r\n\r\n  onError([\"register shareholder\", \"ER_NO_REFERENCED_ROW_2\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"*\", \"ER_CANT_CREATE_THREAD\"], () => {\r\n    showMessage(\"NO_RESPONSE_FROM_SERVER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug, error: msgError } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug)\r\n    console.log(`SYSTEM ERROR: ${req}`, error, context, props, barrels);\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onError([\"*\", \"INVALID_SESSION\"], () => {\r\n  //   showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n  //   setRedirectTo(\"/sign-out\");\r\n  //   return true;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_error\", \"none\"], () => {\r\n    if (msgError !== \"SERVER_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_timeout\", \"connect_timeout\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"reconnect_error\", \"TransportError\"], () => {\r\n    if (msgError !== \"SERVER_STILL_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_STILL_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, info: msgInfo } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage, hideMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug)\r\n    console.log(`system response: ${req} (${props.status})`, props, barrels);\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (res === \"*\" && status === props.status) ||\r\n      (res === props.req && status === props.status) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n  //   if (typeof props.token !== \"undefined\") {\r\n  //     console.log(\"Renewing session...\");\r\n\r\n  //     onSessionEnd();\r\n  //     setSession(props.token);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect attempt\", \"continue\"], () => {\r\n    // if (msgInfo !== \"RECONNECT_ATTEMPT\")\r\n    //   showMessage(\"RECONNECT_ATTEMPT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnecting\", \"continue\"], () => {\r\n    if (msgInfo !== \"RECONNECTING\") {\r\n      setReconnecting(true);\r\n      showMessage(\"RECONNECTING\", \"info\");\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect\", \"success\"], () => {\r\n    setReconnecting(false);\r\n    hideMessage();\r\n    // hideMessage(\"error\");\r\n    // hideMessage(\"info\");\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Loading.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Leads from \"../leads\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Loading\" };\r\n\r\n  /**\r\n        * Properties\r\n        ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  //\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col xl={4} lg={6} className=\"d-none d-lg-block\" style={{}}>\r\n            {/** Left column */}\r\n          </Col>\r\n          <Col lg={6} md={12}>\r\n            <div className=\"lds-hourglass-container\">\r\n              <div className=\"lds-hourglass\"></div>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"d-none d-xl-block\" style={{}}>\r\n            {/** Right column */}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * User CSS\r\n */\r\nimport \"./normalize.css\";\r\nimport \"./index.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Loading from \"./components/loading\";\r\n// import UnderConstruction from \"./components/pages/underConstruction\";\r\nimport ErrorBoundary from \"./components/errorBoundary\";\r\n\r\n/**\r\n * Retrieves an URL parameter\r\n */\r\nconst getUrlParam = (param) => {\r\n  const queryString = window.location.search;\r\n  const urlParams = new URLSearchParams(queryString);\r\n  return urlParams.get(param);\r\n};\r\n\r\n/**\r\n * Clear local storage (URL param ?reset)\r\n */\r\nif (getUrlParam(\"reset\") !== null) {\r\n  window.localStorage.clear();\r\n  console.log(\"Local storage cleared\");\r\n}\r\n\r\n/**\r\n * Render (with suspense)\r\n * mode = default | construction\r\n */\r\nconst root = document.getElementById(\"root\");\r\nconst construction = document.getElementById(\"construction\");\r\nif (root) {\r\n  ReactDOM.render(\r\n    <Suspense fallback={<Loading />}>\r\n      <ErrorBoundary>\r\n        <Dispatcher mode={!construction ? \"\" : \"construction\"} />\r\n      </ErrorBoundary>\r\n    </Suspense>,\r\n    root\r\n  );\r\n}\r\n"],"sourceRoot":""}