{"version":3,"sources":["components/submitButton/SubmitButton.js","components/card/Card.js","components/locale lazy /^/.*/topics/common/-questions/.js$/ groupOptions: {} namespace object","components/locale lazy /^/.*/articles/i/-forgot/-my/-password/-how/-do/-i/-reset/-it/.js$/ groupOptions: {} namespace object","components/locale lazy /^/.*/leads/LeadLogIn/.js$/ groupOptions: {} namespace object","components/locale lazy /^/.*/toasts/ToastDefault/.js$/ groupOptions: {} namespace object","translations/i18n.js","utils/config.js","utils/state.js","utils/useTimeout.js","components/errorBoundary/ErrorBoundary.js","components/modalMessage/ModalMessage.js","components/accountRegistration/AccountRegistration.js","components/pagination/Pagination.js","components/search/Search.js","components/datePicker/DatePickerWrapper.js","components/datePicker/DatePicker.js","components/dateRangePicker/DateRangePicker.js","components/transactions/Transactions.js","components/shareholder/Shareholder.js","components/shares/Shares.js","components/balance/Balance.js","components/copyableField/CopyableField.js","components/accountContainer/AccountContainer.js","components/transfer/TransferToSelf.js","components/tanInput/TanInput.js","components/transfer/TransferToPerson.js","components/transfer/TransferToBusiness.js","components/businessRegistration/BusinessRegistration.js","components/purposeRegistration/PurposeRegistration.js","components/shareholderRegistration/shareholderRegistration.js","components/myBusiness/MyBusiness.js","components/userEditor/UserEditor.js","components/currencies/Currencies.js","components/currencyRegistration/CurrencyRegistration.js","components/rating/Rating.js","components/listGroupItem/ListGroupItem.js","components/helpMenuLevel2/HelpMenuLevel2.js","components/help/Help.js","components/summary/Summary.js","components/currencyContainer/CurrencyContainer.js","components/transfer/Transfer.js","components/contact/Contact.js","components/status_404/Status_404.js","components/overlay/Overlay.js","components/alertContainer/AlertContainer.js","components/alert/Alert.js","components/login/LogIn.js","components/signup/SignUp.js","components/auth/Auth.js","components/language-selector/LanguageSelector.js","components/footer/Footer.js","components/idleTimer/IdleTimer.js","utils/useInterval.js","utils/useEventListener.js","components/mainMenu/MainMenu.js","components/breadcrumb/Breadcrumb.js","components/article/Article.js","components/main/Routes.js","components/validateEmail/ValidateEmail.js","components/changePassword/ChangePassword.js","components/logout/Logout.js","components/passwordReset/passwordReset.js","components/leads/Leads.js","components/toasts/Toasts.js","components/main/Main.js","components/underConstruction/UnderConstruction.js","components/notConnected/NotConnected.js","utils/sockets.js","utils/userResponseHandler.js","components/loading/Loading.js","Dispatcher.js","utils/requestHandler.js","utils/userErrorHandler.js","utils/systemErrorHandler.js","utils/systemResponseHandler.js","index.js","components/accordionCard/AccordionCard.js","components/locale lazy /^/.*$/ groupOptions: {} namespace object"],"names":["SubmitButton","React","memo","args","props","Object","assign","caption","request","namespace","type","classButton","visible","marginTop","timeout","variant","onSubmit","barrelGetters","barrelSetters","setError","setInfo","useState","requestExpired","e","Button","className","onClick","block","disabled","style","whiteSpace","Spinner","as","animation","size","role","aria-hidden","hidden","defaults","title","navigation","undefined","footer","header","body","headerPadding","bodyPadding","align","maxWidth","minWidthBody","maxWidthBody","cardTitleClass","headerContent","transparent","background","backgroundHeader","backgroundBody","border","headerBorderBottom","onNavigationClick","key","Footer","Header","borderBottom","padding","length","Title","Nav","defaultActiveKey","navigationdefaultActiveKey","display","justifyContent","alignItems","flexWrap","map","item","Item","Link","href","link","color","name","Body","textAlign","minWidth","margin","Children","children","child","cloneElement","styles","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","Error","code","ids","id","keys","module","exports","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","defaultNS","keySeparator","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","config","dev","uri","ENDPOINT","SITEMODE","window","location","hostname","useStickyState","defaultValue","stickyValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","useTimeout","callback","delay","savedCallback","useRef","current","setTimeout","clearTimeout","ErrorBoundary","state","hasError","error","errorInfo","console","log","this","Component","centered","message","onHide","file","backdrop","t","useTranslation","ExternalFile","lazy","Modal","aria-labelledby","closeButton","Navbar","borderRadius","backgroundColor","boxShadow","Brand","src","width","height","alt","maxHeight","overflowY","signedIn","accountNumber","userData","language","userBirthYear","userBirthMonth","userBirthDay","userBirthDateError","userTimezone","setUserBirthYear","setUserBirthMonth","setUserBirthDay","setUserBirthDateError","setUserTimezone","barrelFunctions","getReviser","getWorkplace","sendRequest","userAgreementShow","setUserAgreementShow","privacyPolicyShow","setPrivacyPolicyShow","schema","yup","timezone","required","birthYear","birthMonth","birthDay","timezones_sorted","timezones","composeDate","year","month","day","newDate","dateString","match","datepart","split","parseInt","leapYear","isValidDate","yearNow","Date","getFullYear","Alert","Heading","Trans","i18nKey","ModalMessage","show","component","handleSubmit","handleChange","values","handleBlur","touched","errors","isValid","validateForm","setFieldValue","Form","noValidate","Row","Group","Col","controlId","Label","Control","custom","onChange","target","isInvalid","Array","from","Feedback","monthName","toLocaleString","monthNumber","toString","padStart","dayNumber","element","Offset","Name","paddingBottom","KeyboardArrowRight","onMouseDown","validationSchema","data","birthDate","reviser","workplace","email","sendAccountRegistrationRequest","initialValues","countItems","itemsPerPage","active","pages","Math","ceil","getPages","items","number","push","Pagination","Ellipsis","First","Prev","Next","Last","getJSX","advancedSearch","placeholder","captionAdvancedSearch","search","setSearch","refSearch","createRef","tempRefSearch","optional","InputGroup","ref","autoComplete","Append","Text","cursor","Search","refDatePicker","fp","flatpickr","options","destroy","datePicker","aria-describedby","open","DateRange","locale","showMonths","inline","shorthandCurrentMonth","allowInput","clickOpens","monthSelectorType","altInput","altFormat","dateFormat","maxDate","defaultDate","selectedDates","dateStr","instance","captionStartDate","captionEndDate","captionUpdate","dateRangeStart","dateRangeEnd","setDateRangeStart","setDateRangeEnd","getTransactions","formatDate","clearRequestStatus","dateStart","dateEnd","Replay","transactions","countTransactions","activePageTransactions","transactionsPerPage","findTransactions","showRequestStatus","format","formatPerCent","cnt","marginBottom","DateRangePicker","ListGroup","transaction","keyTransactions","business_title","comment","conv_amount","created","sender_firstname","sender_lastname","recipient_firstname","recipient_lastname","purpose_id","purpose_title","recipient_id","roles","share","share_per_cent","sender_id","from_account","to_account","i_am_sender","i_am_recipient","t_from_account","t_to_account","roles_available","arrRoles","shares_available","action","float","ArrowRightAlt","sender","Badge","pill","purpose","shareholder","rangeControl","sharePerCent","businessTitle","purposeTitle","businessOwnerFirstname","businessOwnerLastname","sharesCreated","purposeShareholders","setPurposeShareholders","userQuery","setUserQuery","delayedQuery","_","debounce","q","sendQuery","onClose","shareholder_id","ps","sharesLabelId","Toast","firstname","lastname","Settings","fontSize","min","max","step","shares","countShares","activePageShares","sharesPerPage","getShares","findShares","keyShares","owner_firstname","owner_lastname","shares_created","shares_roles","shares_share","Shareholder","setAccountType","setRedirectTo","userDataParsed","available","acc_curr","acc_cred","acc_save","onAccountTypeSelected","copyToClipboard","refCopyableField","readOnly","document","queryCommandSupported","marginLeft","FileCopy","paddingBody","accordionView","setAccordionView","setResponseProps","setClearRefs","getAccountData","toggleView","view","newView","Accordion","eventkey","CopyableField","Balance","Transactions","Shares","accountType","currencyAbbr","transferFromAccount","transferToAccount","transferAmount","setTransferFromAccount","setTransferToAccount","setTransferAmount","parseLocaleNumber","refAmount","tempRefAmount","fromAccount","toAccount","amount","matches","RegExp","Prepend","uid","Intl","NumberFormat","notation","minimumFractionDigits","useGrouping","transferToSelf","tanRequired","tanInputTAN","setTanRequired","setTanInputTAN","refTAN","tempRef","tan","autoFocus","transferToUID","transferDescription","setTransferRequest","setTransferToUID","setTransferDescription","refPersonalID","refDescription","tempRefPersonalID","tempRefDescription","toPersonalID","TanInput","rows","description","transferType","transferToPerson","transferToPurpose","setTransferToPurpose","refPurposeID","tempRefPurposeID","purposeID","currency","transferToBusiness","businessRegistrationAddTitle","businessRegistrationAddDescription","setBusinessRegistrationAddTitle","setBusinessRegistrationAddDescription","refBusinessTitle","refBusinessDescription","tempRefBusinessTitle","tempRefBusinessDescription","trim","businessDescription","requestInsert","requestUpdate","businessID","category","subcategory","subcategory2","keywords","barrels","purposeRegistrationTitle","purposeRegistrationDescription","purposeRegistrationKeywords","setPurposeRegistrationTitle","setPurposeRegistrationDescription","setPurposeRegistrationKeywords","onPurposeRegistration","barrelEventHandlers","refPurposeTitle","refPurposeDescription","refPurposeKeywords","tempRefPurposeTitle","tempRefPurposeDescription","tempRefPurposeKeywords","purposeDescription","purposeKeywords","RegisterPurpose","shareholderRoles","typeError","personalID","userBusinesses","countBusinesses","businessesPerPage","activePageBusinesses","userBusinessesLoaded","activeBusiness","activeBusinessID","businessPurposes","countBusinessPurposes","businessPurposesPerPage","activePageBusinessPurposes","activeBusinesPurpose","activePurposeProperty","activePurposeData","setBusinessPurposes","setActiveBusiness","setActiveBusinesPurpose","setActivePurposeProperty","setActivePageBusinessPurposes","setActivePurposeData","getBusinesses","getBusinessPurposes","getPurposeShareholders","findPurposes","refBusinessID","menuItems","purposes","cntPurposes","countShareholders","business","keyBusiness","keyPurpose","business_id","eventKey","TogglePurpose","Edit","stopPropagation","Tab","Pane","Card","bg","Toggle","Collapse","Add","keyShareholder","bp","status","purpose_status","Check","label","checked","jsx","date","businessSince","ToggleBusiness","Store","Container","sm","Content","PurposeRegistration","BusinessRegistration","mode","userEditorEditFirstname","userEditorFirstname","userEditorEditLastname","userEditorLastname","userEditorEditEmail","userEditorEmail","userEditorEditPassword","userEditorPassword","userEditorPasswordVisible","userEditorSubmitButtonVisible","setUserEditorEditFirstname","setUserEditorFirstname","setUserEditorEditLastname","setUserEditorLastname","setUserEditorEditEmail","setUserEditorEmail","setUserEditorEditPassword","setUserEditorPassword","setUserEditorPasswordVisible","setUserEditorSubmitButtonVisible","refFirstName","refLastName","refEmail","refPassword","tempRefFirstName","tempRefLastName","tempRefEmail","tempRefPassword","togglePassword","yupObject","firstName","lastName","password","Close","VisibilityOff","Visibility","newEmail","validateEmail","sendUserRegistrationRequest","currencies","settings","countCurrencies","activePageCurrencies","currenciesPerPage","setCurrencyAbbr","setCurrencyRate","getCurrencies","findCurrencies","formatExchangeRate","getObjectArrayElementIndex","onCurrencySelected","currency_id","rate","onPageSelect","Table","responsive","striped","bordered","hover","keyCurrency","abbr","region","includes","paddingLeft","aria-label","curr_abbr","curr_title","curr_region","curr_rate","currencyCode","currencyName","currencyRegion","currencyNewRate","setCurrencyCode","setCurrencyName","setCurrencyRegion","setCurrencyNewRate","refAbbr","refTitle","refRegion","refRate","tempRefAbbr","tempRefTitle","tempRefRegion","tempRefRate","fluid","overflow","helpPath1","helpPath2","setHelpPath","ListGroupItem","searchable","getFileNameFromURI","leadFile","catch","err","xl","HelpMenuLevel2","pageBody","exact","path","AccountRegistration","UserEditor","accordionViewCurrency","setAccordionViewCurrency","Currencies","CurrencyRegistration","CurrencyContainer","MyBusiness","onTransferTypeChange","TransferToPerson","TransferToBusiness","TransferToSelf","Transfer","contactSubject","contactMessage","setContactSubject","setContactMessage","refSubject","refMessage","tempRefSubject","tempRefMessage","subject","Contact","Status_404","dismissible","info","onAlertClose","errorStrings","infoStrings","msgError","msg","msgInfo","ip","logInEmail","logInPassword","setLoggingIn","setUpdateInterval","setLogInEmail","setLogInPassword","getUri","sendUserLogInRequest","signUpFirstName","signUpLastName","signUpEmail","signUpPassword","setSignUpFirstName","setSignUpLastName","setSignUpEmail","setSignUpPassword","passwordVisible","setPasswordVisible","cartProps","cartContent","cartPurposes","cartProcessingStatus","cartID","setCartProcessingStatus","Cart","priceTotal","businessCreated","business_created","price","find","products","product","fontWeight","merchant","getCartPurposes","cart","cartid","changeLanguage","lng","selectLanguage","paddingRight","now","pathname","collapseOnSelect","expand","aria-controls","LanguageSelector","timestamp","stage2","stage3","onTick","onTimerReset","onTimeout","events","onSessionTimeout","seconds","setSeconds","modalMessageShow","setModalMessageShow","setInterval","clearInterval","useInterval","eventHandler","i","addEventListener","removeEventListener","useEventListener","currTime","timeFormatted","minute","second","modalMessage","OverlayTrigger","placement","overlay","Tooltip","AvTimer","sessionTimeout","AccountCircle","PowerSettingsNew","IdleTimer","names","links","index","Article","articleFeedbackSubmitted","scrollPositionY","helpPath3","setArticleFeedbackSubmitted","setScrollPositionY","setHelpPath2","getScrollPosition","setScrollPosition","refFeedbackSubmit","refFeedbackThanks","marginRight","getRedirect","getContainerClass","wrapperClass","innerClass","appClass","MainMenu","Image","SignUp","Auth","Login","validationTokenEmail","validationTokenEmailResent","setValidateTokenEmail","getUrlParam","token","ValidateEmail","passwordResetTokenValidated","passwordResetTokenEmail","ChangePassword","emailChanged","setLanguage","onLogOut","onRedirect","tempError","tempInfo","tempLanguage","tempEmailChanged","Logout","Help","passwordResetEmail","setValidateTokenPasswordReset","setPasswordResetEmail","PasswordReset","Summary","session","serverResponseReceived","dailyAllowanceDispatched","validateTokenEmail","validateTokenPasswordReset","connected","clearRefs","loggingOut","setRequestTimedOut","setDailyAllowanceDispatched","setRequest","getIP","saveCartID","sendEmailValidationRequest","sendPasswordResetRequest","showMessage","getCart","onSessionStart","setDate","getDate","lg","md","Routes","Build","PowerOff","socket","openSocket","connect","secure","reconnect","sendData","emit","responseProps","transferRequest","lastInsertId","setSession","setSettings","setCurrencies","setTransactions","setShares","setCountCurrencies","setCountTransactions","setCountShares","setConnected","setUserData","setSignedIn","setCartContent","setCartProps","setLastInsertId","setAccountNumber","setUserSequence","setUID","setUserBusinesses","setCountBusinesses","setUserBusinessesLoaded","setCartPurposes","setCountBusinessPurposes","setAccountPhotoPath","setPasswordResetTokenValidated","setPasswordResetTokenEmail","setValidationTokenEmail","setValidationTokenEmailResent","setEmailChanged","getTransactionById","sortObjectArray","deleteObjectArrayElement","onSessionEnd","responseFound","onResponse","res","reqData","tempRP","saveResponseProps","results","sequence","content","queryCnt","insertId","tags","resent","affectedRows","currency_abbr","isNaN","currency_rate","count_businesses","count_purposes","splice","temp","count_currencies","count_transaction_positions","count_shares","paddingTop","isLocalhost","setDebug","setLoggingOut","loggingIn","pageLoading","setPageLoading","setServerResponseReceived","requestTimedOut","setInstance","uuidv4","setSessionTimeout","reconnecting","setReconnecting","setIP","setCartID","updateInterval","currencyRate","setActivePageCurrencies","setActivePageTransactions","setActivePageShares","setCurrenciesPerPage","setTransactionsPerPage","setSharesPerPage","userSequence","setBusinessesPerPage","setActivePageBusinesses","setActiveBusinessID","setBusinessPurposesPerPage","searchTransactions","setSearchTransactions","searchPurposes","setSearchPurposes","searchShares","setSearchShares","redirectTo","setTransferType","setHelpPath1","setHelpPath3","accountPhotoPath","processRequest","requestFound","onRequest","dt","fullyear","getMonth","slice","initial","toUpperCase","icode","charCodeAt","scode","tcode","requestHandler","processUserResponse","context","errorFound","onError","userErrorHandler","userResponseHandler","processSystemResponse","systemErrorHandler","hideMessage","systemResponseHandler","getArrayObject","array","property","getRequestStatus","obj","ts","hour","isUTC","locales","diff","getTimezoneOffset","moment","add","toDate","DateTimeFormat","param","queryString","URLSearchParams","get","newPage","page","limit","selected","arr","filter","roundTo","n","digits","negative","multiplicator","pow","parseFloat","toFixed","round","sort","a","b","properties","indexOf","strLoading","strNotFound","finalStatus","retIntl","maximumFractionDigits","substr","to","fetch","method","headers","json","x","scrollX","y","scrollY","scroll","customer","pathLast","substring","lastIndexOf","select","execCommand","blur","stringNumber","parts_local","formatToParts","group","decimal","forEach","replace","on","onSignUp","onTransferSuccess","onTransfer","startSession","endSession","onSessionReset","clear","responseData","setResponseData","useSocket","latency","reason","attemptNumber","useSystemSocket","UnderConstruction","NotConnected","root","getElementById","construction","ReactDOM","render","fallback","Dispatcher","CustomToggle","decoratedOnClick","useAccordionToggle","ExpandMore","ChevronRight"],"mappings":"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wBACAvT,0BACA0E,oBACA8O,qBACAvT,uBACA0E,iBACAlP,SAAUjD,KAAKC,MAAMgD,IAErB0zB,cACA5F,gBACA7B,aACAkG,gBACAryB,YACAgsB,4BAEA9G,UACAH,YAAa9nB,KAAKC,MAAM6nB,IACxBD,UAAW7nB,KAAKC,MAAM4nB,IACtBG,wBACApT,gBACA6gB,gBAEAzyB,iBACAgzB,gBACArhB,eACAiB,OACA2E,eAAgBva,KAAKC,MAAMsa,IAC3BC,mBACAC,qBACAC,wBACAC,wBACAC,kBACAC,oBACAC,iBAAkB9a,KAAKC,MAAM6a,IAC7BiN,aAAc/nB,KAAKC,MAAM8nB,IACzBhN,yBACAC,2BACAC,8BACAC,wBACAC,yBAEAC,kBAAmBpb,KAAKC,MAAMmb,IAC9BzK,oBAAqB3Q,KAAKC,MAAM0Q,IAChCwe,aACAxI,cACAC,iBACAO,mBACAC,kBACAC,eACAC,kBACA1a,kBACAC,gBACAoL,gCACAC,sCACAiB,4BACAC,kCAIAC,+BACAgF,2BACAC,uBACAC,0BACAC,sBACAC,uBACAC,mBACAC,0BACAC,sBACAC,6BACAC,iCACA0P,sBACApY,eACAhM,UACAisB,sBACAE,kBACAE,gBAEAtgB,eACA6V,4BACAC,mBACArI,aACAC,aACAqI,aAGA8C,sBACAC,8BACAtB,+BACAC,2BACAP,wBACAC,8BACAQ,gBACAgD,gBAAiB9wB,KAAKC,MAAM6wB,IAC5Bjc,uBACAC,qBACAC,kBACA4B,iBACAe,qBACAd,uBACA2O,kBACAC,kBACAriB,iBACAC,kBACAC,gBACAC,sBACAC,gBACAmf,gBACAC,gBACAC,kBACAC,mBACA3f,YACAsU,gBAEAuf,oBACA71B,MAAOlB,KAAKC,MAAMiB,IAClBilB,KAAMnmB,KAAKC,MAAMkmB,KAObztB,GAAgB,CACpBg8B,WACAC,gBACA9N,eAGAiO,iBACAvF,aACAwF,4BACA1F,qBAEA4F,cACAlhB,oBAGAid,aAEAmE,qBAEAlE,eACAqE,SACAxO,qBACAoK,iBACAC,mBACAC,aACAtd,oBACA+Q,4BACAwM,sBACAC,wBACAC,kBACAmE,2BACAC,6BACAC,uBACAC,wBACAC,0BACAC,oBACAvE,gBACA6D,mBACAtH,eACA0D,eAEAC,eACApC,+BAEAiG,aACA5D,kBACAC,gBACA1J,2BACAjH,mBACAC,mBAEApO,iBACA+e,mBACAC,oBACAC,mBACAlf,kBACAmf,UACAC,qBACAC,sBACA+D,wBACAC,2BACA/D,2BACA7W,qBACA6a,uBACA9a,uBACA+W,mBACAC,4BACA+D,8BACA3a,iCACAF,2BACAC,4BAEAE,wBACA9K,0BACAoD,gBACA+S,iBACAC,oBACAO,sBACAC,qBACAC,kBACAC,qBACA5a,qBACAC,mBACAoL,mCACAC,yCACAkB,+BACAC,qCAIAC,kCACAuF,8BACAC,0BACAC,6BACAC,yBACAC,0BACAC,sBACAC,6BACAC,yBACAC,gCACAC,oCACAkP,yBACApY,kBACAjM,aACAisB,yBACAE,qBACAE,mBACA/9B,YACAC,WAEA05B,uBACA/E,yBACAkB,iCACA8D,kCACAC,8BACAC,2BACAC,iCACAC,mBACA9b,sBACA7B,0BACAC,wBACAC,qBACA4B,oBACAa,wBACAZ,0BACA0O,qBACAC,qBACAliB,oBACAC,qBACAC,mBACAC,yBACAC,mBACAkf,mBACAC,mBACAC,qBACAC,sBACA5M,kBACA8V,+BACAC,sBACAyK,gBACAxK,gBACAyK,iBAaI9yB,GAAc,SAAC,GAA0B,IAAxB5G,EAAuB,EAAvBA,IAAuB,IAAlBqL,YAAkB,MAAX,KAAW,EAC5C,OAAIuuB,GAAe,CAAE55B,MAAKqL,OAAMomB,UAASjZ,IAAK,MAAOsD,cAEnD6b,GAA0B,IACnB,IAEP3zB,QAAQC,IAAI,gCACLsvB,GAAS,CAAEvzB,MAAKwY,IAAK,MAAOiZ,UAASpmB,QAAQjK,KAQlDw4B,GAAiB,SAAC,GAA0C,IAAxC55B,EAAuC,EAAvCA,IAAKqL,EAAkC,EAAlCA,KAAMomB,EAA4B,EAA5BA,QAASjZ,EAAmB,EAAnBA,IAAKsD,EAAc,EAAdA,QAOjD,OANAzQ,EAAK+D,SAAWA,EAGhB+iB,EAAWnyB,GCt0BA,SAACzF,GAId,IAKMC,EAAQC,OA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hBjb,MAAO,CACLiJ,gBAAiB,cACjB9G,QAAS,oBACTuP,OAAQ,UACR6G,SAAU,SAGZ,kBAACysB,EAAD,CAAc7hB,SAAU5kB,EAAM0c,UAAW1c,EAAMmC,QAGnD,kBAACsa,EAAA,EAAU4I,SAAX,CAAoBT,SAAU5kB,EAAM0c,UAClC,kBAACwI,EAAA,EAAKpgB,KAAN,CAAWrD,MAAO,CAAEmC,QAAS5D,EAAMgc,cAChCnc,IAAMqF,SAASZ,IAAIvE,EAAKoF,UAAU,SAACC,GAClC,MAAqB,kBAAVA,EACFA,GAEP5B,IACO6B,uBAAaD,EAAD,eACdrF,EADc,CAEjBuF,OAAQ,KACR9B,IAAKA,YAaX4O,M,mBC7HZ,IAAI9N,EAAM,CACT,iBAAkB,CACjB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,GAED,wBAAyB,CACxB,IACA,EACA,GAED,qBAAsB,CACrB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,uDAAwD,CACvD,IACA,EACA,GAED,0DAA2D,CAC1D,IACA,EACA,GAED,sBAAuB,CACtB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,uBAAwB,CACvB,IACA,EACA,GAED,0BAA2B,CAC1B,IACA,EACA,GAED,wBAAyB,CACxB,IACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,IAED,sBAAuB,CACtB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,IAED,+BAAgC,CAC/B,IACA,EACA,IAED,kCAAmC,CAClC,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,GAED,8BAA+B,CAC9B,IACA,EACA,GAED,0BAA2B,CAC1B,IACA,EACA,IAED,6BAA8B,CAC7B,IACA,EACA,IAED,+BAAgC,CAC/B,IACA,EACA,GAED,kCAAmC,CAClC,IACA,EACA,GAED,yBAA0B,CACzB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,IAED,uDAAwD,CACvD,IACA,EACA,GAED,0DAA2D,CAC1D,IACA,EACA,GAED,sBAAuB,CACtB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,uBAAwB,CACvB,IACA,EACA,GAED,0BAA2B,CAC1B,IACA,EACA,GAED,wBAAyB,CACxB,IACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,IAED,wBAAyB,CACxB,IACA,EACA,GAED,2BAA4B,CAC3B,IACA,EACA,GAED,2BAA4B,CAC3B,IACA,EACA,GAED,8BAA+B,CAC9B,IACA,EACA,GAED,+BAAgC,CAC/B,IACA,EACA,GAED,kCAAmC,CAClC,IACA,EACA,GAED,yBAA0B,CACzB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,KAGF,SAASiB,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEpB,EAAKkB,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAI1E,EAAI,IAAI2E,MAAM,uBAAyBN,EAAM,KAEjD,MADArE,EAAE4E,KAAO,mBACH5E,KAIR,IAAI6E,EAAM1B,EAAIkB,GAAMS,EAAKD,EAAI,GAC7B,OAAOP,EAAoBtE,EAAE6E,EAAI,IAAIH,MAAK,WACzC,OAAOJ,EAAoBwE,EAAEhE,EAAID,EAAI,OAGvCT,EAAoBW,KAAO,WAC1B,OAAOjG,OAAOiG,KAAK5B,IAEpBiB,EAAoBU,GAAK,GACzBE,EAAOC,QAAUb,I","file":"static/js/main.604dc0fc.chunk.js","sourcesContent":["/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\n// export default (args) => {\r\nconst SubmitButton = React.memo((args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    caption: \"Submit\",\r\n    request: null,\r\n    namespace: \"Button\",\r\n    type: \"submit\",\r\n    classButton: \"\",\r\n    visible: true,\r\n    marginTop: 0,\r\n    timeout: 15000, // milliseconds\r\n    variant: \"primary\", // primary | secondary\r\n    onSubmit: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { request } = props.barrelGetters;\r\n  const { setError, setInfo } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const [requestExpired] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    setError(null);\r\n    setInfo(null);\r\n    // document.body.style.overflow = \"hidden\";\r\n    props.onSubmit();\r\n    // e.preventDefault();\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return !props.visible ? (\r\n      <></>\r\n    ) : (\r\n      <Button\r\n        type={props.type}\r\n        className={props.classButton}\r\n        onClick={onSubmit}\r\n        block\r\n        variant={props.variant === \"primary\" ? \"primary\" : \"outline-primary\"}\r\n        disabled={request === props.request && !requestExpired}\r\n        style={{\r\n          marginTop: props.marginTop + \"px\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n      >\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={request !== props.request || requestExpired}\r\n        />\r\n        &nbsp;\r\n        {props.caption}\r\n        &nbsp;\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n});\r\n\r\nexport default SubmitButton;\r\n","import \"./Card.css\";\r\nimport React, { cloneElement } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n// import { Container, Row, Col, Button } from \"react-bootstrap\";\r\n// import Button from \"react-bootstrap/Button\";\r\n\r\nexport default (args) => {\r\n  let defaults = {\r\n    title: \"Untitled\",\r\n    navigation: undefined,\r\n    footer: undefined,\r\n    header: true,\r\n    body: true,\r\n    headerPadding: \"20px\",\r\n    bodyPadding: \"20px\",\r\n    align: \"left\",\r\n    maxWidth: \"100%\",\r\n    minWidthBody: \"150px\",\r\n    maxWidthBody: \"500px\",\r\n    cardTitleClass: \"\",\r\n    headerContent: null,\r\n    transparent: false,\r\n    background: \"Transparent\",\r\n    backgroundHeader: \"var(--light)\",\r\n    backgroundBody: \"var(--light)\",\r\n    border: \"1px solid rgba(0,0,0,.125)\",\r\n    headerBorderBottom: \"1px solid rgba(0,0,0,.125)\",\r\n    onNavigationClick: () => {},\r\n  };\r\n  let props = Object.assign(defaults, args);\r\n\r\n  let key = 0;\r\n\r\n  let footer = props.footer ? <Card.Footer>{props.footer}</Card.Footer> : \"\";\r\n\r\n  return (\r\n    <Card\r\n      className=\"custom-card\"\r\n      style={{ background: props.background, border: props.border }}\r\n    >\r\n      {/* <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" /> */}\r\n      {props.header && (\r\n        <Card.Header\r\n          className=\"custom-card\"\r\n          style={{\r\n            background: props.backgroundHeader,\r\n            borderBottom: props.headerBorderBottom,\r\n            padding: props.headerPadding,\r\n          }}\r\n        >\r\n          {props.headerContent !== null ? (\r\n            props.headerContent\r\n          ) : (\r\n            <>\r\n              {props.title.length > 0 && (\r\n                <Card.Title className={props.cardTitleClass}>\r\n                  {props.title}\r\n                </Card.Title>\r\n              )}\r\n              <Nav\r\n                variant=\"tabs\"\r\n                defaultActiveKey={props.navigationdefaultActiveKey}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexWrap: \"wrap\",\r\n                }}\r\n              >\r\n                {props.navigation &&\r\n                  props.navigation.map((item, key) => (\r\n                    <Nav.Item key={key}>\r\n                      <Nav.Link\r\n                        className=\"custom-card\"\r\n                        href={item.link}\r\n                        onClick={() => props.onNavigationClick(item.link)}\r\n                        style={{ color: \"var(--dark)\" }}\r\n                      >\r\n                        {item.name}\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  ))}\r\n              </Nav>\r\n            </>\r\n          )}\r\n        </Card.Header>\r\n      )}\r\n\r\n      {props.body && (\r\n        <Card.Body\r\n          className=\"custom-card\"\r\n          style={{\r\n            background: props.backgroundBody,\r\n            textAlign: props.align,\r\n            maxWidth: props.maxWidth,\r\n            padding: props.bodyPadding,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              minWidth: props.minWidthBody,\r\n              maxWidth: props.maxWidthBody,\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            {React.Children.map(args.children, (child) => {\r\n              if (typeof child !== \"object\") {\r\n                return child;\r\n              } else {\r\n                key++;\r\n                return cloneElement(child, {\r\n                  styles: null,\r\n                  key: key,\r\n                });\r\n              }\r\n            })}\r\n          </div>\r\n        </Card.Body>\r\n      )}\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n","var map = {\n\t\"./en/topics/common-questions.js\": [\n\t\t160,\n\t\t4\n\t],\n\t\"./lv/topics/common-questions.js\": [\n\t\t164,\n\t\t7\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 258;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./en/articles/i-forgot-my-password-how-do-i-reset-it.js\": [\n\t\t157,\n\t\t2\n\t],\n\t\"./lv/articles/i-forgot-my-password-how-do-i-reset-it.js\": [\n\t\t161,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 265;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./en/leads/LeadLogIn.js\": [\n\t\t158,\n\t\t3\n\t],\n\t\"./lv/leads/LeadLogIn.js\": [\n\t\t162,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 267;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./en/toasts/ToastDefault.js\": [\n\t\t159,\n\t\t1\n\t],\n\t\"./lv/toasts/ToastDefault.js\": [\n\t\t163,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 269;\nmodule.exports = webpackAsyncContext;","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n// not like to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    // lng: \"lv\",\r\n    // ns: [\"LogIn\", \"SignUp\"],\r\n    defaultNS: \"Default\",\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: \"languageChanged loaded\",\r\n      bindStore: \"added removed\",\r\n      nsMode: \"default\",\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","const dev = {\r\n  uri: {\r\n    ENDPOINT: \"http://localhost:9000\",\r\n    SITEMODE: \"DEVELOPMENT\",\r\n  },\r\n};\r\n\r\nconst dev2 = {\r\n  uri: {\r\n    ENDPOINT: \"http://192.168.2.100:5000\",\r\n    SITEMODE: \"DEVELOPMENT2\",\r\n  },\r\n};\r\n\r\nconst staging = {\r\n  uri: {\r\n    ENDPOINT: \"https://dev.local-currency.com\",\r\n    SITEMODE: \"STAGING\",\r\n  },\r\n};\r\n\r\nconst prod = {\r\n  uri: {\r\n    ENDPOINT: \"https://local-currency.com\",\r\n    SITEMODE: \"PRODUCTION\",\r\n  },\r\n};\r\n\r\nconst hostname = window && window.location && window.location.hostname;\r\n\r\nlet config;\r\nswitch (hostname) {\r\n  case \"localhost\":\r\n    config = dev;\r\n    break;\r\n  case \"192.168.2.100\":\r\n    config = dev2;\r\n    break;\r\n  case \"dev.local-currency.com\":\r\n    config = staging;\r\n    break;\r\n  case \"local-currency.com\":\r\n    config = prod;\r\n    break;\r\n  default:\r\n    config = dev;\r\n    break;\r\n}\r\n\r\nexport default {\r\n  ...config,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nexport const useStickyState = (defaultValue, key) => {\r\n  const [value, setValue] = useState(() => {\r\n    const stickyValue = window.localStorage.getItem(key);\r\n    // console.log(\"stickyValue:\", typeof stickyValue);\r\n\r\n    return stickyValue !== null &&\r\n      typeof stickyValue !== \"undefined\" &&\r\n      stickyValue !== \"undefined\"\r\n      ? JSON.parse(stickyValue)\r\n      : defaultValue;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n  return [value, setValue];\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useTimeout = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setTimeout(tick, delay);\r\n      return () => clearTimeout(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","import React from \"react\";\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n    console.log(\"Error boundary:\", error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      //   return <h1>Something went wrong.</h1>;\r\n      return <></>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Modal, Navbar, Nav } from \"react-bootstrap\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ModalMessage\",\r\n    centered: true,\r\n    message: \"\",\r\n    title: null,\r\n    footer: null,\r\n    // bodyStyle: { padding: \"1rem\" },\r\n    onHide: () => {},\r\n    size: \"sm\",\r\n    file: null,\r\n    backdrop: true, // \"static\"\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const ExternalFile =\r\n    props.file !== null\r\n      ? React.lazy(() => import(`../locale/${props.file}`))\r\n      : \"\";\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size={props.size}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered={props.centered}\r\n        backdrop={props.backdrop}\r\n      >\r\n        {props.title !== null && (\r\n          <Modal.Header closeButton>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src=\"gfx/zlogo_light.png\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  alt=\"\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                  {props.title}\r\n                </Modal.Title>\r\n              </Nav>\r\n            </Navbar>\r\n          </Modal.Header>\r\n        )}\r\n        <Modal.Body\r\n          style={{ maxHeight: \"calc(100vh - 210px)\", overflowY: \"auto\" }}\r\n        >\r\n          {props.message !== \"\" ? (\r\n            props.message\r\n          ) : (\r\n            <ErrorBoundary>\r\n              <ExternalFile />\r\n            </ErrorBoundary>\r\n          )}\r\n        </Modal.Body>\r\n        {props.footer !== null && (\r\n          <Modal.Footer>\r\n            <Button block onClick={props.onHide}>\r\n              {t(\"Close\")}\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, Alert, Col } from \"react-bootstrap\";\r\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n// import Dropzone from \"../dropzone\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport ModalMessage from \"../modalMessage\";\r\nimport timezones from \"./timezones.en.json\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    request: \"get user sequence\", // \"register account\",\r\n    namespace: \"AccountRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    signedIn,\r\n    accountNumber,\r\n    // accountPhotoPath,\r\n    userData,\r\n    language,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    debug,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n  } = props.barrelSetters;\r\n  const { getReviser, getWorkplace, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const [userAgreementShow, setUserAgreementShow] = useStickyState(\r\n    false,\r\n    \"userAgreementShow\"\r\n  );\r\n  const [privacyPolicyShow, setPrivacyPolicyShow] = useStickyState(\r\n    false,\r\n    \"privacyPolicyShow\"\r\n  );\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    // dropzoneHook: yup.string().required(t(\"Photo ID is required\")),\r\n    timezone: yup.string().required(t(\"Timezone is required\")),\r\n    birthYear: yup.number().required(t(\"Year is required\")),\r\n    birthMonth: yup.number().required(t(\"Month is required\")),\r\n    birthDay: yup.number().required(t(\"Day is required\")),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Send account registration request\r\n   * @param {object} data\r\n   */\r\n  const sendAccountRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.email = userData.email;\r\n\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    delete data.birthYear;\r\n    delete data.birthMonth;\r\n    delete data.birthDay;\r\n\r\n    const newDate = composeDate(userBirthYear, userBirthMonth, userBirthDay);\r\n    data.birthDate = newDate;\r\n\r\n    if (newDate !== \"\") {\r\n      if (sendAccountRegistrationRequest(data)) {\r\n        // Account registration request was submitted\r\n      }\r\n    }\r\n  };\r\n\r\n  const timezones_sorted = timezones;\r\n\r\n  /**\r\n   * Validates a date\r\n   * @param {string} dateString\r\n   */\r\n  const isValidDate = (dateString) => {\r\n    let dateformat = /^(0?[1-9]|1[0-2])[\\/](0?[1-9]|[1-2][0-9]|3[01])[\\/]\\d{4}$/;\r\n\r\n    // Match the date format through regular expression\r\n    if (dateString.match(dateformat)) {\r\n      let operator = dateString.split(\"/\");\r\n\r\n      // Extract the string into month, date and year\r\n      let datepart = [];\r\n      if (operator.length > 1) {\r\n        datepart = dateString.split(\"/\");\r\n      }\r\n      let month = parseInt(datepart[0]);\r\n      let day = parseInt(datepart[1]);\r\n      let year = parseInt(datepart[2]);\r\n\r\n      // Create list of days of a month\r\n      let ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n      if (month === 1 || month > 2) {\r\n        if (day > ListofDays[month - 1]) {\r\n          ///This check is for Confirming that the date is not out of its range\r\n          return false;\r\n        }\r\n      } else if (month === 2) {\r\n        let leapYear = false;\r\n        if ((!(year % 4) && year % 100) || !(year % 400)) {\r\n          leapYear = true;\r\n        }\r\n        if (leapYear === false && day >= 29) {\r\n          return false;\r\n        } else if (leapYear === true && day > 29) {\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Composes a date\r\n   * @param {string} year\r\n   * @param {string} month\r\n   * @param {string} day\r\n   */\r\n  const composeDate = (year, month, day) => {\r\n    const newDate = `${month}/${day}/${year}`;\r\n    if (isValidDate(newDate)) {\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        setUserBirthDateError(\"\");\r\n\r\n        return newDate;\r\n      } else {\r\n        setUserBirthDateError(\"\");\r\n        return \"\";\r\n      }\r\n    } else {\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        setUserBirthDateError(t(\"Date must be valid\"));\r\n        return \"\";\r\n      } else {\r\n        setUserBirthDateError(\"\");\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const yearNow = new Date().getFullYear();\r\n\r\n  /**\r\n   * Form\r\n   * @param {*} param0\r\n   */\r\n  const AccountRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    setFieldValue,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Form.Row style={{ margin: \"0 0\" }}>\r\n        <Form.Group\r\n          as={Col}\r\n          controlId=\"formGridDateOfBirth\"\r\n          style={{ margin: \"0 0\" }}\r\n        >\r\n          <Form.Label>{t(\"Date of birth\")}</Form.Label>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridYear\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthYear\"\r\n            value={values.birthYear}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthYear(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthYear && touched.birthYear}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Year\")}\r\n            </option>\r\n            {Array.from(Array(120).keys()).map((key) => {\r\n              let year = yearNow - key;\r\n\r\n              return (\r\n                <option key={key} value={year}>\r\n                  {year}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthYear}\r\n          </Form.Control.Feedback>\r\n          <div className=\"invalid-feedback-custom\">{userBirthDateError}</div>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridMonth\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthMonth\"\r\n            value={values.birthMonth}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthMonth(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthMonth && touched.birthMonth}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Month\")}\r\n            </option>\r\n            {Array.from(Array(12).keys()).map((key) => {\r\n              let date = new Date(`${key + 1}/1/1970`);\r\n              let monthName = date.toLocaleString(language, { month: \"long\" });\r\n              let monthNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={monthNumber}>\r\n                  {monthNumber} - {monthName}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthMonth}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridDay\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthDay\"\r\n            value={values.birthDay}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthDay(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthDay && touched.birthDay}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Day\")}\r\n            </option>\r\n            {Array.from(Array(31).keys()).map((key) => {\r\n              let dayNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={dayNumber}>\r\n                  {dayNumber}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthDay}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Group controlId=\"validationFormikTimezone\">\r\n        <Form.Label>{t(\"Timezone\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          custom\r\n          name=\"timezone\"\r\n          value={values.timezone}\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n            setUserTimezone(e.target.value);\r\n          }}\r\n          isInvalid={!!errors.timezone && touched.timezone}\r\n        >\r\n          <option value=\"\">{t(\"Choose...\")}</option>\r\n          {timezones_sorted.map((element, key) => (\r\n            <option\r\n              key={key}\r\n              value={`${(((element.Offset + 12) % 24) + 1)\r\n                .toString()\r\n                .padStart(2, \"0\")} - ${element.Name}`}\r\n            >\r\n              {element.Name}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.timezone}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <div style={{ paddingBottom: \"10px\" }}>\r\n        {t(\"Agree to terms and conditions\")}\r\n      </div>\r\n\r\n      <Trans i18nKey=\"AccountRegistration:The User Agreement and the Privacy Policy\">\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setUserAgreementShow(true)}>\r\n          User Agreement\r\n        </a>\r\n\r\n        <br />\r\n\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setPrivacyPolicyShow(true)}>\r\n          Privacy Policy\r\n        </a>\r\n      </Trans>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  if (signedIn === false)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"User not logged in\")}</Alert.Heading>\r\n          <p>\r\n            <Trans i18nKey=\"AccountRegistration:Please log in first\">\r\n              Please log in first.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  if (!debug && accountNumber !== null)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"Account successfully registered\")}</Alert.Heading>\r\n          <p>\r\n            <Trans\r\n              i18nKey=\"AccountRegistration:Account with your personal ID successfully registered\"\r\n              accountNumber={accountNumber}\r\n            >\r\n              Account with the personal ID\r\n              <strong>{{ accountNumber }}</strong>\r\n              successfully registered.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        show={userAgreementShow}\r\n        file={`${language}/UserAgreement`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"User Agreement\")}\r\n        footer=\"\"\r\n        onHide={() => setUserAgreementShow(false)}\r\n      />\r\n\r\n      <ModalMessage\r\n        show={privacyPolicyShow}\r\n        file={`${language}/PrivacyPolicy`}\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"Privacy Policy\")}\r\n        footer=\"\"\r\n        onHide={() => setPrivacyPolicyShow(false)}\r\n      />\r\n\r\n      <Card title={t(\"Open account\")} border={0}>\r\n        <Formik\r\n          component={AccountRegistrationForm}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            // dropzoneHook: accountPhotoPath,\r\n            timezone: userTimezone,\r\n            birthYear: userBirthYear,\r\n            birthMonth: userBirthMonth,\r\n            birthDay: userBirthDay,\r\n          }}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Pagination\",\r\n    size: \"md\",\r\n    countItems: 0,\r\n    itemsPerPage: 5,\r\n    active: 0, // active page\r\n    onClick: () => {},\r\n    align: \"center\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const pages = Math.ceil(props.countItems / props.itemsPerPage);\r\n\r\n  if (pages < 2) return <></>;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  const onClick = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = props.active > 1 ? props.active - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          props.active < Math.ceil(props.countItems / props.itemsPerPage)\r\n            ? props.active + 1\r\n            : Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // getBusinesses(number);\r\n    props.onClick(number);\r\n  };\r\n\r\n  const getPages = () => {\r\n    let items = [];\r\n    for (let number = 1; number <= pages; number++) {\r\n      if (\r\n        number === 1 ||\r\n        number === pages ||\r\n        (number >= props.active - 1 && number <= props.active + 1)\r\n      ) {\r\n        items.push(\r\n          <Pagination.Item\r\n            key={number}\r\n            active={number === props.active}\r\n            onClick={() => onClick(number)}\r\n          >\r\n            {number}\r\n          </Pagination.Item>\r\n        );\r\n      } else if (number === 2 || number === pages - 1) {\r\n        items.push(<Pagination.Ellipsis key={number} disabled />);\r\n      }\r\n    }\r\n    return items;\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const { align } = props;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: `${align}`,\r\n          // backgroundColor: \"red\",\r\n        }}\r\n      >\r\n        <span style={{ display: \"inline-block\" }}>\r\n          <Pagination size={props.size} style={{ padding: 0, margin: 0 }}>\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.First onClick={() => props.onClick(\"First\")} />\r\n                <Pagination.Prev onClick={() => props.onClick(\"Prev\")} />\r\n              </>\r\n            )}\r\n\r\n            {getPages()}\r\n\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.Next onClick={() => props.onClick(\"Next\")} />\r\n                <Pagination.Last onClick={() => props.onClick(\"Last\")} />\r\n              </>\r\n            )}\r\n          </Pagination>\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"react-calendar/dist/Calendar.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Col, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search as SearchIcon, Replay as ReplayIcon } from \"@material-ui/icons\";\r\n// import Autosuggest from \"react-autosuggest\";\r\n// import Calendar from \"react-calendar\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n// import DatePicker from \"../datePicker\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Search\",\r\n    request: \"find currencies\",\r\n    advancedSearch: false,\r\n    placeholder: \"SEARCH...\",\r\n    captionAdvancedSearch: \"Advanced search\",\r\n    onSubmit: () => {},\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { search } = props.barrelGetters;\r\n  const { setSearch } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /** \r\n    * Hooks\r\n    ============================================================================ */\r\n  // const [suggestions, setSuggestions] = useStickyState([], \"suggestions\");\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  const refSearch = React.createRef();\r\n\r\n  /**\r\n    * Clear refs\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    const tempRefSearch = refSearch.current;\r\n    return () => {\r\n      if (tempRefSearch !== null && search !== tempRefSearch.value)\r\n        setSearch(tempRefSearch.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    search: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    // findCurrencies(data.search);\r\n    props.onSubmit(data.search);\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * Search\r\n         */}\r\n        <Form.Group style={{ padding: 0, margin: 0 }}>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={props.placeholder}\r\n              name=\"search\"\r\n              ref={refSearch}\r\n              value={values.search}\r\n              autoComplete=\"search\"\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.search && touched.search}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text\r\n                id=\"inputGroupAppend\"\r\n                onClick={() => onSubmit(values)}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <SearchIcon style={{ color: \"var(--dark)\" }} />\r\n              </InputGroup.Text>\r\n            </InputGroup.Append>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.search}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n          {props.advancedSearch && (\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <button\r\n                className=\"button-transparent\"\r\n                style={{ margin: \"0\", padding: \"0\" }}\r\n              >\r\n                <small className=\"text-muted\">\r\n                  {props.captionAdvancedSearch}\r\n                </small>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        search: search,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport flatpickr from \"flatpickr\";\r\n// import { Latvian } from \"flatpickr/dist/l10n/lv.js\";\r\nimport * as language from \"flatpickr/dist/l10n\"; // DO NOT REMOVE !!!\r\nimport { DateRange } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DatePickerWrapper\",\r\n    request: \"get something\",\r\n    value: \"\",\r\n    placeholder: \"Date\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  const refDatePicker = React.createRef();\r\n\r\n  /**\r\n    * States\r\n    ============================================================================ */\r\n  // const [isOpen, setIsOpen] = useState(false);\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  let fp = null; // flatPicker instance\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    fp = flatpickr(refDatePicker.current, props.options);\r\n\r\n    return () => {\r\n      // on unmount\r\n      fp.destroy();\r\n      fp = null;\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (fp === null) return;\r\n\r\n  //   console.log(\"isOpen:\", isOpen);\r\n\r\n  //   // isOpen ? fp.open() : fp.close();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [isOpen]);\r\n\r\n  // useEffect(() => {\r\n  //   if (fp !== null) return;\r\n\r\n  //   fp = flatpickr(refDatePicker.current, props.options);\r\n\r\n  //   // eslint-disable-next-line\r\n  // });\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    datePicker: yup.string().required(t(\"Date is required\")),\r\n  });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <InputGroup>\r\n      <Form.Control\r\n        type=\"string\"\r\n        placeholder={props.placeholder}\r\n        aria-describedby=\"inputGroupPrepend\"\r\n        ref={refDatePicker}\r\n        name=\"datePicker\"\r\n        autoComplete=\"off\"\r\n        value={values.datePicker}\r\n        onChange={handleChange}\r\n        isInvalid={!!errors.datePicker && touched.datePicker}\r\n      />\r\n      <InputGroup.Append>\r\n        <InputGroup.Text\r\n          onClick={() => {\r\n            // console.log(\"click\");\r\n            if (fp !== null) fp.open();\r\n\r\n            // setIsOpen(!isOpen);\r\n          }}\r\n          style={{\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <DateRange style={{ color: \"var(--dark)\" }} />\r\n        </InputGroup.Text>\r\n      </InputGroup.Append>\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        {errors.datePicker}\r\n      </Form.Control.Feedback>\r\n    </InputGroup>\r\n  );\r\n\r\n  /**\r\n     * Formik return\r\n     ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        datePicker: props.value,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"flatpickr/dist/themes/material_green.css\";\r\nimport \"./DatePicker.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { Form, InputGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import Flatpickr from \"react-flatpickr\";\r\n// eslint-disable-next-line\r\n// import { Latvian } from \"flatpickr/dist/l10n/lv.js\";\r\n// import { DateRange } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\nimport Flatpickr from \"./DatePickerWrapper\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DatePicker\",\r\n    request: \"get something\",\r\n    value: \"\",\r\n    onChange: () => {},\r\n    placeholder: \"Date\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  // const [placeholder, setPlaceholder] = useState(props.placeholder);\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  // const refFlatpickr = React.createRef();\r\n\r\n  // Flatpickr(myElem, {\r\n  //   locale: Latvian, // locale for this instance only\r\n  // });\r\n\r\n  // Flatpickr.localize(Latvian);\r\n  // Flatpickr.localize(Flatpickr.l10ns.lv);\r\n  // flatpickr(\"mySelector\");\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  // const schema = yup.object({\r\n  //   dateStart: yup.string().required(t(\"Start date is required\")),\r\n  // });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  // const onSubmit = (data) => {\r\n  //   console.log(data);\r\n  // };\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <Flatpickr\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      options={{\r\n        locale: language,\r\n        showMonths: 1,\r\n        inline: false,\r\n        shorthandCurrentMonth: false,\r\n        allowInput: true,\r\n        clickOpens: false,\r\n        monthSelectorType: \"static\",\r\n        altInput: true,\r\n        altFormat: t(\"Y-m-d\"),\r\n        dateFormat: \"Y-m-d\", // \"d.m.Y\",\r\n        // dateFormat: \"Y-m-d\",\r\n        // minDate: new Date().fp_incr(-7),\r\n        maxDate: \"today\",\r\n        // mode: \"range\",\r\n        defaultDate: props.value,\r\n        onChange: function (selectedDates, dateStr, instance) {\r\n          console.log(selectedDates, dateStr, instance);\r\n          props.onChange(dateStr);\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"react-calendar/dist/Calendar.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Col, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search as SearchIcon, Replay as ReplayIcon } from \"@material-ui/icons\";\r\n// import Autosuggest from \"react-autosuggest\";\r\n// import Calendar from \"react-calendar\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n// import { useStickyState } from \"../../utils/state\";\r\nimport DatePicker from \"../datePicker\";\r\n// import SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DateRangePicker\",\r\n    request: \"find currencies\",\r\n    caption: \"Period of time\",\r\n    captionStartDate: \"Start date\",\r\n    captionEndDate: \"End date\",\r\n    captionUpdate: \"Update\",\r\n    onSubmit: () => {},\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { search, dateRangeStart, dateRangeEnd } = props.barrelGetters;\r\n  const { setSearch, setDateRangeStart, setDateRangeEnd } = props.barrelSetters;\r\n  const {\r\n    getTransactions,\r\n    formatDate,\r\n    clearRequestStatus,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /** \r\n     * Hooks\r\n     ============================================================================ */\r\n  // const [suggestions, setSuggestions] = useStickyState([], \"suggestions\");\r\n\r\n  /**\r\n     * Create refs\r\n     ============================================================================ */\r\n  const refSearch = React.createRef();\r\n  // const refDateRangeStart = React.createRef();\r\n  // const refDateRangeEnd = React.createRef();\r\n\r\n  // useEffect(() => {\r\n  //   const tempRefDateRangeStart = refDateRangeStart.current;\r\n  //   const tempRefDateRangeEnd = refDateRangeEnd.current;\r\n  //   return () => {\r\n  //     if (\r\n  //       tempRefDateRangeStart !== null &&\r\n  //       dateRangeStart !== tempRefDateRangeStart.value\r\n  //     )\r\n  //       setDateRangeStart(tempRefDateRangeStart.value);\r\n\r\n  //     if (\r\n  //       tempRefDateRangeEnd !== null &&\r\n  //       dateRangeEnd !== tempRefDateRangeEnd.value\r\n  //     )\r\n  //       setDateRangeEnd(tempRefDateRangeEnd.value);\r\n  //   };\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, []);\r\n\r\n  /**\r\n     * Clear refs\r\n     ============================================================================ */\r\n  useEffect(() => {\r\n    const tempRefSearch = refSearch.current;\r\n    return () => {\r\n      if (tempRefSearch !== null && search !== tempRefSearch.value)\r\n        setSearch(tempRefSearch.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    dateStart: yup.string().required(t(\"Date start is required\")),\r\n    dateEnd: yup.string().required(t(\"Date end is required\")),\r\n  });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = () => {\r\n    getTransactions(1);\r\n\r\n    // findCurrencies(data.search);\r\n    // props.onSubmit(data.search);\r\n  };\r\n\r\n  // const handleChange = (data) => {\r\n  //   console.log(data);\r\n  // };\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const DateRangePickerForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * Caption: Period of time\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          <Form.Group\r\n            as={Col}\r\n            controlId=\"formGridPeriodOfTime\"\r\n            style={{ margin: \"0\", padding: \"0 0\" }}\r\n          >\r\n            <Form.Label>{props.caption}</Form.Label>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        {/**\r\n         * Date start / Date end\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          {/**\r\n           * Date start\r\n           */}\r\n          <Form.Group\r\n            as={Col}\r\n            style={{ margin: \"0\", padding: \"0\" }}\r\n            controlId=\"validationFormikDateStart\"\r\n          >\r\n            <DatePicker\r\n              name=\"dateStart\"\r\n              value={values.dateStart}\r\n              onChange={(data) => {\r\n                // console.log(data);\r\n                setDateRangeStart(data);\r\n              }}\r\n              isInvalid={!!errors.dateStart && touched.dateStart}\r\n              placeholder={props.captionStartDate}\r\n              {...args}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.dateStart}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          {/**\r\n           * Dash\r\n           */}\r\n          <span style={{ margin: \"0\", padding: \"0.4rem 0.5rem\" }}>-</span>\r\n\r\n          {/**\r\n           * Date end\r\n           */}\r\n          <Form.Group\r\n            as={Col}\r\n            style={{ padding: \"0 0\" }}\r\n            controlId=\"validationFormikDateEnd\"\r\n          >\r\n            <DatePicker\r\n              name=\"dateEnd\"\r\n              value={values.dateEnd}\r\n              onChange={(data) => {\r\n                // console.log(data);\r\n                setDateRangeEnd(data);\r\n              }}\r\n              isInvalid={!!errors.dateEnd && touched.dateEnd}\r\n              placeholder={props.captionEndDate}\r\n              {...args}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.dateEnd}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        {/**\r\n         * Update\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onSubmit}\r\n            className=\"button-transparent\"\r\n            style={{ margin: \"-0.5rem 0 0 0\", padding: \"0\" }}\r\n          >\r\n            <ReplayIcon className=\"sm\" style={{ color: \"var(--dark)\" }} />\r\n            <span\r\n              style={{\r\n                margin: \"0 0.5rem\",\r\n              }}\r\n            >\r\n              {props.captionUpdate}\r\n            </span>\r\n          </button>\r\n        </Form.Row>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n     * Formik return\r\n     ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={DateRangePickerForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        dateStart: dateRangeStart,\r\n        dateEnd: dateRangeEnd,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { ListGroup, Badge } from \"react-bootstrap\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { ArrowRightAlt } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\nimport DateRangePicker from \"../dateRangePicker\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    request: \"get transactions\",\r\n    namespace: \"Transactions\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    transactions,\r\n    countTransactions,\r\n    activePageTransactions,\r\n    transactionsPerPage,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const {\r\n    getTransactions,\r\n    findTransactions,\r\n    showRequestStatus,\r\n    format,\r\n    formatDate,\r\n    formatPerCent,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageTransactions > 1 ? activePageTransactions - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageTransactions <\r\n          Math.ceil(countTransactions / transactionsPerPage)\r\n            ? activePageTransactions + 1\r\n            : Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getTransactions(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <Search\r\n          advancedSearch={false}\r\n          placeholder={t(\"Find transactions...\")}\r\n          captionAdvancedSearch={t(\"Advanced search\")}\r\n          onSubmit={findTransactions}\r\n          {...args}\r\n        />\r\n        <br />\r\n        <DateRangePicker\r\n          caption={t(\"Period of time\")}\r\n          captionStartDate={t(\"Start date\")}\r\n          captionEndDate={t(\"End date\")}\r\n          captionUpdate={t(\"Update\")}\r\n          {...args}\r\n        />\r\n      </div>\r\n      <ListGroup variant=\"flush\">\r\n        {transactions !== null &&\r\n          transactions.map((transaction, keyTransactions) => {\r\n            cnt++;\r\n\r\n            const {\r\n              // business_description,\r\n              // business_id,\r\n              // business_image,\r\n              // business_link,\r\n              // business_status,\r\n              business_title,\r\n              comment,\r\n              conv_amount,\r\n              created,\r\n              // currency,\r\n              // exchange_rate,\r\n              sender_firstname,\r\n              sender_lastname,\r\n              recipient_firstname,\r\n              recipient_lastname,\r\n              // purpose_description,\r\n              purpose_id,\r\n              // purpose_image,\r\n              // purpose_link,\r\n              // purpose_status,\r\n              purpose_title,\r\n              recipient_id,\r\n              roles,\r\n              share,\r\n              share_per_cent,\r\n              sender_id,\r\n              // sender_status,\r\n              // recipient_status,\r\n              from_account,\r\n              to_account,\r\n              type,\r\n            } = transaction;\r\n\r\n            const i_am_sender = sender_id === accountNumber;\r\n            const i_am_recipient = recipient_id === accountNumber;\r\n            const t_from_account = t(from_account);\r\n            const t_to_account = t(to_account);\r\n\r\n            const roles_available =\r\n              roles !== null && roles !== \"-\" && typeof roles !== \"undefined\";\r\n            const arrRoles = roles_available ? roles.split(\",\") : [];\r\n\r\n            const shares_available =\r\n              typeof share !== \"undefined\" && share !== null && share !== \"-\";\r\n\r\n            if (type === \"transfer U2S\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n\r\n                  <Trans\r\n                    i18nKey=\"Transactions:fromAccountToAccount\"\r\n                    t_from_account={t_from_account}\r\n                    t_to_account={t_to_account}\r\n                  >\r\n                    {{ t_from_account }}{\" \"}\r\n                    <ArrowRightAlt style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                    {{ t_to_account }}\r\n                  </Trans>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {i_am_recipient ? (\r\n                    <>\r\n                      {sender_firstname} {sender_lastname}\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {recipient_firstname} {recipient_lastname}\r\n                    </>\r\n                  )}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  {comment !== \"\" && <br />}\r\n                  {comment}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer V2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {t(\"Daily allowance\")}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2B\") {\r\n              const sender = !i_am_sender ? (\r\n                <>\r\n                  {sender_firstname} {sender_lastname}\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              );\r\n              return (\r\n                <ListGroup.Item key={keyTransactions} action>\r\n                  {sender}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  {!i_am_sender && <br />}\r\n                  {purpose_id}\r\n                  {comment !== \"\" && comment !== null && (\r\n                    <>\r\n                      <br />\r\n                      {comment}\r\n                    </>\r\n                  )}\r\n                  <br />\r\n                  {business_title} &middot; {purpose_title}\r\n                  {roles_available && (\r\n                    <>\r\n                      <br />\r\n                      {arrRoles.map((role, key) => {\r\n                        return (\r\n                          <span key={key}>\r\n                            {\" \"}\r\n                            <Badge pill variant=\"secondary\">\r\n                              {role}\r\n                            </Badge>\r\n                          </span>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  )}{\" \"}\r\n                  {shares_available && (\r\n                    <>\r\n                      <br />\r\n                      {share} {t(\"shares\")} ({formatPerCent(share_per_cent)})\r\n                    </>\r\n                  )}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n\r\n              // TODO: check if this works\r\n            } else {\r\n              console.log(\"Unknown transfer type:\", type);\r\n\r\n              return <></>;\r\n            }\r\n          })}\r\n      </ListGroup>\r\n\r\n      {showRequestStatus(\r\n        \"get transactions / SELECT transactions\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No transactions\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <br />\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countTransactions}\r\n        itemsPerPage={transactionsPerPage}\r\n        active={activePageTransactions}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Toast, Badge } from \"react-bootstrap\";\r\nimport { Settings } from \"@material-ui/icons\";\r\nimport _ from \"lodash\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Shareholder\",\r\n    request: \"change share\",\r\n    purpose: null,\r\n    shareholder: null,\r\n    closeButton: true,\r\n    rangeControl: true,\r\n    sharePerCent: null,\r\n    businessTitle: null,\r\n    purposeTitle: null,\r\n    businessOwnerFirstname: null,\r\n    businessOwnerLastname: null,\r\n    sharesCreated: null,\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { purposeShareholders } = props.barrelGetters;\r\n  const { setPurposeShareholders } = props.barrelSetters;\r\n  const { sendRequest, formatPerCent, formatDate } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const [userQuery, setUserQuery] = useState(props.share);\r\n  const delayedQuery = useRef(_.debounce((q) => sendQuery(q), 2000)).current;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const onChange = (e) => {\r\n    setUserQuery(e.target.value);\r\n    delayedQuery(e.target.value);\r\n  };\r\n\r\n  const onClose = () => {\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    return sendRequest({ req: \"remove shareholder\", data });\r\n  };\r\n\r\n  const sendQuery = (delayedQuery) => {\r\n    const ps = purposeShareholders;\r\n    ps[props.id].share = delayedQuery;\r\n    setPurposeShareholders(JSON.stringify(ps));\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    data.share = delayedQuery;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const sharesLabelId = `sharesLabel${props.key}`;\r\n    return (\r\n      <Toast key={props.key} onClose={onClose} style={{ minWidth: \"100%\" }}>\r\n        <Toast.Header closeButton={props.closeButton}>\r\n          <strong className=\"mr-auto\">\r\n            {props.firstname} {props.lastname}{\" \"}\r\n            <small>\r\n              <Settings\r\n                hidden={true}\r\n                fontSize=\"small\"\r\n                style={{ color: \"var(--dark)\" }}\r\n              />\r\n            </small>\r\n          </strong>\r\n          <small>\r\n            <span id={sharesLabelId}>{userQuery}</span> {t(\"shares\")}\r\n          </small>\r\n        </Toast.Header>\r\n        <Toast.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formRoles\">\r\n              <div>\r\n                {props.roles.map((role, key) => {\r\n                  return (\r\n                    <span key={key}>\r\n                      <Badge pill variant=\"secondary\">\r\n                        {role}\r\n                      </Badge>{\" \"}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Form.Group>\r\n\r\n            {props.rangeControl && (\r\n              <Form.Group controlId=\"formBasicRange\">\r\n                <Form.Control\r\n                  type=\"range\"\r\n                  custom\r\n                  variant=\"light\"\r\n                  // value={share}\r\n                  defaultValue={userQuery}\r\n                  // value={userQuery}\r\n                  min={1}\r\n                  max={1000}\r\n                  step={1}\r\n                  // ref={this.input}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            )}\r\n          </Form>\r\n          <span>\r\n            {props.sharePerCent !== null && formatPerCent(props.sharePerCent)}{\" \"}\r\n            {props.businessTitle !== null && props.businessTitle}{\" \"}\r\n            {props.businessTitle !== null && props.purposeTitle !== null && (\r\n              <> &middot; </>\r\n            )}\r\n            {props.purposeTitle !== null && props.purposeTitle}{\" \"}\r\n          </span>\r\n          {props.sharesCreated !== null && (\r\n            <>\r\n              <br />\r\n              {formatDate(props.sharesCreated, {\r\n                month: \"long\",\r\n                day: \"numeric\",\r\n                year: \"numeric\",\r\n              })}\r\n            </>\r\n          )}{\" \"}\r\n          {(props.businessOwnerFirstname !== null ||\r\n            props.businessOwnerLastname !== null) && <br />}\r\n          {props.businessOwnerFirstname !== null &&\r\n            props.businessOwnerFirstname}{\" \"}\r\n          {props.businessOwnerLastname !== null && props.businessOwnerLastname}{\" \"}\r\n        </Toast.Body>\r\n      </Toast>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Form, InputGroup, Button, Table, ListGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n// import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Search from \"../search\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    request: \"get shares\",\r\n    namespace: \"Shares\",\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    shares,\r\n    countShares,\r\n    activePageShares,\r\n    sharesPerPage,\r\n    // accountNumber,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  // const {  } = props.barrelSetters;\r\n  const {\r\n    getShares,\r\n    // getRequestStatus,\r\n    showRequestStatus,\r\n    findShares,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onPageSelect = (number) => {\r\n    console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageShares > 1 ? activePageShares - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageShares < Math.ceil(countShares / sharesPerPage)\r\n            ? activePageShares + 1\r\n            : Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getShares(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <>\r\n      <Search\r\n        advancedSearch={false}\r\n        placeholder={t(\"Find shares...\")}\r\n        captionAdvancedSearch={t(\"Advanced search\")}\r\n        onSubmit={findShares}\r\n        {...args}\r\n      />\r\n      <br />\r\n      {shares !== null &&\r\n        shares.map((share, keyShares) => {\r\n          cnt++;\r\n\r\n          const {\r\n            // business_description,\r\n            // business_id,\r\n            // business_image,\r\n            // business_link,\r\n            // business_status,\r\n            business_title,\r\n            owner_firstname,\r\n            owner_lastname,\r\n            // owner_status,\r\n            // owner_uid,\r\n            // purpose_description,\r\n            purpose_id,\r\n            // purpose_image,\r\n            // purpose_link,\r\n            // purpose_status,\r\n            purpose_title,\r\n            shareholder_id,\r\n            shares_created,\r\n            // shares_description,\r\n            share_per_cent,\r\n            shares_roles,\r\n            shares_share,\r\n            // shares_status,\r\n            // shares_title,\r\n          } = share;\r\n\r\n          const arrRoles = shares_roles !== null ? shares_roles.split(\",\") : [];\r\n          // const content = `${owner_firstname} ${owner_lastname} / ${formatDate(\r\n          //   shares_created\r\n          // )}`;\r\n\r\n          // console.log(\"keyShares:\", keyShares);\r\n\r\n          return (\r\n            <Shareholder\r\n              {...args}\r\n              key={keyShares}\r\n              id={keyShares}\r\n              shareholder={shareholder_id}\r\n              purpose={purpose_id}\r\n              firstname={userData.firstname}\r\n              lastname={userData.lastname}\r\n              share={shares_share}\r\n              roles={arrRoles}\r\n              closeButton={false}\r\n              rangeControl={false}\r\n              sharePerCent={share_per_cent}\r\n              businessOwnerFirstname={owner_firstname}\r\n              businessOwnerLastname={owner_lastname}\r\n              businessTitle={business_title}\r\n              purposeTitle={purpose_title}\r\n              sharesCreated={shares_created}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {showRequestStatus(\r\n        \"get shares / SELECT shares\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No shares\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"md\"\r\n        countItems={countShares}\r\n        itemsPerPage={sharesPerPage}\r\n        active={activePageShares}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Badge } from \"react-bootstrap\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n  * Default export\r\n  ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Balance\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { userData } = props.barrelGetters;\r\n  const { setAccountType, setRedirectTo } = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const userDataParsed = userData;\r\n\r\n  const available =\r\n    userDataParsed !== null\r\n      ? format(\r\n          userDataParsed.acc_curr +\r\n            userDataParsed.acc_cred +\r\n            userDataParsed.acc_save\r\n        )\r\n      : null;\r\n  let acc_curr =\r\n    userDataParsed !== null ? format(userDataParsed.acc_curr) : null;\r\n  let acc_cred =\r\n    userDataParsed !== null ? format(userDataParsed.acc_cred) : null;\r\n  let acc_save =\r\n    userDataParsed !== null ? format(userDataParsed.acc_save) : null;\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n\r\n  /**\r\n   *\r\n   * @param {*} type\r\n   */\r\n  const onAccountTypeSelected = (type) => {\r\n    setAccountType(type);\r\n    setRedirectTo(\"/transfer\");\r\n  };\r\n\r\n  const getJSX = () => {\r\n    return (\r\n      <Form noValidate>\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Available\")}</Form.Label>\r\n\r\n          <Form.Text>\r\n            <div style={{ fontSize: \"3em\" }}>{available}</div>\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              <div style={{}}>{t(\"Current account\")}</div>\r\n              <span\r\n                className=\"link\"\r\n                onClick={() => onAccountTypeSelected(\"acc_curr\")}\r\n              >\r\n                <Badge variant=\"Light\">{acc_curr}</Badge>\r\n                &nbsp;\r\n                <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n              </span>\r\n            </li>\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              <div style={{}}>{t(\"Credit account\")}</div>\r\n\r\n              <span\r\n                className=\"link\"\r\n                onClick={() => onAccountTypeSelected(\"acc_cred\")}\r\n              >\r\n                <Badge variant=\"Light\">{acc_cred}</Badge>\r\n                &nbsp;\r\n                <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n              </span>\r\n            </li>\r\n            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n              <div style={{}}>{t(\"Savings account\")}</div>\r\n              <span\r\n                className=\"link\"\r\n                onClick={() => onAccountTypeSelected(\"acc_save\")}\r\n              >\r\n                <Badge variant=\"Light\">{acc_save}</Badge>\r\n                &nbsp;\r\n                <ArrowForwardIosIcon style={{ color: \"var(--dark)\" }} />\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FileCopy as FileCopyIcon } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Component\", value: \"\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { copyToClipboard } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refCopyableField = useRef(null);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <>\r\n        <input\r\n          ref={refCopyableField}\r\n          className=\"no-focus\"\r\n          readOnly\r\n          style={{\r\n            border: 0,\r\n            width: \"10rem\",\r\n            background: \"Transparent\",\r\n          }}\r\n          type=\"text\"\r\n          defaultValue={props.value}\r\n        />\r\n        {document.queryCommandSupported(\"copy\") && (\r\n          <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n            <button\r\n              className=\"button-transparent\"\r\n              onClick={() => copyToClipboard(refCopyableField)}\r\n            >\r\n              <FileCopyIcon style={{ color: \"var(--dark)\" }} />\r\n            </button>\r\n          </span>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Transactions from \"../transactions\";\r\nimport Shares from \"../shares\";\r\nimport AccordionCard from \"../accordionCard\";\r\nimport Balance from \"../balance\";\r\nimport CopyableField from \"../copyableField\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"AccountContainer\", paddingBody: \"20px 0 0 0\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber, accordionView } = props.barrelGetters;\r\n  const {\r\n    setRedirectTo,\r\n    setAccordionView,\r\n    setResponseProps,\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const { getAccountData, getTransactions, getShares } = props.barrelFunctions;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n   *\r\n   * @param {*} view\r\n   */\r\n  const toggleView = (view) => {\r\n    const newView = accordionView !== view ? view : null;\r\n\r\n    setResponseProps(null);\r\n    setAccordionView(newView);\r\n    setClearRefs(true);\r\n\r\n    if (newView !== null) {\r\n      switch (view) {\r\n        case \"balance\":\r\n          getAccountData();\r\n          break;\r\n\r\n        case \"transactions\":\r\n          getTransactions(1);\r\n          break;\r\n\r\n        case \"shares\":\r\n          getShares(1);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return (\r\n    <>\r\n      <Accordion defaultActiveKey={accordionView}>\r\n        {/**\r\n         * Account number\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Account number\")}\r\n          eventkey=\"accountNumber\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"accountNumber\")}\r\n        >\r\n          <CopyableField value={accountNumber} {...args} />\r\n        </AccordionCard>\r\n\r\n        {/**\r\n         * Balance\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Balance\")}\r\n          eventkey=\"balance\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"balance\")}\r\n        >\r\n          <Balance {...args} />\r\n        </AccordionCard>\r\n\r\n        {/**\r\n         * Transactions\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Transactions\")}\r\n          eventkey=\"transactions\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"transactions\")}\r\n        >\r\n          <Transactions {...args} />\r\n        </AccordionCard>\r\n\r\n        {/**\r\n         * Shares\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Shares\")}\r\n          eventkey=\"shares\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"shares\")}\r\n        >\r\n          <Shares {...args} />\r\n        </AccordionCard>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"transfer U2S\",\r\n    namespace: \"Transfer\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    accountType,\r\n    language,\r\n    currencyAbbr,\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userData = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      if (tempRefAmount !== null && transferAmount !== tempRefAmount.value)\r\n        setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toAccount: yup.string().required(t(\"To Account is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} Form data\r\n   */\r\n  const transferToSelf = (data) => {\r\n    // console.log(\"TRANSFER U2S DATA:\", data);\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n\r\n    sendRequest({ req: props.request, data: data });\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToSelf(data);\r\n  };\r\n\r\n  const TransferToSelfForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n      headerPadding=\"20px 20px 10px 20px\"\r\n      bodyPadding=\"20px 20px 10px 20px\"\r\n      border=\"0\"\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * To account\r\n         */}\r\n        <Form.Group controlId=\"validationToAccount\">\r\n          <Form.Label>{t(\"To account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"toAccount\"\r\n            value={values.toAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferToAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.toAccount && touched.toAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option value=\"acc_curr\" hidden={accountType === \"acc_curr\"}>\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option value=\"acc_cred\" hidden={accountType === \"acc_cred\"}>\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option value=\"acc_save\" hidden={accountType === \"acc_save\"}>\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.toAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setTransferAmount(e.target.value);\r\n              }}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"transfer U2S\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={TransferToSelfForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        fromAccount: transferFromAccount,\r\n        toAccount: transferToAccount,\r\n        amount: transferAmount,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\nimport ModalMessage from \"../modalMessage\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"TanInput\",\r\n    request: \"submit tan\",\r\n    show: false,\r\n    size: \"lg\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { tanRequired, userData, tanInputTAN } = props.barrelGetters;\r\n  const { setTanRequired, setTanInputTAN } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refTAN = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    const tempRef = refTAN.current;\r\n    return () => {\r\n      if (tempRef !== null && tanInputTAN !== tempRef.value)\r\n        setTanInputTAN(tempRef.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    tan: yup.string().required(t(\"TAN is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    setTanRequired(false);\r\n    data.email = userData.email;\r\n    setTanInputTAN(\"\");\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div>\r\n        {t(\"A transaction number has been sent to your email account.\")}\r\n      </div>\r\n      <br />\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFormikTAN\">\r\n          <Form.Label>{t(\"TAN\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"tan\"\r\n              autoFocus\r\n              ref={refTAN}\r\n              value={values.tan}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.tan && touched.tan}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.tan}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  const message = (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        tan: tanInputTAN,\r\n      }}\r\n    />\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        message={message}\r\n        show={tanRequired}\r\n        size={props.size}\r\n        centered={true}\r\n        onHide={() => setTanRequired(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport TanInput from \"../tanInput\";\r\n\r\n/**\r\n * Component: TransferToPerson\r\n */\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2U\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const [transferDescriptionTemp, setTransferDescriptionTemp] = useStickyState(\r\n  //   \"\",\r\n  //   \"transferDescriptionTemp\"\r\n  // );\r\n\r\n  const refPersonalID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPersonalID = refPersonalID.current;\r\n    const tempRefDescription = refDescription.current;\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      if (\r\n        tempRefPersonalID !== null &&\r\n        transferToUID !== tempRefPersonalID.value\r\n      )\r\n        setTransferToUID(tempRefPersonalID.value);\r\n\r\n      if (\r\n        tempRefDescription !== null &&\r\n        transferDescription !== tempRefDescription.value\r\n      )\r\n        setTransferDescription(tempRefDescription.value);\r\n\r\n      if (tempRefAmount !== null && transferAmount !== tempRefAmount.value)\r\n        setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toPersonalID: yup\r\n      .string()\r\n      .required(t(\"Recipients Personal ID is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Personal ID Regex\")),\r\n        t(\"Wrong Personal ID format\")\r\n      ),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToPerson = (data) => {\r\n    // console.log(\"TRANSFER U2U DATA:\", data);\r\n    data.transferType = props.request;\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  // return <>test</>;\r\n\r\n  const onSubmit = (data) => {\r\n    transferToPerson(data);\r\n  };\r\n\r\n  const TransferToPersonForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n      headerPadding=\"20px 20px 10px 20px\"\r\n      bodyPadding=\"20px 20px 10px 20px\"\r\n      border=\"0\"\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Recipients Personal ID\r\n         */}\r\n        <Form.Group controlId=\"validationFormikToPersonalID\">\r\n          <Form.Label>{t(\"To Personal ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={t(\"XXXXXX-XXXXX\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"toPersonalID\"\r\n              ref={refPersonalID}\r\n              value={values.toPersonalID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.toPersonalID && touched.toPersonalID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.toPersonalID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Transfer Description\r\n         */}\r\n        <Form.Group controlId=\"validationFormikDescription\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Button: Next */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToPersonForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          toPersonalID: transferToUID,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport TanInput from \"../tanInput\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2B\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPurposeID = refPurposeID.current;\r\n    const tempRefDescription = refDescription.current;\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      if (\r\n        tempRefPurposeID !== null &&\r\n        transferToPurpose !== tempRefPurposeID.value\r\n      )\r\n        setTransferToPurpose(tempRefPurposeID.value);\r\n\r\n      if (\r\n        tempRefDescription !== null &&\r\n        transferDescription !== tempRefDescription.value\r\n      )\r\n        setTransferDescription(tempRefDescription.value);\r\n\r\n      if (tempRefAmount !== null && transferAmount !== tempRefAmount.value)\r\n        setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    // businessTitle: yup\r\n    //   .string()\r\n    //   .required(t(\"Recipients Business ID is required\")),\r\n    purposeID: yup.string().required(t(\"Purpose ID is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToBusiness = (data) => {\r\n    data.transferType = props.request;\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.currency = currencyAbbr;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // data.amount = parseFloat(data.amount);\r\n    // data.amount = Number(data.amount.replace(/[^0-9.-]+/g, \"\"));\r\n\r\n    data.amount = [data.amount];\r\n    data.currency = [data.currency];\r\n    data.purposeID = [data.purposeID];\r\n    data.fromAccount = [data.fromAccount];\r\n\r\n    // console.log(\"data:\", data);\r\n    // return;\r\n\r\n    // const transfers = [data];\r\n\r\n    // setTransferRequest(\r\n    //   JSON.stringify({ transferType: props.request, transfers })\r\n    // );\r\n    setTransferRequest(JSON.stringify(data));\r\n\r\n    data = { email: data.email, language: data.language };\r\n\r\n    // console.log(\"data:\", data);\r\n    // return;\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToBusiness(data);\r\n  };\r\n\r\n  const TransferToBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n      headerPadding=\"20px 20px 10px 20px\"\r\n      bodyPadding=\"20px 20px 10px 20px\"\r\n      border=\"0\"\r\n    >\r\n      {/* From account */}\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Business ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"businessTitle\"\r\n              value={values.businessTitle}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.businessTitle}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n        */}\r\n\r\n        {/* To purpose */}\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Purpose ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"PXXXXXXXXXXXXXXXXXXXXXXX\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"purposeID\"\r\n              ref={refPurposeID}\r\n              value={values.purposeID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.purposeID && touched.purposeID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.purposeID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Field: Description */}\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/* Amount */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"string\" // do NOT change to number!!\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          purposeID: transferToPurpose,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"BusinessRegistration\",\r\n    request: \"register business\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refBusinessTitle = React.createRef();\r\n  const refBusinessDescription = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefBusinessTitle = refBusinessTitle.current;\r\n    const tempRefBusinessDescription = refBusinessDescription.current;\r\n    return () => {\r\n      if (\r\n        tempRefBusinessTitle !== null &&\r\n        businessRegistrationAddTitle !== tempRefBusinessTitle.value\r\n      )\r\n        setBusinessRegistrationAddTitle(tempRefBusinessTitle.value);\r\n\r\n      if (\r\n        tempRefBusinessDescription !== null &&\r\n        businessRegistrationAddDescription !== tempRefBusinessDescription.value\r\n      )\r\n        setBusinessRegistrationAddDescription(tempRefBusinessDescription.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [addOwnerAsShareholder, setAddOwnerAsShareholder] = useStickyState(\r\n  //   false,\r\n  //   \"addOwnerAsShareholder\"\r\n  // );\r\n\r\n  const schema = yup.object({\r\n    businessTitle: yup\r\n      .string()\r\n      .required(t(\"Business title is a required field\"))\r\n      .min(3, t(\"Business title too short\"))\r\n      .max(70, t(\"Business title too long\"))\r\n      .trim(),\r\n    businessDescription: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * On business registration\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n\r\n    // console.log(\"REGISTER BUSINESS DATA:\", data);\r\n\r\n    // onBusinessRegistration({ req: \"register business\", data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Business Title (Business ID) */}\r\n      <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n        <Form.Label>{t(\"Business Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"businessTitle\"\r\n            ref={refBusinessTitle}\r\n            value={values.businessTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.businessTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/* Business Description */}\r\n      <Form.Group controlId=\"businessDescription\">\r\n        <Form.Label>{t(\"Business Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"businessDescription\"\r\n          ref={refBusinessDescription}\r\n          value={values.businessDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={RegisterBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          businessTitle: businessRegistrationAddTitle,\r\n          businessDescription: businessRegistrationAddDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"PurposeRegistration\",\r\n    requestInsert: \"register purpose\",\r\n    requestUpdate: \"update purpose property\",\r\n    businessID: null,\r\n    purposeID: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    subcategory: \"\",\r\n    subcategory2: \"\",\r\n    keywords: \"\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"PURPOSE REGISTRATION PROPS:\", props);\r\n\r\n  const barrels = props;\r\n  const { businessID, purposeID, id } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    language,\r\n    // businessPurposes,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    // purposeRegistrationCategory,\r\n    // purposeRegistrationSubcategory,\r\n    // purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    // setBusinessPurposes,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n  } = barrels.barrelSetters;\r\n  const { getReviser, getWorkplace } = barrels.barrelFunctions;\r\n  const { onPurposeRegistration } = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeTitle = React.createRef();\r\n  const refPurposeDescription = React.createRef();\r\n  // const refPurposeCategory = React.createRef();\r\n  // const refPurposeSubcategory = React.createRef();\r\n  // const refPurposeSubcategory2 = React.createRef();\r\n  const refPurposeKeywords = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPurposeTitle = refPurposeTitle.current;\r\n    const tempRefPurposeDescription = refPurposeDescription.current;\r\n    const tempRefPurposeKeywords = refPurposeKeywords.current;\r\n    return () => {\r\n      if (\r\n        tempRefPurposeTitle !== null &&\r\n        purposeRegistrationTitle !== tempRefPurposeTitle.value\r\n      )\r\n        setPurposeRegistrationTitle(tempRefPurposeTitle.value);\r\n\r\n      if (\r\n        tempRefPurposeDescription !== null &&\r\n        purposeRegistrationDescription !== tempRefPurposeDescription.value\r\n      )\r\n        setPurposeRegistrationDescription(tempRefPurposeDescription.value);\r\n\r\n      if (\r\n        tempRefPurposeKeywords !== null &&\r\n        purposeRegistrationKeywords !== tempRefPurposeKeywords.value\r\n      )\r\n        setPurposeRegistrationKeywords(tempRefPurposeKeywords.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const schema = yup.object({\r\n    purposeTitle: yup\r\n      .string()\r\n      .required(t(\"Purpose title is a required field\"))\r\n      .min(3, t(\"Purpose title too short\"))\r\n      .max(70, t(\"Purpose title too long\"))\r\n      .trim(),\r\n    purposeDescription: yup.string().optional(),\r\n    // purposeCategory: yup\r\n    //   .string()\r\n    //   .required(t(\"Purpose category is a required field\"))\r\n    //   .max(70, t(\"Purpose category too long\"))\r\n    //   .trim(),\r\n    // purposeSubcategory: yup.string().optional(),\r\n    // purposeSubcategory2: yup.string().optional(),\r\n    purposeKeywords: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const RegisterPurpose = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.businessID = businessID;\r\n    data.id = id;\r\n    data.purposeID = purposeID;\r\n    data.uid = accountNumber;\r\n    data.language = language;\r\n\r\n    // console.log(\"REGISTER PURPOSE DATA:\", data);\r\n\r\n    onPurposeRegistration({\r\n      req: props.purposeID === null ? props.requestInsert : props.requestUpdate,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    RegisterPurpose(data);\r\n  };\r\n\r\n  const RegisterPurposeForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/*\r\n       * Purpose Title (Purpose ID)\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeID\">\r\n        <Form.Label>{t(\"Purpose Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"purposeTitle\"\r\n            ref={refPurposeTitle}\r\n            value={values.purposeTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeTitle && touched.purposeTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Description\r\n       */}\r\n      <Form.Group controlId=\"purposeDescription\">\r\n        <Form.Label>{t(\"Purpose Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"purposeDescription\"\r\n          ref={refPurposeDescription}\r\n          value={values.purposeDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Keywords\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeKeywords\">\r\n        <Form.Label>{t(\"Purpose Keywords\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeKeywords\"\r\n            ref={refPurposeKeywords}\r\n            value={values.purposeKeywords}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeKeywords && touched.purposeKeywords}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeKeywords}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Submit button\r\n       */}\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(props.purposeID === null ? \"Submit\" : \"Save\")}\r\n        request={\r\n          props.purposeID === null ? props.requestInsert : props.requestUpdate\r\n        }\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterPurposeForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        purposeTitle: purposeRegistrationTitle,\r\n        purposeDescription: purposeRegistrationDescription,\r\n        // purposeCategory: purposeRegistrationCategory,\r\n        // purposeSubcategory: purposeRegistrationSubcategory,\r\n        // purposeSubcategory2: purposeRegistrationSubcategory2,\r\n        purposeKeywords: purposeRegistrationKeywords,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"register shareholder\",\r\n    namespace: \"ShareholderRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const barrels = props;\r\n  const { purposeID } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber } = barrels.barrelGetters;\r\n  // const {} = barrels.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n  } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const thisRef = createRef();\r\n\r\n  const schema = yup.object({\r\n    // personalID: yup\r\n    //   .string()\r\n    //   .required(t(\"Personal ID is required\"))\r\n    //   .matches(\r\n    //     new RegExp(t(\"Personal ID Regex\")),\r\n    //     t(\"Wrong Personal ID format\")\r\n    //   ),\r\n    shareholderRoles: yup.string().optional(),\r\n    shares: yup\r\n      .number()\r\n      .typeError(t(\"Shares must be a number\"))\r\n      .required(t(\"Shares is required\"))\r\n      .min(1, t(\"Shares too few\"))\r\n      .max(1000, t(\"Shares too many\")),\r\n  });\r\n\r\n  /**\r\n   * Send shareholder registration request\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.purposeID = purposeID;\r\n\r\n    // console.log(\"REGISTER SHAREHOLDER DATA:\", data);\r\n\r\n    // onShareholderRegistration({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterShareholderForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* id=\"shareholderRegistrationForm\" */}\r\n      <Toast style={{ minWidth: \"100%\" }}>\r\n        {/*\r\n        <Toast.Header closeButton={false}>\r\n          <strong className=\"mr-auto\">{t(\"Add Shareholder\")}</strong>\r\n        </Toast.Header>\r\n        */}\r\n        <Toast.Body>\r\n          <Form.Group controlId=\"validationFormikShareholderPersonalID\">\r\n            <Form.Label>{t(\"Shareholder Personal ID\")}</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={t(\"XXXXXX-XXXXX\")}\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"personalID\"\r\n                value={values.personalID}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.personalID && touched.personalID}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.personalID}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          {/* Shareholder Roles */}\r\n          <Form.Group controlId=\"validationFormikShareholderRoles\">\r\n            <Form.Label>{t(\"Shareholder Roles\")}</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"shareholderRoles\"\r\n                value={values.shareholderRoles}\r\n                onChange={handleChange}\r\n                isInvalid={\r\n                  !!errors.shareholderRoles && touched.shareholderRoles\r\n                }\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.shareholderRoles}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          {/* Shares */}\r\n          <Form.Group controlId=\"validationFormikShares\">\r\n            <Form.Label>{t(\"Shares\")}</Form.Label>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type=\"number\"\r\n                min={1}\r\n                max={1000}\r\n                step={1}\r\n                placeholder=\"\"\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"shares\"\r\n                value={values.shares}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.shares && touched.shares}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.shares}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Toast.Body>\r\n      </Toast>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterShareholderForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        personalID: \"\",\r\n        shares: 1,\r\n        shareholderRoles: \"\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useRef } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Card,\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Add, Store, Edit, FileCopy as FileCopyIcon } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Dropzone from \"../dropzone\";\r\nimport BusinessRegistration from \"../businessRegistration\";\r\nimport PurposeRegistration from \"../purposeRegistration\";\r\nimport ShareholderRegistration from \"../shareholderRegistration\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"MyBusiness\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    userBusinesses,\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes,\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    purposeShareholders,\r\n    // purposeID,\r\n    activePurposeData,\r\n    // language,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRedirectTo,\r\n    setResponseProps,\r\n    setBusinessPurposes,\r\n    setActiveBusiness,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    setActivePageBusinessPurposes,\r\n    setActivePurposeData,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationKeywords,\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    sendRequest,\r\n    showRequestStatus,\r\n    formatDate,\r\n    copyToClipboard,\r\n    findPurposes,\r\n  } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module constants\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n  const refBusinessID = useRef(null);\r\n  const refPurposeID = useRef(null);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Toggle business (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const ToggleBusiness = ({ eventKey, businessID }) => {\r\n    if (activeBusiness === eventKey) {\r\n      setActiveBusiness(null);\r\n      setActivePageBusinessPurposes(null);\r\n    } else {\r\n      setResponseProps(null);\r\n      getBusinessPurposes(businessID, eventKey, 1);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Toggle purpose (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const TogglePurpose = ({ eventKey, purposeID }) => {\r\n    setResponseProps(null);\r\n    getPurposeShareholders(purposeID, eventKey);\r\n  };\r\n\r\n  /**\r\n   * Create:\r\n   * - business menu\r\n   * - business purposes menu\r\n   */\r\n  let menuItems = [];\r\n  let purposes = [];\r\n  let cntBusinesses = 0;\r\n  let cntPurposes = 0;\r\n  let countShareholders = 0;\r\n  userBusinesses !== null &&\r\n    Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n      cntBusinesses++;\r\n      menuItems[keyBusiness] = [];\r\n      purposes[keyBusiness] = [];\r\n      businessPurposes !== null &&\r\n        Object.keys(businessPurposes).map((purpose, keyPurpose) => {\r\n          cntPurposes++;\r\n          if (\r\n            businessPurposes[purpose].business_id ===\r\n            userBusinesses[business].business_id\r\n          ) {\r\n            menuItems[keyBusiness][keyPurpose] = (\r\n              <ListGroup.Item\r\n                action\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n                style={{ cursor: \"default\" }}\r\n                onClick={() =>\r\n                  TogglePurpose({\r\n                    eventKey: keyPurpose,\r\n                    purposeID: businessPurposes[purpose].purpose_id,\r\n                  })\r\n                }\r\n              >\r\n                <span style={{ whiteSpace: \"nowrap\", cursor: \"pointer\" }}>\r\n                  {businessPurposes[purpose].title}\r\n                </span>\r\n\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={(e) => {\r\n                      setPurposeRegistrationTitle(\r\n                        businessPurposes[purpose].title !== null\r\n                          ? businessPurposes[purpose].title\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationDescription(\r\n                        businessPurposes[purpose].description !== null\r\n                          ? businessPurposes[purpose].description\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationKeywords(\r\n                        businessPurposes[purpose].keywords !== null\r\n                          ? businessPurposes[purpose].keywords\r\n                          : \"\"\r\n                      );\r\n\r\n                      setActivePurposeData(\r\n                        JSON.stringify(businessPurposes[purpose])\r\n                      );\r\n                      setActiveBusinesPurpose(\"addPurpose\");\r\n                      e.stopPropagation();\r\n                    }}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </ListGroup.Item>\r\n            );\r\n\r\n            purposes[keyBusiness][keyPurpose] = (\r\n              <Tab.Pane\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n              >\r\n                <Accordion\r\n                  defaultActiveKey={\r\n                    activePurposeProperty !== null\r\n                      ? activePurposeProperty\r\n                      : \"purpose_id\" // \"shareholders\"\r\n                  }\r\n                >\r\n                  {/* Purpose ID */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      eventKey=\"purpose_id\"\r\n                      onClick={() => setActivePurposeProperty(\"purpose_id\")}\r\n                    >\r\n                      {t(\"Purpose ID\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"purpose_id\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          <input\r\n                            ref={refPurposeID}\r\n                            className=\"no-focus\"\r\n                            readOnly\r\n                            style={{\r\n                              border: 0,\r\n                              width: \"15rem\",\r\n                              background: \"Transparent\",\r\n                            }}\r\n                            type=\"text\"\r\n                            defaultValue={businessPurposes[purpose].purpose_id}\r\n                          />\r\n                          {document.queryCommandSupported(\"copy\") && (\r\n                            <span\r\n                              style={{ float: \"right\", marginLeft: \"0.25rem\" }}\r\n                            >\r\n                              <button\r\n                                className=\"button-transparent\"\r\n                                onClick={() => copyToClipboard(refPurposeID)}\r\n                              >\r\n                                <FileCopyIcon\r\n                                  style={{ color: \"var(--dark)\" }}\r\n                                />\r\n                              </button>\r\n                            </span>\r\n                          )}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose shareholders */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"shareholders\"\r\n                      onClick={() => setActivePurposeProperty(\"shareholders\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Shareholders\")}\r\n                      </span>\r\n                      <span style={{ float: \"right\" }}>\r\n                        <Add\r\n                          onClick={(e) => {\r\n                            setActivePurposeProperty(\"addShareholder\");\r\n                            e.stopPropagation();\r\n                          }}\r\n                          fontSize=\"small\"\r\n                          style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                        />\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    {/* Toggle: Add shareholder */}\r\n                    <Accordion.Collapse eventKey=\"addShareholder\">\r\n                      <Card.Body>\r\n                        <ShareholderRegistration\r\n                          {...args}\r\n                          purposeID={businessPurposes[purpose].purpose_id}\r\n                        />\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n\r\n                    {/* Toggle: Shareholders list */}\r\n                    <Accordion.Collapse eventKey=\"shareholders\">\r\n                      <Card.Body>\r\n                        {typeof purposeShareholders !== \"undefined\" &&\r\n                          purposeShareholders !== null &&\r\n                          Object.keys(purposeShareholders).map(\r\n                            (shareholder, keyShareholder) => {\r\n                              if (\r\n                                purposeShareholders[shareholder].purpose_id ===\r\n                                businessPurposes[purpose].purpose_id\r\n                              ) {\r\n                                const { purpose_id } = purposeShareholders[\r\n                                  shareholder\r\n                                ];\r\n                                const {\r\n                                  shareholder_id,\r\n                                  firstname,\r\n                                  lastname,\r\n                                  // email,\r\n                                  roles,\r\n                                  share,\r\n                                } = purposeShareholders[shareholder];\r\n\r\n                                countShareholders++;\r\n\r\n                                const arrRoles =\r\n                                  roles !== null ? roles.split(\",\") : [];\r\n\r\n                                return (\r\n                                  <Shareholder\r\n                                    {...args}\r\n                                    key={keyShareholder}\r\n                                    id={keyShareholder}\r\n                                    shareholder={shareholder_id}\r\n                                    purpose={purpose_id}\r\n                                    firstname={firstname}\r\n                                    lastname={lastname}\r\n                                    share={share}\r\n                                    roles={arrRoles}\r\n                                  />\r\n                                );\r\n                              } else {\r\n                                return \"\"; // TODO: check if this works\r\n                              }\r\n                            }\r\n                          )}\r\n\r\n                        {showRequestStatus(\r\n                          \"get purpose shareholders / SELECT shares\",\r\n                          countShareholders,\r\n                          t(\"Loading shareholders...\"),\r\n                          t(\"No shareholders\"),\r\n                          \"finished\"\r\n                        )}\r\n\r\n                        {/* End shareholders list */}\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose status */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"pointer\" }}\r\n                      eventKey=\"productStatus\"\r\n                      onClick={() => setActivePurposeProperty(\"productStatus\")}\r\n                    >\r\n                      {t(\"Purpose Status\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"productStatus\">\r\n                      <Card.Body\r\n                        onClick={(e) => {\r\n                          // console.log(\"Click\", e);\r\n\r\n                          const bp = businessPurposes;\r\n                          bp[purpose].status =\r\n                            businessPurposes[purpose].status === 0 ? 1 : 0;\r\n                          setBusinessPurposes(JSON.stringify(bp));\r\n\r\n                          let data = {};\r\n                          data.purpose_id =\r\n                            businessPurposes[purpose].purpose_id;\r\n                          data.purpose_status =\r\n                            businessPurposes[purpose].status;\r\n                          return sendRequest({\r\n                            req: \"change purpose status\",\r\n                            data,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Form>\r\n                          {typeof purposeShareholders === \"undefined\" ||\r\n                            (purposeShareholders === null && (\r\n                              <Form.Text>\r\n                                {t(\r\n                                  \"To publish, please add at least one shareholder\"\r\n                                )}\r\n                                <br />\r\n                                <br />\r\n                              </Form.Text>\r\n                            ))}\r\n\r\n                          {typeof purposeShareholders !== \"undefined\" &&\r\n                            purposeShareholders !== null && (\r\n                              <Form.Check\r\n                                type=\"switch\"\r\n                                custom\r\n                                disabled={\r\n                                  typeof purposeShareholders === \"undefined\" ||\r\n                                  purposeShareholders === null\r\n                                }\r\n                                label={t(\r\n                                  businessPurposes[purpose].status === 0\r\n                                    ? \"Not published\"\r\n                                    : \"Published\"\r\n                                )}\r\n                                checked={businessPurposes[purpose].status === 1}\r\n                                onChange={(e) => {\r\n                                  console.log(e);\r\n                                }}\r\n                              />\r\n                            )}\r\n                        </Form>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose title */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"title\"\r\n                      onClick={() => setActivePurposeProperty(\"title\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Title\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"title\">\r\n                      <Card.Body>\r\n                        <Card.Text>{businessPurposes[purpose].title}</Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose description\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"description\"\r\n                      onClick={() => setActivePurposeProperty(\"description\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Description\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"description\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].description}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Keywords\r\n                   */}\r\n                  <Card bg=\"light\">\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{ cursor: \"default\" }}\r\n                      eventKey=\"keywords\"\r\n                      onClick={() => setActivePurposeProperty(\"keywords\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Keywords\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"keywords\">\r\n                      <Card.Body>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].keywords}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* End of purpose properties */}\r\n                </Accordion>\r\n              </Tab.Pane>\r\n            );\r\n          }\r\n          countShareholders = 0;\r\n          return true;\r\n        });\r\n\r\n      return true;\r\n    });\r\n\r\n  const jsx = (\r\n    <>\r\n      <Accordion\r\n        defaultActiveKey={\r\n          activeBusiness !== null || !userBusinessesLoaded\r\n            ? activeBusiness\r\n            : \"myBusinesses\"\r\n        }\r\n      >\r\n        {/* Add business location top */}\r\n\r\n        {/* List user businesses */}\r\n        {userBusinesses !== null &&\r\n          Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n            const date = new Date(userBusinesses[business].created);\r\n            const businessSince = formatDate(date, {\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n              year: \"numeric\",\r\n            });\r\n\r\n            return (\r\n              <Card key={keyBusiness}>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey={keyBusiness}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    ToggleBusiness({\r\n                      eventKey: keyBusiness,\r\n                      businessID: userBusinesses[business].business_id,\r\n                    })\r\n                  }\r\n                >\r\n                  <Store style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                  {userBusinesses[business].title}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={keyBusiness}>\r\n                  <Card.Body>\r\n                    <Tab.Container\r\n                      id=\"left-tabs-example\"\r\n                      defaultActiveKey={\r\n                        activeBusinesPurpose !== null\r\n                          ? activeBusinesPurpose\r\n                          : \"aboutBusiness\"\r\n                      }\r\n                    >\r\n                      {/**\r\n                       * Row: Search\r\n                       */}\r\n                      <Row style={{ marginBottom: \"1.2rem\" }}>\r\n                        <Col>\r\n                          <Search\r\n                            advancedSearch={false}\r\n                            placeholder={t(\"Find purposes...\")}\r\n                            captionAdvancedSearch={t(\"Advanced search\")}\r\n                            onSubmit={findPurposes}\r\n                            {...args}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      {/**\r\n                       * Row: Purposes\r\n                       */}\r\n                      <Row>\r\n                        {/**\r\n                         * Layout: Left side - Menu\r\n                         */}\r\n                        <Col sm={5}>\r\n                          <ListGroup variant=\"flush\">\r\n                            {/* Menu item: About business */}\r\n                            <ListGroup.Item\r\n                              action\r\n                              eventKey=\"aboutBusiness\"\r\n                              style={{ cursor: \"default\" }}\r\n                              onClick={(e) => {\r\n                                setActivePurposeData(null);\r\n                                setActiveBusinesPurpose(null);\r\n                                e.stopPropagation();\r\n                              }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  whiteSpace: \"nowrap\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              >\r\n                                {t(\"About\")}\r\n                              </span>\r\n                              <span style={{ float: \"right\" }}>\r\n                                <Add\r\n                                  onClick={(e) => {\r\n                                    setClearRefs(true);\r\n                                    setActivePurposeData(null);\r\n                                    setActiveBusinesPurpose(\"addPurpose\");\r\n                                    e.stopPropagation();\r\n                                  }}\r\n                                  fontSize=\"small\"\r\n                                  style={{\r\n                                    color: \"var(--dark)\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                />\r\n                              </span>\r\n                            </ListGroup.Item>\r\n\r\n                            {/* Menu items: Registered purposes */}\r\n                            {menuItems[keyBusiness]}\r\n\r\n                            {/* old add purpose */}\r\n                          </ListGroup>\r\n                          {countBusinessPurposes !== null && (\r\n                            <>\r\n                              <br />\r\n                              <Pagination\r\n                                {...args}\r\n                                size=\"sm\"\r\n                                countItems={countBusinessPurposes}\r\n                                itemsPerPage={businessPurposesPerPage}\r\n                                active={activePageBusinessPurposes}\r\n                                onClick={(number) =>\r\n                                  getBusinessPurposes(\r\n                                    activeBusinessID,\r\n                                    0,\r\n                                    number\r\n                                  )\r\n                                }\r\n                              />\r\n                            </>\r\n                          )}\r\n\r\n                          {showRequestStatus(\r\n                            \"get business purposes / SELECT purposes\",\r\n                            cntPurposes,\r\n                            t(\"Loading purposes...\"),\r\n                            t(\"No purposes\"),\r\n                            \"finished\"\r\n                          )}\r\n                        </Col>\r\n\r\n                        {/**\r\n                         * Layout: Right side - Content\r\n                         */}\r\n                        <Col sm={7}>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"aboutBusiness\">\r\n                              <Accordion defaultActiveKey=\"businessID\">\r\n                                {/* Business ID */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessID\"\r\n                                  >\r\n                                    {t(\"Business ID\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessID\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          <input\r\n                                            ref={refBusinessID}\r\n                                            className=\"no-focus\"\r\n                                            readOnly\r\n                                            style={{\r\n                                              border: 0,\r\n                                              width: \"13rem\",\r\n                                              background: \"Transparent\",\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            defaultValue={\r\n                                              userBusinesses[business]\r\n                                                .business_id\r\n                                            }\r\n                                          />\r\n                                          {document.queryCommandSupported(\r\n                                            \"copy\"\r\n                                          ) && (\r\n                                            <span\r\n                                              style={{\r\n                                                float: \"right\",\r\n                                                marginLeft: \"0.25rem\",\r\n                                              }}\r\n                                            >\r\n                                              <button\r\n                                                className=\"button-transparent\"\r\n                                                onClick={() =>\r\n                                                  copyToClipboard(refBusinessID)\r\n                                                }\r\n                                              >\r\n                                                <FileCopyIcon\r\n                                                  style={{\r\n                                                    color: \"var(--dark)\",\r\n                                                  }}\r\n                                                />\r\n                                              </button>\r\n                                            </span>\r\n                                          )}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business description */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessDescription\"\r\n                                  >\r\n                                    {t(\"Business Description\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessDescription\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          {userBusinesses[business]\r\n                                            .description !== \"\" ? (\r\n                                            userBusinesses[business].description\r\n                                          ) : (\r\n                                            <span className=\"text-center text-muted\">\r\n                                              {t(\"No description\")}\r\n                                            </span>\r\n                                          )}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business Creation Date */}\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessCreationDate\"\r\n                                  >\r\n                                    {t(\"Business Created\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessCreationDate\">\r\n                                    <Card border=\"light\">\r\n                                      <Card.Body>\r\n                                        <Card.Text>{businessSince}</Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n\r\n                            {/* Start Business purposes */}\r\n                            {purposes[keyBusiness]}\r\n                            {/* End Business purposes */}\r\n\r\n                            {/*\r\n                             * Add new purpose / update existing purpose\r\n                             */}\r\n                            <Tab.Pane eventKey=\"addPurpose\">\r\n                              <Accordion defaultActiveKey=\"newPurpose\">\r\n                                <Card>\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    eventKey=\"newPurpose\"\r\n                                    style={{ cursor: \"default\" }}\r\n                                  >\r\n                                    {t(\r\n                                      activePurposeData === null\r\n                                        ? \"New Purpose\"\r\n                                        : \"Edit Purpose\"\r\n                                    )}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"newPurpose\">\r\n                                    <Card.Body>\r\n                                      <PurposeRegistration\r\n                                        {...args}\r\n                                        businessID={\r\n                                          userBusinesses[business].business_id\r\n                                        }\r\n                                        id={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.id\r\n                                            : null\r\n                                        }\r\n                                        purposeID={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.purpose_id\r\n                                            : null\r\n                                        }\r\n                                        title={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.title\r\n                                            : \"\"\r\n                                        }\r\n                                        description={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.description\r\n                                            : \"\"\r\n                                        }\r\n                                        category={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.category\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory2={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory2\r\n                                            : \"\"\r\n                                        }\r\n                                        keywords={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.keywords\r\n                                            : \"\"\r\n                                        }\r\n                                      />\r\n                                    </Card.Body>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>\r\n                        </Col>\r\n                      </Row>\r\n                    </Tab.Container>\r\n                    {/* pagination prev */}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            );\r\n            // console.log(\"BUSINESS:\", userBusinesses[business]);\r\n          })}\r\n\r\n        {/**\r\n         * Card: Add business\r\n         */}\r\n        <Card>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"addBusiness\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() =>\r\n              setActiveBusiness(\r\n                activeBusiness !== \"addBusiness\" ? \"addBusiness\" : null\r\n              )\r\n            }\r\n          >\r\n            <span>\r\n              <Add\r\n                style={{\r\n                  color: \"var(--dark)\",\r\n                  fontSize: \"1.2rem\",\r\n                  paddingBottom: \"0.2rem\",\r\n                }}\r\n              />\r\n              &nbsp;\r\n              {t(\"Add Business\")}\r\n            </span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"addBusiness\">\r\n            <Card.Body>\r\n              <BusinessRegistration {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      {userBusinesses !== null && (\r\n        <>\r\n          <br />\r\n\r\n          <Pagination\r\n            {...args}\r\n            size=\"md\"\r\n            countItems={countBusinesses}\r\n            itemsPerPage={businessesPerPage}\r\n            active={activePageBusinesses}\r\n            onClick={(number) => getBusinesses(number)}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{jsx}</>;\r\n};\r\n","import \"./UserEditor.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup, Form, InputGroup } from \"react-bootstrap\";\r\nimport {\r\n  Visibility,\r\n  VisibilityOff,\r\n  Close,\r\n  Edit,\r\n  // Done,\r\n} from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"UserEditor\",\r\n    request: \"update user\",\r\n    mode: \"label\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"USER EDITOR PROPS:\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    // currencies,\r\n    // currencyAbbr,\r\n    // language,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getReviser, getWorkplace } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefFirstName = refFirstName.current;\r\n    const tempRefLastName = refLastName.current;\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (\r\n        tempRefFirstName !== null &&\r\n        userEditorFirstname !== tempRefFirstName.value\r\n      )\r\n        setUserEditorFirstname(tempRefFirstName.value);\r\n\r\n      if (\r\n        tempRefLastName !== null &&\r\n        userEditorLastname !== tempRefLastName.value\r\n      )\r\n        setUserEditorLastname(tempRefLastName.value);\r\n\r\n      if (tempRefEmail !== null && userEditorEmail !== tempRefEmail.value)\r\n        setUserEditorEmail(tempRefEmail.value);\r\n\r\n      if (\r\n        tempRefPassword !== null &&\r\n        userEditorPassword !== tempRefPassword.value\r\n      )\r\n        setUserEditorPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userEditorEditFirstname ||\r\n      userEditorEditLastname ||\r\n      userEditorEditEmail ||\r\n      userEditorEditPassword\r\n    ) {\r\n      setUserEditorSubmitButtonVisible(true);\r\n    } else {\r\n      setUserEditorSubmitButtonVisible(false);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [\r\n    userEditorEditFirstname,\r\n    userEditorEditLastname,\r\n    userEditorEditEmail,\r\n    userEditorEditPassword,\r\n  ]);\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  const togglePassword = () => {\r\n    setUserEditorPasswordVisible(!userEditorPasswordVisible);\r\n  };\r\n\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    // data.language = language;\r\n    // data.email = userData.email;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.personalID = accountNumber;\r\n    if (!userEditorEditFirstname) data.firstName = null;\r\n    if (!userEditorEditLastname) data.lastName = null;\r\n    if (!userEditorEditEmail) data.email = userData.email;\r\n    if (!userEditorEditPassword) data.password = null;\r\n\r\n    if (data.email !== userData.email) {\r\n      data.newEmail = data.email;\r\n      data.email = userData.email;\r\n      data.validateEmail = true;\r\n    }\r\n\r\n    // console.log(\"onSubmit:\", data);\r\n\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const yupObject = {\r\n    firstName: userEditorEditFirstname\r\n      ? yup.string().required(t(\"First name is required\"))\r\n      : yup.string().optional(),\r\n    lastName: userEditorEditLastname\r\n      ? yup.string().required(t(\"Last name is required\"))\r\n      : yup.string().optional(),\r\n    email: userEditorEditEmail\r\n      ? yup\r\n          .string()\r\n          .email(t(\"Invalid email address\"))\r\n          .required(t(\"Email is required\"))\r\n      : yup.string().optional(),\r\n    password: userEditorEditPassword\r\n      ? yup\r\n          .string()\r\n          .required(t(\"No password provided\"))\r\n          .min(8, t(\"Password is too short\"))\r\n          // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n          .matches(\r\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n            t(\"Password is too weak\")\r\n          )\r\n      : yup.string().optional(),\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object(yupObject);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (userData === null) return <></>;\r\n\r\n  /**\r\n   * Destructuring\r\n   */\r\n  const { mode } = props;\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    email,\r\n    // language,\r\n    // currency_name,\r\n    // currency_abbr,\r\n  } = userData;\r\n  // const currency = `${currency_name} (${currency_abbr})`;\r\n\r\n  const UserEditorForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Card title={t(\"Profile\")} border={0} maxWidthBody=\"700px\">\r\n        {/* First name */}\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"First name\")}</Form.Label>\r\n            {!userEditorEditFirstname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditFirstname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{firstname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditFirstname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditFirstname && (\r\n              <Form.Group controlId=\"validationFormikFirstName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter first name\")}\r\n                    name=\"firstName\"\r\n                    ref={refFirstName}\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.firstName && touched.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Last name */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Last name\")}</Form.Label>\r\n            {!userEditorEditLastname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditLastname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{lastname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditLastname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditLastname && (\r\n              <Form.Group controlId=\"validationFormikLastName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter last name\")}\r\n                    name=\"lastName\"\r\n                    ref={refLastName}\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.lastName && touched.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Email */}\r\n          {accountNumber !== null && (\r\n            <ListGroup.Item as=\"div\" action>\r\n              <Form.Label>{t(\"Email address\")}</Form.Label>\r\n              {!userEditorEditEmail ? (\r\n                <>\r\n                  <span style={{ float: \"right\" }}>\r\n                    <Edit\r\n                      onClick={() => setUserEditorEditEmail(true)}\r\n                      fontSize=\"small\"\r\n                      style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                    />\r\n                  </span>\r\n                  <br />\r\n                  <small>{email}</small>\r\n                </>\r\n              ) : (\r\n                <span style={{ float: \"right\" }}>\r\n                  <Close\r\n                    onClick={() => setUserEditorEditEmail(false)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              )}\r\n\r\n              {userEditorEditEmail && (\r\n                <Form.Group controlId=\"validationFormikEmail\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      placeholder={t(\"Enter email\")}\r\n                      name=\"email\"\r\n                      value={values.email}\r\n                      ref={refEmail}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.email && touched.email}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.email}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              )}\r\n            </ListGroup.Item>\r\n          )}\r\n\r\n          {/* Password */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Password\")}</Form.Label>\r\n            {!userEditorEditPassword ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditPassword(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditPassword(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditPassword && (\r\n              <>\r\n                {/* New password */}\r\n                <Form.Group controlId=\"validationFormikPassword\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      type={userEditorPasswordVisible ? \"text\" : \"password\"}\r\n                      placeholder={t(\"Enter new password\")}\r\n                      name=\"password\"\r\n                      ref={refPassword}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.password && touched.password}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <InputGroup.Text\r\n                        id=\"inputGroupAppend\"\r\n                        onClick={togglePassword}\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        {userEditorPasswordVisible ? (\r\n                          <VisibilityOff\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        ) : (\r\n                          <Visibility\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        )}\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.password}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              </>\r\n            )}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n\r\n        <Form.Group controlId=\"validationSubmitButton\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            visible={userEditorSubmitButtonVisible}\r\n            marginTop={20}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n      </Card>\r\n    </Form>\r\n  );\r\n\r\n  const jsx =\r\n    mode === \"label\" ? (\r\n      <span style={{ whiteSpace: \"nowrap\" }}>\r\n        {firstname} {lastname}\r\n      </span>\r\n    ) : (\r\n      <Formik\r\n        component={UserEditorForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          firstName: userEditorFirstname,\r\n          lastName: userEditorLastname,\r\n          email: userEditorEmail,\r\n          password: userEditorPassword,\r\n        }}\r\n      />\r\n    );\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    request: \"get currencies\", // \"register currency\",\r\n    namespace: \"Currencies\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencies,\r\n    settings,\r\n    countCurrencies,\r\n    activePageCurrencies,\r\n    currenciesPerPage,\r\n    currencyAbbr,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyAbbr,\r\n    setResponseProps,\r\n    setCurrencyRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    showRequestStatus,\r\n    getCurrencies,\r\n    findCurrencies,\r\n    formatExchangeRate,\r\n    getObjectArrayElementIndex,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onCurrencySelected = (e) => {\r\n    setCurrencyAbbr(e.target.id);\r\n    sendRequest({\r\n      req: \"register user currency\",\r\n      data: { email: userData.email, currency_id: e.target.id },\r\n    });\r\n\r\n    // Fetch the selected currency rate\r\n    const id = getObjectArrayElementIndex(currencies, \"abbr\", e.target.id);\r\n    setCurrencyRate(currencies[id].rate);\r\n  };\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    setResponseProps(null);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageCurrencies > 1 ? activePageCurrencies - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageCurrencies < Math.ceil(countCurrencies / currenciesPerPage)\r\n            ? activePageCurrencies + 1\r\n            : Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getCurrencies(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrenciesForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <Search\r\n          placeholder={t(\"Find currency...\")}\r\n          onSubmit={findCurrencies}\r\n          {...args}\r\n        />\r\n      </div>\r\n      <Table responsive striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Currency\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Abbr\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Region\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Rate\")}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currencies !== null &&\r\n            currencies.map((currency, keyCurrency) => {\r\n              cnt++;\r\n              // console.log(\"CURRENCY\", currency);\r\n\r\n              const { name, abbr, rate, region } = currency;\r\n\r\n              if (\r\n                typeof settings[\"currencies\"] === \"undefined\" ||\r\n                settings[\"currencies\"] === null ||\r\n                settings[\"currencies\"].length === 0 ||\r\n                settings[\"currencies\"].includes(abbr)\r\n              ) {\r\n                // valid currency - continue\r\n              } else {\r\n                return \"\"; // invalid currency\r\n              }\r\n\r\n              return (\r\n                <tr key={keyCurrency}>\r\n                  <td style={{ textAlign: \"left\", paddingLeft: \"1rem\" }}>\r\n                    <Form.Check\r\n                      id={abbr}\r\n                      type=\"radio\"\r\n                      checked={currencyAbbr === abbr}\r\n                      aria-label=\"option 1\"\r\n                      label={name}\r\n                      custom\r\n                      inline\r\n                      onChange={onCurrencySelected}\r\n                      name=\"selected-currency\"\r\n                    />\r\n                  </td>\r\n                  <td style={{ textAlign: \"center\" }}>{abbr}</td>\r\n                  <td style={{ textAlign: \"left\" }}>{region}</td>\r\n                  <td style={{ textAlign: \"right\" }}>\r\n                    {formatExchangeRate(rate)}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {showRequestStatus(\r\n        \"get currencies / SELECT currencies\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No currencies\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countCurrencies}\r\n        itemsPerPage={currenciesPerPage}\r\n        active={activePageCurrencies}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  // onSubmit={onSubmit}\r\n  return (\r\n    <Formik\r\n      component={CurrenciesForm}\r\n      initialValues={{\r\n        curr_abbr: \"\",\r\n        curr_title: \"\",\r\n        curr_region: \"\",\r\n        curr_rate: 1.0,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"CurrencyRegistration\",\r\n    request: \"register currency\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    formatExchangeRate,\r\n    // getCurrencies,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([\"CurrencyRegistration\"]);\r\n\r\n  const refAbbr = React.createRef();\r\n  const refTitle = React.createRef();\r\n  const refRegion = React.createRef();\r\n  const refRate = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefAbbr = refAbbr.current;\r\n    const tempRefTitle = refTitle.current;\r\n    const tempRefRegion = refRegion.current;\r\n    const tempRefRate = refRate.current;\r\n    return () => {\r\n      if (tempRefAbbr !== null && currencyCode !== tempRefAbbr.value)\r\n        setCurrencyCode(tempRefAbbr.value);\r\n\r\n      if (tempRefTitle !== null && currencyName !== tempRefTitle.value)\r\n        setCurrencyName(tempRefTitle.value);\r\n\r\n      if (tempRefRegion !== null && currencyRegion !== tempRefRegion.value)\r\n        setCurrencyRegion(tempRefRegion.value);\r\n\r\n      if (tempRefRate !== null && currencyNewRate !== tempRefRate.value)\r\n        setCurrencyNewRate(tempRefRate.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    curr_abbr: yup\r\n      .string()\r\n      .required(t(\"Currency abbreviation is required\"))\r\n      .min(3, t(\"Currency abbreviation is too short\"))\r\n      .max(5, t(\"Currency abbreviation is too long\")),\r\n    curr_title: yup\r\n      .string()\r\n      .required(t(\"Currency name is required\"))\r\n      .min(3, t(\"Currency name is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency name is too long\")), // must be at most 70 characters\r\n    curr_region: yup\r\n      .string()\r\n      .required(t(\"Currency region is required\"))\r\n      .min(3, t(\"Currency region is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency region is too long\")), // must be at most 70 characters\r\n    curr_rate: yup\r\n      .string()\r\n      .required(t(\"Exchange rate is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Exchange Rate Regex\")),\r\n        t(\"Wrong exchange rate format\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrencyRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/* Currency abbreviation */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Abbreviation\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_abbr\"\r\n              ref={refAbbr}\r\n              value={values.curr_abbr}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_abbr && touched.curr_abbr}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_abbr}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency name */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Currency Name\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_title\"\r\n              ref={refTitle}\r\n              value={values.curr_title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_title && touched.curr_title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_title}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency region */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Currency Region\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_region\"\r\n              ref={refRegion}\r\n              value={values.curr_region}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_region && touched.curr_region}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_region}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Initial exchange rate */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Initial Exchange Rate\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={formatExchangeRate(1)}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_rate\"\r\n              value={values.curr_rate}\r\n              ref={refRate}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_rate && touched.curr_rate}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_rate}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={CurrencyRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        curr_abbr: currencyCode,\r\n        curr_title: currencyName,\r\n        curr_region: currencyRegion,\r\n        curr_rate: currencyNewRate,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Rating.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Component\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Container\r\n        fluid\r\n        style={{\r\n          fontSize: \"0.9rem\",\r\n          textAlign: \"center\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n      >\r\n        <Row>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating1\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating2\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating3\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating4\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating5\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginTop: \"-0.3rem\" }}>\r\n          <Col style={{ padding: \"0\" }}>1</Col>\r\n          <Col style={{ padding: \"0\" }}>2</Col>\r\n          <Col style={{ padding: \"0\" }}>3</Col>\r\n          <Col style={{ padding: \"0\" }}>4</Col>\r\n          <Col style={{ padding: \"0\" }}>5</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col style={{ padding: \"0\" }}>Not helpful</Col>\r\n          <Col style={{ padding: \"0\" }}></Col>\r\n          <Col style={{ padding: \"0\" }}></Col>\r\n          <Col style={{ padding: \"0\" }}></Col>\r\n          <Col style={{ padding: \"0\" }}>Very helpful</Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ListGroupItem\",\r\n    caption: \"Untitled\",\r\n    key: \"untitled\",\r\n    href: \"#\",\r\n    onClick: () => {},\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"props:\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <ListGroup.Item\r\n        action\r\n        key={props.key}\r\n        eventKey={props.key}\r\n        style={{ cursor: \"default\", overflow: \"hidden\" }}\r\n        href={props.href}\r\n        onClick={props.onClick}\r\n      >\r\n        {props.caption}\r\n      </ListGroup.Item>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport ListGroupItem from \"../listGroupItem\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"HelpMenuLevel2\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { helpPath1, helpPath2 } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { setHelpPath } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // console.log(t(\"Common Questions\"));\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    switch (helpPath1) {\r\n      case \"#business\":\r\n        return (\r\n          <ListGroup variant=\"flush\" defaultActiveKey={helpPath2}>\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Common Questions\")}\r\n              key=\"common-questions\"\r\n              href=\"/help/topic/common-questions\"\r\n              onClick={() => setHelpPath(2, \"common-questions\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Merchant Services\")}\r\n              key=\"merchant-services\"\r\n              href=\"/help/topic/merchant-services\"\r\n              onClick={() => setHelpPath(2, \"merchant-services\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"My Account\")}\r\n              key=\"my-account\"\r\n              href=\"/help/topic/my-account\"\r\n              onClick={() => setHelpPath(2, \"my-account\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Local Currency Basics\")}\r\n              key=\"local-currency-basics\"\r\n              href=\"/help/topic/local-currency-basics\"\r\n              onClick={() => setHelpPath(2, \"local-currency-basics\")}\r\n            />\r\n          </ListGroup>\r\n        );\r\n        break;\r\n\r\n      case \"#technical\":\r\n        return (\r\n          <ListGroup variant=\"flush\" defaultActiveKey={helpPath2}>\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Common Questions\")}\r\n              key=\"common-questions\"\r\n              href=\"/help/topic/common-questions\"\r\n              onClick={() => setHelpPath(2, \"common-questions\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"APIs\")}\r\n              key=\"apis\"\r\n              href=\"/help/topic/apis\"\r\n              onClick={() => setHelpPath(2, \"apis\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Shopping Carts\")}\r\n              key=\"shopping-carts\"\r\n              href=\"/help/topic/shopping-carts\"\r\n              onClick={() => setHelpPath(2, \"shopping-carts\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Products\")}\r\n              key=\"products\"\r\n              href=\"/help/topic/products\"\r\n              onClick={() => setHelpPath(2, \"products\")}\r\n            />\r\n          </ListGroup>\r\n        );\r\n        break;\r\n\r\n      default:\r\n        // #personal\r\n        return (\r\n          <ListGroup variant=\"flush\" defaultActiveKey={helpPath2}>\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Common Questions\")}\r\n              key=\"common-questions\"\r\n              href=\"/help/topic/common-questions\"\r\n              onClick={() => setHelpPath(2, \"common-questions\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"My Account\")}\r\n              key=\"my-account\"\r\n              href=\"/help/topic/my-account\"\r\n              onClick={() => setHelpPath(2, \"my-account\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Local Currency Basics\")}\r\n              key=\"local-currency-basics\"\r\n              href=\"/help/topic/local-currency-basics\"\r\n              onClick={() => setHelpPath(2, \"local-currency-basics\")}\r\n            />\r\n          </ListGroup>\r\n        );\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * User CSS\r\n ============================================================================ */\r\nimport \"./Help.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { lazy } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\nimport Search from \"../search\";\r\nimport HelpMenuLevel2 from \"../helpMenuLevel2\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Help\", searchable: false };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { language, helpPath1, helpPath2 } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getFileNameFromURI, setHelpPath } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"Personal Help\"),\r\n      link: \"#personal\",\r\n    },\r\n    {\r\n      name: t(\"Business Help\"),\r\n      link: \"#business\",\r\n    },\r\n    {\r\n      name: t(\"Technical Help\"),\r\n      link: \"#technical\",\r\n    },\r\n  ];\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  const getJSX = () => {\r\n    // console.log(window.location.pathname);\r\n\r\n    let leadFile = getFileNameFromURI();\r\n\r\n    let ExternalFile = null;\r\n\r\n    ExternalFile =\r\n      leadFile !== null\r\n        ? lazy(() =>\r\n            import(`../locale/${language}/topics/${leadFile}`).catch((err) => {\r\n              // console.log(\"err:\", err);\r\n              return import(`../locale/${language}/topics/common-questions.js`); // TODO: Change LeadLogiIn.js -> _LeadDefault.js\r\n            })\r\n          )\r\n        : null;\r\n\r\n    const onHelpPath1Click = (link) => {\r\n      // console.log(link);\r\n      // setHelpPath1(link);\r\n      setHelpPath(1, link);\r\n    };\r\n\r\n    return (\r\n      <Card\r\n        title={t(\"Help center\")}\r\n        navigation={navigation}\r\n        headerPadding=\"20px 20px 10px 20px\"\r\n        bodyPadding=\"20px 20px 10px 20px\"\r\n        border={0}\r\n        maxWidthBody=\"100%\"\r\n        navigationdefaultActiveKey={helpPath1}\r\n        onNavigationClick={onHelpPath1Click}\r\n      >\r\n        <Container fluid>\r\n          {/**\r\n           * Search\r\n           */}\r\n          {props.searchable && (\r\n            <Row>\r\n              <Col>\r\n                <div className=\"header-text\">\r\n                  <h1>{t(\"How can we help?\")}</h1>\r\n                </div>\r\n                <div style={{ textAlign: \"center\", margin: \"0 0 35px 0\" }}>\r\n                  <div\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      width: \"100%\",\r\n                      maxWidth: \"600px\",\r\n                    }}\r\n                  >\r\n                    <Search\r\n                      {...args}\r\n                      placeholder={t(\"Ask a question or search by keyword\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n\r\n          <Row>\r\n            <Col xl={4} style={{}}>\r\n              <HelpMenuLevel2 {...args} />\r\n            </Col>\r\n            <Col xl={8} style={{}}>\r\n              {ExternalFile !== null && (\r\n                <ErrorBoundary>\r\n                  <ExternalFile {...args} />\r\n                </ErrorBoundary>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import _ from \"lodash\";\r\n// import { useTranslation } from \"react-i18next\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Button,\r\n  // Breadcrumb,\r\n  // NavDropdown,\r\n  // Alert,\r\n} from \"react-bootstrap\";\r\n// import Octicon, { SignOut } from \"@primer/octicons-react\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../../settings.json\";\r\nimport AccountRegistration from \"../accountRegistration\";\r\n// import BusinessRegistration from \"../../businessRegistration\";\r\nimport Balance from \"../accountContainer\";\r\nimport { Transfer } from \"../transfer\";\r\nimport MyBusiness from \"../myBusiness\";\r\nimport UserEditor from \"../userEditor\";\r\nimport CurrencyContainer from \"../currencyContainer\";\r\n// import Login from \"../../login\";\r\nimport Contact from \"../contact\";\r\nimport Card from \"../card\";\r\nimport Status_404 from \"../status_404\";\r\nimport Help from \"../help\";\r\n// import LanguageSelector from \"../language-selector\";\r\n// import MainMenu from \"../mainMenu\";\r\n\r\n/**\r\n * Component: Summary\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"Summary\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { settings, accountNumber } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getBusinesses } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const { t } = useTranslation(props.namespace);\r\n\r\n  // const location = useLocation();\r\n\r\n  const pageBody = (\r\n    <Router>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/summary\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/account-registration\"\r\n          component={() => {\r\n            return AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/profile\"\r\n          component={() => {\r\n            return UserEditor({ ...args, mode: \"profile\" });\r\n          }}\r\n        />\r\n        {settings !== null &&\r\n          typeof settings[\"currencies\"] !== \"undefined\" &&\r\n          (settings[\"currencies\"] === null ||\r\n            settings[\"currencies\"].length === 0 ||\r\n            settings[\"currencies\"].length > 1) && (\r\n            <Route\r\n              exact\r\n              path=\"/currency\"\r\n              component={() => {\r\n                return CurrencyContainer({ ...args });\r\n              }}\r\n            />\r\n          )}\r\n\r\n        <Route\r\n          exact\r\n          path=\"/my-business\"\r\n          component={() => {\r\n            return MyBusiness(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/balance\"\r\n          component={() => {\r\n            return Balance(args);\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/transfer\"\r\n          component={() => {\r\n            return Transfer(args);\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/feedback\"\r\n          component={() => {\r\n            return Contact(args);\r\n          }}\r\n        />\r\n\r\n        {/**\r\n         * Default route\r\n         */}\r\n        <Route\r\n          path=\"*\"\r\n          component={() => {\r\n            return Status_404(args);\r\n          }}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n\r\n      {/* Content */}\r\n      {/*<h3>{t(\"Summary\")}</h3>*/}\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <Card\r\n              backgroundHeader=\"Transparent\"\r\n              backgroundBody=\"Transparent\"\r\n              border=\"0\"\r\n              align=\"left\"\r\n              maxWidthBody=\"700px\"\r\n              header={false}\r\n            >\r\n              {pageBody}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../settings.json\";\r\n// import Card from \"../card\";\r\nimport Currencies from \"../currencies\";\r\nimport CurrencyRegistration from \"../currencyRegistration\";\r\nimport AccordionCard from \"../accordionCard\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\", paddingBody: \"20px 0 0 0\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    accordionViewCurrency,\r\n    activePageCurrencies,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setAccordionViewCurrency,\r\n    setRedirectTo,\r\n    setResponseProps,\r\n  } = props.barrelSetters;\r\n  const { getCurrencies } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const ToggleCurrencies = () => {\r\n    if (accordionViewCurrency !== \"currencies\") {\r\n      setResponseProps(null);\r\n      setAccordionViewCurrency(\"currencies\");\r\n      getCurrencies(activePageCurrencies);\r\n    } else {\r\n      setAccordionViewCurrency(null);\r\n    }\r\n  };\r\n\r\n  const ToggleCurrencyRegistration = () => {\r\n    setAccordionViewCurrency(\r\n      accordionViewCurrency !== \"currencyRegistration\"\r\n        ? \"currencyRegistration\"\r\n        : null\r\n    );\r\n  };\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  if (\r\n    typeof settings[\"currencies\"] !== \"undefined\" &&\r\n    settings[\"currencies\"] !== null &&\r\n    settings[\"currencies\"].length < 2\r\n  ) {\r\n    return <></>; // currency creation is disabled\r\n  } else {\r\n    return (\r\n      <>\r\n        <Accordion defaultActiveKey={accordionViewCurrency}>\r\n          {/**\r\n           * Currencies\r\n           */}\r\n          <AccordionCard\r\n            title={t(\"Currencies\")}\r\n            eventkey=\"currencies\"\r\n            active={accordionViewCurrency}\r\n            paddingBody={props.paddingBody}\r\n            onClick={ToggleCurrencies}\r\n          >\r\n            <Currencies {...args} />\r\n          </AccordionCard>\r\n\r\n          {/**\r\n           * Currency registration\r\n           */}\r\n          {typeof settings[\"currencyCreationAllowed\"] !== \"undefined\" &&\r\n            settings[\"currencyCreationAllowed\"] && (\r\n              <AccordionCard\r\n                title={t(\"Currency Registration\")}\r\n                eventkey=\"currencyRegistration\"\r\n                active={accordionViewCurrency}\r\n                paddingBody={props.paddingBody}\r\n                onClick={ToggleCurrencyRegistration}\r\n              >\r\n                <CurrencyRegistration {...args} />\r\n              </AccordionCard>\r\n            )}\r\n        </Accordion>\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { TransferToSelf, TransferToPerson, TransferToBusiness } from \"./index\";\r\n\r\n/**\r\n * Component: Transfer\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber, transferType } = props.barrelGetters;\r\n  const { setRedirectTo } = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  const { onTransferTypeChange } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"Transfer\");\r\n\r\n  const data = props.data;\r\n  const type = transferType;\r\n  // const onTypeChange = args.onTypeChange;\r\n\r\n  // console.log(\"TRANSFER DATA TYPE:\", type);\r\n\r\n  // const [transferCard, setTransferCard] = useState(null);\r\n\r\n  const onNavigationClick = (id) => {\r\n    onTransferTypeChange(id);\r\n  };\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"U2S\"),\r\n      link: \"#u2s\",\r\n    },\r\n    {\r\n      name: t(\"U2U\"),\r\n      link: \"#u2u\",\r\n    },\r\n    {\r\n      name: t(\"U2B\"),\r\n      link: \"#u2b\",\r\n    },\r\n  ];\r\n\r\n  // console.log(\"TRANSFER DATA\", data);\r\n  // const title = t(\"Transfer to account\");\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  switch (type) {\r\n    case \"#u2u\": // User to user\r\n      // case \"/u2u\": // User to user\r\n      return (\r\n        <TransferToPerson\r\n          title={t(\"Transfer to account\")}\r\n          args={props}\r\n          navigation={navigation}\r\n          navigationdefaultActiveKey={type}\r\n          onNavigationClick={onNavigationClick}\r\n        />\r\n      );\r\n      break;\r\n    case \"#u2b\": // User to business\r\n      // case \"/u2b\": // User to business\r\n      return (\r\n        <TransferToBusiness\r\n          title={t(\"Transfer to account\")}\r\n          args={props}\r\n          navigation={navigation}\r\n          navigationdefaultActiveKey={type}\r\n          onNavigationClick={onNavigationClick}\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      // \"#u2s\"\r\n      return (\r\n        <TransferToSelf\r\n          title={t(\"Transfer to account\")}\r\n          args={props}\r\n          navigation={navigation}\r\n          navigationdefaultActiveKey={type}\r\n          onNavigationClick={onNavigationClick}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\nimport Rating from \"../rating\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Contact\", request: \"send message\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    language,\r\n    accountNumber,\r\n    contactSubject,\r\n    contactMessage,\r\n  } = props.barrelGetters;\r\n  const { setContactSubject, setContactMessage } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refSubject = React.createRef();\r\n  const refMessage = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefSubject = refSubject.current;\r\n    const tempRefMessage = refMessage.current;\r\n    return () => {\r\n      // console.log(\"ON UNMOUNT:\", tempRefSubject.value);\r\n      if (tempRefSubject !== null && contactSubject !== tempRefSubject.value)\r\n        setContactSubject(tempRefSubject.value);\r\n\r\n      if (tempRefMessage !== null && contactMessage !== tempRefMessage.value)\r\n        setContactMessage(tempRefMessage.value);\r\n      // console.log(\"CONTACT UNMOUNTS\");\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    subject: yup.string().required(t(\"Subject is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.sender = accountNumber;\r\n    data.language = language;\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  // const navigation = [\r\n  //   {\r\n  //     name: t(\"U2S\"),\r\n  //     link: \"#u2s\",\r\n  //   },\r\n  // ];\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card header={false} border={0} maxWidthBody=\"700px\">\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * Rating\r\n         */}\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          Thank you for your feedback! How helpful was our site?*\r\n        </div>\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <Rating {...args} />\r\n        </div>\r\n\r\n        {/*\r\n         * Subject\r\n         */}\r\n        <Form.Group controlId=\"validationFormikSubject\">\r\n          <Form.Label>{t(\"Subject\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={t(\"Enter message subject\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"subject\"\r\n              ref={refSubject}\r\n              value={values.subject}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setContactSubject(e.target.value);\r\n              }}\r\n              isInvalid={!!errors.subject && touched.subject}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.subject}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Message\r\n         */}\r\n        <Form.Group controlId=\"validationFormikMessage\">\r\n          <Form.Label>{t(\"Message\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter message\")}\r\n            name=\"message\"\r\n            value={values.message}\r\n            ref={refMessage}\r\n            onChange={handleChange}\r\n            as=\"textarea\"\r\n            rows=\"10\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        subject: contactSubject,\r\n        message: contactMessage,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"HttpResponseStatusCodes\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return <Card title={t(\"404 Not found\")} border={0}></Card>;\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Overlay.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { cloneElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Overlay\",\r\n    visible: false,\r\n    variant: \"info\",\r\n    dismissible: false,\r\n    onClose: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"dismissible:\", props.dismissible);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  useTimeout(\r\n    () => {\r\n      props.onClose();\r\n    },\r\n    !props.dismissible ? 5000 : -1 // millisec till overlay closes, -1 never\r\n  );\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      let className = \"custom-overlay\";\r\n\r\n      /**\r\n       * Implement property: dismissible\r\n       */\r\n      if (props.dismissible) {\r\n        className += \" alert-dismissible\";\r\n      }\r\n\r\n      /**\r\n       * Implement property: variant\r\n       */\r\n      switch (props.variant) {\r\n        case \"danger\":\r\n          className += \" alert-danger\";\r\n          break;\r\n\r\n        default:\r\n          className += \" alert-info\";\r\n          break;\r\n      }\r\n      let key = 0;\r\n      return (\r\n        <div className={className}>\r\n          {props.dismissible && (\r\n            <button type=\"button\" className=\"close\" onMouseDown={props.onClose}>\r\n              <span aria-hidden=\"true\">×</span>\r\n              <span className=\"sr-only\">Close alert</span>\r\n            </button>\r\n          )}\r\n          {React.Children.map(args.children, (child) => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                ...args,\r\n                styles: null,\r\n                key: key,\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./AlertContainer.css\";\r\n\r\n/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = { namespace: \"AlertContainer\", visible: false };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      return (\r\n        <div className=\"alert-container\">\r\n          {React.Children.map(args.children, (child) => child)}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Alert } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Overlay from \"../overlay\";\r\nimport AlertContainer from \"../alertContainer\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args.data);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onAlertClose: onClose } = props.barrelEventHandlers;\r\n\r\n  // let t;\r\n  const errorStrings = useTranslation(\"Errors\").t;\r\n  const infoStrings = useTranslation(\"Infos\").t;\r\n\r\n  if (error !== null && info !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <>\r\n        <AlertContainer visible={true}>\r\n          {msgError !== \"\" && msgError !== null && (\r\n            <Overlay\r\n              visible={true}\r\n              variant=\"danger\"\r\n              onClose={() => onClose(\"error\")}\r\n              dismissible={error.dismissible}\r\n            >\r\n              {msgError}\r\n            </Overlay>\r\n          )}\r\n\r\n          {msgInfo !== \"\" && msgInfo !== null && (\r\n            <Overlay\r\n              visible={true}\r\n              variant=\"info\"\r\n              onClose={() => onClose(\"info\")}\r\n              dismissible={info.dismissible}\r\n            >\r\n              {msgInfo}\r\n            </Overlay>\r\n          )}\r\n        </AlertContainer>\r\n      </>\r\n    );\r\n  } else if (error !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        {msgError !== \"\" && msgError !== null && (\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"danger\"\r\n            onClose={() => onClose(\"error\")}\r\n            dismissible={error.dismissible}\r\n          >\r\n            {msgError}\r\n          </Overlay>\r\n        )}\r\n      </AlertContainer>\r\n    );\r\n  } else if (info !== null) {\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        {msgInfo !== \"\" && msgInfo !== null && (\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"info\"\r\n            onClose={() => onClose(\"info\")}\r\n            dismissible={info.dismissible}\r\n          >\r\n            {msgInfo}\r\n          </Overlay>\r\n        )}\r\n      </AlertContainer>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  // Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Spinner,\r\n} from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n// import Alert from \"../alert\";\r\n// import LanguageSelector from \"../language-selector\";\r\nimport Card from \"../card\";\r\n// import Footer from \"../footer\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"ALERT DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { ip, logInEmail, logInPassword } = props.barrelGetters;\r\n  const {\r\n    setLoggingIn,\r\n    setUpdateInterval,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    getUri,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"LogIn\");\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (tempRefEmail !== null && logInEmail !== tempRefEmail.value)\r\n        setLogInEmail(tempRefEmail.value);\r\n\r\n      if (tempRefPassword !== null && logInPassword !== tempRefPassword.value)\r\n        setLogInPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup.string().required(t(\"No password provided\")),\r\n  });\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserLogInRequest = (data) => {\r\n    // data.pw = data.password;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.ip = ip;\r\n    data.uri = getUri();\r\n    sendRequest({ req: \"sign in user\", data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    setUpdateInterval(-1);\r\n    setLoggingIn(true);\r\n    sendUserLogInRequest(data);\r\n  };\r\n\r\n  const UserLogInForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      align=\"left\"\r\n      // maxWidth=\"500px\"\r\n      header={false}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <h3>{t(\"Sign In\")}</h3>\r\n\r\n        {/**\r\n         * Email\r\n         */}\r\n        <Form.Group controlId=\"validationFormikEmail\">\r\n          <Form.Label>{t(\"Email address\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            // autoFocus\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Password\r\n         */}\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <Form.Label>{t(\"Password\")}</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            ref={refPassword}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Submit button\r\n         */}\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request=\"sign in user\"\r\n            namespace=\"LogIn\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Container fluid=\"md\">\r\n          <Row>\r\n            {/**\r\n             * Register\r\n             */}\r\n            <Col>\r\n              <p className=\"other-options text-left\">\r\n                <Trans i18nKey=\"LogIn:Not yet registered\">\r\n                  Not yet <a href=\"/sign-up\">registered?</a>\r\n                </Trans>\r\n              </p>\r\n            </Col>\r\n\r\n            {/**\r\n             * Forgot password\r\n             */}\r\n            <Col>\r\n              <p className=\"other-options text-right\">\r\n                <Trans i18nKey=\"LogIn:Forgot password\">\r\n                  Forgot <a href=\"/reset\">password?</a>\r\n                </Trans>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={UserLogInForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          email: logInEmail,\r\n          password: logInPassword,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"register user\", namespace: \"SignUp\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    language,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n  } = props.barrelSetters;\r\n  const { getReviser, getWorkplace, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefFirstName = refFirstName.current;\r\n    const tempRefLastName = refLastName.current;\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (\r\n        tempRefFirstName !== null &&\r\n        signUpFirstName !== tempRefFirstName.value\r\n      )\r\n        setSignUpFirstName(tempRefFirstName.value);\r\n\r\n      if (tempRefLastName !== null && signUpLastName !== tempRefLastName.value)\r\n        setSignUpLastName(tempRefLastName.value);\r\n\r\n      if (tempRefEmail !== null && signUpEmail !== tempRefEmail.value)\r\n        setSignUpEmail(tempRefEmail.value);\r\n\r\n      if (tempRefPassword !== null && signUpPassword !== tempRefPassword.value)\r\n        setSignUpPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    firstName: yup.string().required(t(\"First name is required\")),\r\n    lastName: yup.string().required(t(\"Last name is required\")),\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.language = language;\r\n    data.validateEmail = true;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    // const recaptchaValue = refReCAPTCHA.current.getValue();\r\n    // this.props.onSubmit(recaptchaValue);\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  // const onChange = (data) => {\r\n  //   console.log(\"onChange:\", data);\r\n  // };\r\n\r\n  const UserRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      align=\"left\"\r\n      // maxWidth=\"500px\"\r\n      header={false}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <h3>{t(\"Sign Up\")}</h3>\r\n\r\n        {/**\r\n         * First name\r\n         */}\r\n        <Form.Group controlId=\"validationFormikFirstName\">\r\n          <Form.Label>{t(\"First name\")}</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter first name\")}\r\n            name=\"firstName\"\r\n            ref={refFirstName}\r\n            // autoFocus\r\n            value={values.firstName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.firstName && touched.firstName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.firstName}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Last name\r\n         */}\r\n        <Form.Group controlId=\"validationFormikLastName\">\r\n          <Form.Label>{t(\"Last name\")}</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter last name\")}\r\n            name=\"lastName\"\r\n            ref={refLastName}\r\n            value={values.lastName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.lastName && touched.lastName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.lastName}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Email\r\n         */}\r\n        <Form.Group controlId=\"validationFormikEmail\">\r\n          <Form.Label>{t(\"Email address\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Password\r\n         */}\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <Form.Label>{t(\"Password\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type={passwordVisible ? \"text\" : \"password\"}\r\n              placeholder={t(\"Enter password\")}\r\n              name=\"password\"\r\n              ref={refPassword}\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.password && touched.password}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text\r\n                id=\"inputGroupAppend\"\r\n                onClick={togglePassword}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                {passwordVisible ? (\r\n                  <VisibilityOff\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\" }}\r\n                  />\r\n                ) : (\r\n                  <Visibility\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\" }}\r\n                  />\r\n                )}\r\n              </InputGroup.Text>\r\n            </InputGroup.Append>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.password}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Submit button\r\n         */}\r\n        <Form.Group controlId=\"validationSubmitButton\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Login link\r\n         */}\r\n        <p className=\"other-options text-right\">\r\n          <Trans i18nKey=\"SignUp:Already registered\">\r\n            Already registered <a href=\"/sign-in\">sign in?</a>\r\n          </Trans>\r\n        </p>\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={UserRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        firstName: signUpFirstName,\r\n        lastName: signUpLastName,\r\n        email: signUpEmail,\r\n        password: signUpPassword,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport TanInput from \"../tanInput\";\r\nimport { useEffect } from \"react\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Checkout\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    // externalRequest,\r\n    // accountNumber,\r\n    cartProps,\r\n    cartContent,\r\n    cartPurposes,\r\n    tanRequired,\r\n    userData,\r\n    language,\r\n    accountNumber,\r\n    currencyAbbr,\r\n    cartID,\r\n    cartProcessingStatus,\r\n  } = props.barrelGetters;\r\n  const { setTransferRequest, setCartProcessingStatus } = props.barrelSetters;\r\n  const { format, sendRequest, formatDate } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const schema = yup.object({});\r\n\r\n  const getCartPurposes = () => {\r\n    if (cartContent === null) return false;\r\n\r\n    let priceTotal = 0;\r\n    let priceReal = 0;\r\n\r\n    let purposeID = [];\r\n    let amount = [];\r\n    let currency = [];\r\n    let fromAccount = [];\r\n\r\n    cartContent.map((element) => {\r\n      priceTotal += element.price * element.amount;\r\n      let product_found = \"N\";\r\n\r\n      if (cartPurposes !== null) {\r\n        let product = cartPurposes.find(\r\n          (products) => products.purpose_id === element.product\r\n        );\r\n\r\n        if (typeof product !== \"undefined\") {\r\n          product_found = \"Y\";\r\n          priceReal += element.price * element.amount;\r\n        }\r\n        // console.log(\"product:\", product);\r\n      }\r\n\r\n      /**\r\n       * In current implementation if product could be added to the cart,\r\n       * then subsequential deactivation is ignored.\r\n       */\r\n      purposeID.push(element.product);\r\n      amount.push(element.price * element.amount);\r\n      currency.push(currencyAbbr);\r\n      fromAccount.push(\"acc_curr\");\r\n    });\r\n\r\n    return { purposeID, amount, currency, fromAccount };\r\n  };\r\n\r\n  const Cart = () => {\r\n    if (cartProps === null) return <></>;\r\n\r\n    let priceTotal = 0; // Price of active AND inactive purposes\r\n    let priceReal = 0; // Price of active purposes\r\n\r\n    const businessCreated = formatDate(cartProps.business_created, {\r\n      month: \"numeric\",\r\n      year: \"numeric\",\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {cartContent !== null &&\r\n          cartContent.map((element, key) => {\r\n            priceTotal += element.price * element.amount;\r\n            let product_found = \"N\";\r\n\r\n            if (cartPurposes !== null) {\r\n              let product = cartPurposes.find(\r\n                (products) => products.purpose_id === element.product\r\n              );\r\n\r\n              if (typeof product !== \"undefined\") {\r\n                product_found = \"Y\";\r\n                priceReal += element.price * element.amount;\r\n              }\r\n              // console.log(\"product:\", product);\r\n            }\r\n\r\n            //   if (typeof product !== \"undefined\") {\r\n            //     product_found = product.title;\r\n            //   }\r\n            // }\r\n\r\n            return (\r\n              <div key={key}>\r\n                {false && (\r\n                  <>\r\n                    <div>product: {element.product}</div>\r\n                    <div>price: {element.price}</div>\r\n                    <div>amount: {element.amount}</div>\r\n                    <div>found: {product_found}</div>\r\n                    <br />\r\n                  </>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        <div style={{ fontWeight: \"bold\" }}>{t(\"Merchant\")}</div>\r\n        <div style={{}}>{cartProps.merchant}</div>\r\n        <div style={{}}>{cartProps.business_title}</div>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <Trans\r\n            i18nKey=\"Checkout:Business created\"\r\n            businessCreated={businessCreated}\r\n          >\r\n            Since {{ businessCreated }}\r\n          </Trans>\r\n        </div>\r\n\r\n        <div style={{ fontWeight: \"bold\" }}>{t(\"Amount\")}</div>\r\n        <div style={{ fontSize: \"1.5rem\" }}>{format(priceTotal)}</div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    setCartProcessingStatus(null);\r\n\r\n    data.transferType = \"transfer U2B\";\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n\r\n    const { amount, currency, purposeID, fromAccount } = getCartPurposes();\r\n\r\n    data.amount = amount;\r\n    data.currency = currency;\r\n    data.purposeID = purposeID;\r\n    data.fromAccount = fromAccount;\r\n\r\n    data.cart = cartProps.cartid;\r\n    data.merchant = cartProps.merchant;\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n\r\n    data = { email: userData.email, language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n\r\n    // setTransferAmount(\"\");\r\n  };\r\n\r\n  const CheckoutForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card title={t(\"Checkout\")} border=\"0\">\r\n      {/* From account */}\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <Cart />\r\n        </div>\r\n        {/* Submit button */}\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  // return <>{getJSX()}</>;\r\n\r\n  return (\r\n    <>\r\n      {cartProcessingStatus === null ? (\r\n        <>\r\n          <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n          <Formik\r\n            component={CheckoutForm}\r\n            validationSchema={schema}\r\n            onSubmit={onSubmit}\r\n            initialValues={{}}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {cartProcessingStatus === true\r\n            ? \"Transfer successful\"\r\n            : \"Transfer error\"}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../../translations/i18n\";\r\n// import { withNamespaces } from \"react-i18next\";\r\nimport { Form, Badge } from \"react-bootstrap\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"LanguageSelector\",\r\n    backgroundColor: \"var(--dark)\",\r\n    color: \"var(--light)\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { userData, signedIn } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n  const languages = [\r\n    { id: 1, language: \"Latviešu\", code: \"lv\" },\r\n    { id: 2, language: \"English\", code: \"en\" },\r\n  ];\r\n  const handleLanguageSelect = (e) => {\r\n    changeLanguage(e.target.value);\r\n  };\r\n  const selectLanguage = (language) => {\r\n    changeLanguage(language);\r\n\r\n    if (userData !== null && signedIn) {\r\n      sendRequest({\r\n        req: \"register user language\",\r\n        data: { email: userData.email, language },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (1) {\r\n    return (\r\n      <span style={{ paddingLeft: \"0.5rem\", paddingRight: \"0.5rem\" }}>\r\n        <Badge\r\n          pill\r\n          style={{\r\n            cursor: \"pointer\",\r\n            backgroundColor: props.backgroundColor,\r\n            color: props.color,\r\n            marginBottom: \"0.3rem\",\r\n          }}\r\n          onClick={() => {\r\n            selectLanguage(\"en\");\r\n          }}\r\n        >\r\n          en\r\n        </Badge>{\" \"}\r\n        <Badge\r\n          pill\r\n          style={{\r\n            cursor: \"pointer\",\r\n            backgroundColor: props.backgroundColor,\r\n            color: props.color,\r\n            marginBottom: \"0.3rem\",\r\n          }}\r\n          onClick={() => {\r\n            selectLanguage(\"lv\");\r\n          }}\r\n        >\r\n          lv\r\n        </Badge>\r\n      </span>\r\n    );\r\n  } else {\r\n    return (\r\n      <Form.Control\r\n        as=\"select\"\r\n        id=\"languageSelector\"\r\n        onChange={handleLanguageSelect}\r\n        custom\r\n      >\r\n        <option key=\"0\" value={props.language}>\r\n          {t(\"Language\")}\r\n        </option>\r\n        {languages.map((el) => (\r\n          <option key={el.id} value={el.code}>\r\n            {el.language}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    );\r\n  }\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col, Navbar, Nav } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\nimport LanguageSelector from \"../language-selector\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Footer\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { signedIn } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Card\r\n        title=\"\"\r\n        header={true}\r\n        border={0}\r\n        maxWidthBody=\"100%\"\r\n        headerPadding=\"10px\"\r\n        bodyPadding=\"10px 20px\"\r\n      >\r\n        {window.location.pathname !== \"/auth\" ? (\r\n          /**\r\n           * Full footer\r\n           */\r\n          <Container\r\n            fluid\r\n            style={{\r\n              paddingRight: \"0\",\r\n              paddingLeft: \"0\",\r\n            }}\r\n          >\r\n            {/*\r\n             * Top Footer\r\n             */}\r\n            <Row style={{ padding: 0 }}>\r\n              <Col style={{ padding: 0 }}>\r\n                <Navbar\r\n                  collapseOnSelect\r\n                  expand=\"sm\"\r\n                  style={{\r\n                    borderRadius: \"5px\",\r\n                    backgroundColor: \"var(--light)\", // e8f6f3\r\n                    boxShadow: \"none\",\r\n                    padding: \"0 .5rem\",\r\n                  }}\r\n                >\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"help\" href=\"/help\">\r\n                      {t(\"Help\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    {signedIn &&\r\n                      window.location.pathname !== \"/contact\" &&\r\n                      window.location.pathname !== \"/account-registration\" && (\r\n                        <Nav>\r\n                          <Nav.Link eventKey=\"contact\" href=\"/contact\">\r\n                            {t(\"Contact\")}\r\n                          </Nav.Link>\r\n                        </Nav>\r\n                      )}\r\n\r\n                    <Nav className=\"mr-auto\">\r\n                      <Nav.Link eventKey=\"about\" href=\"/security\">\r\n                        {t(\"Security\")}\r\n                      </Nav.Link>\r\n                    </Nav>\r\n\r\n                    <Nav>\r\n                      <Nav.Item>\r\n                        <LanguageSelector {...args} />\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                  </Navbar.Collapse>\r\n                </Navbar>\r\n              </Col>\r\n            </Row>\r\n\r\n            {/*\r\n             * Bottom Footer\r\n             */}\r\n            <Row\r\n              className=\"d-none d-sm-block\"\r\n              style={{ padding: 0, fontSize: \"0.86rem\" }}\r\n            >\r\n              <Col style={{ padding: 0 }}>\r\n                <Navbar\r\n                  collapseOnSelect\r\n                  expand=\"sm\"\r\n                  style={{\r\n                    borderRadius: \"5px\",\r\n                    backgroundColor: \"var(--light)\", // e8f6f3\r\n                    boxShadow: \"none\",\r\n                    padding: \"0 .5rem\",\r\n                  }}\r\n                >\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/about\">\r\n                      {t(\"About\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/newsroom\">\r\n                      {t(\"Newsroom\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/jobs\">\r\n                      {t(\"Jobs\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link eventKey=\"about\" href=\"/sitemap\">\r\n                      {t(\"Sitemap\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Item style={{}}>\r\n                      &copy;&nbsp;{now.getFullYear()}\r\n                    </Nav.Item>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/feedback\">\r\n                      {t(\"Feedback\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n                </Navbar>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        ) : (\r\n          /**\r\n           * Minimal footer\r\n           */\r\n          <Container\r\n            fluid\r\n            style={{\r\n              paddingRight: \"0\",\r\n              paddingLeft: \"0\",\r\n            }}\r\n          >\r\n            {/*\r\n             * Top Footer\r\n             */}\r\n            <Row style={{ padding: 0 }}>\r\n              <Col style={{ padding: 0 }}>\r\n                <Nav className=\"justify-content-center\">\r\n                  <Nav.Item>\r\n                    <LanguageSelector {...args} />\r\n                  </Nav.Item>\r\n                </Nav>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        )}\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AvTimer } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n//  let time = new Date().toLocaleString();\r\nimport { useInterval } from \"../../utils/useInterval\";\r\nimport { useEventListener } from \"../../utils/useEventListener\";\r\n\r\nimport ModalMessage from \"../modalMessage\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Constants\r\n     ============================================================================ */\r\n  const minute = 60; // seconds, for testing purposes > 60\r\n\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"IdleTimer\",\r\n    timeout: 5 * minute,\r\n    timestamp: null,\r\n    stage2: 60, // show seconds (vs minutes) in stage 2\r\n    stage3: 20, // show modal message on stage 3\r\n    onTick: () => {},\r\n    onTimerReset: () => {},\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { formatDate } = props.barrelFunctions;\r\n  const { onSessionTimeout } = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const [seconds, setSeconds] = useState(props.timeout);\r\n  const [modalMessageShow, setModalMessageShow] = React.useState(false);\r\n\r\n  useInterval(() => {\r\n    // Your custom logic here\r\n\r\n    setSeconds(seconds - 1);\r\n    props.onTick(seconds);\r\n  }, 1000);\r\n\r\n  useEventListener(() => {\r\n    setSeconds(props.timeout);\r\n    props.onTimerReset();\r\n  }, [\"mousedown\", \"click\", \"scroll\", \"keypress\"]); // \"click\",\r\n\r\n  useEffect(() => {\r\n    if (seconds === props.timeout) setModalMessageShow(false);\r\n    if (seconds === props.stage3) setModalMessageShow(true);\r\n    if (seconds === 0) onSessionTimeout();\r\n\r\n    // eslint-disable-next-line\r\n  }, [seconds]);\r\n\r\n  // useEffect(() => {\r\n  //   setSeconds(props.timeout);\r\n  //   props.onTimerReset();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [session]);\r\n\r\n  const getJSX = () => {\r\n    let currTime;\r\n    if (seconds > props.stage2) currTime = Math.ceil(seconds / minute);\r\n    else currTime = seconds;\r\n\r\n    const timeFormatted = formatDate(new Date(1970, 1, 1, 0, 0, currTime), {\r\n      minute: \"numeric\",\r\n      second: \"numeric\",\r\n    });\r\n\r\n    const onSessionContinue = () => {\r\n      // console.log(\"onSessionContinue\");\r\n      setSeconds(props.timeout);\r\n      setModalMessageShow(false);\r\n    };\r\n\r\n    const modalMessage = (\r\n      <>\r\n        <Trans\r\n          i18nKey=\"IdleTimer:Automatic logout\"\r\n          timeFormatted={timeFormatted}\r\n        >\r\n          <div className=\"text-center\">Automatic logout in</div>\r\n          <div\r\n            className=\"text-center\"\r\n            style={{ fontSize: \"4em\", fontWeight: \"bold\", color: \"#A93226\" }}\r\n          >\r\n            {{ timeFormatted }}\r\n          </div>\r\n          <div className=\"text-center\">\r\n            Do you want to continue the session?\r\n          </div>\r\n        </Trans>\r\n        <br />\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Continue now\")}\r\n          request=\"continue session\"\r\n          onSubmit={onSessionContinue}\r\n          namespace={props.namespace}\r\n        />\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <ModalMessage\r\n          show={modalMessageShow}\r\n          message={modalMessage}\r\n          onHide={() => setModalMessageShow(false)}\r\n        />\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip>\r\n              {seconds > props.stage2 ? (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Minutes to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  minutes.\r\n                </Trans>\r\n              ) : (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Seconds to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  seconds.\r\n                </Trans>\r\n              )}\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <div style={{ whiteSpace: \"nowrap\", cursor: \"default\" }}>\r\n            <AvTimer\r\n              style={{\r\n                fontSize: \"1.2rem\",\r\n                paddingBottom: \"0.2rem\",\r\n                color: \"var(--dark)\",\r\n              }}\r\n            />\r\n            &nbsp;\r\n            {seconds > props.stage2 ? (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:minutes\" currTime={currTime}>\r\n                    {{ currTime }} minutes\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:min\" currTime={currTime}>\r\n                    {{ currTime }} min\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:seconds\" currTime={currTime}>\r\n                    {{ currTime }} seconds\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:sec\" currTime={currTime}>\r\n                    <span>{{ currTime }}</span> sec\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </OverlayTrigger>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useEventListener = (callback, events) => {\r\n  let defaults = {\r\n    namespace: \"EventListener\",\r\n\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, { events: events });\r\n\r\n  useEffect(() => {\r\n    const eventHandler = (e) => {\r\n      callback(e);\r\n    };\r\n\r\n    for (let i in props.events) {\r\n      window.addEventListener(props.events[i], eventHandler);\r\n    }\r\n\r\n    return () => {\r\n      for (let i in props.events) {\r\n        window.removeEventListener(props.events[i], eventHandler);\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Button,\r\n  // Breadcrumb,\r\n  // NavDropdown,\r\n  // Alert,\r\n} from \"react-bootstrap\";\r\nimport { PowerSettingsNew, AccountCircle } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport UserEditor from \"../userEditor\";\r\nimport IdleTimer from \"../idleTimer\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"MainMenu\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    sessionTimeout,\r\n    accountNumber,\r\n    signedIn,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getBusinesses } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Container\r\n        fluid\r\n        style={{\r\n          paddingRight: \"0\",\r\n          paddingLeft: \"0\",\r\n        }}\r\n      >\r\n        <Row>\r\n          {/*\r\n           * User Menu\r\n           */}\r\n          <Col>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: 0,\r\n                // background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"var(--light)\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              {/**\r\n               * Brand\r\n               */}\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src={\r\n                    settings !== null && typeof settings[\"logo\"] !== \"undefined\"\r\n                      ? settings[\"logo\"]\r\n                      : \"/gfx/zlogo_light.png\"\r\n                  }\r\n                  alt=\"\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n\r\n              {/**\r\n               * User editor\r\n               */}\r\n              <Nav className=\"mr-auto\">\r\n                {signedIn ? (\r\n                  <>\r\n                    {window.location.pathname !== \"/auth\" ? (\r\n                      <Nav.Link eventKey=\"profile\" href=\"/profile\">\r\n                        <UserEditor {...args} />\r\n                      </Nav.Link>\r\n                    ) : (\r\n                      <Nav.Item>\r\n                        <UserEditor {...args} />\r\n                      </Nav.Item>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Nav.Item>\r\n                    <strong>{t(\"Local Currency\")}</strong>\r\n                  </Nav.Item>\r\n                )}\r\n              </Nav>\r\n\r\n              {/**\r\n               * Register\r\n               */}\r\n              {!signedIn && window.location.pathname !== \"/sign-up\" && (\r\n                <Nav>\r\n                  <Nav.Link eventKey=\"sign-out\" href=\"/sign-up\">\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      <span>\r\n                        <AccountCircle\r\n                          style={{\r\n                            fontSize: \"1.2rem\",\r\n                            paddingBottom: \"0.2rem\",\r\n                            color: \"var(--dark)\",\r\n                          }}\r\n                        />\r\n                      </span>\r\n\r\n                      <span className=\"d-none d-sm-inline\">\r\n                        &nbsp;\r\n                        {t(\"Register\")}\r\n                      </span>\r\n                    </span>\r\n                  </Nav.Link>\r\n                </Nav>\r\n              )}\r\n\r\n              {/**\r\n               * Sign in\r\n               */}\r\n              {!signedIn && window.location.pathname !== \"/sign-in\" && (\r\n                <Nav>\r\n                  <Nav.Link eventKey=\"sign-out\" href=\"/sign-in\">\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      <span>\r\n                        <PowerSettingsNew\r\n                          style={{\r\n                            fontSize: \"1.2rem\",\r\n                            paddingBottom: \"0.2rem\",\r\n                            color: \"var(--dark)\",\r\n                          }}\r\n                        />\r\n                      </span>\r\n\r\n                      <span className=\"d-none d-sm-inline\">\r\n                        &nbsp;\r\n                        {t(\"Sign in\")}\r\n                      </span>\r\n                    </span>\r\n                  </Nav.Link>\r\n                </Nav>\r\n              )}\r\n\r\n              {/**\r\n               * Sign out\r\n               */}\r\n              {signedIn && (\r\n                <Nav>\r\n                  <Nav.Link eventKey=\"sign-out\" href=\"/sign-out\">\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      <span>\r\n                        <PowerSettingsNew\r\n                          style={{\r\n                            fontSize: \"1.2rem\",\r\n                            paddingBottom: \"0.2rem\",\r\n                            color: \"var(--dark)\",\r\n                          }}\r\n                        />\r\n                      </span>\r\n\r\n                      <span className=\"d-none d-sm-inline\">\r\n                        &nbsp;\r\n                        {t(\"Sign out\")}\r\n                      </span>\r\n                    </span>\r\n                  </Nav.Link>\r\n                </Nav>\r\n              )}\r\n\r\n              {/**\r\n               * Idle timer\r\n               */}\r\n              {signedIn && (\r\n                <Nav>\r\n                  <Nav.Item>\r\n                    <IdleTimer timeout={sessionTimeout} {...args} />\r\n                  </Nav.Item>\r\n                </Nav>\r\n              )}\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/*\r\n         * Account Menu\r\n         */}\r\n        {signedIn && window.location.pathname !== \"/auth\" && (\r\n          <Row>\r\n            <Col>\r\n              <Navbar\r\n                collapseOnSelect\r\n                expand=\"sm\"\r\n                // className=\"card-header\"\r\n                // className=\"navbar-trans\"\r\n                // bg=\"dark\"\r\n                variant=\"dark\"\r\n                style={{\r\n                  borderRadius: 0,\r\n                  background: \"transparent !important\",\r\n                  backgroundColor: \"var(--dark)\",\r\n                  boxShadow: \"none\",\r\n                }}\r\n              >\r\n                <Nav>\r\n                  <Nav.Link\r\n                    className=\"nav-link-2\"\r\n                    eventKey=\"balance\"\r\n                    href=\"/balance\"\r\n                    style={{\r\n                      fontWeight:\r\n                        window.location.pathname === \"/balance\"\r\n                          ? \"bold\"\r\n                          : \"normal\",\r\n                    }}\r\n                  >\r\n                    {t(\"Balance\")}\r\n                  </Nav.Link>\r\n                </Nav>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                  <Nav className=\"mr-auto\">\r\n                    {accountNumber !== null && (\r\n                      <>\r\n                        <Nav.Link\r\n                          className=\"nav-link-2\"\r\n                          eventKey=\"transfer\"\r\n                          href=\"/transfer\"\r\n                          style={{\r\n                            fontWeight:\r\n                              window.location.pathname === \"/transfer\"\r\n                                ? \"bold\"\r\n                                : \"normal\",\r\n                          }}\r\n                        >\r\n                          {t(\"Transfer\")}\r\n                        </Nav.Link>\r\n                        <Nav.Link\r\n                          className=\"nav-link-2\"\r\n                          eventKey=\"my-business\"\r\n                          href=\"#\"\r\n                          onClick={() => getBusinesses(1)}\r\n                          style={{\r\n                            fontWeight:\r\n                              window.location.pathname === \"/my-business\"\r\n                                ? \"bold\"\r\n                                : \"normal\",\r\n                          }}\r\n                        >\r\n                          {t(\"Business\")}\r\n                        </Nav.Link>\r\n\r\n                        {/**\r\n                         * Currency\r\n                         */}\r\n                        {settings !== null &&\r\n                          typeof settings[\"currencies\"] !== \"undefined\" &&\r\n                          (settings[\"currencies\"] === null ||\r\n                            settings[\"currencies\"].length === 0 ||\r\n                            settings[\"currencies\"].length > 1) && (\r\n                            <Nav.Link\r\n                              className=\"nav-link-2\"\r\n                              eventKey=\"currency\"\r\n                              href=\"/currency\"\r\n                              style={{\r\n                                fontWeight:\r\n                                  window.location.pathname === \"/currency\"\r\n                                    ? \"bold\"\r\n                                    : \"normal\",\r\n                              }}\r\n                            >\r\n                              {t(\"Currency\")}\r\n                            </Nav.Link>\r\n                          )}\r\n                      </>\r\n                    )}\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Breadcrumb.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Breadcrumb\", names: \"\", links: \"\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const arrItems = props.items.split(\"|\");\r\n  // const arrItems = props.items;\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    let key = 0;\r\n    return (\r\n      <Breadcrumb style={{}}>\r\n        {props.names.map((name, index) => {\r\n          key++;\r\n          return name !== \"\" ? (\r\n            <Breadcrumb.Item key={key} href={props.links[index]}>\r\n              {name}\r\n            </Breadcrumb.Item>\r\n          ) : (\r\n            \"\"\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * User CSS\r\n ============================================================================ */\r\nimport \"./Article.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { lazy, useEffect, useLayoutEffect, memo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Accordion,\r\n  Tab,\r\n  ListGroup,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\nimport ListGroupItem from \"../listGroupItem\";\r\nimport Breadcrumb from \"../breadcrumb\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport Search from \"../search\";\r\nimport { useStickyState } from \"../../utils/state\";\r\nimport { createRef } from \"react\";\r\nimport HelpMenuLevel2 from \"../helpMenuLevel2\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nconst Article = (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Article\", searchable: false };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    language,\r\n    articleFeedbackSubmitted,\r\n    scrollPositionY,\r\n    helpPath1,\r\n    helpPath2,\r\n    helpPath3,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setArticleFeedbackSubmitted,\r\n    setScrollPositionY,\r\n    setHelpPath2,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getFileNameFromURI,\r\n    getScrollPosition,\r\n    setScrollPosition,\r\n    setHelpPath,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refFeedbackSubmit = React.createRef();\r\n  const refFeedbackThanks = React.createRef();\r\n\r\n  // useEffect(() => {\r\n  //   setScrollPosition(0, scrollPositionY);\r\n  // }, []);\r\n\r\n  // useLayoutEffect(() => {\r\n  //   setScrollPosition(0, scrollPositionY);\r\n  //   console.log(\"SET scrollPositionY:\", scrollPositionY);\r\n  // });\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"Help Articles\"),\r\n      link: \"#helpArticles\",\r\n    },\r\n    {\r\n      name: t(\"Community Posts\"),\r\n      link: \"#communityPosts\",\r\n    },\r\n  ];\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    let leadFile = getFileNameFromURI(); // \"i-forgot-my-password-how-do-i-reset-it.js\";\r\n\r\n    let ExternalFile = null;\r\n\r\n    ExternalFile =\r\n      leadFile !== null\r\n        ? lazy(() => {\r\n            const ret = import(\r\n              `../locale/${language}/articles/${leadFile}`\r\n            ).catch((err) => {\r\n              // console.log(\"err:\", err);\r\n              return import(\r\n                `../locale/${language}/articles/i-forgot-my-password-how-do-i-reset-it.js`\r\n              ); // TODO: Change LeadLogiIn.js -> _LeadDefault.js\r\n            });\r\n            // console.log(\"RET:\", ret);\r\n\r\n            // ret.then((value) => {\r\n            //   console.log(\"THEN:\", value);\r\n            //   // expected output: \"Success!\"\r\n            //   setScrollPosition(0, scrollPositionY);\r\n            // });\r\n\r\n            return ret;\r\n          })\r\n        : null;\r\n\r\n    // console.log(refFeedbackThanks);\r\n\r\n    const topicPath = \"/help/topic\";\r\n\r\n    return (\r\n      <Card title={t(\"Help center\")} border={0} maxWidthBody=\"100%\">\r\n        <Container fluid>\r\n          {/**\r\n           * Search\r\n           */}\r\n          {props.searchable && (\r\n            <Row>\r\n              <Col>\r\n                <div className=\"header-text\">\r\n                  <h1>{t(\"How can we help?\")}</h1>\r\n                </div>\r\n                <div style={{ textAlign: \"center\", margin: \"0 0 35px 0\" }}>\r\n                  <div\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      width: \"100%\",\r\n                      maxWidth: \"600px\",\r\n                    }}\r\n                  >\r\n                    <Search\r\n                      {...args}\r\n                      placeholder={t(\"Ask a question or search by keyword\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n\r\n          {/**\r\n           * Help categories\r\n           */}\r\n          <Row>\r\n            <Col xl={4} style={{}}>\r\n              <HelpMenuLevel2 {...args} />\r\n            </Col>\r\n            <Col xl={8} style={{}}>\r\n              <Breadcrumb\r\n                names={[t(helpPath1), t(helpPath2), t(helpPath3)]}\r\n                links={[\r\n                  `${topicPath}/${helpPath1}`,\r\n                  `${topicPath}/${helpPath2}`,\r\n                  `${topicPath}/${helpPath2}#${helpPath3}`,\r\n                ]}\r\n              />\r\n\r\n              {ExternalFile !== null && (\r\n                <ErrorBoundary>\r\n                  <ExternalFile {...args} />\r\n                </ErrorBoundary>\r\n              )}\r\n\r\n              {/**\r\n               * Did this help?\r\n               */}\r\n              <hr />\r\n\r\n              <div ref={refFeedbackSubmit} style={{ display: \"block\" }}>\r\n                <p className=\"feedback-heading\">{t(\"Did this help?\")}</p>\r\n                <div\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    maxWidth: \"50px\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                >\r\n                  <SubmitButton\r\n                    {...args}\r\n                    caption={t(\"Yes\")}\r\n                    request=\"did this help\"\r\n                    namespace={props.namespace}\r\n                    classButton=\"feedback-button\"\r\n                    type=\"button\"\r\n                    onSubmit={() => {\r\n                      refFeedbackSubmit.current.style.display = \"none\";\r\n                      refFeedbackThanks.current.style.display = \"block\";\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div style={{ display: \"inline-block\", maxWidth: \"50px\" }}>\r\n                  <SubmitButton\r\n                    {...args}\r\n                    caption={t(\"No\")}\r\n                    request=\"did this help\"\r\n                    namespace={props.namespace}\r\n                    classButton=\"feedback-button\"\r\n                    type=\"button\"\r\n                    onSubmit={() => {\r\n                      refFeedbackSubmit.current.style.display = \"none\";\r\n                      refFeedbackThanks.current.style.display = \"block\";\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div ref={refFeedbackThanks} style={{ display: \"none\" }}>\r\n                <p className=\"feedback-heading\">\r\n                  {t(\"Thank you for your feedback.\")}\r\n                </p>\r\n              </div>\r\n\r\n              {/**\r\n               * Related Topics\r\n               */}\r\n              <Card\r\n                title={t(\"Related topics\")}\r\n                navigation={navigation}\r\n                headerPadding=\"20px 0 10px 0\"\r\n                bodyPadding=\"20px 0 10px 0\"\r\n                border={0}\r\n                maxWidthBody=\"100%\"\r\n                cardTitleClass=\"related-topics-heading\"\r\n              >\r\n                <p>\r\n                  <a href=\"/help/article/i-forgot-my-password\">\r\n                    I forgot my password. How do I reset it?\r\n                  </a>\r\n                </p>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n\r\nexport default Article;\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Summary from \"../summary\";\r\nimport Alert from \"../alert\";\r\nimport Login from \"../login\";\r\nimport Logout from \"../logout\";\r\nimport SignUp from \"../signup\";\r\nimport PasswordReset from \"../passwordReset\";\r\nimport ValidateEmail from \"../validateEmail\";\r\nimport ChangePassword from \"../changePassword\";\r\nimport Auth from \"../auth\";\r\nimport Footer from \"../footer\";\r\nimport MainMenu from \"../mainMenu\";\r\nimport Help from \"../help\";\r\nimport Article from \"../article\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { signedIn } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getRedirect, getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module constats\r\n   ============================================================================ */\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <>\r\n        <Router>\r\n          {getRedirect()}\r\n\r\n          <div className={appClass} style={{}}>\r\n            {/**\r\n             * The alert\r\n             */}\r\n            <Alert data={args} />\r\n\r\n            {/**\r\n             * Wrapper for the main window\r\n             */}\r\n            <div className={wrapperClass} style={{}}>\r\n              {/**\r\n               * The main window\r\n               */}\r\n              <div\r\n                className={innerClass}\r\n                style={{\r\n                  backgroundColor: \"Transparent\",\r\n                }}\r\n              >\r\n                <MainMenu {...args} />\r\n\r\n                {(window.location.pathname === \"/sign-in\" ||\r\n                  window.location.pathname === \"/sign-out\" ||\r\n                  (window.location.pathname === \"/\" && !signedIn)) && (\r\n                  <Image\r\n                    className=\"d-none d-md-block\"\r\n                    src=\"gfx/raised_hands.png\"\r\n                    fluid\r\n                  />\r\n                )}\r\n\r\n                {/**\r\n                 * Routes\r\n                 */}\r\n                <Switch>\r\n                  {/**\r\n                   * Route: Sign up\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/sign-up\"\r\n                    component={() => {\r\n                      return SignUp(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Sign up\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/auth\"\r\n                    component={() => (signedIn ? Auth(args) : Login(args))}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Validate mail\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/validate-email\"\r\n                    component={() => {\r\n                      return ValidateEmail(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Change password\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/password\"\r\n                    component={() => {\r\n                      return ChangePassword(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Sign out\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/sign-out\"\r\n                    component={() => {\r\n                      return Logout(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Topic\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/help\"\r\n                    component={() => {\r\n                      return Help(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Topic\r\n                   */}\r\n                  <Route\r\n                    path=\"/help/topic\"\r\n                    component={() => {\r\n                      return Help(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Article\r\n                   */}\r\n                  <Route\r\n                    path=\"/help/article\"\r\n                    component={() => {\r\n                      return Article(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Password reset\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/reset\"\r\n                    component={() => {\r\n                      return PasswordReset(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Default route\r\n                   */}\r\n                  <Route\r\n                    path=\"*\"\r\n                    component={() => {\r\n                      return signedIn ? Summary(args) : Login(args);\r\n                    }}\r\n                  />\r\n                </Switch>\r\n                <Footer {...args} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ValidateEmail\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    // validateTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    language,\r\n  } = props.barrelGetters;\r\n  const { setValidateTokenEmail } = props.barrelSetters;\r\n  const { getUrlParam, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Hooks\r\n    ============================================================================ */\r\n\r\n  // setToken(getUrlParam(\"token\"));\r\n  // setEmail(getUrlParam(\"email\"));\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenEmail(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (data) => {\r\n    sendRequest({\r\n      req: \"resend validate email token\",\r\n      data: {\r\n        token: validationTokenEmail.token,\r\n        email: validationTokenEmail.email,\r\n        language,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const queryString = window.location.search;\r\n    // const urlParams = new URLSearchParams(queryString);\r\n\r\n    return token === null ? (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        <h4>{t(\"A verification link has been sent to your email account.\")}</h4>\r\n        <hr />\r\n        <p>\r\n          {t(\r\n            \"Please click on the link that has just been sent to your email account\"\r\n          )}\r\n        </p>\r\n        {validationTokenEmailResent < 5 && (\r\n          <>\r\n            <br />\r\n            <h5>{t(\"Didn't receive email?\")}</h5>\r\n\r\n            <SubmitButton\r\n              {...args}\r\n              caption={t(\"Submit\")}\r\n              visible={true}\r\n              marginTop={20}\r\n              request={\"resend validate email token\"}\r\n              namespace={props.namespace}\r\n              onSubmit={handleSubmit}\r\n            />\r\n          </>\r\n        )}\r\n      </Card>\r\n    ) : (\r\n      <div className=\"text-center\">\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"border\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={false}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ChangePassword\",\r\n    request: \"change password\",\r\n    email: null,\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([\r\n    passwordResetTokenValidated === true ? \"SignUp\" : \"ChangePassword\",\r\n  ]); // adjust namespace\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.email = passwordResetTokenEmail;\r\n    // console.log(data);\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ChangePasswordForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Password */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"New password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  if (passwordResetTokenValidated === true) {\r\n    // if (true) {\r\n    return (\r\n      <Formik\r\n        component={ChangePasswordForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          password: \"\",\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    // if (passwordResetTokenValidated === false)\r\n    return <>{t(\"Awaiting validation\")}</>;\r\n    // } else {\r\n    //   // null\r\n    //   return <>How did you land here???</>;\r\n  }\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(\"Logout\");\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info, language, emailChanged } = props.barrelGetters;\r\n  const {\r\n    setLanguage,\r\n    setRedirectTo,\r\n    // setEmailChanged,\r\n    // setLoggingOut,\r\n    setInfo,\r\n    setError,\r\n  } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onLogOut, onRedirect } = props.barrelEventHandlers;\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Save vars\r\n     */\r\n    const tempError = error;\r\n    const tempInfo = info;\r\n    const tempLanguage = language;\r\n    const tempEmailChanged = emailChanged;\r\n\r\n    /**\r\n     * Log out\r\n     */\r\n    onLogOut();\r\n\r\n    /**\r\n     * Restore vars\r\n     */\r\n    setLanguage(tempLanguage);\r\n\r\n    if (tempEmailChanged) {\r\n      onRedirect(\"/validate-email\");\r\n    }\r\n\r\n    if (tempError !== null) {\r\n      setError(JSON.stringify(tempError));\r\n    } else {\r\n      setError(null);\r\n    }\r\n\r\n    if (tempInfo !== null) {\r\n      setInfo(JSON.stringify(tempInfo));\r\n    } else {\r\n      setInfo(null);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, []); // JSON.stringify(error), JSON.stringify(info) - logOut\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        <h4>{t(\"See you soon\")}</h4>\r\n        <hr />\r\n\r\n        <Trans i18nKey=\"Logout:Security note\">\r\n          <strong>Security note:</strong> For security reasons, it is\r\n          recommended that you close the browser completely at the end of your\r\n          visit to the Local Currency website (i.e. all browser windows or\r\n          browser tabs) and then open it again if necessary to visit other\r\n          websites. This note applies in particular if you do not use your Local\r\n          Currency website at home, but on a public device or a device that is\r\n          accessible to other people - for example in an internet cafe, in a\r\n          hotel or at work.\r\n        </Trans>\r\n\r\n        <br />\r\n        <br />\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Sign in\")}\r\n          request=\"get started\"\r\n          namespace=\"LogIn\"\r\n          onSubmit={() => setRedirectTo(\"/\")}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n  * Default export\r\n  ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ResetPassword\", request: \"reset password\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { language, passwordResetEmail } = props.barrelGetters;\r\n  const {\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetEmail,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getUrlParam } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  const refEmail = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    const tempRefEmail = refEmail.current;\r\n    return () => {\r\n      if (tempRefEmail !== null && passwordResetEmail !== tempRefEmail.value)\r\n        setPasswordResetEmail(tempRefEmail.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenPasswordReset(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n    * Event listeners\r\n    ============================================================================ */\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    data.language = language;\r\n    sendRequest({\r\n      req: props.request,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n  });\r\n\r\n  const passwordResetForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      align=\"left\"\r\n      // maxWidth=\"500px\"\r\n      header={false}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <h3>{t(\"Reset password\")}</h3>\r\n\r\n        {/* Email */}\r\n        <Form.Group controlId=\"validationFormikEmail\">\r\n          <Form.Label>{t(\"Email address\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              placeholder={t(\"Enter email\")}\r\n              name=\"email\"\r\n              ref={refEmail}\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.email && touched.email}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.email}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  // return (\r\n  //   <Formik\r\n  //     component={passwordResetForm}\r\n  //     validationSchema={schema}\r\n  //     onSubmit={onSubmit}\r\n  //     initialValues={{\r\n  //       email: \"\",\r\n  //     }}\r\n  //   />\r\n  // );\r\n\r\n  return token === null ? (\r\n    <Formik\r\n      component={passwordResetForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        email: passwordResetEmail,\r\n      }}\r\n    />\r\n  ) : (\r\n    <div className=\"text-center\">\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n        hidden={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Leads.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect, lazy } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n    * User imports\r\n    ============================================================================ */\r\nimport Alert from \"../alert\";\r\nimport LanguageSelector from \"../language-selector\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n      * Default Properties\r\n      ============================================================================ */\r\n  let defaults = { namespace: \"Leads\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const { signedIn, language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n      * Destructured vars\r\n      ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n  // const appClass = \"App\";\r\n\r\n  /**\r\n      * Functions\r\n      ============================================================================ */\r\n  const getJSX = () => {\r\n    let leadFile = \"LeadLogIn.js\";\r\n    switch (window.location.pathname) {\r\n      case \"/\":\r\n      case \"/sign-in\":\r\n        leadFile = \"LeadLogIn.js\";\r\n        break;\r\n\r\n      case \"/sign-up\":\r\n        leadFile = \"LeadSignUp.js\";\r\n        break;\r\n\r\n      case \"/auth\":\r\n        leadFile = \"LeadAuth.js\";\r\n        break;\r\n\r\n      case \"/transfer\":\r\n        leadFile = \"Transfer.js\";\r\n        break;\r\n\r\n      // case \"/transfer/u2s\":\r\n      //   leadFile = \"TransferU2S.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2u\":\r\n      //   leadFile = \"TransferU2U.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2b\":\r\n      //   leadFile = \"TransferU2B.js\";\r\n      //   break;\r\n\r\n      default:\r\n        leadFile = \"LeadLogIn.js\";\r\n        break;\r\n    }\r\n\r\n    let ExternalFile = null;\r\n\r\n    ExternalFile =\r\n      leadFile !== null\r\n        ? lazy(() =>\r\n            import(`../locale/${language}/leads/${leadFile}`).catch((err) => {\r\n              // console.log(\"err:\", err);\r\n              return import(`../locale/${language}/leads/LeadLogIn.js`); // TODO: Change LeadLogiIn.js -> _LeadDefault.js\r\n            })\r\n          )\r\n        : null;\r\n\r\n    return (\r\n      <div className={appClass} style={{ padding: \"0 0% 0 0%\" }}>\r\n        {/**\r\n         * Wrapper for the main window\r\n         */}\r\n        <div className={wrapperClass} style={{}}>\r\n          {/**\r\n           * Top margin of the main window (only for >= sm)\r\n           */}\r\n          <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n          {/**\r\n           * The main window\r\n           */}\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              background: \"Transparent\",\r\n              boxShadow: \"none\",\r\n              padding: \"0 15px\",\r\n            }}\r\n          >\r\n            {ExternalFile !== null && (\r\n              <ErrorBoundary>\r\n                <ExternalFile {...args} />\r\n              </ErrorBoundary>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n      * Return\r\n      ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Toasts.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect, lazy } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n    * User imports\r\n    ============================================================================ */\r\nimport Alert from \"../alert\";\r\nimport LanguageSelector from \"../language-selector\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n      * Default Properties\r\n      ============================================================================ */\r\n  let defaults = { namespace: \"Toasts\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const { signedIn, language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n      * Destructured vars\r\n      ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n  // const appClass = \"App\";\r\n\r\n  /**\r\n      * Functions\r\n      ============================================================================ */\r\n  const getJSX = () => {\r\n    let leadFile = \"ToastDefault.js\";\r\n    switch (window.location.pathname) {\r\n      // case \"/\":\r\n      // case \"/sign-in\":\r\n      //   leadFile = \"LeadLogIn.js\";\r\n      //   break;\r\n\r\n      case \"/sign-up\":\r\n        leadFile = \"ToastSignUp.js\";\r\n        break;\r\n\r\n      case \"/auth\":\r\n        leadFile = \"ToastAuth.js\";\r\n        break;\r\n\r\n      // case \"/transfer\":\r\n      //   leadFile = \"Transfer.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2s\":\r\n      //   leadFile = \"TransferU2S.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2u\":\r\n      //   leadFile = \"TransferU2U.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2b\":\r\n      //   leadFile = \"TransferU2B.js\";\r\n      //   break;\r\n\r\n      default:\r\n        // leadFile = \"ToastDefault.js\";\r\n        break;\r\n    }\r\n\r\n    let ExternalFile = null;\r\n\r\n    ExternalFile =\r\n      leadFile !== null\r\n        ? lazy(() =>\r\n            import(`../locale/${language}/toasts/${leadFile}`).catch((err) => {\r\n              // console.log(\"err:\", err);\r\n              return import(`../locale/${language}/toasts/ToastDefault.js`);\r\n            })\r\n          )\r\n        : null;\r\n\r\n    return (\r\n      <div\r\n        className={appClass}\r\n        style={{\r\n          padding: \"0 0% 0 0%\",\r\n        }}\r\n      >\r\n        {/**\r\n         * Wrapper for the main window\r\n         */}\r\n        <div className={wrapperClass} style={{}}>\r\n          {/** overflowY: \"auto\", maxHeight: \"100vh\" */}\r\n          {/**\r\n           * Top margin of the main window (only for >= sm)\r\n           */}\r\n          <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n          {/**\r\n           * The main window\r\n           */}\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              background: \"Transparent\",\r\n              boxShadow: \"none\",\r\n              padding: \"0 15px\",\r\n            }}\r\n          >\r\n            {ExternalFile !== null && (\r\n              <ErrorBoundary>\r\n                <ExternalFile {...args} />\r\n              </ErrorBoundary>\r\n            )}\r\n\r\n            {/**\r\n             * Footer\r\n             */}\r\n            {false && (\r\n              <div className=\"text-center\">\r\n                <span style={{}}>\r\n                  <LanguageSelector {...args} />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n      * Return\r\n      ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n// import { useScrollPosition } from \"../../utils/useScrollPosition\";\r\nimport Routes from \"./Routes\";\r\nimport Leads from \"../leads\";\r\nimport Toasts from \"../toasts\";\r\n\r\n/**\r\n * Component: Main\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const {\r\n    session,\r\n    serverResponseReceived,\r\n    signedIn,\r\n    userData,\r\n    dailyAllowanceDispatched,\r\n    accountNumber,\r\n    cartID,\r\n    cartContent,\r\n    validateTokenEmail,\r\n    passwordResetTokenValidated,\r\n    validateTokenPasswordReset,\r\n    connected,\r\n    // isExternalRequest,\r\n    clearRefs,\r\n    loggingOut,\r\n    scrollPositionY,\r\n    // hideOnScroll,\r\n    cartProcessingStatus,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRequestTimedOut,\r\n    setUpdateInterval,\r\n    setDailyAllowanceDispatched,\r\n    setRequest,\r\n    // setIsExternalRequest,\r\n    setUserEditorFirstname,\r\n    setUserEditorLastname,\r\n    setUserEditorEmail,\r\n    setUserEditorPassword,\r\n    setRedirectTo,\r\n\r\n    // Currency registration\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n\r\n    // Business registration\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n\r\n    // Purpose registration\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationKeywords,\r\n\r\n    // Contact\r\n    setContactSubject,\r\n    setContactMessage,\r\n\r\n    // Date range\r\n    setDateRangeStart,\r\n    setDateRangeEnd,\r\n\r\n    // Search\r\n    setSearch,\r\n\r\n    //\r\n    setClearRefs,\r\n\r\n    // setHideOnScroll,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // processUserResponse,\r\n    getIP,\r\n    saveCartID,\r\n    getCartPurposes,\r\n    // updateLastSeenUser,\r\n    getAccountData,\r\n    sendRequest,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    showMessage,\r\n    getCart,\r\n    // setScrollPosition,\r\n  } = props.barrelFunctions;\r\n  const {\r\n    onRedirect,\r\n    onSessionStart,\r\n    // onSessionEnd,\r\n  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  // useScrollPosition(\r\n  //   ({ prevPos, currPos }) => {\r\n  //     const isShow = currPos.y > prevPos.y;\r\n  //     if (isShow !== hideOnScroll) setHideOnScroll(isShow);\r\n  //   },\r\n  //   [hideOnScroll]\r\n  // );\r\n\r\n  /** \r\n   * Effect hooks\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On mount / on unmount\r\n   */\r\n  useEffect(() => {\r\n    getIP();\r\n\r\n    // saveCartID();\r\n    // getCart();\r\n\r\n    return () => {\r\n      // on unmount\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * On session ID change\r\n   */\r\n  useEffect(() => {\r\n    if (session === null) return;\r\n\r\n    onSessionStart();\r\n\r\n    // eslint-disable-next-line\r\n  }, [session]);\r\n\r\n  /**\r\n   * On connected\r\n   */\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n  }, [connected]);\r\n\r\n  /**\r\n   * On request timeout\r\n   */\r\n  useTimeout(\r\n    () => {\r\n      setRequestTimedOut(true);\r\n      setRequest(null);\r\n      showMessage(\"REQUEST_EXPIRED\", \"info\");\r\n    },\r\n    serverResponseReceived === false ? 7000 : -1 // 7 sec till socket request timeout\r\n  );\r\n\r\n  /**\r\n   * Map user data to user editor vars\r\n   */\r\n  useEffect(() => {\r\n    if (userData === null) return;\r\n    setUserEditorFirstname(userData.firstname);\r\n    setUserEditorLastname(userData.lastname);\r\n    setUserEditorEmail(userData.email);\r\n    setUserEditorPassword(\"\");\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(userData)]);\r\n\r\n  /**\r\n   * On signed in status change\r\n   */\r\n  useEffect(() => {\r\n    if (!signedIn) return;\r\n\r\n    setUpdateInterval(-1);\r\n\r\n    // Dispatch daily allowance\r\n    if (accountNumber !== null && !dailyAllowanceDispatched) {\r\n      getAccountData();\r\n      sendRequest({\r\n        req: \"dispatch daily allowance\",\r\n        data: { uid: accountNumber },\r\n      });\r\n      setDailyAllowanceDispatched(true);\r\n    }\r\n\r\n    /**\r\n     * Handle external request\r\n     */\r\n    // let redirectTarget;\r\n    if (accountNumber !== null) {\r\n      if (cartID !== null) {\r\n        // redirectTarget = \"/auth\";\r\n        // setIsExternalRequest(false);\r\n        getCart();\r\n        onRedirect(\"/auth\");\r\n      }\r\n    } else {\r\n      if (window.location.pathname !== \"/sign-out\") {\r\n        if (\r\n          userData === null ||\r\n          userData.status !== 1 ||\r\n          typeof userData.status === \"undefined\"\r\n        ) {\r\n          showMessage(\"EMAIL_NOT_YET_VALIDATED\", \"info\");\r\n          onRedirect(\"/sign-out\");\r\n          return;\r\n        } else {\r\n          onRedirect(\"/account-registration\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [signedIn]);\r\n\r\n  /**\r\n   * On account number change\r\n   */\r\n  useEffect(() => {\r\n    // if (accountNumber === null) return;\r\n\r\n    getCart();\r\n\r\n    // eslint-disable-next-line\r\n  }, [accountNumber]);\r\n\r\n  /**\r\n   * On account number change\r\n   */\r\n  // useEffect(() => {\r\n  //   if (cartProcessingStatus === null) return;\r\n\r\n  //   console.log(\"cartProcessingStatus: \", cartProcessingStatus);\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [cartProcessingStatus]);\r\n\r\n  /**\r\n   * Clear refs\r\n   */\r\n  useEffect(() => {\r\n    if (clearRefs === false) return;\r\n\r\n    // Business registration\r\n    setBusinessRegistrationAddTitle(\"\");\r\n    setBusinessRegistrationAddDescription(\"\");\r\n\r\n    // Purpose registration\r\n    setPurposeRegistrationTitle(\"\");\r\n    setPurposeRegistrationDescription(\"\");\r\n    setPurposeRegistrationKeywords(\"\");\r\n\r\n    // Currency registration\r\n    setCurrencyCode(\"\");\r\n    setCurrencyName(\"\");\r\n    setCurrencyRegion(\"\");\r\n    setCurrencyNewRate(\"\");\r\n\r\n    // Contact\r\n    setContactSubject(\"\");\r\n    setContactMessage(\"\");\r\n\r\n    // Date range\r\n    setDateRangeStart(now.setDate(now.getDate() - 7));\r\n    setDateRangeEnd(\"today\");\r\n\r\n    // Search\r\n    setSearch(\"\");\r\n\r\n    setClearRefs(false);\r\n\r\n    // eslint-disable-next-line\r\n  }, [clearRefs]);\r\n\r\n  /**\r\n   * On external request\r\n   */\r\n  // useEffect(() => {\r\n  //   if (externalRequest === null || accountNumber === null) return;\r\n\r\n  //   const data = {\r\n  //     customer: accountNumber,\r\n  //     cart: externalRequest.cart,\r\n  //   };\r\n\r\n  //   sendRequest({ req: \"get cart\", data: data });\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [JSON.stringify(externalRequest)]);\r\n\r\n  /**\r\n   * On cart content change\r\n   */\r\n  useEffect(() => {\r\n    if (!signedIn || cartContent === null) return;\r\n\r\n    getCartPurposes();\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(cartContent)]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenEmail === null) return;\r\n\r\n    sendEmailValidationRequest(JSON.parse(validateTokenEmail));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenEmail]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (passwordResetTokenValidated === null) return;\r\n\r\n    onRedirect(\"/password\");\r\n\r\n    // eslint-disable-next-line\r\n  }, [passwordResetTokenValidated]);\r\n\r\n  /**\r\n   * On password reset validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenPasswordReset === null) return;\r\n\r\n    sendPasswordResetRequest(JSON.parse(validateTokenPasswordReset));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenPasswordReset]);\r\n\r\n  const getJSX = () => {\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          <Row>\r\n            {/** Left column */}\r\n            <Col xl={4} lg={6} className=\"d-none d-lg-block\" style={{}}>\r\n              <Leads {...barrels} />\r\n            </Col>\r\n\r\n            {/** Middle column */}\r\n            <Col\r\n              lg={6}\r\n              md={12}\r\n              style={{ padding: 0, backgroundColor: \"Transparent\" }}\r\n            >\r\n              <Routes {...barrels} />\r\n            </Col>\r\n\r\n            {/** Right column */}\r\n            <Col\r\n              className=\"d-none d-xl-block\"\r\n              style={{ paddingLeft: 0, paddingRight: 0 }}\r\n            >\r\n              <Toasts {...barrels} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Build } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"UnderConstruction\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <Build style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"We are constructing\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { PowerOff } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"NotConnected\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <PowerOff style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"Not connected\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport config from \"./config\";\r\nimport openSocket from \"socket.io-client\";\r\n// import { useTimeout } from \"./useTimeout\";\r\n\r\nlet socket = openSocket.connect(config.uri.ENDPOINT, {\r\n  secure: true,\r\n  reconnect: true,\r\n});\r\n\r\n/**\r\n * Send request to the server\r\n * @param {*} param0\r\n */\r\nexport const sendData = (data, debug = false) => {\r\n  if (debug) console.log(`request: ${data.req}`, data);\r\n\r\n  // No data - do not send\r\n  // if (req.length === 0) return false;\r\n\r\n  // useTimeout(() => {\r\n  //   console.log(\"Socket timeout\");\r\n  // }, 3000);\r\n\r\n  socket.emit(`onDataReceived`, data);\r\n  return true;\r\n};\r\n\r\n// Start a session\r\nexport const startSession = (data, session, debug = false) => {\r\n  // console.log(\"startSession\");\r\n  if (debug) console.log(`request: start session`, data, session);\r\n\r\n  socket.emit(`start session`, {\r\n    data: data,\r\n    session: session,\r\n    req: \"start session\",\r\n  });\r\n};\r\n\r\n// End the session\r\nexport const endSession = (data, session, debug = false) => {\r\n  if (debug) console.log(`request: end session`, data, session);\r\n  socket.emit(`end session`, {\r\n    // char: data,\r\n    data: data,\r\n    // uid: uid,\r\n    session: session,\r\n    req: \"end session\",\r\n  });\r\n};\r\n\r\n// Custom hook: useSocket\r\nexport const useSocket = (callback) => {\r\n  const [responseData, setResponseData] = useState(null);\r\n\r\n  socket.on(`onDataReceived`, (data) => {\r\n    setResponseData(data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (responseData === null) return;\r\n\r\n    callback(responseData);\r\n    // eslint-disable-next-line\r\n  }, [responseData]);\r\n};\r\n\r\nexport const useSystemSocket = (callback, instance) => {\r\n  useEffect(() => {\r\n    // socket.on(\"onDataReceived\", (data) => {\r\n    //   callback(data);\r\n    // });\r\n\r\n    /**\r\n     * System error listeners\r\n     */\r\n    socket.on(\"connect_error\", () => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_error\",\r\n          context: {},\r\n          error: { code: \"none\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"connect_timeout\", (timeout) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_timeout\",\r\n          context: {},\r\n          error: { code: \"connect_timeout\", timeout },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_error\",\r\n          context: {},\r\n          error: { code: error.type, error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_failed\", () => {\r\n      // This should never occur\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_failed\",\r\n          context: {},\r\n          error: { code: \"reconnect_failed\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"error\",\r\n          context: {},\r\n          error: { code: \"error\", error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    /**\r\n     * System status listeners\r\n     */\r\n    socket.on(\"ping\", () => {\r\n      // callback({ data: \"ping\" }, true);\r\n    });\r\n    socket.on(\"pong\", (latency) => {\r\n      // callback({ data: \"pong\", latency }, true);\r\n    });\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n      if (reason === \"io server disconnect\") {\r\n        // the disconnection was initiated by the server, you need to reconnect manually\r\n        socket.connect();\r\n      } else {\r\n        // else the socket will automatically try to reconnect\r\n      }\r\n      // Reasons:\r\n      // - \"transport close\": Server was stopped\r\n      callback({ req: \"disconnect\", status: \"success\", reason }, true);\r\n    });\r\n    socket.on(\"reconnect\", (attemptNumber) => {\r\n      // Successfully reconnected on attempt: attemptNumber\r\n      callback({ req: \"reconnect\", status: \"success\", attemptNumber }, true);\r\n    });\r\n    socket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnect attempt\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnecting\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnecting\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n  }, [instance]);\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"RESPONSE HANDLER: \", props, barrels);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    debug,\r\n    // requestTS,\r\n    // session,\r\n    // sessionTimeout,\r\n    // settings,\r\n    // loggingIn,\r\n    // isExternalRequest,\r\n    signedIn,\r\n    instance,\r\n    responseProps,\r\n    currencies,\r\n    transactions,\r\n    transferRequest,\r\n    shares,\r\n    // transactionsPerPage,\r\n    // sharesPerPage,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    // uid,\r\n    userBusinesses,\r\n    cartPurposes,\r\n    businessPurposes,\r\n    purposeShareholders,\r\n    activeBusinesPurpose,\r\n    lastInsertId,\r\n    cartContent,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setSession,\r\n    // setSessionTimeoutApplied,\r\n    setResponseProps,\r\n    setSettings,\r\n    setLoggingIn,\r\n    // setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setConnected,\r\n    // setLanguage,\r\n    setUserData,\r\n    setSignedIn,\r\n    // setIsExternalRequest,\r\n    setCartContent,\r\n    setCartProps,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    // setTransferSuccess,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setCartPurposes,\r\n    setBusinessPurposes,\r\n    setCountBusinessPurposes,\r\n    setPurposeShareholders,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidateTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setActivePurposeData,\r\n    setTanRequired,\r\n    // setRedirect,\r\n    setClearRefs,\r\n    setEmailChanged,\r\n    setCartProcessingStatus,\r\n  } = barrels.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    // processUserResponse,\r\n    // getBusinesses,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    showMessage,\r\n    changeLanguage,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    // endSession,\r\n    // updateLastSeenUser,\r\n    // showTanInput,\r\n    // updateTimestamp,\r\n    // hideMessage,\r\n  } = barrels.barrelFunctions;\r\n  const {\r\n    // onTransferSuccess,\r\n    onRedirect,\r\n    // onSessionTimeout,\r\n    onSessionEnd,\r\n    // onLogOut,\r\n  } = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug) console.log(`response: ${req} (${props.status})`, props, barrels);\r\n\r\n  /**\r\n   * Save response properties\r\n   * @param {string} req\r\n   * @param {string} name\r\n   * @param {string} status\r\n   */\r\n  const saveResponseProps = ({ req, name, status }) => {\r\n    const res = typeof name !== \"undefined\" ? `${req} / ${name}` : req;\r\n    if (responseProps === null) {\r\n      setResponseProps(JSON.stringify([{ res, status }]));\r\n    } else {\r\n      const tempRP = deleteObjectArrayElement(responseProps, \"res\", res);\r\n      setResponseProps(JSON.stringify([...tempRP, { res, status }]));\r\n    }\r\n  };\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (instance === props.reqData.instance &&\r\n        res === \"*\" &&\r\n        status === props.status &&\r\n        name === props.name) ||\r\n      (instance === props.reqData.instance &&\r\n        res === props.req &&\r\n        status === props.status) ||\r\n      (instance === props.reqData.instance && res === \"unknown\")\r\n    ) {\r\n      saveResponseProps({ req, name: props.name, status: props.status });\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n    if (typeof props.token !== \"undefined\") {\r\n      console.log(\"Renewing session...\");\r\n\r\n      onSessionEnd();\r\n      setSession(props.token);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Start session (success)\r\n   */\r\n  onResponse([\"start session\", \"success\"], () => {\r\n    if (signedIn) {\r\n      sendRequest({ req: \"validate session\", data: {} });\r\n    }\r\n    setConnected(true);\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * End session (success)\r\n   */\r\n  onResponse([\"end session\", \"success\"], () => {\r\n    // console.log(\"ON END SESSION\");\r\n\r\n    setConnected(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM users\") {\r\n      setUserSequence(props.results.sequence);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"success\"], () => {\r\n    // register user\r\n    sendRequest({ req: \"register account\", data: props.reqData });\r\n  });\r\n\r\n  onResponse([\"get tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n    setTanRequired(true);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get cart\", \"continue\"], () => {\r\n    if (props.name === \"SELECT carts\") {\r\n      setCartContent(props.results.content);\r\n      delete props.results.content;\r\n      setCartProps(JSON.stringify(props.results));\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"pending\"], () => {\r\n    // setTanRequired(false);\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"finished\"], () => {\r\n    if (props.name === \"UPDATE tans\") {\r\n      if (props.queryCnt > 0) {\r\n        // setTanRequired(true);\r\n        return false;\r\n      } else {\r\n        // setTanRequired(false);\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n\r\n    sendRequest({ req: transferRequest.transferType, data: transferRequest });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (pending)\r\n   */\r\n  onResponse([\"register user\", \"pending\"], () => {\r\n    // Might show some user feedback\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register user\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO users\") {\r\n      if (props.results.insertId > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    } else if (props.name === \"INSERT INTO validation_tokens\") {\r\n      // const { token, email } = props.tags;\r\n      // setValidateTokenEmail(\r\n      //   JSON.stringify({\r\n      //     token,\r\n      //     email,\r\n      //   })\r\n      // );\r\n      setValidationTokenEmail({\r\n        token: props.tags.token,\r\n        email: props.tags.email,\r\n      });\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (success)\r\n   */\r\n  onResponse([\"register user\", \"success\"], () => {\r\n    // console.log(\"REGISTER USER PROPS:\", props);\r\n    const noEmailValidation = false;\r\n\r\n    if (noEmailValidation) {\r\n      setSignedIn(true);\r\n      setSession(props.email); // TODO: Might restore\r\n      onRedirect(\"/account-registration\");\r\n      sendRequest({ req: \"get user\", data: { email: props.email } }); // to not require a log in\r\n      return false;\r\n    } else {\r\n      onRedirect(\"/validate-email\");\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"continue\"], () => {\r\n    if (props.name === \"SELECT validation_tokens\") {\r\n      setValidationTokenEmailResent(props.results.resent);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"continue\"], () => {\r\n    if (props.name === \"UPDATE validation tokens\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        // onRedirect(\"/sign-in\");\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (props.name === \"UPDATE users\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        onRedirect(\"/sign-in\");\r\n        return true;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"success\"], () => {\r\n    showMessage(\"EMAIL_VALIDATION_SUCCESS\", \"info\", false);\r\n    setValidateTokenEmail(null); // email validation token not needed any more + prevent the unnecessary resend\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"validate password reset token\", \"continue\"], () => {\r\n  //   if (props.name === \"UPDATE validation tokens\") {\r\n  //     if (props.results.affectedRows > 0) {\r\n  //       // onRedirect(\"/password\");\r\n  //       setPasswordResetTokenValidated(true);\r\n  //       return true;\r\n  //     } else {\r\n  //       // No row was inserted - an error was returned\r\n  //       return true;\r\n  //     }\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"validate password reset token\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(true);\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get URI settings (continue)\r\n   */\r\n  onResponse([\"get uri settings\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM uri_settings\") {\r\n      const results = JSON.parse(props.results.settings);\r\n\r\n      // console.log(\"results.settings\", results);\r\n\r\n      setSettings(JSON.stringify(results));\r\n\r\n      // Force single currency\r\n      if (\r\n        typeof results[\"currency\"] !== \"undefined\" &&\r\n        results[\"currency\"] !== null\r\n      ) {\r\n        const abbr = results[\"currency\"];\r\n        // setCurrencyAbbr(abbr);\r\n        sendRequest({\r\n          req: \"register user currency\",\r\n          data: { email: userData.email, currency_id: abbr },\r\n        });\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user currency (success)\r\n   */\r\n  onResponse([\"register user currency\", \"success\"], () => {\r\n    setCurrencyAbbr(props.reqData.currency_id);\r\n    // return false;\r\n  });\r\n\r\n  /**\r\n   * Sign in user (continue)\r\n   */\r\n  onResponse([\"sign in user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      /**\r\n       * Validated user\r\n       */\r\n      if (props.results.status === 1) {\r\n        // email validated\r\n        setUserData(JSON.stringify(props.results));\r\n        setAccountNumber(props.results.uid);\r\n        // setSession(props.results.email); // TODO: Might restore\r\n        setCurrencyAbbr(props.results.currency_abbr);\r\n        setCurrencyRate(\r\n          isNaN(props.results.currency_rate) ? 1 : props.results.currency_rate\r\n        );\r\n\r\n        changeLanguage(props.results.language);\r\n\r\n        return false;\r\n\r\n        /**\r\n         * Not yet validated user\r\n         */\r\n      } else if (props.results.status === 0) {\r\n        // setAccountNumber(props.results.uid);\r\n        setUserData(JSON.stringify(props.results));\r\n        changeLanguage(props.results.language);\r\n        onRedirect(\"/validate-email\");\r\n        return true;\r\n\r\n        /**\r\n         * Suspended user\r\n         */\r\n      } else if (props.results.status === 2) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_SUSPENDED\", \"error\");\r\n        return true;\r\n\r\n        /**\r\n         * Deleted user\r\n         */\r\n      } else if (props.results.status === 3) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_DELETED\", \"error\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Sign in user (finished)\r\n   */\r\n  onResponse([\"sign in user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt > 0) {\r\n        return false;\r\n      } else {\r\n        showMessage(\"INVALID_SIGN_IN\", \"error\");\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"sign in user\", \"success\"], () => {\r\n    setSignedIn(true);\r\n    setLoggingIn(false);\r\n    onSessionEnd();\r\n    setSession(props.token);\r\n    setRedirectTo(\"/balance\");\r\n\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Update user (continue)\r\n  //  */\r\n  // onResponse([\"update user\", \"continue\"], () => {\r\n  //   if (props.name === \"INSERT INTO validation_tokens\") {\r\n  //     onRedirect(\"/validate-email\");\r\n  //     return false;\r\n  //   }\r\n  //   return true;\r\n  // });\r\n\r\n  /**\r\n   * Update user (success)\r\n   */\r\n  onResponse([\"update user\", \"success\"], () => {\r\n    if (\r\n      typeof props.reqData.newEmail !== \"undefined\" &&\r\n      props.reqData.newEmail !== null\r\n    ) {\r\n      setEmailChanged(true);\r\n      onRedirect(\"/sign-out\");\r\n      // onRedirect(\"/validate-email\");\r\n      return true;\r\n    } else {\r\n      sendRequest({ req: \"get user\", data: { email: userData.email } });\r\n      return false;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Get user (continue)\r\n   */\r\n  onResponse([\"get user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUserData(JSON.stringify(props.results));\r\n      setUID(props.results.uid);\r\n      setAccountNumber(props.results.uid);\r\n      if (accountNumber === null && props.results.uid !== null) {\r\n        setRedirectTo(\"/summary\");\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user (finished)\r\n   */\r\n  onResponse([\"get user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 1) {\r\n        // exactly one user found - all is good\r\n        return false;\r\n      } else if (props.queryCnt === 0) {\r\n        // Something wrong with (accessing) the user data\r\n        // Probable causes:\r\n        // - user was deleted from the DB\r\n        // - user status was set to >= 2\r\n        // - multiple users with the same email address, most improbable (db constraint)\r\n        // - user changed the email address or password\r\n        setRedirectTo(\"/sign-out\");\r\n        // showMessage(\"INVALID_DATA\", \"error\");\r\n        return true;\r\n      }\r\n      return true;\r\n    }\r\n    // if (props.rowNum === 1) {\r\n    //   return true;\r\n    // } else {\r\n    //   // Something wrong with (accessing) the user data\r\n    //   // Probable causes:\r\n    //   // - user was deleted from the DB\r\n    //   // - user status was set to >= 2\r\n    //   // - multiple users with the same email address, most improbable (db constraint)\r\n    //   // - user changed the email address or password\r\n    //   // onLogOut();\r\n    //   setRedirectTo(\"/sign-out\");\r\n    //   // showMessage(\"INVALID_DATA\", \"error\");\r\n    //   return true;\r\n    // }\r\n  });\r\n\r\n  onResponse([\"get user\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (continue)\r\n   */\r\n  onResponse([\"get user businesses\", \"continue\"], () => {\r\n    if (props.name === \"SELECT businesses\") {\r\n      const business = props.results;\r\n      const { business_id } = business;\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([business]));\r\n        getBusinessPurposes(business_id, 0, 1);\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, business]));\r\n      }\r\n    } else if (props.name === \"COUNT businesses\") {\r\n      setCountBusinesses(props.results.count_businesses);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (finished)\r\n   */\r\n  onResponse([\"get user businesses\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    setUserBusinessesLoaded(true);\r\n    setRedirectTo(\"/my-business\");\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get user businesses\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (continue)\r\n   */\r\n  onResponse([\"get cart purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (cartPurposes === null) {\r\n        setCartPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setCartPurposes(JSON.stringify([...cartPurposes, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      // setCartPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (success)\r\n   */\r\n  onResponse([\"get cart purposes\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (continue)\r\n   */\r\n  onResponse([\"get business purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (businessPurposes === null) {\r\n        setBusinessPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setBusinessPurposes(\r\n          JSON.stringify([...businessPurposes, props.results])\r\n        );\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      setCountBusinessPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (finished)\r\n   */\r\n  onResponse([\"get business purposes\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (continue)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"continue\"], () => {\r\n    if (props.name === \"SELECT shares\") {\r\n      if (purposeShareholders === null) {\r\n        setPurposeShareholders(JSON.stringify([props.results]));\r\n      } else {\r\n        setPurposeShareholders(\r\n          JSON.stringify([...purposeShareholders, props.results])\r\n        );\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (finished)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user business by id (continue)\r\n   */\r\n  // onResponse([\"get business by id\", \"continue\"], () => {\r\n  //   if (userBusinesses === null) {\r\n  //     setUserBusinesses(JSON.stringify([props.results]));\r\n  //   } else {\r\n  //     setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"get business by id\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.name === \"SELECT businesses\") {\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([props.results]));\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business by id (finished)\r\n   */\r\n  onResponse([\"get business by id\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.queryCnt > 0) {\r\n      // getting business was successful - query returned results\r\n      return false;\r\n    } else {\r\n      console.log(\"Error getting business by id\");\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get business by id\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (continue)\r\n   */\r\n  onResponse([\"get purpose by id\", \"continue\"], () => {\r\n    /**\r\n     * Replace the purpose if it is already there\r\n     */\r\n    const index = getObjectArrayElementIndex(\r\n      businessPurposes,\r\n      \"purpose_id\",\r\n      props.results.purpose_id\r\n    );\r\n    if (index > -1) {\r\n      businessPurposes.splice(index, 1);\r\n      let temp = [...businessPurposes, props.results];\r\n      temp = sortObjectArray(temp, \"title\");\r\n      setBusinessPurposes(JSON.stringify(temp));\r\n      setActivePurposeData(JSON.stringify(props.results));\r\n\r\n      /**\r\n       * ... otherwise add the purpose\r\n       */\r\n    } else {\r\n      if (props.name === \"SELECT purposes\") {\r\n        if (businessPurposes === null) {\r\n          setBusinessPurposes(JSON.stringify([props.results]));\r\n        } else {\r\n          setBusinessPurposes(\r\n            JSON.stringify([...businessPurposes, props.results])\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (finished)\r\n   */\r\n  onResponse([\"get purpose by id\", \"finished\"], () => {\r\n    if (props.queryCnt < 1) {\r\n      // Something went wrong\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (success)\r\n   */\r\n  onResponse([\"get purpose by id\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (continue)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"continue\"], () => {\r\n    if (purposeShareholders === null) {\r\n      setPurposeShareholders(JSON.stringify([props.results]));\r\n    } else {\r\n      setPurposeShareholders(\r\n        JSON.stringify([...purposeShareholders, props.results])\r\n      );\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (finished)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Upload file (ready)\r\n   */\r\n  onResponse([\"upload file\", \"continue\"], () => {\r\n    // console.log(\"UPLOAD FILE =========== \");\r\n\r\n    // if (props.name === \"SELECT 1\") {\r\n    // setAccountPhotoPath(props + \"?r=\" + Math.random());\r\n    setAccountPhotoPath(Date.now()); // ok\r\n    return false;\r\n    // }\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"finished\"], () => {\r\n    if (props.name === \"SELECT 1\") {\r\n      if (props.queryCnt === 0) {\r\n        // something went wrong\r\n        // setAccountPhotoPath(\"ok\");\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"continue\"], () => {\r\n    if (props.results.affectedRows < 1) {\r\n      // error registering account\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"INVALID_DATA\", \"error\");\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"success\"], () => {\r\n    // getAccountData();\r\n    sendRequest({ req: \"get user\", data: { email: props.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (continue)\r\n   */\r\n  onResponse([\"get account data\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUID(props.results.uid);\r\n      setUserData(JSON.stringify(props.results));\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (finished)\r\n   */\r\n  onResponse([\"get account data\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 0) {\r\n        // Account not reachable\r\n        // - user session timed out\r\n        showMessage(\"SESSION_TIMED_OUT\", \"info\", false);\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get account data\", \"success\"], () => {\r\n    if (userData === null) return true;\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2S\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (continue)\r\n   */\r\n  onResponse([\"transfer U2S\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (success)\r\n   */\r\n  onResponse([\"transfer U2S\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2U\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (continue)\r\n   */\r\n  onResponse([\"transfer U2U\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (success)\r\n   */\r\n  onResponse([\"transfer U2U\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2B\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (continue)\r\n   */\r\n  onResponse([\"transfer U2B\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (success)\r\n   */\r\n  onResponse([\"transfer U2B\", \"success\"], () => {\r\n    setTanRequired(false);\r\n\r\n    // If not an external request\r\n    if (cartContent === null) {\r\n      showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n      getTransactionById(lastInsertId);\r\n\r\n      return false;\r\n    } else {\r\n      setCartProcessingStatus(true);\r\n      return true;\r\n    }\r\n\r\n    // If an external request\r\n  });\r\n\r\n  /**\r\n   * Register business\r\n   ============================================================================================*/\r\n  onResponse([\"register business\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    if (props.name === \"INSERT INTO businesses\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register business\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    // <ModalConfirm\r\n    //   title=\"Add Shareholders\"\r\n    //   message=\"Do you want to add yourself as a shareholder?\"\r\n    // />;\r\n\r\n    setClearRefs(true);\r\n\r\n    showMessage(\"REGISTER_BUSINESS_SUCCESS\", \"info\", false);\r\n\r\n    sendRequest({\r\n      req: \"get business by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    // getBusinesses();\r\n    return false;\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"register currency\", \"continue\"], () => {\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    if (props.results.insertId > 0) {\r\n      setLastInsertId(props.results.insertId);\r\n\r\n      return false;\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register currency\", \"success\"], () => {\r\n    showMessage(\"REGISTER_CURRENCY_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get currency by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (continue)\r\n   */\r\n  onResponse([\"get currencies\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT currencies\") {\r\n      setCountCurrencies(props.results.count_currencies);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (finished)\r\n   */\r\n  onResponse([\"get currencies\", \"finished\"], () => {\r\n    // setRedirectTo(\"/currency\");\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Find currencies (continue)\r\n  //  */\r\n  // onResponse([\"find currencies\", \"continue\"], () => {\r\n  //   // console.log(\"PROPS NAME:\", props.name);\r\n\r\n  //   if (props.name === \"SELECT currencies\") {\r\n  //     if (currencies === null) {\r\n  //       setCurrencies(JSON.stringify([props.results]));\r\n  //     } else {\r\n  //       setCurrencies(JSON.stringify([...currencies, props.results]));\r\n  //     }\r\n  //   } else if (props.name === \"COUNT currencies\") {\r\n  //     setCountCurrencies(props.results.count_currencies);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get currency by id (continue)\r\n   */\r\n  onResponse([\"get currency by id\", \"continue\"], () => {\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get currency by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transactions (continue)\r\n   */\r\n  onResponse([\"get transactions\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT transactions\") {\r\n      if (transactions === null) {\r\n        setTransactions(JSON.stringify([props.results]));\r\n      } else {\r\n        setTransactions(JSON.stringify([...transactions, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT transactions\") {\r\n      setCountTransactions(props.results.count_transaction_positions);\r\n      // } else if (props.name === \"VALIDATE SESSION\") {\r\n      //   if (typeof props.token !== \"undefined\") {\r\n      //     console.log(\"RESET SESSION\");\r\n      //     onSessionEnd();\r\n      //     // setSession(props.newToken);\r\n      //     setSession(props.token);\r\n      //   }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get transactions (finished)\r\n   */\r\n  onResponse([\"get transactions\", \"finished\"], () => {\r\n    setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Find transactions (continue)\r\n  //  */\r\n  // onResponse([\"find transactions\", \"continue\"], () => {\r\n  //   // console.log(\"PROPS NAME:\", props.name);\r\n\r\n  //   if (props.name === \"SELECT transactions\") {\r\n  //     if (transactions === null) {\r\n  //       setTransactions(JSON.stringify([props.results]));\r\n  //     } else {\r\n  //       setTransactions(JSON.stringify([...transactions, props.results]));\r\n  //     }\r\n  //   } else if (props.name === \"COUNT transactions\") {\r\n  //     setCountTransactions(props.results.count_transaction_positions);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get shares (continue)\r\n   */\r\n  onResponse([\"get shares\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT shares\") {\r\n      if (shares === null) {\r\n        setShares(JSON.stringify([props.results]));\r\n      } else {\r\n        setShares(JSON.stringify([...shares, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT shares\") {\r\n      setCountShares(props.results.count_shares);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shares (finished)\r\n   */\r\n  onResponse([\"get shares\", \"finished\"], () => {\r\n    // setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transaction by id (continue)\r\n   */\r\n  onResponse([\"get transaction by id\", \"continue\"], () => {\r\n    if (transactions === null) {\r\n      setTransactions(JSON.stringify([props.results]));\r\n    } else {\r\n      setTransactions(JSON.stringify([...transactions, props.results]));\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get transaction by id\", \"finished\"], () => {\r\n    getAccountData();\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"send message\", \"success\"], () => {\r\n    setClearRefs(true);\r\n    showMessage(\"SEND_MESSAGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"continue\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get purpose by id\",\r\n    //   data: { id: props.results.insertId },\r\n    // });\r\n    if (props.name === \"INSERT INTO purposes\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"success\"], () => {\r\n    showMessage(\"REGISTER_PURPOSE_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: lastInsertId, language: language },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"update purpose property\", \"success\"], () => {\r\n    showMessage(\"UPDATE_PURPOSE_SUCCESS\", \"info\", false);\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: props.reqData.id, language: language },\r\n    });\r\n    // getBusinessPurposes(props.reqData.business_id, 0, 1);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"continue\"], () => {\r\n    if (props.results.insertId > 0) {\r\n      // showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\");\r\n\r\n      // return sendRequest({\r\n      //   req: \"get shareholder by id\",\r\n      //   data: { id: props.results.insertId },\r\n      // });\r\n      setLastInsertId(props.results.insertId);\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"success\"], () => {\r\n    showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\", false);\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"change share\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    // getPurposeShareholders(activeBusinesPurpose);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"remove shareholder\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"reset password\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"change password\", \"success\"], () => {\r\n    // TOTO: If NO_ROWS_CHANGE - probably the currently saved password was submitted\r\n    setPasswordResetTokenValidated(null);\r\n    setPasswordResetTokenEmail(null);\r\n    onRedirect(\"/sign-in\");\r\n    showMessage(\"PASSWORD_CHANGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"unknown\"], () => {\r\n  //   if (\r\n  //     status === \"pending\" ||\r\n  //     status === \"continue\" ||\r\n  //     status === \"finished\" ||\r\n  //     status === \"success\"\r\n  //   ) {\r\n  //     return false;\r\n  //   } else {\r\n  //     showMessage(`${req}: ${status}`, \"info\");\r\n  //     return true;\r\n  //   }\r\n  // });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Loading.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Loading\" };\r\n\r\n  /**\r\n        * Properties\r\n        ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  //   const barrels = DispatcherSkeleton();\r\n\r\n  //\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          {/** Left column */}\r\n          <Col xl={4} lg={6} className=\"d-none d-lg-block\" style={{}}>\r\n            {/** Left column */}\r\n          </Col>\r\n\r\n          {/** Middle column */}\r\n          <Col\r\n            lg={6}\r\n            md={12}\r\n            style={{\r\n              padding: 0,\r\n              backgroundColor: \"Transparent\",\r\n              textAlign: \"center\",\r\n              paddingTop: \"3rem\",\r\n            }}\r\n          >\r\n            <div className=\"lds-ellipsis\">\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </Col>\r\n\r\n          {/** Right column */}\r\n          <Col\r\n            className=\"d-none d-xl-block\"\r\n            style={{ paddingLeft: 0, paddingRight: 0 }}\r\n          >\r\n            {/** Right column */}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport {\r\n  // BrowserRouter as Router,\r\n  // Switch,\r\n  // Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport i18n from \"./translations/i18n\";\r\nimport config from \"./utils/config\";\r\nimport { useStickyState } from \"./utils/state\";\r\nimport Main from \"./components/main\";\r\nimport UnderConstruction from \"./components/underConstruction\";\r\nimport NotConnected from \"./components/notConnected\";\r\n\r\nimport {\r\n  useSocket,\r\n  useSystemSocket,\r\n  sendData,\r\n  startSession,\r\n  endSession,\r\n} from \"./utils/sockets\";\r\n// import { useInterval } from \"./utils/useInterval\";\r\n// import { useTimeout } from \"./utils/useTimeout\";\r\nimport requestHandler from \"./utils/requestHandler\";\r\nimport userErrorHandler from \"./utils/userErrorHandler\";\r\nimport userResponseHandler from \"./utils/userResponseHandler\";\r\nimport systemErrorHandler from \"./utils/systemErrorHandler\";\r\nimport systemResponseHandler from \"./utils/systemResponseHandler\";\r\nimport Loading from \"./components/loading\";\r\n\r\n/**\r\n * Component: Dispatcher\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Dispatcher\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const isLocalhost =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\";\r\n\r\n  /** \r\n   * Hooks\r\n   ============================================================================ */\r\n  const [debug, setDebug] = useState(\r\n    isLocalhost || config.uri.SITEMODE === \"STAGING\"\r\n  );\r\n  const [loggingOut, setLoggingOut] = useState(false);\r\n  const [loggingIn, setLoggingIn] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(true);\r\n  const [request, setRequest] = useStickyState(null, \"request\");\r\n  const [serverResponseReceived, setServerResponseReceived] = useStickyState(\r\n    null,\r\n    \"serverResponseReceived\"\r\n  );\r\n  const [requestTimedOut, setRequestTimedOut] = useStickyState(\r\n    false,\r\n    \"requestTimedOut\"\r\n  );\r\n  const [instance, setInstance] = useState(Date.now());\r\n  const [session, setSession] = useStickyState(uuidv4(), \"session\");\r\n  const [settings, setSettings] = useStickyState(null, \"settings\");\r\n  const [responseProps, setResponseProps] = useStickyState(\r\n    null,\r\n    \"responseProps\"\r\n  );\r\n  const [sessionTimeout, setSessionTimeout] = useStickyState(\r\n    (!debug ? 5 : 120) * 60, // 30 | 5 * 60\r\n    \"sessionTimeout\"\r\n  );\r\n  const [connected, setConnected] = useStickyState(false, \"connected\");\r\n  const [reconnecting, setReconnecting] = useStickyState(false, \"reconnecting\");\r\n  const [ip, setIP] = useStickyState(\"\", \"ip\");\r\n  const [signedIn, setSignedIn] = useStickyState(false, \"signedIn\");\r\n  const [\r\n    dailyAllowanceDispatched,\r\n    setDailyAllowanceDispatched,\r\n  ] = useStickyState(false, \"dailyAllowanceDispatched\");\r\n  // const [isExternalRequest, setIsExternalRequest] = useStickyState(\r\n  //   false,\r\n  //   \"isExternalRequest\"\r\n  // );\r\n  const [cartID, setCartID] = useStickyState(null, \"cartID\");\r\n  const [cartContent, setCartContent] = useStickyState(null, \"cartContent\");\r\n  const [cartProps, setCartProps] = useStickyState(null, \"cartProps\");\r\n  const [cartProcessingStatus, setCartProcessingStatus] = useStickyState(\r\n    null,\r\n    \"cartProcessingStatus\"\r\n  );\r\n  const [updateInterval, setUpdateInterval] = useStickyState(\r\n    -1,\r\n    \"updateInterval\"\r\n  );\r\n  const [currencyAbbr, setCurrencyAbbr] = useStickyState(\"Z\", \"currencyAbbr\");\r\n  const [currencyRate, setCurrencyRate] = useStickyState(1.0, \"currencyRate\");\r\n  const [currencies, setCurrencies] = useStickyState(null, \"currencies\");\r\n  const [transactions, setTransactions] = useStickyState(null, \"transactions\");\r\n  const [shares, setShares] = useStickyState(null, \"shares\");\r\n  const [accordionView, setAccordionView] = useStickyState(\r\n    \"balance\",\r\n    \"accordionView\"\r\n  );\r\n  const [accordionViewCurrency, setAccordionViewCurrency] = useStickyState(\r\n    null,\r\n    \"accordionViewCurrency\"\r\n  );\r\n  const [countCurrencies, setCountCurrencies] = useStickyState(\r\n    null,\r\n    \"countCurrencies\"\r\n  );\r\n  const [countTransactions, setCountTransactions] = useStickyState(\r\n    null,\r\n    \"countTransactions\"\r\n  );\r\n  const [countShares, setCountShares] = useStickyState(null, \"countShares\");\r\n  const [activePageCurrencies, setActivePageCurrencies] = useStickyState(\r\n    1,\r\n    \"activePageCurrencies\"\r\n  );\r\n  const [activePageTransactions, setActivePageTransactions] = useStickyState(\r\n    1,\r\n    \"activePageTransactions\"\r\n  );\r\n  const [activePageShares, setActivePageShares] = useStickyState(\r\n    1,\r\n    \"activePageShares\"\r\n  );\r\n  const [currenciesPerPage, setCurrenciesPerPage] = useStickyState(\r\n    5,\r\n    \"currenciesPerPage\"\r\n  );\r\n  const [transactionsPerPage, setTransactionsPerPage] = useStickyState(\r\n    5,\r\n    \"transactionsPerPage\"\r\n  );\r\n  const [sharesPerPage, setSharesPerPage] = useStickyState(5, \"sharesPerPage\");\r\n  const [userData, setUserData] = useStickyState(null, \"userData\");\r\n  const [uid, setUID] = useStickyState(null, \"uid\");\r\n  const [accountNumber, setAccountNumber] = useStickyState(\r\n    null,\r\n    \"accountNumber\"\r\n  );\r\n  const [userSequence, setUserSequence] = useStickyState(null, \"userSequence\");\r\n  const [accountType, setAccountType] = useStickyState(null, \"accountType\");\r\n  const [userBusinesses, setUserBusinesses] = useStickyState(\r\n    null,\r\n    \"userBusinesses\"\r\n  );\r\n  const [countBusinesses, setCountBusinesses] = useStickyState(\r\n    null,\r\n    \"countBusinesses\"\r\n  );\r\n  const [businessesPerPage, setBusinessesPerPage] = useStickyState(\r\n    1,\r\n    \"businessesPerPage\"\r\n  );\r\n  const [activePageBusinesses, setActivePageBusinesses] = useStickyState(\r\n    1,\r\n    \"activePageBusinesses\"\r\n  );\r\n  const [userBusinessesLoaded, setUserBusinessesLoaded] = useStickyState(\r\n    false,\r\n    \"userBusinessesLoaded\"\r\n  );\r\n  const [activeBusiness, setActiveBusiness] = useStickyState(\r\n    null,\r\n    \"activeBusiness\"\r\n  );\r\n  const [activeBusinessID, setActiveBusinessID] = useStickyState(\r\n    null,\r\n    \"activeBusinessID\"\r\n  );\r\n\r\n  const [businessPurposes, setBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"businessPurposes\"\r\n  );\r\n\r\n  const [cartPurposes, setCartPurposes] = useStickyState(null, \"cartPurposes\");\r\n\r\n  const [countBusinessPurposes, setCountBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"countBusinessPurposes\"\r\n  );\r\n  const [businessPurposesPerPage, setBusinessPurposesPerPage] = useStickyState(\r\n    5,\r\n    \"businessPurposesPerPage\"\r\n  );\r\n  const [\r\n    activePageBusinessPurposes,\r\n    setActivePageBusinessPurposes,\r\n  ] = useStickyState(1, \"activePageBusinessPurposes\");\r\n\r\n  const [activeBusinesPurpose, setActiveBusinesPurpose] = useStickyState(\r\n    null,\r\n    \"activeBusinesPurpose\"\r\n  );\r\n\r\n  const [activePurposeData, setActivePurposeData] = useStickyState(\r\n    null,\r\n    \"activePurposeData\"\r\n  );\r\n\r\n  const [activePurposeProperty, setActivePurposeProperty] = useStickyState(\r\n    null,\r\n    \"activePurposeProperty\"\r\n  );\r\n\r\n  const [purposeShareholders, setPurposeShareholders] = useStickyState(\r\n    null,\r\n    \"purposeShareholders\"\r\n  );\r\n\r\n  const [clearRefs, setClearRefs] = useStickyState(false, \"clearRefs\");\r\n\r\n  /**\r\n   * Log in\r\n   */\r\n  const [logInEmail, setLogInEmail] = useStickyState(\"\", \"logInEmail\");\r\n  const [logInPassword, setLogInPassword] = useStickyState(\"\", \"logInPassword\");\r\n\r\n  /**\r\n   * Sign Up\r\n   */\r\n  const [signUpFirstName, setSignUpFirstName] = useStickyState(\r\n    \"\",\r\n    \"signUpFirstName\"\r\n  );\r\n  const [signUpLastName, setSignUpLastName] = useStickyState(\r\n    \"\",\r\n    \"signUpLastName\"\r\n  );\r\n  const [signUpEmail, setSignUpEmail] = useStickyState(\"\", \"signUpEmail\");\r\n  const [signUpPassword, setSignUpPassword] = useStickyState(\r\n    \"\",\r\n    \"signUpPassword\"\r\n  );\r\n\r\n  /**\r\n   * Transactions\r\n   */\r\n  const [dateRangeStart, setDateRangeStart] = useStickyState(\r\n    now.setDate(now.getDate() - 7), // new Date().fp_incr(-7),\r\n    \"dateRangeStart\"\r\n  );\r\n  const [dateRangeEnd, setDateRangeEnd] = useStickyState(\r\n    \"today\",\r\n    \"dateRangeEnd\"\r\n  );\r\n\r\n  /**\r\n   * Business registration\r\n   */\r\n  const [\r\n    businessRegistrationAddTitle,\r\n    setBusinessRegistrationAddTitle,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddTitle\");\r\n  const [\r\n    businessRegistrationAddDescription,\r\n    setBusinessRegistrationAddDescription,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddDescription\");\r\n\r\n  /**\r\n   * Purpose registration\r\n   */\r\n  const [\r\n    purposeRegistrationTitle,\r\n    setPurposeRegistrationTitle,\r\n  ] = useStickyState(\"\", \"purposeRegistrationTitle\");\r\n  const [\r\n    purposeRegistrationDescription,\r\n    setPurposeRegistrationDescription,\r\n  ] = useStickyState(\"\", \"purposeRegistrationDescription\");\r\n  const [\r\n    purposeRegistrationKeywords,\r\n    setPurposeRegistrationKeywords,\r\n  ] = useStickyState(\"\", \"purposeRegistrationKeywords\");\r\n\r\n  /**\r\n   * User editor\r\n   */\r\n  const [userEditorEditFirstname, setUserEditorEditFirstname] = useStickyState(\r\n    false,\r\n    \"userEditorEditFirstname\"\r\n  );\r\n  const [userEditorFirstname, setUserEditorFirstname] = useStickyState(\r\n    \"\",\r\n    \"userEditorFirstname\"\r\n  );\r\n  const [userEditorEditLastname, setUserEditorEditLastname] = useStickyState(\r\n    false,\r\n    \"userEditorEditLastname\"\r\n  );\r\n  const [userEditorLastname, setUserEditorLastname] = useStickyState(\r\n    \"\",\r\n    \"userEditorLastname\"\r\n  );\r\n  const [userEditorEditEmail, setUserEditorEditEmail] = useStickyState(\r\n    false,\r\n    \"userEditorEditEmail\"\r\n  );\r\n  const [userEditorEmail, setUserEditorEmail] = useStickyState(\r\n    \"\",\r\n    \"userEditorEmail\"\r\n  );\r\n  const [userEditorEditPassword, setUserEditorEditPassword] = useStickyState(\r\n    false,\r\n    \"userEditorEditPassword\"\r\n  );\r\n  const [userEditorPassword, setUserEditorPassword] = useStickyState(\r\n    \"\",\r\n    \"userEditorPassword\"\r\n  );\r\n  const [\r\n    userEditorPasswordVisible,\r\n    setUserEditorPasswordVisible,\r\n  ] = useStickyState(false, \"userEditorPasswordVisible\");\r\n  const [\r\n    userEditorSubmitButtonVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  ] = useStickyState(false, \"userEditorSubmitButtonVisible\");\r\n\r\n  /**\r\n   * Password reset\r\n   */\r\n  const [passwordResetEmail, setPasswordResetEmail] = useStickyState(\r\n    \"\",\r\n    \"passwordResetEmail\"\r\n  );\r\n\r\n  /**\r\n   * TAN input\r\n   */\r\n  const [tanInputTAN, setTanInputTAN] = useStickyState(\"\", \"tanInputTAN\");\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  const [search, setSearch] = useStickyState(\"\", \"search\");\r\n  const [searchTransactions, setSearchTransactions] = useStickyState(\r\n    \"\",\r\n    \"searchTransactions\"\r\n  );\r\n  const [searchPurposes, setSearchPurposes] = useStickyState(\r\n    \"\",\r\n    \"searchPurposes\"\r\n  );\r\n  const [searchShares, setSearchShares] = useStickyState(\"\", \"searchShares\");\r\n\r\n  /**\r\n   * Misc\r\n   */\r\n\r\n  // const [businessLoaded, setBusinessLoaded] = useState(null);\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [redirectTo, setRedirectTo] = useState(null);\r\n  const [lastInsertId, setLastInsertId] = useState(null);\r\n  // const [responseData, setResponseData] = useState(null);\r\n\r\n  const [validateTokenEmail, setValidateTokenEmail] = useState(null);\r\n  const [validateTokenPasswordReset, setValidateTokenPasswordReset] = useState(\r\n    null\r\n  );\r\n\r\n  /**\r\n   * User changed the email address; must log out and show the validation dialog\r\n   */\r\n  const [emailChanged, setEmailChanged] = useStickyState(false, \"emailChanged\"); //\r\n\r\n  const [\r\n    passwordResetTokenValidated,\r\n    setPasswordResetTokenValidated,\r\n  ] = useState(null);\r\n  const [passwordResetTokenEmail, setPasswordResetTokenEmail] = useState(null);\r\n\r\n  // const [tmrConnected] = useState(null);\r\n  const [validationTokenEmail, setValidationTokenEmail] = useStickyState(\r\n    null,\r\n    \"validationTokenEmail\"\r\n  ); //\r\n  const [\r\n    validationTokenEmailResent,\r\n    setValidationTokenEmailResent,\r\n  ] = useStickyState(0, \"validationTokenEmailResent\"); //\r\n  const [language, setLanguage] = useStickyState(\r\n    i18n.options.fallbackLng[0],\r\n    \"language\"\r\n  ); //\r\n  const [transferType, setTransferType] = useStickyState(\r\n    \"#u2s\",\r\n    \"transferType\"\r\n  );\r\n  const [transferRequest, setTransferRequest] = useStickyState(\r\n    null,\r\n    \"transferRequest\"\r\n  );\r\n  const [transferFromAccount, setTransferFromAccount] = useStickyState(\r\n    \"\",\r\n    \"transferFromAccount\"\r\n  );\r\n  const [transferToAccount, setTransferToAccount] = useStickyState(\r\n    \"\",\r\n    \"transferToAccount\"\r\n  );\r\n  const [transferAmount, setTransferAmount] = useStickyState(\r\n    \"\",\r\n    \"transferAmount\"\r\n  );\r\n  const [transferToUID, setTransferToUID] = useStickyState(\"\", \"transferToUID\");\r\n  const [transferToPurpose, setTransferToPurpose] = useStickyState(\r\n    \"\",\r\n    \"transferToPurpose\"\r\n  );\r\n  const [transferDescription, setTransferDescription] = useStickyState(\r\n    \"\",\r\n    \"transferDescription\"\r\n  );\r\n  const [contactSubject, setContactSubject] = useStickyState(\r\n    \"\",\r\n    \"contactSubject\"\r\n  );\r\n  const [contactMessage, setContactMessage] = useStickyState(\r\n    \"\",\r\n    \"contactMessage\"\r\n  );\r\n  const [userBirthYear, setUserBirthYear] = useStickyState(\"\", \"userBirthYear\");\r\n  const [userBirthMonth, setUserBirthMonth] = useStickyState(\r\n    \"\",\r\n    \"userBirthMonth\"\r\n  );\r\n  const [userBirthDay, setUserBirthDay] = useStickyState(\"\", \"userBirthDay\");\r\n  const [userBirthDateError, setUserBirthDateError] = useState(\r\n    \"\",\r\n    \"userBirthDateError\"\r\n  );\r\n  const [userTimezone, setUserTimezone] = useStickyState(\"\", \"userTimezone\");\r\n\r\n  const [currencyCode, setCurrencyCode] = useStickyState(\"\", \"currencyCode\");\r\n  const [currencyName, setCurrencyName] = useStickyState(\"\", \"currencyName\");\r\n  const [currencyRegion, setCurrencyRegion] = useStickyState(\r\n    \"\",\r\n    \"currencyRegion\"\r\n  );\r\n  const [currencyNewRate, setCurrencyNewRate] = useStickyState(\r\n    1.0,\r\n    \"currencyNewRate\"\r\n  );\r\n\r\n  /**\r\n   * Help topics and articles\r\n   */\r\n  const [\r\n    articleFeedbackSubmitted,\r\n    setArticleFeedbackSubmitted,\r\n  ] = useStickyState(false, \"articleFeedbackSubmitted\");\r\n  const [scrollPositionY, setScrollPositionY] = useStickyState(\r\n    0,\r\n    \"scrollPositionY\"\r\n  );\r\n  const [helpPath1, setHelpPath1] = useStickyState(\"#personal\", \"helpPath1\");\r\n  const [helpPath2, setHelpPath2] = useStickyState(\r\n    \"common-questions\",\r\n    \"helpPath2\"\r\n  );\r\n  const [helpPath3, setHelpPath3] = useStickyState(\"\", \"helpPath3\");\r\n\r\n  // const [hideOnScroll, setHideOnScroll] = useStickyState(true, \"hideOnScroll\");\r\n\r\n  const [tanRequired, setTanRequired] = useStickyState(false, \"tanRequired\");\r\n  // const [transferSuccess, setTransferSuccess] = useStickyState(\r\n  //   false,\r\n  //   \"transferSuccess\"\r\n  // );\r\n  const [accountPhotoPath, setAccountPhotoPath] = useState(\"\");\r\n  const [error, setError] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  const [info, setInfo] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  // const [alertVisible, setAlertVisible] = useState(false);\r\n\r\n  // const gotEvent = useEventListener();\r\n  // console.log(gotEvent);\r\n\r\n  /**\r\n   * Barrel: Getters\r\n   */\r\n  const barrelGetters = {\r\n    debug,\r\n    // instance,\r\n    loggingOut,\r\n    loggingIn,\r\n    // timestamp,\r\n    // startTimestamp,\r\n    pageLoading,\r\n    request,\r\n    serverResponseReceived,\r\n    requestTimedOut,\r\n    // requestTS,\r\n    instance,\r\n    responseProps: JSON.parse(responseProps),\r\n    // deleteResponseProp,\r\n    // lastRequest,\r\n    session,\r\n    // secureSession,\r\n    sessionTimeout,\r\n    // sessionTimeoutApplied,\r\n    settings: JSON.parse(settings),\r\n    ip,\r\n    updateInterval,\r\n    currencies: JSON.parse(currencies),\r\n    transactions: JSON.parse(transactions),\r\n    shares: JSON.parse(shares),\r\n    accordionView,\r\n    accordionViewCurrency,\r\n    countCurrencies,\r\n    countTransactions,\r\n    countShares,\r\n    activePageCurrencies,\r\n    activePageTransactions,\r\n    activePageShares,\r\n    currenciesPerPage,\r\n    transactionsPerPage,\r\n    sharesPerPage,\r\n    userData: JSON.parse(userData),\r\n    // redirect,\r\n    redirectTo,\r\n    lastInsertId,\r\n    connected,\r\n    reconnecting,\r\n    signedIn,\r\n    dailyAllowanceDispatched,\r\n    // isExternalRequest,\r\n    cartID,\r\n    cartContent: JSON.parse(cartContent),\r\n    cartProps: JSON.parse(cartProps),\r\n    cartProcessingStatus,\r\n    currencyAbbr,\r\n    currencyRate,\r\n    // currencyStatus,\r\n    accountNumber,\r\n    userSequence,\r\n    accountType,\r\n    uid,\r\n    userBusinesses: JSON.parse(userBusinesses),\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes: JSON.parse(businessPurposes),\r\n    cartPurposes: JSON.parse(cartPurposes),\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    // purposeID,\r\n    activePurposeData: JSON.parse(activePurposeData),\r\n    purposeShareholders: JSON.parse(purposeShareholders),\r\n    clearRefs,\r\n    logInEmail,\r\n    logInPassword,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n    dateRangeStart,\r\n    dateRangeEnd,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    // purposeRegistrationCategory,\r\n    // purposeRegistrationSubcategory,\r\n    // purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n    passwordResetEmail,\r\n    tanInputTAN,\r\n    search,\r\n    searchTransactions,\r\n    searchPurposes,\r\n    searchShares,\r\n    // businessLoaded,\r\n    tanRequired,\r\n    articleFeedbackSubmitted,\r\n    scrollPositionY,\r\n    helpPath1,\r\n    helpPath2,\r\n    helpPath3,\r\n    // hideOnScroll,\r\n    // tmrConnected,\r\n    validateTokenEmail,\r\n    validateTokenPasswordReset,\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    emailChanged,\r\n    transferRequest: JSON.parse(transferRequest),\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    contactSubject,\r\n    contactMessage,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n    language,\r\n    transferType,\r\n    // transferSuccess,\r\n    accountPhotoPath,\r\n    error: JSON.parse(error),\r\n    info: JSON.parse(info),\r\n    // alertVisible,\r\n  };\r\n\r\n  /**\r\n   * Barrel: Setters\r\n   */\r\n  const barrelSetters = {\r\n    setDebug,\r\n    setLoggingOut,\r\n    setLoggingIn,\r\n    // setTimestamp,\r\n    // setStartTimestamp,\r\n    setPageLoading,\r\n    setRequest,\r\n    setServerResponseReceived,\r\n    setRequestTimedOut,\r\n    // setRequestTS,\r\n    setInstance,\r\n    setResponseProps,\r\n    // setDeleteResponseProp,\r\n    // setLastRequest,\r\n    setSession,\r\n    // setSecureSession,\r\n    setSessionTimeout,\r\n    // setSessionTimeoutApplied,\r\n    setSettings,\r\n    setIP,\r\n    setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setAccordionView,\r\n    setAccordionViewCurrency,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setActivePageCurrencies,\r\n    setActivePageTransactions,\r\n    setActivePageShares,\r\n    setCurrenciesPerPage,\r\n    setTransactionsPerPage,\r\n    setSharesPerPage,\r\n    setConnected,\r\n    setReconnecting,\r\n    setLanguage,\r\n    setUserData,\r\n    // sendRequest,\r\n    setSignedIn,\r\n    setDailyAllowanceDispatched,\r\n    // setIsExternalRequest,\r\n    setCartID,\r\n    setCartContent,\r\n    setCartProps,\r\n    setCartProcessingStatus,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setAccountType,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setBusinessesPerPage,\r\n    setActivePageBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setActiveBusiness,\r\n    setActiveBusinessID,\r\n    setBusinessPurposes,\r\n    setCartPurposes,\r\n    setCountBusinessPurposes,\r\n    setBusinessPurposesPerPage,\r\n    setActivePageBusinessPurposes,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePurposeData,\r\n    setPurposeShareholders,\r\n    setClearRefs,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n    setDateRangeStart,\r\n    setDateRangeEnd,\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n    setPasswordResetEmail,\r\n    setTanInputTAN,\r\n    setSearch,\r\n    setSearchTransactions,\r\n    setSearchPurposes,\r\n    setSearchShares,\r\n    setError,\r\n    setInfo,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setValidateTokenEmail,\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setEmailChanged,\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setContactSubject,\r\n    setContactMessage,\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n    setTanRequired,\r\n    setArticleFeedbackSubmitted,\r\n    setScrollPositionY,\r\n    setHelpPath1,\r\n    setHelpPath2,\r\n    setHelpPath3,\r\n    // setHideOnScroll,\r\n  };\r\n\r\n  /** \r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Sends requests to the server\r\n   * @param {string} request Request name\r\n   * @param {object} data Request data\r\n   */\r\n  const sendRequest = ({ req, data = null }) => {\r\n    if (processRequest({ req, data, session, uid: \"STA\", barrels })) {\r\n      // request processed successfully\r\n      setServerResponseReceived(false);\r\n      return true;\r\n    } else {\r\n      console.log(\"THIS SHOULD NEVER BE REACHED\");\r\n      return sendData({ req, uid: \"STA\", session, data }, debug);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Processes user request\r\n   * @param {*} param0\r\n   */\r\n  const processRequest = ({ req, data, session, uid, barrels }) => {\r\n    data.instance = instance;\r\n\r\n    // if (req !== \"update last seen user\") {\r\n    setRequest(req);\r\n    // }\r\n\r\n    return requestHandler({\r\n      req,\r\n      data,\r\n      session,\r\n      uid,\r\n      barrels,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Processes server response\r\n   *\r\n   * Chooses a handler depending on response status:\r\n   * Error or other (success | continue | finished | pending etc.)\r\n   *\r\n   * @param {*} param0\r\n   */\r\n  const processUserResponse = ({ args, barrels }) => {\r\n    return args.status === \"error\"\r\n      ? userErrorHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        })\r\n      : userResponseHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  const processSystemResponse = ({ args, barrels }) => {\r\n    // console.log(\"SYSTEM RESPONSE DATA:\", args);\r\n    return args.status === \"error\"\r\n      ? systemErrorHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        })\r\n      : systemResponseHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  /**\r\n   * Shows a messgae (error or info)\r\n   *\r\n   * @param {string} msg, Messgae text\r\n   * @param {string} type, Message type (\"error\" | \"info\")\r\n   */\r\n  const showMessage = (msg, type = \"error\", dismissible = true) => {\r\n    type === \"error\"\r\n      ? setError(JSON.stringify({ msg, dismissible }))\r\n      : setInfo(JSON.stringify({ msg, dismissible }));\r\n  };\r\n\r\n  /**\r\n   * Hides the message\r\n   */\r\n  const hideMessage = (type = null) => {\r\n    if (type === \"error\") {\r\n      setError(null);\r\n    } else if (type === \"info\") {\r\n      setInfo(null);\r\n    } else {\r\n      setError(null);\r\n      setInfo(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the object-element of an array\r\n   * @param {object array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const getArrayObject = (array, property, value) => {\r\n    if (array === null) return null;\r\n    return array.find((o) => o[property] === value);\r\n  };\r\n\r\n  /**\r\n   * Returns the current processing status of the request\r\n   * @param {string} req\r\n   */\r\n  const getRequestStatus = (req) => {\r\n    const obj = getArrayObject(barrelGetters.responseProps, \"res\", req);\r\n    if (obj === null) return \"undefined\";\r\n    return typeof obj !== \"undefined\" ? obj.status : \"undefined\";\r\n  };\r\n\r\n  /**\r\n   * Clears the current processing status of the request\r\n   * @param {string} req\r\n   */\r\n  const clearRequestStatus = (req) => {\r\n    deleteObjectArrayElement(barrelGetters.responseProps, \"res\", req);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {*} status\r\n   * @param {*} cnt\r\n   * @param {*} strLoading\r\n   * @param {*} strNotFound\r\n   */\r\n  const showRequestStatus = (\r\n    req,\r\n    cnt,\r\n    strLoading,\r\n    strNotFound,\r\n    finalStatus = \"success\"\r\n  ) => {\r\n    const status = getRequestStatus(req);\r\n    if (status === \"undefined\") return \"\";\r\n\r\n    if (status === \"undefined\" || status !== finalStatus) {\r\n      return <p className=\"text-center text-muted\">{strLoading}</p>;\r\n    } else if (status === finalStatus && cnt === 0) {\r\n      return <p className=\"text-center text-muted\">{strNotFound}</p>;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Changes the website language\r\n   */\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n    setLanguage(lng);\r\n  };\r\n\r\n  const roundTo = (n, digits) => {\r\n    let negative = false;\r\n    if (digits === undefined) {\r\n      digits = 0;\r\n    }\r\n    if (n < 0) {\r\n      negative = true;\r\n      n = n * -1;\r\n    }\r\n    const multiplicator = Math.pow(10, digits);\r\n    n = parseFloat((n * multiplicator).toFixed(11));\r\n    n = (Math.round(n) / multiplicator).toFixed(2);\r\n    if (negative) {\r\n      n = (n * -1).toFixed(2);\r\n    }\r\n    return n;\r\n  };\r\n\r\n  /**\r\n   * Format number\r\n   * @param {number} number\r\n   */\r\n  const format = (number, currency = currencyAbbr, useGrouping = true) => {\r\n    const retIntl = new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      useGrouping: useGrouping,\r\n    }).format(number * currencyRate);\r\n\r\n    if (parseFloat(number) !== 0 && number.toString().substr(0, 4) === \"0.00\")\r\n      return t(\"micro amount\");\r\n\r\n    return retIntl + \" \" + currency;\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   * @param {number} number\r\n   */\r\n  const formatPerCent = (number) => {\r\n    return (\r\n      new Intl.NumberFormat(language, {\r\n        notation: \"standard\",\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2,\r\n      }).format(number) + \"%\"\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   *\r\n   * @param {number} number\r\n   */\r\n  const formatExchangeRate = (number) => {\r\n    return new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 5,\r\n      maximumFractionDigits: 5,\r\n    }).format(number);\r\n  };\r\n\r\n  /**\r\n   * Parses a number according to a locale\r\n   *\r\n   * @param {string} stringNumber\r\n   * @param {string} locale\r\n   */\r\n  const parseLocaleNumber = (stringNumber, locale) => {\r\n    let num = 123456.789,\r\n      fmt_local = new Intl.NumberFormat(locale, {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n      }),\r\n      parts_local = fmt_local.formatToParts(num),\r\n      group = \"\",\r\n      decimal = \"\",\r\n      currency = \"\";\r\n\r\n    // separators\r\n    parts_local.forEach(function (i) {\r\n      switch (i.type) {\r\n        case \"group\":\r\n          group = i.value;\r\n          break;\r\n        case \"decimal\":\r\n          decimal = i.value;\r\n          break;\r\n        case \"currency\":\r\n          currency = i.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return parseFloat(\r\n      stringNumber\r\n        .replace(new RegExp(\"\\\\\" + group, \"g\"), \"\")\r\n        .replace(new RegExp(\"\\\\\" + decimal), \".\")\r\n        .replace(new RegExp(\"\\\\\" + currency, \"g\"), \"\")\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Formates a date\r\n   *\r\n   * @param {date} ts A timestamp.\r\n   * @param {object} options The date options.\r\n   * @param {boolean} isUTC\r\n   * @param {string} locales e.g. \"lv\"\r\n   * @param {string} format e.g. \"YYYY-MM-DD HH:mm:ss\"\r\n   */\r\n  const formatDate = (\r\n    ts,\r\n    options = {\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    },\r\n    isUTC = true,\r\n    locales = language,\r\n    format = null\r\n  ) => {\r\n    let date = new Date(ts);\r\n    if (isUTC) {\r\n      const diff = date.getTimezoneOffset();\r\n      date = moment(date).add(-diff, \"m\").toDate();\r\n    }\r\n    return format === null\r\n      ? new Intl.DateTimeFormat(locales, options).format(date)\r\n      : moment(date).format(format);\r\n  };\r\n\r\n  /**\r\n   * Retrieves an URL parameter\r\n   */\r\n  const getUrlParam = (param) => {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    return urlParams.get(param);\r\n  };\r\n\r\n  /**\r\n   * Returns the file name from URI path\r\n   */\r\n  const getFileNameFromURI = () => {\r\n    const path = window.location.pathname;\r\n    const pathLast = path.substring(path.lastIndexOf(\"/\") + 1);\r\n    return `${pathLast}.js`;\r\n  };\r\n\r\n  const sendEmailValidationRequest = ({ token, email }) => {\r\n    sendRequest({\r\n      req: \"validate email token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Sends the password reset request\r\n   *\r\n   * @param {string} token The password reset token\r\n   * @param {string} email User's email\r\n   */\r\n  const sendPasswordResetRequest = ({ token, email }) => {\r\n    setPasswordResetTokenEmail(email);\r\n    sendRequest({\r\n      req: \"validate password reset token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets client URI\r\n   */\r\n  const getUri = () => {\r\n    return `${window.location.hostname}`;\r\n  };\r\n\r\n  /**\r\n   * Gets client IP\r\n   */\r\n  const getIP = () => {\r\n    if (debug) return;\r\n    fetch(`${config.uri.ENDPOINT}/ip`, {\r\n      method: \"post\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((results) => results.json())\r\n      .then((data) => {\r\n        setIP(typeof data.ip === \"string\" ? data.ip : \"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Gets the scroll position\r\n   */\r\n  const getScrollPosition = () => {\r\n    return { x: window.scrollX, y: window.scrollY };\r\n  };\r\n\r\n  /**\r\n   * Sets the help path\r\n   * @param {integer} id\r\n   * @param {string} name\r\n   */\r\n  const setHelpPath = (id, name) => {\r\n    if (id === 1) {\r\n      setHelpPath1(name);\r\n      setHelpPath2(\"\");\r\n      setHelpPath3(\"\");\r\n    } else if (id === 2) {\r\n      setHelpPath2(name);\r\n      setHelpPath3(\"\");\r\n    } else {\r\n      setHelpPath3(name);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sets the scroll position\r\n   */\r\n  const setScrollPosition = (x, y) => {\r\n    console.log(\"setScrollPosition:\", x, y);\r\n    // window.scrollTo(x, y);\r\n    window.scroll(x, y);\r\n  };\r\n\r\n  /**\r\n   * Saves the cart request\r\n   */\r\n  const saveCartID = () => {\r\n    const cart = getUrlParam(\"cart\");\r\n\r\n    if (cart !== null) {\r\n      setCartID(cart);\r\n      // if (!signedIn) setIsExternalRequest(true);\r\n      // } else {\r\n      //   setCartID(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the cart from DB\r\n   */\r\n  const getCart = () => {\r\n    // if (typeof externalRequest.cart === \"undefined\" || accountNumber === null)\r\n    //   return;\r\n\r\n    if (!signedIn || accountNumber === null) {\r\n      saveCartID();\r\n      return;\r\n    }\r\n\r\n    // const cartFromUrl = getUrlParam(\"cart\");\r\n\r\n    // saveCartID();\r\n\r\n    let cart = cartID !== null ? cartID : getUrlParam(\"cart\");\r\n    if (cart === null) return;\r\n\r\n    const data = {\r\n      customer: accountNumber,\r\n      cart,\r\n    };\r\n\r\n    sendRequest({ req: \"get cart\", data: data });\r\n\r\n    setCartID(null);\r\n  };\r\n\r\n  /**\r\n   * Gets cart purposses\r\n   */\r\n  const getCartPurposes = () => {\r\n    if (cartContent === null) return;\r\n\r\n    let cartPurposes = [];\r\n\r\n    barrelGetters.cartContent.map((element) =>\r\n      cartPurposes.push(element.product)\r\n    );\r\n\r\n    setCartPurposes(null);\r\n\r\n    sendRequest({\r\n      req: \"get cart purposes\",\r\n      data: {\r\n        purposes: JSON.stringify(cartPurposes),\r\n        language: language,\r\n        page: 1,\r\n        limit: 5,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the currencies\r\n   *\r\n   * @param {*} newPage\r\n   */\r\n  const getCurrencies = (newPage) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: {\r\n        uid: accountNumber,\r\n        search: null,\r\n        page: newPage,\r\n        limit: currenciesPerPage,\r\n      },\r\n    });\r\n    setActivePageCurrencies(newPage);\r\n  };\r\n\r\n  /**\r\n   * Finds currencies\r\n   *\r\n   * @param {string} search The search sring.\r\n   */\r\n  const findCurrencies = (search) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: {\r\n        uid: accountNumber,\r\n        search,\r\n        page: 1,\r\n        limit: currenciesPerPage,\r\n      },\r\n    });\r\n    setActivePageCurrencies(1);\r\n  };\r\n\r\n  /**\r\n   * Gets user transactions\r\n   *\r\n   * @param {integer} newPage\r\n   */\r\n  const getTransactions = (newPage, search = null) => {\r\n    setTransactions(null);\r\n\r\n    let dateStart = dateRangeStart;\r\n    let dateEnd = dateRangeEnd;\r\n    if (dateEnd === \"today\") {\r\n      const now = new Date();\r\n      dateEnd = now.setDate(now.getDate());\r\n    }\r\n    dateStart = formatDate(dateStart, null, true, null, \"YYYY-MM-DD\");\r\n    dateEnd = formatDate(dateEnd, null, true, null, \"YYYY-MM-DD\");\r\n\r\n    sendRequest({\r\n      req: \"get transactions\",\r\n      data: {\r\n        page: newPage,\r\n        limit: transactionsPerPage,\r\n        uid: accountNumber,\r\n        language,\r\n        dateStart,\r\n        dateEnd,\r\n        search: search !== null ? search : searchTransactions,\r\n      },\r\n    });\r\n    setActivePageTransactions(newPage);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {ref} ref\r\n   */\r\n  const copyToClipboard = (ref) => {\r\n    ref.current.select();\r\n    document.execCommand(\"copy\");\r\n    ref.current.blur();\r\n    showMessage(\"COPIED_TO_CLIPBOARD\", \"info\", false);\r\n  };\r\n\r\n  /**\r\n   * Finds transactions\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findTransactions = (search) => {\r\n    setSearchTransactions(search);\r\n    getTransactions(1, search);\r\n  };\r\n\r\n  /**\r\n   * Finds transactions\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findPurposes = (search) => {\r\n    setSearchPurposes(search);\r\n    setResponseProps(null);\r\n    getBusinessPurposes(activeBusinessID, activeBusiness, 1, search);\r\n  };\r\n\r\n  /**\r\n   * Gets user shares\r\n   *\r\n   * @param {*} newPage\r\n   */\r\n  const getShares = (newPage, search = null) => {\r\n    setShares(null);\r\n    sendRequest({\r\n      req: \"get shares\",\r\n      data: {\r\n        page: newPage,\r\n        limit: sharesPerPage,\r\n        uid: accountNumber,\r\n        language: language,\r\n        search: search !== null ? search : searchShares,\r\n      },\r\n    });\r\n    setActivePageShares(newPage);\r\n  };\r\n\r\n  /**\r\n   * Finds shares\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findShares = (search) => {\r\n    setSearchShares(search);\r\n    getShares(1, search);\r\n  };\r\n\r\n  /**\r\n   * Gets user businesses\r\n   *\r\n   * @param {integer} newPage\r\n   */\r\n  const getBusinesses = (newPage = 1) => {\r\n    setUserBusinesses(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(1);\r\n    setActiveBusinessID(null);\r\n    sendRequest({\r\n      req: \"get user businesses\",\r\n      data: { uid: accountNumber, page: newPage, limit: businessesPerPage },\r\n    });\r\n    setActivePageBusinesses(newPage);\r\n  };\r\n\r\n  /**\r\n   * Gets the business purposes\r\n   *\r\n   * @param {*} business_id\r\n   * @param {*} selected\r\n   * @param {*} newPage\r\n   */\r\n  const getBusinessPurposes = (\r\n    business_id,\r\n    selected = null,\r\n    newPage = 1,\r\n    search = null\r\n  ) => {\r\n    // console.log(\"BUSINESS PURPOSES FOR ID \" + business_id, businessPurposes);\r\n\r\n    if (selected !== null) {\r\n      setActiveBusiness(selected);\r\n      setActiveBusinesPurpose(null);\r\n      setActivePurposeProperty(null);\r\n    }\r\n    setBusinessPurposes(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(newPage);\r\n    setActiveBusinessID(business_id);\r\n    return sendRequest({\r\n      req: \"get business purposes\",\r\n      data: {\r\n        business_id: business_id,\r\n        language: language,\r\n        search: search !== null ? search : searchPurposes,\r\n        page: newPage,\r\n        limit: businessPurposesPerPage,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the purpose shareholders\r\n   *\r\n   * @param {*} purpose_id\r\n   * @param {*} selected\r\n   */\r\n  const getPurposeShareholders = (purpose_id, selected = null) => {\r\n    if (selected !== null) {\r\n      setActiveBusinesPurpose(purpose_id);\r\n    }\r\n    setPurposeShareholders(null);\r\n    return sendRequest({\r\n      req: \"get purpose shareholders\",\r\n      data: { purpose_id: purpose_id },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get account data\r\n   */\r\n  const getAccountData = () => {\r\n    if (accountNumber === null) return;\r\n    sendRequest({\r\n      req: \"get account data\",\r\n      data: {\r\n        uid: accountNumber,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get transaction by id\r\n   *\r\n   * @param {integer} id The primary key\r\n   */\r\n  const getTransactionById = (id) => {\r\n    sendRequest({\r\n      req: \"get transaction by id\",\r\n      data: { id: id, language: language },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get conatainer class\r\n   *\r\n   * Returns object cantaining the classes for layout container appearance.\r\n   *\r\n   * @param {boolean} signedIn, True if user has signed in, otherwise false.\r\n   */\r\n  // const getContainerClass = (signedIn) => {\r\n  //   return {\r\n  //     wrapperClass: signedIn\r\n  //       ? \"auth-wrapper auth-wrapper-summary\"\r\n  //       : \"auth-wrapper\",\r\n  //     innerClass: signedIn\r\n  //       ? \"auth-inner auth-inner-summary\"\r\n  //       : \"auth-inner autoWidth\",\r\n  //   };\r\n  // };\r\n  const getContainerClass = (signedIn) => {\r\n    return {\r\n      wrapperClass: \"auth-wrapper auth-wrapper-summary\",\r\n      innerClass: \"auth-inner auth-inner-summary\",\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Get redirect\r\n   *\r\n   * Returns router redirect component.\r\n   */\r\n  const getRedirect = () => {\r\n    return redirectTo === null ? \"\" : <Redirect push to={redirectTo} />;\r\n  };\r\n\r\n  /**\r\n   * Sorts an object array by value of the property\r\n   *\r\n   * @param {array} array The array\r\n   * @param {string} property The property name\r\n   */\r\n  const sortObjectArray = (array, property) => {\r\n    return array.sort((a, b) =>\r\n      a[property] > b[property] ? 1 : b[property] > a[property] ? -1 : 0\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Returns an array index of the object\r\n   * containing the property with the certain value.\r\n   *\r\n   * @param {array} array The array\r\n   * @param {string} property The property name\r\n   * @param {any} value The property value\r\n   */\r\n  const getObjectArrayElementIndex = (array, property, value) => {\r\n    if (array === null) return -1;\r\n    return array\r\n      .map((properties) => {\r\n        return properties[property];\r\n      })\r\n      .indexOf(value);\r\n  };\r\n\r\n  /**\r\n   * Deletes an object array element\r\n   *\r\n   * @param {array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const deleteObjectArrayElement = (arr, property, value) => {\r\n    return arr.filter((obj) => {\r\n      return obj[property] !== value;\r\n    });\r\n  };\r\n\r\n  const getReviser = () => {\r\n    return \"STA\";\r\n  };\r\n\r\n  const getWorkplace = () => {\r\n    return \"LAPSTA\";\r\n  };\r\n\r\n  const barrelFunctions = {\r\n    sendRequest,\r\n    processUserResponse,\r\n    showMessage,\r\n    hideMessage,\r\n    changeLanguage,\r\n    roundTo,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    getArrayObject,\r\n    getRequestStatus,\r\n    clearRequestStatus,\r\n    showRequestStatus,\r\n    format,\r\n    formatPerCent,\r\n    formatExchangeRate,\r\n    getContainerClass,\r\n    formatDate,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    getRedirect,\r\n    getUri,\r\n    getIP,\r\n    getScrollPosition,\r\n    setScrollPosition,\r\n    setHelpPath,\r\n    saveCartID,\r\n    getCart,\r\n    getCartPurposes,\r\n    getUrlParam,\r\n    getFileNameFromURI,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    getCurrencies,\r\n    findCurrencies,\r\n    getTransactions,\r\n    copyToClipboard,\r\n    findTransactions,\r\n    findPurposes,\r\n    getShares,\r\n    findShares,\r\n    parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n  };\r\n\r\n  /** \r\n   * Event handlers\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On language change\r\n   */\r\n  i18n.on(\"languageChanged\", function (lng) {\r\n    const languages = [\"en\", \"lv\"];\r\n    if (languages.indexOf(lng) < 0) lng = \"en\";\r\n    // if (lng === \"en-US\") lng = \"en\";\r\n    setLanguage(lng);\r\n  });\r\n\r\n  /**\r\n   * On redirect\r\n   * @param {string} to Redirect path (e.g. \"/sign-in\")\r\n   */\r\n  const onRedirect = (to) => {\r\n    setRedirectTo(to);\r\n  };\r\n\r\n  const onSessionStart = () => {\r\n    // start new session\r\n    let data = {};\r\n    data.request = \"hello\";\r\n    data.instance = instance;\r\n    startSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionEnd = () => {\r\n    // end current session\r\n    sendRequest({ req: \"end session\", data: {} });\r\n\r\n    let data = {};\r\n    data.request = \"bye\";\r\n    data.instance = instance;\r\n    endSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionReset = () => {\r\n    setSession(uuidv4());\r\n  };\r\n\r\n  /**\r\n   * On signup\r\n   * @param {object} data Signup data\r\n   */\r\n  const onSignUp = (data) => {\r\n    return sendRequest({ req: \"register user\", data });\r\n  };\r\n\r\n  const onSessionTimeout = () => {\r\n    // console.log(\"Session timed out...\");\r\n    setLoggingOut(true);\r\n    setRedirectTo(\"/sign-out\");\r\n  };\r\n\r\n  /**\r\n   * On transfer type change\r\n   * @param {string} id The transfer type id (\"U2S\", \"U2U\", \"U2B\" etc.)\r\n   */\r\n  const onTransferTypeChange = (id) => {\r\n    console.log(\"setTransferType: \", id);\r\n    setTransferType(id);\r\n  };\r\n\r\n  const onTransferSuccess = () => {\r\n    // console.log(\"ON TRANSFER SUCCESS\", barrels);\r\n  };\r\n\r\n  /**\r\n   * On transfer\r\n   * @param {object} data Transfer data\r\n   */\r\n  const onTransfer = (data) => {\r\n    // console.log(\"ON TRANSFER (data):\", data);\r\n    // sendRequest({ req: \"register account\", data: data });\r\n    sendRequest(data);\r\n  };\r\n\r\n  const onPurposeRegistration = (data) => {\r\n    sendRequest(data);\r\n  };\r\n\r\n  const onLogOut = () => {\r\n    window.localStorage.clear();\r\n    setSignedIn(false);\r\n    // onSessionEnd(); // DO NOT ACTIVATE THIS HERE - EXECUTING MULTIPLE TIMES\r\n    // setSession(uuidv4()); // DO NOT SET SESSION HERE - INFINITE LOOP!!\r\n  };\r\n\r\n  const onAlertClose = (type = null) => {\r\n    hideMessage(type);\r\n  };\r\n\r\n  /**\r\n   * Barrel: Event handlers\r\n   */\r\n  const barrelEventHandlers = {\r\n    onRedirect,\r\n    onSignUp,\r\n    onSessionTimeout,\r\n    onTransferTypeChange,\r\n    onTransferSuccess,\r\n    onTransfer,\r\n    onSessionStart,\r\n    onSessionEnd,\r\n    onSessionReset,\r\n    onPurposeRegistration,\r\n    onLogOut,\r\n    onAlertClose,\r\n  };\r\n\r\n  /**\r\n   * Barrel of barrels\r\n   */\r\n  const barrels = {\r\n    barrelGetters,\r\n    barrelSetters,\r\n    barrelFunctions,\r\n    barrelEventHandlers,\r\n  };\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  useSocket((data) => {\r\n    setServerResponseReceived(true);\r\n    setRequestTimedOut(false);\r\n    processUserResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  });\r\n\r\n  useSystemSocket((data) => {\r\n    processSystemResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  }, instance);\r\n\r\n  /** \r\n   * Return\r\n   ============================================================================ */\r\n\r\n  if (props.mode === \"construction\") {\r\n    return <UnderConstruction {...barrels} />;\r\n    // } else if (props.mode === \"loading\") {\r\n    //   return <Loading {...barrels} />;\r\n  } else {\r\n    if (!reconnecting || debug) {\r\n      return <Main {...barrels} />;\r\n    } else {\r\n      return <NotConnected {...barrels} />;\r\n    }\r\n  }\r\n};\r\n","import { sendData } from \"../utils/sockets\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const { req, data, session, uid, barrels } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, userData, userSequence } = barrels.barrelGetters;\r\n  const {\r\n    setUserData,\r\n    setUID,\r\n    // setAccountNumber,\r\n    // setRequest,\r\n    // setUserBusinesses,\r\n  } = barrels.barrelSetters;\r\n  // const {} = barrels.barrelFunctions;\r\n  //   const {} = barrels.barrelEventHandlers;\r\n\r\n  let requestFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onRequest = (req, callback) => {\r\n    if (requestFound) return;\r\n    if (req === props.req || req === \"default\") {\r\n      callback();\r\n      requestFound = true;\r\n    }\r\n  };\r\n\r\n  /** \r\n   * Request handlers\r\n  ============================================================================ */\r\n\r\n  onRequest(\"sign in user\", () => {\r\n    setUserData(JSON.stringify(data));\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"get user sequence\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"register account\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const year = fullyear.slice(-2);\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n    const birthDate = `${day}${month}${year}`;\r\n    const timezone = data.timezone.slice(0, 2);\r\n    const initial = userData.lastname.slice(0, 1).toUpperCase();\r\n    const icode = initial.charCodeAt(0).toString().padStart(5, \"0\");\r\n\r\n    data.scode = `${timezone}${birthDate}${initial}`;\r\n    data.tcode = `${timezone}${birthDate}${icode}`;\r\n    data.timezone = data.timezone.slice(5);\r\n    data.sequence = userSequence.toString().padStart(5, \"0\");\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    setUID(data.personalID);\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"default\", () => {\r\n    sendData({ req, data, uid, session }, debug);\r\n\r\n    return true;\r\n  });\r\n\r\n  // onRequest(\"unknown\", () => {\r\n  //   showMessage(`UNKNOWN REQUEST ${req}`, \"info\");\r\n\r\n  //   return true;\r\n  // });\r\n\r\n  return requestFound;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug, cartContent } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setUID,\r\n    setAccountNumber,\r\n    setRedirectTo,\r\n    setCartProcessingStatus,\r\n  } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  const { onRedirect } = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug) console.log(`ERROR: ${req}`, error, context, props, barrels);\r\n  // const { showMessage } = barrels.barrelFunctions;\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n    // console.log(res, status);\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onError([\"*\", \"INVALID_SESSION\"], () => {\r\n    showMessage(\"SESSION_TIMED_OUT\", \"info\", false);\r\n    setRedirectTo(\"/sign-out\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer errors\r\n   */\r\n  onError([\"transfer U2S\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2B\", \"NO_ROWS_CHANGED\"], () => {\r\n    if (cartContent !== null) {\r\n      setCartProcessingStatus(false);\r\n    } else {\r\n      showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    }\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_USER_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // user selected the same language again - just ignore\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate email token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate password reset token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"reset password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // showMessage(\"REQUEST_ALREADY_SENT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same language again - that's ok\r\n    return true;\r\n  });\r\n\r\n  onError([\"update user\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same password again - that's ok\r\n    return true;\r\n  });\r\n\r\n  // onError([\"update last seen user\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Same last seen time was submitted (shouldn't be possible) - ignore for now\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"sign in user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"change password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"SAME_PASSWORD_RESET\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"submit tan\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"INVALID_TAN\", \"error\", false);\r\n    return true;\r\n  });\r\n\r\n  onError([\"get cart\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User accessed the same cart again - it's fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer V2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Allowance already dispatched today - totally fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    // The same currency was selected again - no problem\r\n    return true;\r\n  });\r\n\r\n  onError([\"end session\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Session updated to the same data ??\r\n    return true;\r\n  });\r\n\r\n  onError([\"register currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_CURRENCY_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"update purpose property\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register purpose\", \"ER_DUP_ENTRY\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  // onError([\"get user sequence\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Session updated to the same data ??\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"register account\", \"ER_DUP_ENTRY\"], () => {\r\n    setUID(null);\r\n    setAccountNumber(null);\r\n    showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError(\r\n    [\"register account\", \"ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO\"],\r\n    () => {\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n      return true;\r\n    }\r\n  );\r\n\r\n  onError([\"register shareholder\", \"ER_NO_REFERENCED_ROW_2\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"reset password\", \"ER_NO_REFERENCED_ROW_2\"], () => {\r\n    // Reset password email not found - might be an attack - imitate the behavior as if the link was sent\r\n    onRedirect(\"/password\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"*\", \"ER_CANT_CREATE_THREAD\"], () => {\r\n    showMessage(\"NO_RESPONSE_FROM_SERVER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug, error: msgError } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug)\r\n    console.log(`SYSTEM ERROR: ${req}`, error, context, props, barrels);\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onError([\"*\", \"INVALID_SESSION\"], () => {\r\n  //   showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n  //   setRedirectTo(\"/sign-out\");\r\n  //   return true;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_error\", \"none\"], () => {\r\n    if (msgError !== \"SERVER_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_timeout\", \"connect_timeout\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"reconnect_error\", \"TransportError\"], () => {\r\n    if (msgError !== \"SERVER_STILL_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_STILL_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, info: msgInfo } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage, hideMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug)\r\n    console.log(`system response: ${req} (${props.status})`, props, barrels);\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (res === \"*\" && status === props.status) ||\r\n      (res === props.req && status === props.status) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n  //   if (typeof props.token !== \"undefined\") {\r\n  //     console.log(\"Renewing session...\");\r\n\r\n  //     onSessionEnd();\r\n  //     setSession(props.token);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect attempt\", \"continue\"], () => {\r\n    // if (msgInfo !== \"RECONNECT_ATTEMPT\")\r\n    //   showMessage(\"RECONNECT_ATTEMPT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnecting\", \"continue\"], () => {\r\n    if (msgInfo !== \"RECONNECTING\") {\r\n      setReconnecting(true);\r\n      showMessage(\"RECONNECTING\", \"info\");\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect\", \"success\"], () => {\r\n    setReconnecting(false);\r\n    hideMessage();\r\n    // hideMessage(\"error\");\r\n    // hideMessage(\"info\");\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","/**\r\n * System CSS\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * User CSS\r\n */\r\nimport \"./normalize.css\";\r\nimport \"./index.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Loading from \"./components/loading\";\r\nimport ErrorBoundary from \"./components/errorBoundary\";\r\n\r\n/**\r\n * Retrieves an URL parameter\r\n */\r\nconst getUrlParam = (param) => {\r\n  const queryString = window.location.search;\r\n  const urlParams = new URLSearchParams(queryString);\r\n  return urlParams.get(param);\r\n};\r\n\r\n/**\r\n * Clear local storage (URL param ?reset)\r\n */\r\nif (getUrlParam(\"reset\") !== null) {\r\n  window.localStorage.clear();\r\n  console.log(\"Local storage cleared\");\r\n}\r\n\r\nconst Dummy = () => {\r\n  return <></>;\r\n};\r\n\r\n// <Dummy /> | <Loading />\r\n\r\n/**\r\n * Render (with suspense)\r\n * mode = default | construction\r\n */\r\nconst root = document.getElementById(\"root\");\r\nconst construction = document.getElementById(\"construction\");\r\nif (root) {\r\n  ReactDOM.render(\r\n    <Suspense fallback={<Loading />}>\r\n      <ErrorBoundary>\r\n        <Dispatcher mode={!construction ? \"\" : \"construction\"} />\r\n      </ErrorBoundary>\r\n    </Suspense>,\r\n    root\r\n  );\r\n}\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { cloneElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\nimport { ChevronRight, ExpandMore } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"AccordionCard\",\r\n    header: true,\r\n    title: \"Untitled\",\r\n    eventkey: \"untitled\",\r\n    active: \"\",\r\n    paddingBody: \"0\",\r\n    onClick: () => {},\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const CustomToggle = ({ children, eventKey }) => {\r\n    // const currentEventKey = React.useContext(AccordionContext);\r\n\r\n    const decoratedOnClick = useAccordionToggle(eventKey, () => {\r\n      console.log(\"totally custom!\", eventKey);\r\n      props.onClick(eventKey);\r\n    });\r\n    // console.log(props.active);\r\n\r\n    const isCurrentEventKey = props.active === eventKey;\r\n\r\n    if (isCurrentEventKey) {\r\n      return (\r\n        <div onClick={decoratedOnClick}>\r\n          {children}\r\n          <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n            <ExpandMore style={{ color: \"var(--dark)\", fontSize: \"2rem\" }} />\r\n          </span>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div onClick={decoratedOnClick}>\r\n          {children}\r\n          <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n            <ChevronRight style={{ color: \"var(--dark)\", fontSize: \"2rem\" }} />\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    let key = 0;\r\n    return (\r\n      <Card style={{ border: 0, backgroundColor: \"Transparent\" }}>\r\n        {props.header && (\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey={props.eventkey}\r\n            style={{\r\n              backgroundColor: \"Transparent\",\r\n              padding: \"12px 2px 12px 2px\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"20px\",\r\n            }}\r\n          >\r\n            <CustomToggle eventKey={props.eventkey}>{props.title}</CustomToggle>\r\n          </Accordion.Toggle>\r\n        )}\r\n        <Accordion.Collapse eventKey={props.eventkey}>\r\n          <Card.Body style={{ padding: props.paddingBody }}>\r\n            {React.Children.map(args.children, (child) => {\r\n              if (typeof child !== \"object\") {\r\n                return child;\r\n              } else {\r\n                key++;\r\n                return cloneElement(child, {\r\n                  ...args,\r\n                  styles: null,\r\n                  key: key,\r\n                });\r\n              }\r\n            })}\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","var map = {\n\t\"./document.css\": [\n\t\t303,\n\t\t7,\n\t\t29\n\t],\n\t\"./en/PrivacyPolicy\": [\n\t\t207,\n\t\t9,\n\t\t9\n\t],\n\t\"./en/PrivacyPolicy.js\": [\n\t\t207,\n\t\t9,\n\t\t9\n\t],\n\t\"./en/UserAgreement\": [\n\t\t208,\n\t\t9,\n\t\t10\n\t],\n\t\"./en/UserAgreement.js\": [\n\t\t208,\n\t\t9,\n\t\t10\n\t],\n\t\"./en/articles/i-forgot-my-password-how-do-i-reset-it\": [\n\t\t157,\n\t\t9,\n\t\t2\n\t],\n\t\"./en/articles/i-forgot-my-password-how-do-i-reset-it.js\": [\n\t\t157,\n\t\t9,\n\t\t2\n\t],\n\t\"./en/leads/LeadAuth\": [\n\t\t209,\n\t\t9,\n\t\t13\n\t],\n\t\"./en/leads/LeadAuth.js\": [\n\t\t209,\n\t\t9,\n\t\t13\n\t],\n\t\"./en/leads/LeadLogIn\": [\n\t\t158,\n\t\t9,\n\t\t3\n\t],\n\t\"./en/leads/LeadLogIn.js\": [\n\t\t158,\n\t\t9,\n\t\t3\n\t],\n\t\"./en/leads/LeadSignUp\": [\n\t\t210,\n\t\t9,\n\t\t14\n\t],\n\t\"./en/leads/LeadSignUp.js\": [\n\t\t210,\n\t\t9,\n\t\t14\n\t],\n\t\"./en/leads/Transfer\": [\n\t\t211,\n\t\t9,\n\t\t15\n\t],\n\t\"./en/leads/Transfer.js\": [\n\t\t211,\n\t\t9,\n\t\t15\n\t],\n\t\"./en/leads/TransferU2B\": [\n\t\t212,\n\t\t9,\n\t\t23\n\t],\n\t\"./en/leads/TransferU2B.js\": [\n\t\t212,\n\t\t9,\n\t\t23\n\t],\n\t\"./en/leads/TransferU2S\": [\n\t\t213,\n\t\t9,\n\t\t16\n\t],\n\t\"./en/leads/TransferU2S.js\": [\n\t\t213,\n\t\t9,\n\t\t16\n\t],\n\t\"./en/leads/TransferU2U\": [\n\t\t214,\n\t\t9,\n\t\t17\n\t],\n\t\"./en/leads/TransferU2U.js\": [\n\t\t214,\n\t\t9,\n\t\t17\n\t],\n\t\"./en/leads/_LeadTemplateHelp\": [\n\t\t215,\n\t\t9,\n\t\t18\n\t],\n\t\"./en/leads/_LeadTemplateHelp.js\": [\n\t\t215,\n\t\t9,\n\t\t18\n\t],\n\t\"./en/toasts/ToastAuth\": [\n\t\t216,\n\t\t9,\n\t\t19\n\t],\n\t\"./en/toasts/ToastAuth.js\": [\n\t\t216,\n\t\t9,\n\t\t19\n\t],\n\t\"./en/toasts/ToastDefault\": [\n\t\t159,\n\t\t9,\n\t\t1\n\t],\n\t\"./en/toasts/ToastDefault.js\": [\n\t\t159,\n\t\t9,\n\t\t1\n\t],\n\t\"./en/toasts/ToastSignUp\": [\n\t\t217,\n\t\t9,\n\t\t20\n\t],\n\t\"./en/toasts/ToastSignUp.js\": [\n\t\t217,\n\t\t9,\n\t\t20\n\t],\n\t\"./en/topics/common-questions\": [\n\t\t160,\n\t\t9,\n\t\t4\n\t],\n\t\"./en/topics/common-questions.js\": [\n\t\t160,\n\t\t9,\n\t\t4\n\t],\n\t\"./en/topics/my-account\": [\n\t\t218,\n\t\t9,\n\t\t24\n\t],\n\t\"./en/topics/my-account.js\": [\n\t\t218,\n\t\t9,\n\t\t24\n\t],\n\t\"./lv/PrivacyPolicy\": [\n\t\t219,\n\t\t9,\n\t\t11\n\t],\n\t\"./lv/PrivacyPolicy.js\": [\n\t\t219,\n\t\t9,\n\t\t11\n\t],\n\t\"./lv/UserAgreement\": [\n\t\t220,\n\t\t9,\n\t\t12\n\t],\n\t\"./lv/UserAgreement.js\": [\n\t\t220,\n\t\t9,\n\t\t12\n\t],\n\t\"./lv/articles/i-forgot-my-password-how-do-i-reset-it\": [\n\t\t161,\n\t\t9,\n\t\t5\n\t],\n\t\"./lv/articles/i-forgot-my-password-how-do-i-reset-it.js\": [\n\t\t161,\n\t\t9,\n\t\t5\n\t],\n\t\"./lv/leads/LeadAuth\": [\n\t\t221,\n\t\t9,\n\t\t21\n\t],\n\t\"./lv/leads/LeadAuth.js\": [\n\t\t221,\n\t\t9,\n\t\t21\n\t],\n\t\"./lv/leads/LeadLogIn\": [\n\t\t162,\n\t\t9,\n\t\t6\n\t],\n\t\"./lv/leads/LeadLogIn.js\": [\n\t\t162,\n\t\t9,\n\t\t6\n\t],\n\t\"./lv/leads/LeadSignUp\": [\n\t\t222,\n\t\t9,\n\t\t22\n\t],\n\t\"./lv/leads/LeadSignUp.js\": [\n\t\t222,\n\t\t9,\n\t\t22\n\t],\n\t\"./lv/toasts/ToastAuth\": [\n\t\t223,\n\t\t9,\n\t\t8\n\t],\n\t\"./lv/toasts/ToastAuth.js\": [\n\t\t223,\n\t\t9,\n\t\t8\n\t],\n\t\"./lv/toasts/ToastDefault\": [\n\t\t163,\n\t\t9,\n\t\t0\n\t],\n\t\"./lv/toasts/ToastDefault.js\": [\n\t\t163,\n\t\t9,\n\t\t0\n\t],\n\t\"./lv/topics/common-questions\": [\n\t\t164,\n\t\t9,\n\t\t7\n\t],\n\t\"./lv/topics/common-questions.js\": [\n\t\t164,\n\t\t9,\n\t\t7\n\t],\n\t\"./lv/topics/my-account\": [\n\t\t224,\n\t\t9,\n\t\t25\n\t],\n\t\"./lv/topics/my-account.js\": [\n\t\t224,\n\t\t9,\n\t\t25\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 97;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}