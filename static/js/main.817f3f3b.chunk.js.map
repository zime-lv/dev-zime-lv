{"version":3,"sources":["translations/i18n.js","utils/config.js","utils/state.js","utils/useTimeout.js","components/card/Card.js","components/submitButton/SubmitButton.js","components/fileLoader/FileLoader.js","components/modalMessage/ModalMessage.js","components/accountRegistration/AccountRegistration.js","components/pagination/Pagination.js","components/search/Search.js","components/datePicker/DatePickerWrapper.js","components/datePicker/DatePicker.js","components/dateRangePicker/DateRangePicker.js","components/transactions/Transactions.js","components/shareholder/Shareholder.js","components/shares/Shares.js","components/accordionCard/AccordionCard.js","components/balance/Balance.js","components/copyableField/CopyableField.js","components/accountContainer/AccountContainer.js","components/transfer/TransferToSelf.js","components/tanInput/TanInput.js","components/transfer/TransferToPerson.js","components/transfer/TransferToBusiness.js","components/businessRegistration/BusinessRegistration.js","components/purposeRegistration/PurposeRegistration.js","components/shareholderRegistration/shareholderRegistration.js","components/myBusiness/MyBusiness.js","components/userEditor/UserEditor.js","components/currencies/Currencies.js","components/currencyRegistration/CurrencyRegistration.js","components/rating/Rating.js","components/listGroupItem/ListGroupItem.js","components/helpMenuLevel2/HelpMenuLevel2.js","components/help/Help.js","components/summary/Summary.js","components/currencyContainer/CurrencyContainer.js","components/transfer/Transfer.js","components/contact/Contact.js","components/status_404/Status_404.js","components/overlay/Overlay.js","components/alertContainer/AlertContainer.js","components/alert/Alert.js","components/login/LogIn.js","components/signup/SignUp.js","components/auth/Auth.js","components/language-selector/LanguageSelector.js","components/footer/Footer.js","components/idleTimer/IdleTimer.js","utils/useInterval.js","utils/useEventListener.js","components/mainMenu/MainMenu.js","components/main/Routes.js","components/validateEmail/ValidateEmail.js","components/changePassword/ChangePassword.js","components/logout/Logout.js","components/jobs/Jobs.js","components/article/Article.js","components/passwordReset/passwordReset.js","components/leads/Leads.js","components/toasts/Toasts.js","components/main/Main.js","components/underConstruction/UnderConstruction.js","components/notConnected/NotConnected.js","utils/sockets.js","utils/userResponseHandler.js","components/loading/Loading.js","Dispatcher.js","utils/requestHandler.js","utils/userErrorHandler.js","utils/systemErrorHandler.js","utils/systemResponseHandler.js","components/errorBoundary/ErrorBoundary.js","index.js"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","defaultNS","keySeparator","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","config","dev","uri","ENDPOINT","SITEMODE","window","location","hostname","useStickyState","defaultValue","key","useState","stickyValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","useTimeout","callback","delay","savedCallback","useRef","current","id","setTimeout","clearTimeout","args","defaults","title","navigation","undefined","footer","header","body","headerPadding","bodyPadding","align","maxWidth","minWidthBody","maxWidthBody","cardTitleClass","headerContent","transparent","background","backgroundHeader","backgroundBody","border","headerBorderBottom","onNavigationClick","props","Object","assign","Footer","className","style","Header","borderBottom","padding","length","Title","Nav","variant","defaultActiveKey","navigationdefaultActiveKey","display","justifyContent","alignItems","flexWrap","map","item","Item","Link","href","link","onClick","color","name","Body","textAlign","minWidth","margin","React","Children","children","child","cloneElement","styles","SubmitButton","memo","caption","request","namespace","type","classButton","visible","marginTop","timeout","onSubmit","barrelGetters","barrelSetters","setError","setInfo","requestExpired","e","Button","block","disabled","whiteSpace","Spinner","as","animation","size","role","aria-hidden","hidden","centered","message","show","onHide","path3","file","backdrop","t","useTranslation","Modal","aria-labelledby","closeButton","Navbar","borderRadius","backgroundColor","boxShadow","Brand","src","width","height","alt","maxHeight","overflowY","FileLoader","defaultFile","signedIn","accountNumber","userData","language","userBirthYear","userBirthMonth","userBirthDay","userBirthDateError","userTimezone","setUserBirthYear","setUserBirthMonth","setUserBirthDay","setUserBirthDateError","setUserTimezone","barrelFunctions","getReviser","getWorkplace","sendRequest","userAgreementShow","setUserAgreementShow","privacyPolicyShow","setPrivacyPolicyShow","schema","yup","timezone","required","birthYear","birthMonth","birthDay","timezones_sorted","timezones","composeDate","year","month","day","newDate","dateString","match","datepart","split","parseInt","leapYear","isValidDate","yearNow","Date","getFullYear","Alert","Heading","Trans","i18nKey","ModalMessage","component","handleSubmit","handleChange","values","handleBlur","touched","errors","isValid","validateForm","setFieldValue","Form","noValidate","Row","Group","Col","controlId","Label","Control","custom","onChange","target","isInvalid","Array","from","keys","Feedback","monthName","toLocaleString","monthNumber","toString","padStart","dayNumber","element","Offset","Name","paddingBottom","KeyboardArrowRight","onMouseDown","validationSchema","data","birthDate","reviser","workplace","email","req","sendAccountRegistrationRequest","initialValues","countItems","itemsPerPage","active","pages","Math","ceil","getPages","items","number","push","Pagination","Ellipsis","First","Prev","Next","Last","getJSX","advancedSearch","placeholder","captionAdvancedSearch","search","setSearch","refSearch","createRef","tempRefSearch","optional","InputGroup","ref","autoComplete","Append","Text","cursor","Search","refDatePicker","fp","flatpickr","options","destroy","datePicker","aria-describedby","open","DateRange","console","log","locale","showMonths","inline","shorthandCurrentMonth","allowInput","clickOpens","monthSelectorType","altInput","altFormat","dateFormat","maxDate","defaultDate","selectedDates","dateStr","instance","captionStartDate","captionEndDate","captionUpdate","dateRangeStart","dateRangeEnd","setDateRangeStart","setDateRangeEnd","getTransactions","formatDate","clearRequestStatus","dateStart","dateEnd","Replay","transactions","countTransactions","activePageTransactions","transactionsPerPage","findTransactions","showRequestStatus","format","formatPerCent","cnt","marginBottom","DateRangePicker","ListGroup","transaction","keyTransactions","business_title","comment","conv_amount","created","sender_firstname","sender_lastname","recipient_firstname","recipient_lastname","purpose_id","purpose_title","recipient_id","roles","share","share_per_cent","sender_id","from_account","to_account","i_am_sender","i_am_recipient","t_from_account","t_to_account","roles_available","arrRoles","shares_available","float","ArrowRightAlt","sender","Badge","pill","purpose","shareholder","rangeControl","sharePerCent","businessTitle","purposeTitle","businessOwnerFirstname","businessOwnerLastname","sharesCreated","purposeShareholders","setPurposeShareholders","userQuery","setUserQuery","delayedQuery","_","debounce","q","sendQuery","onClose","shareholder_id","ps","sharesLabelId","Toast","firstname","lastname","Settings","fontSize","min","max","step","shares","countShares","activePageShares","sharesPerPage","getShares","findShares","keyShares","owner_firstname","owner_lastname","shares_created","shares_roles","shares_share","Shareholder","eventkey","paddingBody","CustomToggle","eventKey","decoratedOnClick","useAccordionToggle","marginLeft","ExpandMore","ChevronRight","Accordion","Toggle","Card","Collapse","setAccountType","setRedirectTo","userDataParsed","available","acc_curr","acc_cred","acc_save","copyToClipboard","refCopyableField","position","overflow","readOnly","document","queryCommandSupported","FileCopy","accordionView","setAccordionView","setResponseProps","setClearRefs","getAccountData","toggleView","view","newView","AccordionCard","CopyableField","Balance","Transactions","Shares","accountType","currencyAbbr","transferFromAccount","transferToAccount","transferAmount","setTransferFromAccount","setTransferToAccount","setTransferAmount","parseLocaleNumber","refAmount","tempRefAmount","fromAccount","toAccount","amount","matches","RegExp","Prepend","uid","Intl","NumberFormat","notation","minimumFractionDigits","useGrouping","transferToSelf","tanRequired","tanInputTAN","setTanRequired","setTanInputTAN","refTAN","tempRef","tan","autoFocus","transferToUID","transferDescription","setTransferRequest","setTransferToUID","setTransferDescription","refPersonalID","refDescription","tempRefPersonalID","tempRefDescription","toPersonalID","TanInput","rows","description","transferType","transferToPerson","transferToPurpose","setTransferToPurpose","refPurposeID","tempRefPurposeID","purposeID","currency","transferToBusiness","businessRegistrationAddTitle","businessRegistrationAddDescription","setBusinessRegistrationAddTitle","setBusinessRegistrationAddDescription","refBusinessTitle","refBusinessDescription","tempRefBusinessTitle","tempRefBusinessDescription","trim","businessDescription","requestInsert","requestUpdate","businessID","category","subcategory","subcategory2","keywords","barrels","purposeRegistrationTitle","purposeRegistrationDescription","purposeRegistrationKeywords","setPurposeRegistrationTitle","setPurposeRegistrationDescription","setPurposeRegistrationKeywords","onPurposeRegistration","barrelEventHandlers","refPurposeTitle","refPurposeDescription","refPurposeKeywords","tempRefPurposeTitle","tempRefPurposeDescription","tempRefPurposeKeywords","purposeDescription","purposeKeywords","RegisterPurpose","shareholderRoles","typeError","personalID","userBusinesses","countBusinesses","businessesPerPage","activePageBusinesses","userBusinessesLoaded","activeBusiness","activeBusinessID","businessPurposes","countBusinessPurposes","businessPurposesPerPage","activePageBusinessPurposes","activeBusinesPurpose","activePurposeProperty","activePurposeData","setBusinessPurposes","setActiveBusiness","setActiveBusinesPurpose","setActivePurposeProperty","setActivePageBusinessPurposes","setActivePurposeData","getBusinesses","getBusinessPurposes","getPurposeShareholders","findPurposes","menuItems","purposes","cntPurposes","countShareholders","business","keyBusiness","keyPurpose","business_id","action","TogglePurpose","paddingLeft","Edit","stopPropagation","Tab","Pane","Add","keyShareholder","bp","status","purpose_status","Check","label","checked","jsx","BusinessRegistration","date","businessSince","ToggleBusiness","Store","Container","sm","Content","PurposeRegistration","mode","userEditorEditFirstname","userEditorFirstname","userEditorEditLastname","userEditorLastname","userEditorEditEmail","userEditorEmail","userEditorEditPassword","userEditorPassword","userEditorPasswordVisible","userEditorSubmitButtonVisible","setUserEditorEditFirstname","setUserEditorFirstname","setUserEditorEditLastname","setUserEditorLastname","setUserEditorEditEmail","setUserEditorEmail","setUserEditorEditPassword","setUserEditorPassword","setUserEditorPasswordVisible","setUserEditorSubmitButtonVisible","refFirstName","refLastName","refEmail","refPassword","tempRefFirstName","tempRefLastName","tempRefEmail","tempRefPassword","togglePassword","yupObject","firstName","lastName","password","Close","VisibilityOff","Visibility","newEmail","validateEmail","sendUserRegistrationRequest","currencies","settings","countCurrencies","activePageCurrencies","currenciesPerPage","setCurrencyAbbr","setCurrencyRate","getCurrencies","findCurrencies","formatExchangeRate","getObjectArrayElementIndex","onCurrencySelected","currency_id","rate","onPageSelect","Table","responsive","striped","bordered","hover","keyCurrency","abbr","region","includes","aria-label","curr_abbr","curr_title","curr_region","curr_rate","currencyCode","currencyName","currencyRegion","currencyNewRate","setCurrencyCode","setCurrencyName","setCurrencyRegion","setCurrencyNewRate","refAbbr","refTitle","refRegion","refRate","tempRefAbbr","tempRefTitle","tempRefRegion","tempRefRate","fluid","helpPath1","helpPath2","setHelpPath","ListGroupItem","searchable","xl","HelpMenuLevel2","pageBody","exact","path","AccountRegistration","UserEditor","accordionViewCurrency","setAccordionViewCurrency","Currencies","CurrencyRegistration","CurrencyContainer","MyBusiness","onTransferTypeChange","TransferToPerson","TransferToBusiness","TransferToSelf","Transfer","contactSubject","contactMessage","setContactSubject","setContactMessage","refSubject","refMessage","tempRefSubject","tempRefMessage","subject","Contact","Status_404","dismissible","error","info","onAlertClose","errorStrings","infoStrings","msgError","msg","msgInfo","ip","logInEmail","logInPassword","setLoggingIn","setUpdateInterval","setLogInEmail","setLogInPassword","getUri","sendUserLogInRequest","signUpFirstName","signUpLastName","signUpEmail","signUpPassword","setSignUpFirstName","setSignUpLastName","setSignUpEmail","setSignUpPassword","passwordVisible","setPasswordVisible","cartProps","cartContent","cartPurposes","cartProcessingStatus","cartID","setCartProcessingStatus","Cart","priceTotal","businessCreated","business_created","price","find","products","product","fontWeight","merchant","getCartPurposes","cart","cartid","changeLanguage","lng","selectLanguage","paddingRight","now","pathname","collapseOnSelect","expand","aria-controls","LanguageSelector","timestamp","stage2","stage3","onTick","onTimerReset","onTimeout","events","onSessionTimeout","seconds","setSeconds","modalMessageShow","setModalMessageShow","setInterval","clearInterval","useInterval","eventHandler","i","addEventListener","removeEventListener","useEventListener","currTime","timeFormatted","minute","second","modalMessage","OverlayTrigger","placement","overlay","Tooltip","AvTimer","sessionTimeout","AccountCircle","PowerSettingsNew","IdleTimer","getRedirect","getContainerClass","wrapperClass","innerClass","appClass","MainMenu","Image","SignUp","Auth","Login","validationTokenEmail","validationTokenEmailResent","setValidateTokenEmail","getUrlParam","token","ValidateEmail","passwordResetTokenValidated","passwordResetTokenEmail","ChangePassword","emailChanged","setLanguage","onLogOut","onRedirect","tempError","tempInfo","tempLanguage","tempEmailChanged","Logout","Jobs","Help","passwordResetEmail","setValidateTokenPasswordReset","setPasswordResetEmail","PasswordReset","Summary","leadFile","fileName","session","serverResponseReceived","dailyAllowanceDispatched","validateTokenEmail","validateTokenPasswordReset","connected","clearRefs","loggingOut","scrollPositionY","setRequestTimedOut","setDailyAllowanceDispatched","setRequest","getIP","saveCartID","sendEmailValidationRequest","sendPasswordResetRequest","showMessage","getCart","onSessionStart","setDate","getDate","lg","md","Routes","Build","PowerOff","socket","openSocket","connect","secure","reconnect","sendData","emit","responseProps","transferRequest","lastInsertId","setSession","setSettings","setCurrencies","setTransactions","setShares","setCountCurrencies","setCountTransactions","setCountShares","setConnected","setUserData","setSignedIn","setCartContent","setCartProps","setLastInsertId","setAccountNumber","setUserSequence","setUID","setUserBusinesses","setCountBusinesses","setUserBusinessesLoaded","setCartPurposes","setCountBusinessPurposes","setAccountPhotoPath","setPasswordResetTokenValidated","setPasswordResetTokenEmail","setValidationTokenEmail","setValidationTokenEmailResent","setEmailChanged","getTransactionById","sortObjectArray","deleteObjectArrayElement","onSessionEnd","responseFound","onResponse","res","reqData","tempRP","saveResponseProps","results","sequence","content","queryCnt","insertId","tags","resent","affectedRows","currency_abbr","isNaN","currency_rate","count_businesses","count_purposes","index","splice","temp","count_currencies","count_transaction_positions","count_shares","paddingTop","isLocalhost","setDebug","setLoggingOut","loggingIn","pageLoading","setPageLoading","setServerResponseReceived","requestTimedOut","setInstance","uuidv4","setSessionTimeout","reconnecting","setReconnecting","setIP","setCartID","updateInterval","currencyRate","setActivePageCurrencies","setActivePageTransactions","setActivePageShares","setCurrenciesPerPage","setTransactionsPerPage","setSharesPerPage","userSequence","setBusinessesPerPage","setActivePageBusinesses","setActiveBusinessID","setBusinessPurposesPerPage","searchTransactions","setSearchTransactions","searchPurposes","setSearchPurposes","searchShares","setSearchShares","redirectTo","setTransferType","articleFeedbackSubmitted","setArticleFeedbackSubmitted","setScrollPositionY","setHelpPath1","setHelpPath2","helpPath3","setHelpPath3","accountPhotoPath","processRequest","requestFound","onRequest","dt","fullyear","getMonth","slice","initial","toUpperCase","icode","charCodeAt","scode","tcode","requestHandler","processUserResponse","context","errorFound","onError","code","userErrorHandler","userResponseHandler","processSystemResponse","systemErrorHandler","hideMessage","systemResponseHandler","getArrayObject","array","property","o","getRequestStatus","obj","ts","hour","isUTC","locales","diff","getTimezoneOffset","moment","add","toDate","DateTimeFormat","param","queryString","URLSearchParams","get","newPage","page","limit","selected","arr","filter","roundTo","n","digits","negative","multiplicator","pow","parseFloat","toFixed","round","sort","a","b","properties","indexOf","strLoading","strNotFound","finalStatus","retIntl","maximumFractionDigits","substr","to","fetch","method","headers","then","json","catch","getScrollPosition","x","scrollX","y","scrollY","setScrollPosition","scroll","customer","getFileNameFromURI","pathLast","substring","lastIndexOf","select","execCommand","blur","stringNumber","parts_local","formatToParts","group","decimal","forEach","replace","on","onSignUp","onTransferSuccess","onTransfer","startSession","endSession","onSessionReset","clear","responseData","setResponseData","useSocket","latency","reason","attemptNumber","useSystemSocket","UnderConstruction","NotConnected","ErrorBoundary","state","hasError","errorInfo","this","Component","root","getElementById","construction","ReactDOM","render","fallback","Dispatcher"],"mappings":"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,MAAMmI,IAErBozB,cACA7F,gBACA9B,aACAoG,gBACA/xB,YACAwrB,4BAEAlG,UACAH,YAAartB,KAAKC,MAAMotB,IACxBD,UAAWptB,KAAKC,MAAMmtB,IACtBG,wBACA3S,gBACA0f,gBAEAnyB,iBACA0yB,gBACAlgB,eACAiB,OACA2E,eAAgBvgB,KAAKC,MAAMsgB,IAC3BC,mBACAC,qBACAC,wBACAC,wBACAC,kBACAC,oBACAC,iBAAkB9gB,KAAKC,MAAM6gB,IAC7BwM,aAActtB,KAAKC,MAAMqtB,IACzBvM,yBACAC,2BACAC,8BACAC,wBACAC,yBAEAC,kBAAmBphB,KAAKC,MAAMmhB,IAC9BpL,oBAAqBhW,KAAKC,MAAM+V,IAChC8d,aACA5H,cACAC,iBACAO,mBACAC,kBACAC,eACAC,kBACA3a,kBACAC,gBACA8L,gCACAC,sCACAiB,4BACAC,kCAIAC,+BACA4E,2BACAC,uBACAC,0BACAC,sBACAC,uBACAC,mBACAC,0BACAC,sBACAC,6BACAC,iCACAuO,sBACA7W,eACA5M,UACA0rB,sBACAE,kBACAE,gBAEAnf,eACAuf,4BACA1H,mBACA1K,aACAC,aACAwS,aAGApI,sBACAC,8BACAzB,+BACAC,2BACAP,wBACAC,8BACAQ,gBACAoD,gBAAiB11B,KAAKC,MAAMy1B,IAC5B7a,uBACAC,qBACAC,kBACA4B,iBACAe,qBACAd,uBACAiO,kBACAC,kBACAxiB,iBACAC,kBACAC,gBACAC,sBACAC,gBACA2f,gBACAC,gBACAC,kBACAC,mBACAngB,YACAmV,gBAEAye,oBACAxQ,MAAOzrB,KAAKC,MAAMwrB,IAClBC,KAAM1rB,KAAKC,MAAMyrB,KAObjmB,GAAgB,CACpB8zB,WACAC,gBACApN,eAGAuN,iBACAxF,aACAyF,4BACA3F,qBAEA6F,cACA9f,oBAGA4b,aAEAoE,qBAEAnE,eACAsE,SACA9N,qBACAyJ,iBACAC,mBACAC,aACAjc,oBACAoQ,4BACA8L,sBACAC,wBACAC,kBACAoE,2BACAC,6BACAC,uBACAC,wBACAC,0BACAC,oBACAxE,gBACA8D,mBACA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","file":"static/js/main.817f3f3b.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n// not like to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    // lng: \"lv\",\r\n    // ns: [\"LogIn\", \"SignUp\"],\r\n    defaultNS: \"Default\",\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: \"languageChanged loaded\",\r\n      bindStore: \"added removed\",\r\n      nsMode: \"default\",\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","const dev = {\r\n  uri: {\r\n    ENDPOINT: \"http://localhost:9000\",\r\n    SITEMODE: \"DEVELOPMENT\",\r\n  },\r\n};\r\n\r\nconst dev2 = {\r\n  uri: {\r\n    ENDPOINT: \"http://192.168.2.100:5000\",\r\n    SITEMODE: \"DEVELOPMENT2\",\r\n  },\r\n};\r\n\r\nconst staging = {\r\n  uri: {\r\n    ENDPOINT: \"https://dev.local-currency.com\",\r\n    SITEMODE: \"STAGING\",\r\n  },\r\n};\r\n\r\nconst prod = {\r\n  uri: {\r\n    ENDPOINT: \"https://local-currency.com\",\r\n    SITEMODE: \"PRODUCTION\",\r\n  },\r\n};\r\n\r\nconst hostname = window && window.location && window.location.hostname;\r\n\r\nlet config;\r\nswitch (hostname) {\r\n  case \"localhost\":\r\n    config = dev;\r\n    break;\r\n  case \"192.168.2.100\":\r\n    config = dev2;\r\n    break;\r\n  case \"dev.local-currency.com\":\r\n    config = staging;\r\n    break;\r\n  case \"local-currency.com\":\r\n    config = prod;\r\n    break;\r\n  default:\r\n    config = dev;\r\n    break;\r\n}\r\n\r\nexport default {\r\n  ...config,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nexport const useStickyState = (defaultValue, key) => {\r\n  const [value, setValue] = useState(() => {\r\n    const stickyValue = window.localStorage.getItem(key);\r\n    // console.log(\"stickyValue:\", typeof stickyValue);\r\n\r\n    return stickyValue !== null &&\r\n      typeof stickyValue !== \"undefined\" &&\r\n      stickyValue !== \"undefined\"\r\n      ? JSON.parse(stickyValue)\r\n      : defaultValue;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n  return [value, setValue];\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useTimeout = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setTimeout(tick, delay);\r\n      return () => clearTimeout(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","import \"./Card.css\";\r\nimport React, { cloneElement } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n// import { Container, Row, Col, Button } from \"react-bootstrap\";\r\n// import Button from \"react-bootstrap/Button\";\r\n\r\nexport default (args) => {\r\n  let defaults = {\r\n    title: \"Untitled\",\r\n    navigation: undefined,\r\n    footer: undefined,\r\n    header: true,\r\n    body: true,\r\n    headerPadding: \"20px\",\r\n    bodyPadding: \"20px\",\r\n    align: \"left\",\r\n    maxWidth: \"100%\",\r\n    minWidthBody: \"150px\",\r\n    maxWidthBody: \"500px\",\r\n    cardTitleClass: \"\",\r\n    headerContent: null,\r\n    transparent: false,\r\n    background: \"Transparent\",\r\n    backgroundHeader: \"var(--light)\",\r\n    backgroundBody: \"var(--light)\",\r\n    border: \"1px solid rgba(0,0,0,.125)\",\r\n    headerBorderBottom: \"1px solid rgba(0,0,0,.125)\",\r\n    onNavigationClick: () => {},\r\n  };\r\n  let props = Object.assign(defaults, args);\r\n\r\n  let key = 0;\r\n\r\n  let footer = props.footer ? <Card.Footer>{props.footer}</Card.Footer> : \"\";\r\n\r\n  return (\r\n    <Card\r\n      className=\"custom-card\"\r\n      style={{ background: props.background, border: props.border }}\r\n    >\r\n      {/* <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" /> */}\r\n      {props.header && (\r\n        <Card.Header\r\n          className=\"custom-card\"\r\n          style={{\r\n            background: props.backgroundHeader,\r\n            borderBottom: props.headerBorderBottom,\r\n            padding: props.headerPadding,\r\n          }}\r\n        >\r\n          {props.headerContent !== null ? (\r\n            props.headerContent\r\n          ) : (\r\n            <>\r\n              {props.title.length > 0 && (\r\n                <Card.Title className={props.cardTitleClass}>\r\n                  {props.title}\r\n                </Card.Title>\r\n              )}\r\n              <Nav\r\n                variant=\"tabs\"\r\n                defaultActiveKey={props.navigationdefaultActiveKey}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexWrap: \"wrap\",\r\n                }}\r\n              >\r\n                {props.navigation &&\r\n                  props.navigation.map((item, key) => (\r\n                    <Nav.Item key={key}>\r\n                      <Nav.Link\r\n                        className=\"custom-card\"\r\n                        href={item.link}\r\n                        onClick={() => props.onNavigationClick(item.link)}\r\n                        style={{ color: \"var(--dark)\" }}\r\n                      >\r\n                        {item.name}\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  ))}\r\n              </Nav>\r\n            </>\r\n          )}\r\n        </Card.Header>\r\n      )}\r\n\r\n      {props.body && (\r\n        <Card.Body\r\n          className=\"custom-card\"\r\n          style={{\r\n            background: props.backgroundBody,\r\n            textAlign: props.align,\r\n            maxWidth: props.maxWidth,\r\n            padding: props.bodyPadding,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              minWidth: props.minWidthBody,\r\n              maxWidth: props.maxWidthBody,\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            {React.Children.map(args.children, (child) => {\r\n              if (typeof child !== \"object\") {\r\n                return child;\r\n              } else if (child === null) {\r\n                return;\r\n              } else {\r\n                key++;\r\n                return cloneElement(child, {\r\n                  styles: null,\r\n                  key: key,\r\n                });\r\n              }\r\n            })}\r\n          </div>\r\n        </Card.Body>\r\n      )}\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\n// export default (args) => {\r\nconst SubmitButton = React.memo((args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    caption: \"Submit\",\r\n    request: null,\r\n    namespace: \"Button\",\r\n    type: \"submit\",\r\n    classButton: \"\",\r\n    visible: true,\r\n    marginTop: 0,\r\n    timeout: 15000, // milliseconds\r\n    variant: \"primary\", // primary | secondary\r\n    onSubmit: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { request } = props.barrelGetters;\r\n  const { setError, setInfo } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const [requestExpired] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    setError(null);\r\n    setInfo(null);\r\n    // document.body.style.overflow = \"hidden\";\r\n    props.onSubmit();\r\n    // e.preventDefault();\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return !props.visible ? (\r\n      <></>\r\n    ) : (\r\n      <Button\r\n        type={props.type}\r\n        className={props.classButton}\r\n        onClick={onSubmit}\r\n        block\r\n        variant={props.variant === \"primary\" ? \"primary\" : \"outline-primary\"}\r\n        disabled={request === props.request && !requestExpired}\r\n        style={{\r\n          marginTop: props.marginTop + \"px\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n      >\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={request !== props.request || requestExpired}\r\n        />\r\n        &nbsp;\r\n        {props.caption}\r\n        &nbsp;\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n});\r\n\r\nexport default SubmitButton;\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  return <>test5</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Modal, Navbar, Nav } from \"react-bootstrap\";\r\n// import ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport FileLoader from \"../fileLoader\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ModalMessage\",\r\n    centered: true,\r\n    message: \"\",\r\n    title: null,\r\n    footer: null,\r\n    // bodyStyle: { padding: \"1rem\" },\r\n    show: false,\r\n    onHide: () => {},\r\n    size: \"sm\",\r\n    path3: \"tos\",\r\n    file: null,\r\n    backdrop: true, // \"static\"\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Modal\r\n        show={props.show}\r\n        title={props.title}\r\n        footer={props.footer}\r\n        file={props.file}\r\n        onHide={props.onHide}\r\n        size={props.size}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered={props.centered}\r\n        backdrop={props.backdrop}\r\n      >\r\n        {props.title !== null && (\r\n          <Modal.Header closeButton>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src=\"gfx/zlogo_light.png\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  alt=\"\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                  {props.title}\r\n                </Modal.Title>\r\n              </Nav>\r\n            </Navbar>\r\n          </Modal.Header>\r\n        )}\r\n        <Modal.Body\r\n          style={{ maxHeight: \"calc(100vh - 210px)\", overflowY: \"auto\" }}\r\n        >\r\n          {props.message !== \"\" ? (\r\n            props.message\r\n          ) : (\r\n            <FileLoader\r\n              {...args}\r\n              path3={props.path3}\r\n              file={props.file}\r\n              defaultFile={props.file}\r\n            />\r\n          )}\r\n        </Modal.Body>\r\n        {props.footer !== null && (\r\n          <Modal.Footer>\r\n            <Button block onClick={props.onHide}>\r\n              {t(\"Close\")}\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, Alert, Col } from \"react-bootstrap\";\r\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n// import Dropzone from \"../dropzone\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport ModalMessage from \"../modalMessage\";\r\nimport timezones from \"./timezones.en.json\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    request: \"get user sequence\", // \"register account\",\r\n    namespace: \"AccountRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    signedIn,\r\n    accountNumber,\r\n    // accountPhotoPath,\r\n    userData,\r\n    language,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    debug,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n  } = props.barrelSetters;\r\n  const { getReviser, getWorkplace, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const [userAgreementShow, setUserAgreementShow] = useStickyState(\r\n    false,\r\n    \"userAgreementShow\"\r\n  );\r\n  const [privacyPolicyShow, setPrivacyPolicyShow] = useStickyState(\r\n    false,\r\n    \"privacyPolicyShow\"\r\n  );\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    // dropzoneHook: yup.string().required(t(\"Photo ID is required\")),\r\n    timezone: yup.string().required(t(\"Timezone is required\")),\r\n    birthYear: yup.number().required(t(\"Year is required\")),\r\n    birthMonth: yup.number().required(t(\"Month is required\")),\r\n    birthDay: yup.number().required(t(\"Day is required\")),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Send account registration request\r\n   * @param {object} data\r\n   */\r\n  const sendAccountRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.email = userData.email;\r\n\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    delete data.birthYear;\r\n    delete data.birthMonth;\r\n    delete data.birthDay;\r\n\r\n    const newDate = composeDate(userBirthYear, userBirthMonth, userBirthDay);\r\n    data.birthDate = newDate;\r\n\r\n    if (newDate !== \"\") {\r\n      if (sendAccountRegistrationRequest(data)) {\r\n        // Account registration request was submitted\r\n      }\r\n    }\r\n  };\r\n\r\n  const timezones_sorted = timezones;\r\n\r\n  /**\r\n   * Validates a date\r\n   * @param {string} dateString\r\n   */\r\n  const isValidDate = (dateString) => {\r\n    let dateformat = /^(0?[1-9]|1[0-2])[\\/](0?[1-9]|[1-2][0-9]|3[01])[\\/]\\d{4}$/;\r\n\r\n    // Match the date format through regular expression\r\n    if (dateString.match(dateformat)) {\r\n      let operator = dateString.split(\"/\");\r\n\r\n      // Extract the string into month, date and year\r\n      let datepart = [];\r\n      if (operator.length > 1) {\r\n        datepart = dateString.split(\"/\");\r\n      }\r\n      let month = parseInt(datepart[0]);\r\n      let day = parseInt(datepart[1]);\r\n      let year = parseInt(datepart[2]);\r\n\r\n      // Create list of days of a month\r\n      let ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n      if (month === 1 || month > 2) {\r\n        if (day > ListofDays[month - 1]) {\r\n          ///This check is for Confirming that the date is not out of its range\r\n          return false;\r\n        }\r\n      } else if (month === 2) {\r\n        let leapYear = false;\r\n        if ((!(year % 4) && year % 100) || !(year % 400)) {\r\n          leapYear = true;\r\n        }\r\n        if (leapYear === false && day >= 29) {\r\n          return false;\r\n        } else if (leapYear === true && day > 29) {\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Composes a date\r\n   * @param {string} year\r\n   * @param {string} month\r\n   * @param {string} day\r\n   */\r\n  const composeDate = (year, month, day) => {\r\n    const newDate = `${month}/${day}/${year}`;\r\n    if (isValidDate(newDate)) {\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        setUserBirthDateError(\"\");\r\n\r\n        return newDate;\r\n      } else {\r\n        setUserBirthDateError(\"\");\r\n        return \"\";\r\n      }\r\n    } else {\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        setUserBirthDateError(t(\"Date must be valid\"));\r\n        return \"\";\r\n      } else {\r\n        setUserBirthDateError(\"\");\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const yearNow = new Date().getFullYear();\r\n\r\n  /**\r\n   * Form\r\n   * @param {*} param0\r\n   */\r\n  const AccountRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    setFieldValue,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Form.Row style={{ margin: \"0 0\" }}>\r\n        <Form.Group\r\n          as={Col}\r\n          controlId=\"formGridDateOfBirth\"\r\n          style={{ margin: \"0 0\" }}\r\n        >\r\n          <Form.Label>{t(\"Date of birth\")}</Form.Label>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridYear\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthYear\"\r\n            value={values.birthYear}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthYear(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthYear && touched.birthYear}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Year\")}\r\n            </option>\r\n            {Array.from(Array(120).keys()).map((key) => {\r\n              let year = yearNow - key;\r\n\r\n              return (\r\n                <option key={key} value={year}>\r\n                  {year}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthYear}\r\n          </Form.Control.Feedback>\r\n          <div className=\"invalid-feedback-custom\">{userBirthDateError}</div>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridMonth\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthMonth\"\r\n            value={values.birthMonth}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthMonth(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthMonth && touched.birthMonth}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Month\")}\r\n            </option>\r\n            {Array.from(Array(12).keys()).map((key) => {\r\n              let date = new Date(`${key + 1}/1/1970`);\r\n              let monthName = date.toLocaleString(language, { month: \"long\" });\r\n              let monthNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={monthNumber}>\r\n                  {monthNumber} - {monthName}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthMonth}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridDay\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthDay\"\r\n            value={values.birthDay}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthDay(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthDay && touched.birthDay}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Day\")}\r\n            </option>\r\n            {Array.from(Array(31).keys()).map((key) => {\r\n              let dayNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={dayNumber}>\r\n                  {dayNumber}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthDay}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Group controlId=\"validationFormikTimezone\">\r\n        <Form.Label>{t(\"Timezone\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          custom\r\n          name=\"timezone\"\r\n          value={values.timezone}\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n            setUserTimezone(e.target.value);\r\n          }}\r\n          isInvalid={!!errors.timezone && touched.timezone}\r\n        >\r\n          <option value=\"\">{t(\"Choose...\")}</option>\r\n          {timezones_sorted.map((element, key) => (\r\n            <option\r\n              key={key}\r\n              value={`${(((element.Offset + 12) % 24) + 1)\r\n                .toString()\r\n                .padStart(2, \"0\")} - ${element.Name}`}\r\n            >\r\n              {element.Name}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.timezone}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <div style={{ paddingBottom: \"10px\" }}>\r\n        {t(\"Agree to terms and conditions\")}\r\n      </div>\r\n\r\n      <Trans i18nKey=\"AccountRegistration:The User Agreement and the Privacy Policy\">\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setUserAgreementShow(true)}>\r\n          User Agreement\r\n        </a>\r\n\r\n        <br />\r\n\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setPrivacyPolicyShow(true)}>\r\n          Privacy Policy\r\n        </a>\r\n      </Trans>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  if (signedIn === false)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"User not logged in\")}</Alert.Heading>\r\n          <p>\r\n            <Trans i18nKey=\"AccountRegistration:Please log in first\">\r\n              Please log in first.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  if (!debug && accountNumber !== null)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"Account successfully registered\")}</Alert.Heading>\r\n          <p>\r\n            <Trans\r\n              i18nKey=\"AccountRegistration:Account with your personal ID successfully registered\"\r\n              accountNumber={accountNumber}\r\n            >\r\n              Account with the personal ID\r\n              <strong>{{ accountNumber }}</strong>\r\n              successfully registered.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        show={userAgreementShow}\r\n        path3=\"tos\"\r\n        file=\"UserAgreement.js\"\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"User Agreement\")}\r\n        footer=\"\"\r\n        onHide={() => setUserAgreementShow(false)}\r\n        {...args}\r\n      />\r\n\r\n      <ModalMessage\r\n        show={privacyPolicyShow}\r\n        path3=\"tos\"\r\n        file=\"PrivacyPolicy.js\"\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"Privacy Policy\")}\r\n        footer=\"\"\r\n        onHide={() => setPrivacyPolicyShow(false)}\r\n        {...args}\r\n      />\r\n\r\n      <Card title={t(\"Open account\")} border={0}>\r\n        <Formik\r\n          component={AccountRegistrationForm}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            // dropzoneHook: accountPhotoPath,\r\n            timezone: userTimezone,\r\n            birthYear: userBirthYear,\r\n            birthMonth: userBirthMonth,\r\n            birthDay: userBirthDay,\r\n          }}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Pagination\",\r\n    size: \"md\",\r\n    countItems: 0,\r\n    itemsPerPage: 5,\r\n    active: 0, // active page\r\n    onClick: () => {},\r\n    align: \"center\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const pages = Math.ceil(props.countItems / props.itemsPerPage);\r\n\r\n  if (pages < 2) return <></>;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  const onClick = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = props.active > 1 ? props.active - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          props.active < Math.ceil(props.countItems / props.itemsPerPage)\r\n            ? props.active + 1\r\n            : Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // getBusinesses(number);\r\n    props.onClick(number);\r\n  };\r\n\r\n  const getPages = () => {\r\n    let items = [];\r\n    for (let number = 1; number <= pages; number++) {\r\n      if (\r\n        number === 1 ||\r\n        number === pages ||\r\n        (number >= props.active - 1 && number <= props.active + 1)\r\n      ) {\r\n        items.push(\r\n          <Pagination.Item\r\n            key={number}\r\n            active={number === props.active}\r\n            onClick={() => onClick(number)}\r\n          >\r\n            {number}\r\n          </Pagination.Item>\r\n        );\r\n      } else if (number === 2 || number === pages - 1) {\r\n        items.push(<Pagination.Ellipsis key={number} disabled />);\r\n      }\r\n    }\r\n    return items;\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const { align } = props;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: `${align}`,\r\n          // backgroundColor: \"red\",\r\n        }}\r\n      >\r\n        <span style={{ display: \"inline-block\" }}>\r\n          <Pagination size={props.size} style={{ padding: 0, margin: 0 }}>\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.First onClick={() => props.onClick(\"First\")} />\r\n                <Pagination.Prev onClick={() => props.onClick(\"Prev\")} />\r\n              </>\r\n            )}\r\n\r\n            {getPages()}\r\n\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.Next onClick={() => props.onClick(\"Next\")} />\r\n                <Pagination.Last onClick={() => props.onClick(\"Last\")} />\r\n              </>\r\n            )}\r\n          </Pagination>\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"react-calendar/dist/Calendar.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Col, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search as SearchIcon, Replay as ReplayIcon } from \"@material-ui/icons\";\r\n// import Autosuggest from \"react-autosuggest\";\r\n// import Calendar from \"react-calendar\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n// import DatePicker from \"../datePicker\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Search\",\r\n    request: \"find currencies\",\r\n    advancedSearch: false,\r\n    placeholder: \"SEARCH...\",\r\n    captionAdvancedSearch: \"Advanced search\",\r\n    onSubmit: () => {},\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { search } = props.barrelGetters;\r\n  const { setSearch } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /** \r\n    * Hooks\r\n    ============================================================================ */\r\n  // const [suggestions, setSuggestions] = useStickyState([], \"suggestions\");\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  const refSearch = React.createRef();\r\n\r\n  /**\r\n    * Clear refs\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    const tempRefSearch = refSearch.current;\r\n    return () => {\r\n      if (tempRefSearch !== null && search !== tempRefSearch.value)\r\n        setSearch(tempRefSearch.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    search: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    // findCurrencies(data.search);\r\n    props.onSubmit(data.search);\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * Search\r\n         */}\r\n        <Form.Group style={{ padding: 0, margin: 0 }}>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={props.placeholder}\r\n              name=\"search\"\r\n              ref={refSearch}\r\n              value={values.search}\r\n              autoComplete=\"search\"\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.search && touched.search}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text\r\n                id=\"inputGroupAppend\"\r\n                onClick={() => onSubmit(values)}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <SearchIcon style={{ color: \"var(--dark)\" }} />\r\n              </InputGroup.Text>\r\n            </InputGroup.Append>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.search}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n          {props.advancedSearch && (\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <button\r\n                className=\"button-transparent\"\r\n                style={{ margin: \"0\", padding: \"0\" }}\r\n              >\r\n                <small className=\"text-muted\">\r\n                  {props.captionAdvancedSearch}\r\n                </small>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        search: search,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport flatpickr from \"flatpickr\";\r\n// import { Latvian } from \"flatpickr/dist/l10n/lv.js\";\r\nimport * as language from \"flatpickr/dist/l10n\"; // DO NOT REMOVE !!!\r\nimport { DateRange } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DatePickerWrapper\",\r\n    request: \"get something\",\r\n    value: \"\",\r\n    placeholder: \"Date\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  const refDatePicker = React.createRef();\r\n\r\n  /**\r\n    * States\r\n    ============================================================================ */\r\n  // const [isOpen, setIsOpen] = useState(false);\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  let fp = null; // flatPicker instance\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    fp = flatpickr(refDatePicker.current, props.options);\r\n\r\n    return () => {\r\n      // on unmount\r\n      fp.destroy();\r\n      fp = null;\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (fp === null) return;\r\n\r\n  //   console.log(\"isOpen:\", isOpen);\r\n\r\n  //   // isOpen ? fp.open() : fp.close();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [isOpen]);\r\n\r\n  // useEffect(() => {\r\n  //   if (fp !== null) return;\r\n\r\n  //   fp = flatpickr(refDatePicker.current, props.options);\r\n\r\n  //   // eslint-disable-next-line\r\n  // });\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    datePicker: yup.string().required(t(\"Date is required\")),\r\n  });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <InputGroup>\r\n      <Form.Control\r\n        type=\"string\"\r\n        placeholder={props.placeholder}\r\n        aria-describedby=\"inputGroupPrepend\"\r\n        ref={refDatePicker}\r\n        name=\"datePicker\"\r\n        autoComplete=\"off\"\r\n        value={values.datePicker}\r\n        onChange={handleChange}\r\n        isInvalid={!!errors.datePicker && touched.datePicker}\r\n      />\r\n      <InputGroup.Append>\r\n        <InputGroup.Text\r\n          onClick={() => {\r\n            // console.log(\"click\");\r\n            if (fp !== null) fp.open();\r\n\r\n            // setIsOpen(!isOpen);\r\n          }}\r\n          style={{\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <DateRange style={{ color: \"var(--dark)\" }} />\r\n        </InputGroup.Text>\r\n      </InputGroup.Append>\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        {errors.datePicker}\r\n      </Form.Control.Feedback>\r\n    </InputGroup>\r\n  );\r\n\r\n  /**\r\n     * Formik return\r\n     ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        datePicker: props.value,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"flatpickr/dist/themes/material_green.css\";\r\nimport \"./DatePicker.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { Form, InputGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import Flatpickr from \"react-flatpickr\";\r\n// eslint-disable-next-line\r\n// import { Latvian } from \"flatpickr/dist/l10n/lv.js\";\r\n// import { DateRange } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\nimport Flatpickr from \"./DatePickerWrapper\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DatePicker\",\r\n    request: \"get something\",\r\n    value: \"\",\r\n    onChange: () => {},\r\n    placeholder: \"Date\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  // const [placeholder, setPlaceholder] = useState(props.placeholder);\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  // const refFlatpickr = React.createRef();\r\n\r\n  // Flatpickr(myElem, {\r\n  //   locale: Latvian, // locale for this instance only\r\n  // });\r\n\r\n  // Flatpickr.localize(Latvian);\r\n  // Flatpickr.localize(Flatpickr.l10ns.lv);\r\n  // flatpickr(\"mySelector\");\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  // const schema = yup.object({\r\n  //   dateStart: yup.string().required(t(\"Start date is required\")),\r\n  // });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  // const onSubmit = (data) => {\r\n  //   console.log(data);\r\n  // };\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <Flatpickr\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      options={{\r\n        locale: language,\r\n        showMonths: 1,\r\n        inline: false,\r\n        shorthandCurrentMonth: false,\r\n        allowInput: true,\r\n        clickOpens: false,\r\n        monthSelectorType: \"static\",\r\n        altInput: true,\r\n        altFormat: t(\"Y-m-d\"),\r\n        dateFormat: \"Y-m-d\", // \"d.m.Y\",\r\n        // dateFormat: \"Y-m-d\",\r\n        // minDate: new Date().fp_incr(-7),\r\n        maxDate: \"today\",\r\n        // mode: \"range\",\r\n        defaultDate: props.value,\r\n        onChange: function (selectedDates, dateStr, instance) {\r\n          console.log(selectedDates, dateStr, instance);\r\n          props.onChange(dateStr);\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"react-calendar/dist/Calendar.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Col, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search as SearchIcon, Replay as ReplayIcon } from \"@material-ui/icons\";\r\n// import Autosuggest from \"react-autosuggest\";\r\n// import Calendar from \"react-calendar\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n// import { useStickyState } from \"../../utils/state\";\r\nimport DatePicker from \"../datePicker\";\r\n// import SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DateRangePicker\",\r\n    request: \"find currencies\",\r\n    caption: \"Period of time\",\r\n    captionStartDate: \"Start date\",\r\n    captionEndDate: \"End date\",\r\n    captionUpdate: \"Update\",\r\n    onSubmit: () => {},\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { search, dateRangeStart, dateRangeEnd } = props.barrelGetters;\r\n  const { setSearch, setDateRangeStart, setDateRangeEnd } = props.barrelSetters;\r\n  const {\r\n    getTransactions,\r\n    formatDate,\r\n    clearRequestStatus,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /** \r\n     * Hooks\r\n     ============================================================================ */\r\n  // const [suggestions, setSuggestions] = useStickyState([], \"suggestions\");\r\n\r\n  /**\r\n     * Create refs\r\n     ============================================================================ */\r\n  const refSearch = React.createRef();\r\n\r\n  /**\r\n     * Clear refs\r\n     ============================================================================ */\r\n  useEffect(() => {\r\n    const tempRefSearch = refSearch.current;\r\n    return () => {\r\n      if (tempRefSearch !== null && search !== tempRefSearch.value)\r\n        setSearch(tempRefSearch.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    dateStart: yup.string().required(t(\"Date start is required\")),\r\n    dateEnd: yup.string().required(t(\"Date end is required\")),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const onSubmit = () => {\r\n    getTransactions(1);\r\n  };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const DateRangePickerForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * Caption: Period of time\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          <Form.Group\r\n            as={Col}\r\n            controlId=\"formGridPeriodOfTime\"\r\n            style={{ margin: \"0\", padding: \"0 0\" }}\r\n          >\r\n            <Form.Label>{props.caption}</Form.Label>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        {/**\r\n         * Date start / Date end\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          {/**\r\n           * Date start\r\n           */}\r\n          <Form.Group\r\n            as={Col}\r\n            style={{ margin: \"0\", padding: \"0\" }}\r\n            controlId=\"validationFormikDateStart\"\r\n          >\r\n            <DatePicker\r\n              name=\"dateStart\"\r\n              value={values.dateStart}\r\n              onChange={(data) => {\r\n                // console.log(data);\r\n                setDateRangeStart(data);\r\n              }}\r\n              isInvalid={!!errors.dateStart && touched.dateStart}\r\n              placeholder={props.captionStartDate}\r\n              {...args}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.dateStart}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          {/**\r\n           * Dash\r\n           */}\r\n          <span style={{ margin: \"0\", padding: \"0.4rem 0.5rem\" }}>-</span>\r\n\r\n          {/**\r\n           * Date end\r\n           */}\r\n          <Form.Group\r\n            as={Col}\r\n            style={{ padding: \"0 0\" }}\r\n            controlId=\"validationFormikDateEnd\"\r\n          >\r\n            <DatePicker\r\n              name=\"dateEnd\"\r\n              value={values.dateEnd}\r\n              onChange={(data) => {\r\n                // console.log(data);\r\n                setDateRangeEnd(data);\r\n              }}\r\n              isInvalid={!!errors.dateEnd && touched.dateEnd}\r\n              placeholder={props.captionEndDate}\r\n              {...args}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.dateEnd}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        {/**\r\n         * Update\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onSubmit}\r\n            className=\"button-transparent\"\r\n            style={{ margin: \"-0.5rem 0 0 0\", padding: \"0\" }}\r\n          >\r\n            <ReplayIcon className=\"sm\" style={{ color: \"var(--dark)\" }} />\r\n            <span\r\n              style={{\r\n                margin: \"0 0.5rem\",\r\n              }}\r\n            >\r\n              {props.captionUpdate}\r\n            </span>\r\n          </button>\r\n        </Form.Row>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n     * Formik return\r\n     ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={DateRangePickerForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        dateStart: dateRangeStart,\r\n        dateEnd: dateRangeEnd,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { ListGroup, Badge } from \"react-bootstrap\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { ArrowRightAlt } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\nimport DateRangePicker from \"../dateRangePicker\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    request: \"get transactions\",\r\n    namespace: \"Transactions\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    transactions,\r\n    countTransactions,\r\n    activePageTransactions,\r\n    transactionsPerPage,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const {\r\n    getTransactions,\r\n    findTransactions,\r\n    showRequestStatus,\r\n    format,\r\n    formatDate,\r\n    formatPerCent,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageTransactions > 1 ? activePageTransactions - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageTransactions <\r\n          Math.ceil(countTransactions / transactionsPerPage)\r\n            ? activePageTransactions + 1\r\n            : Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getTransactions(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      header={false}\r\n      maxWidthBody=\"700px\"\r\n    >\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <Search\r\n          advancedSearch={false}\r\n          placeholder={t(\"Find transactions...\")}\r\n          captionAdvancedSearch={t(\"Advanced search\")}\r\n          onSubmit={findTransactions}\r\n          {...args}\r\n        />\r\n        <br />\r\n        <DateRangePicker\r\n          caption={t(\"Period of time\")}\r\n          captionStartDate={t(\"Start date\")}\r\n          captionEndDate={t(\"End date\")}\r\n          captionUpdate={t(\"Update\")}\r\n          {...args}\r\n        />\r\n      </div>\r\n      <ListGroup variant=\"flush\">\r\n        {transactions !== null &&\r\n          transactions.map((transaction, keyTransactions) => {\r\n            cnt++;\r\n\r\n            const {\r\n              // business_description,\r\n              // business_id,\r\n              // business_image,\r\n              // business_link,\r\n              // business_status,\r\n              business_title,\r\n              comment,\r\n              conv_amount,\r\n              created,\r\n              // currency,\r\n              // exchange_rate,\r\n              sender_firstname,\r\n              sender_lastname,\r\n              recipient_firstname,\r\n              recipient_lastname,\r\n              // purpose_description,\r\n              purpose_id,\r\n              // purpose_image,\r\n              // purpose_link,\r\n              // purpose_status,\r\n              purpose_title,\r\n              recipient_id,\r\n              roles,\r\n              share,\r\n              share_per_cent,\r\n              sender_id,\r\n              // sender_status,\r\n              // recipient_status,\r\n              from_account,\r\n              to_account,\r\n              type,\r\n            } = transaction;\r\n\r\n            const i_am_sender = sender_id === accountNumber;\r\n            const i_am_recipient = recipient_id === accountNumber;\r\n            const t_from_account = t(from_account);\r\n            const t_to_account = t(to_account);\r\n\r\n            const roles_available =\r\n              roles !== null && roles !== \"-\" && typeof roles !== \"undefined\";\r\n            const arrRoles = roles_available ? roles.split(\",\") : [];\r\n\r\n            const shares_available =\r\n              typeof share !== \"undefined\" && share !== null && share !== \"-\";\r\n\r\n            if (type === \"transfer U2S\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions}>\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n\r\n                  <Trans\r\n                    i18nKey=\"Transactions:fromAccountToAccount\"\r\n                    t_from_account={t_from_account}\r\n                    t_to_account={t_to_account}\r\n                  >\r\n                    {{ t_from_account }}{\" \"}\r\n                    <ArrowRightAlt style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                    {{ t_to_account }}\r\n                  </Trans>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions}>\r\n                  {i_am_recipient ? (\r\n                    <>\r\n                      {sender_firstname} {sender_lastname}\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {recipient_firstname} {recipient_lastname}\r\n                    </>\r\n                  )}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  {comment !== \"\" && <br />}\r\n                  {comment}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer V2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions}>\r\n                  {t(\"Daily allowance\")}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2B\") {\r\n              const sender = !i_am_sender ? (\r\n                <>\r\n                  {sender_firstname} {sender_lastname}\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              );\r\n              return (\r\n                <ListGroup.Item key={keyTransactions}>\r\n                  {sender}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  {!i_am_sender && <br />}\r\n                  {purpose_id}\r\n                  {comment !== \"\" && comment !== null && (\r\n                    <>\r\n                      <br />\r\n                      {comment}\r\n                    </>\r\n                  )}\r\n                  <br />\r\n                  {business_title} &middot; {purpose_title}\r\n                  {roles_available && (\r\n                    <>\r\n                      <br />\r\n                      {arrRoles.map((role, key) => {\r\n                        return (\r\n                          <span key={key}>\r\n                            {\" \"}\r\n                            <Badge pill variant=\"secondary\">\r\n                              {role}\r\n                            </Badge>\r\n                          </span>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  )}{\" \"}\r\n                  {shares_available && (\r\n                    <>\r\n                      <br />\r\n                      {share} {t(\"shares\")} ({formatPerCent(share_per_cent)})\r\n                    </>\r\n                  )}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n\r\n              // TODO: check if this works\r\n            } else {\r\n              console.log(\"Unknown transfer type:\", type);\r\n\r\n              return <></>;\r\n            }\r\n          })}\r\n      </ListGroup>\r\n\r\n      {showRequestStatus(\r\n        \"get transactions / SELECT transactions\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No transactions\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <br />\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countTransactions}\r\n        itemsPerPage={transactionsPerPage}\r\n        active={activePageTransactions}\r\n        onClick={onPageSelect}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Toast, Badge } from \"react-bootstrap\";\r\nimport { Settings } from \"@material-ui/icons\";\r\nimport _ from \"lodash\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Shareholder\",\r\n    request: \"change share\",\r\n    purpose: null,\r\n    shareholder: null,\r\n    closeButton: true,\r\n    rangeControl: true,\r\n    sharePerCent: null,\r\n    businessTitle: null,\r\n    purposeTitle: null,\r\n    businessOwnerFirstname: null,\r\n    businessOwnerLastname: null,\r\n    sharesCreated: null,\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { purposeShareholders } = props.barrelGetters;\r\n  const { setPurposeShareholders } = props.barrelSetters;\r\n  const { sendRequest, formatPerCent, formatDate } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const [userQuery, setUserQuery] = useState(props.share);\r\n  const delayedQuery = useRef(_.debounce((q) => sendQuery(q), 2000)).current;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const onChange = (e) => {\r\n    setUserQuery(e.target.value);\r\n    delayedQuery(e.target.value);\r\n  };\r\n\r\n  const onClose = () => {\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    return sendRequest({ req: \"remove shareholder\", data });\r\n  };\r\n\r\n  const sendQuery = (delayedQuery) => {\r\n    const ps = purposeShareholders;\r\n    ps[props.id].share = delayedQuery;\r\n    setPurposeShareholders(JSON.stringify(ps));\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    data.share = delayedQuery;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const sharesLabelId = `sharesLabel${props.key}`;\r\n    return (\r\n      <Toast key={props.key} onClose={onClose} style={{ minWidth: \"100%\" }}>\r\n        <Toast.Header closeButton={props.closeButton}>\r\n          <strong className=\"mr-auto\">\r\n            {props.firstname} {props.lastname}{\" \"}\r\n            <small>\r\n              <Settings\r\n                hidden={true}\r\n                fontSize=\"small\"\r\n                style={{ color: \"var(--dark)\" }}\r\n              />\r\n            </small>\r\n          </strong>\r\n          <small>\r\n            <span id={sharesLabelId}>{userQuery}</span> {t(\"shares\")}\r\n          </small>\r\n        </Toast.Header>\r\n        <Toast.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formRoles\">\r\n              <div>\r\n                {props.roles.map((role, key) => {\r\n                  return (\r\n                    <span key={key}>\r\n                      <Badge pill variant=\"secondary\">\r\n                        {role}\r\n                      </Badge>{\" \"}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Form.Group>\r\n\r\n            {props.rangeControl && (\r\n              <Form.Group controlId=\"formBasicRange\">\r\n                <Form.Control\r\n                  type=\"range\"\r\n                  custom\r\n                  variant=\"light\"\r\n                  // value={share}\r\n                  defaultValue={userQuery}\r\n                  // value={userQuery}\r\n                  min={1}\r\n                  max={1000}\r\n                  step={1}\r\n                  // ref={this.input}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            )}\r\n          </Form>\r\n          <span>\r\n            {props.sharePerCent !== null && formatPerCent(props.sharePerCent)}{\" \"}\r\n            {props.businessTitle !== null && props.businessTitle}{\" \"}\r\n            {props.businessTitle !== null && props.purposeTitle !== null && (\r\n              <> &middot; </>\r\n            )}\r\n            {props.purposeTitle !== null && props.purposeTitle}{\" \"}\r\n          </span>\r\n          {props.sharesCreated !== null && (\r\n            <>\r\n              <br />\r\n              {formatDate(props.sharesCreated, {\r\n                month: \"long\",\r\n                day: \"numeric\",\r\n                year: \"numeric\",\r\n              })}\r\n            </>\r\n          )}{\" \"}\r\n          {(props.businessOwnerFirstname !== null ||\r\n            props.businessOwnerLastname !== null) && <br />}\r\n          {props.businessOwnerFirstname !== null &&\r\n            props.businessOwnerFirstname}{\" \"}\r\n          {props.businessOwnerLastname !== null && props.businessOwnerLastname}{\" \"}\r\n        </Toast.Body>\r\n      </Toast>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Form, InputGroup, Button, Table, ListGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n// import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\nimport Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Search from \"../search\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    request: \"get shares\",\r\n    namespace: \"Shares\",\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    shares,\r\n    countShares,\r\n    activePageShares,\r\n    sharesPerPage,\r\n    // accountNumber,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  // const {  } = props.barrelSetters;\r\n  const {\r\n    getShares,\r\n    // getRequestStatus,\r\n    showRequestStatus,\r\n    findShares,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onPageSelect = (number) => {\r\n    console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageShares > 1 ? activePageShares - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageShares < Math.ceil(countShares / sharesPerPage)\r\n            ? activePageShares + 1\r\n            : Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getShares(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      header={false}\r\n      maxWidthBody=\"700px\"\r\n    >\r\n      <Search\r\n        advancedSearch={false}\r\n        placeholder={t(\"Find shares...\")}\r\n        captionAdvancedSearch={t(\"Advanced search\")}\r\n        onSubmit={findShares}\r\n        {...args}\r\n      />\r\n      <br />\r\n      {shares !== null &&\r\n        shares.map((share, keyShares) => {\r\n          cnt++;\r\n\r\n          const {\r\n            // business_description,\r\n            // business_id,\r\n            // business_image,\r\n            // business_link,\r\n            // business_status,\r\n            business_title,\r\n            owner_firstname,\r\n            owner_lastname,\r\n            // owner_status,\r\n            // owner_uid,\r\n            // purpose_description,\r\n            purpose_id,\r\n            // purpose_image,\r\n            // purpose_link,\r\n            // purpose_status,\r\n            purpose_title,\r\n            shareholder_id,\r\n            shares_created,\r\n            // shares_description,\r\n            share_per_cent,\r\n            shares_roles,\r\n            shares_share,\r\n            // shares_status,\r\n            // shares_title,\r\n          } = share;\r\n\r\n          const arrRoles = shares_roles !== null ? shares_roles.split(\",\") : [];\r\n          // const content = `${owner_firstname} ${owner_lastname} / ${formatDate(\r\n          //   shares_created\r\n          // )}`;\r\n\r\n          // console.log(\"keyShares:\", keyShares);\r\n\r\n          return (\r\n            <Shareholder\r\n              {...args}\r\n              key={keyShares}\r\n              id={keyShares}\r\n              shareholder={shareholder_id}\r\n              purpose={purpose_id}\r\n              firstname={userData.firstname}\r\n              lastname={userData.lastname}\r\n              share={shares_share}\r\n              roles={arrRoles}\r\n              closeButton={false}\r\n              rangeControl={false}\r\n              sharePerCent={share_per_cent}\r\n              businessOwnerFirstname={owner_firstname}\r\n              businessOwnerLastname={owner_lastname}\r\n              businessTitle={business_title}\r\n              purposeTitle={purpose_title}\r\n              sharesCreated={shares_created}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {showRequestStatus(\r\n        \"get shares / SELECT shares\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No shares\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"md\"\r\n        countItems={countShares}\r\n        itemsPerPage={sharesPerPage}\r\n        active={activePageShares}\r\n        onClick={onPageSelect}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { cloneElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\nimport { ChevronRight, ExpandMore } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"AccordionCard\",\r\n    header: true,\r\n    title: \"Untitled\",\r\n    eventkey: \"untitled\",\r\n    active: \"\",\r\n    paddingBody: \"0\",\r\n    onClick: () => {},\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const CustomToggle = ({ children, eventKey }) => {\r\n    // const currentEventKey = React.useContext(AccordionContext);\r\n\r\n    const decoratedOnClick = useAccordionToggle(eventKey, () => {\r\n      console.log(\"totally custom!\", eventKey);\r\n      props.onClick(eventKey);\r\n    });\r\n    // console.log(props.active);\r\n\r\n    const isCurrentEventKey = props.active === eventKey;\r\n\r\n    if (isCurrentEventKey) {\r\n      return (\r\n        <div onClick={decoratedOnClick}>\r\n          {children}\r\n          <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n            <ExpandMore style={{ color: \"var(--dark)\", fontSize: \"2rem\" }} />\r\n          </span>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div onClick={decoratedOnClick}>\r\n          {children}\r\n          <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n            <ChevronRight style={{ color: \"var(--dark)\", fontSize: \"2rem\" }} />\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    let key = 0;\r\n    return (\r\n      <Card style={{ border: 0, backgroundColor: \"Transparent\" }}>\r\n        {props.header && (\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey={props.eventkey}\r\n            style={{\r\n              backgroundColor: \"Transparent\",\r\n              padding: \"12px 2px 12px 2px\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"20px\",\r\n            }}\r\n          >\r\n            <CustomToggle eventKey={props.eventkey}>{props.title}</CustomToggle>\r\n          </Accordion.Toggle>\r\n        )}\r\n        <Accordion.Collapse eventKey={props.eventkey}>\r\n          <Card.Body style={{ padding: props.paddingBody }}>\r\n            {React.Children.map(args.children, (child) => {\r\n              if (typeof child !== \"object\") {\r\n                return child;\r\n              } else {\r\n                key++;\r\n                return cloneElement(child, {\r\n                  ...args,\r\n                  styles: null,\r\n                  key: key,\r\n                });\r\n              }\r\n            })}\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Badge } from \"react-bootstrap\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n  * Default export\r\n  ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Balance\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { userData } = props.barrelGetters;\r\n  const { setAccountType, setRedirectTo } = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const userDataParsed = userData;\r\n\r\n  const available =\r\n    userDataParsed !== null\r\n      ? format(\r\n          userDataParsed.acc_curr +\r\n            userDataParsed.acc_cred +\r\n            userDataParsed.acc_save\r\n        )\r\n      : null;\r\n  let acc_curr =\r\n    userDataParsed !== null ? format(userDataParsed.acc_curr) : null;\r\n  let acc_cred =\r\n    userDataParsed !== null ? format(userDataParsed.acc_cred) : null;\r\n  let acc_save =\r\n    userDataParsed !== null ? format(userDataParsed.acc_save) : null;\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n\r\n  /**\r\n   *\r\n   * @param {*} type\r\n   */\r\n  const onAccountTypeSelected = (type) => {\r\n    setAccountType(type);\r\n    setRedirectTo(\"/transfer\");\r\n  };\r\n\r\n  const getJSX = () => {\r\n    return (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        header={false}\r\n        maxWidthBody=\"700px\"\r\n      >\r\n        <Form noValidate>\r\n          <Form.Group>\r\n            <Form.Label>{t(\"Available\")}</Form.Label>\r\n\r\n            <Form.Text>\r\n              <div style={{ fontSize: \"3em\" }}>{available}</div>\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <div style={{}}>{t(\"Current account\")}</div>\r\n                <span className=\"\" onClick={() => {}}>\r\n                  <Badge variant=\"Light\">{acc_curr}</Badge>\r\n                </span>\r\n              </li>\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <div style={{}}>{t(\"Credit account\")}</div>\r\n\r\n                <span className=\"\" onClick={() => {}}>\r\n                  <Badge variant=\"Light\">{acc_cred}</Badge>\r\n                </span>\r\n              </li>\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <div style={{}}>{t(\"Savings account\")}</div>\r\n                <span className=\"\" onClick={() => {}}>\r\n                  <Badge variant=\"Light\">{acc_save}</Badge>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </Form.Group>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FileCopy as FileCopyIcon } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Component\", value: \"\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { copyToClipboard } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refCopyableField = useRef(null);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <>\r\n        <span\r\n          style={{\r\n            position: \"relative\",\r\n            display: \"block\",\r\n            overflow: \"auto\",\r\n            // wordBreak: \"break-all\",\r\n            // whiteSpace: \"nowrap\",\r\n          }}\r\n        >\r\n          <input\r\n            ref={refCopyableField}\r\n            className=\"no-focus\"\r\n            readOnly\r\n            style={{\r\n              border: 0,\r\n              width: \"10rem\",\r\n              background: \"Transparent\",\r\n            }}\r\n            type=\"text\"\r\n            defaultValue={props.value}\r\n          />\r\n\r\n          {document.queryCommandSupported(\"copy\") && (\r\n            <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n              <button\r\n                className=\"button-transparent\"\r\n                onClick={() => copyToClipboard(refCopyableField)}\r\n              >\r\n                <FileCopyIcon style={{ color: \"var(--dark)\" }} />\r\n              </button>\r\n            </span>\r\n          )}\r\n        </span>\r\n      </>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Transactions from \"../transactions\";\r\nimport Shares from \"../shares\";\r\nimport AccordionCard from \"../accordionCard\";\r\nimport Balance from \"../balance\";\r\nimport CopyableField from \"../copyableField\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"AccountContainer\", paddingBody: \"20px 0 0 0\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber, accordionView } = props.barrelGetters;\r\n  const {\r\n    setRedirectTo,\r\n    setAccordionView,\r\n    setResponseProps,\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const { getAccountData, getTransactions, getShares } = props.barrelFunctions;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n   *\r\n   * @param {*} view\r\n   */\r\n  const toggleView = (view) => {\r\n    const newView = accordionView !== view ? view : null;\r\n\r\n    setResponseProps(null);\r\n    setAccordionView(newView);\r\n    setClearRefs(true);\r\n\r\n    if (newView !== null) {\r\n      switch (view) {\r\n        case \"balance\":\r\n          getAccountData();\r\n          break;\r\n\r\n        case \"transactions\":\r\n          getTransactions(1);\r\n          break;\r\n\r\n        case \"shares\":\r\n          getShares(1);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return (\r\n    <>\r\n      <Accordion defaultActiveKey={accordionView}>\r\n        {/**\r\n         * Account number\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Account number\")}\r\n          eventkey=\"accountNumber\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"accountNumber\")}\r\n        >\r\n          <CopyableField value={accountNumber} {...args} />\r\n        </AccordionCard>\r\n\r\n        {/**\r\n         * Balance\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Balance\")}\r\n          eventkey=\"balance\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"balance\")}\r\n        >\r\n          <Balance {...args} />\r\n        </AccordionCard>\r\n\r\n        {/**\r\n         * Transactions\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Transactions\")}\r\n          eventkey=\"transactions\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"transactions\")}\r\n        >\r\n          <Transactions {...args} />\r\n        </AccordionCard>\r\n\r\n        {/**\r\n         * Shares\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Shares\")}\r\n          eventkey=\"shares\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"shares\")}\r\n        >\r\n          <Shares {...args} />\r\n        </AccordionCard>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"transfer U2S\",\r\n    namespace: \"Transfer\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    accountType,\r\n    language,\r\n    currencyAbbr,\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userData = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      if (tempRefAmount !== null && transferAmount !== tempRefAmount.value)\r\n        setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toAccount: yup.string().required(t(\"To Account is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} Form data\r\n   */\r\n  const transferToSelf = (data) => {\r\n    // console.log(\"TRANSFER U2S DATA:\", data);\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n\r\n    sendRequest({ req: props.request, data: data });\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToSelf(data);\r\n  };\r\n\r\n  const TransferToSelfForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n      headerPadding=\"20px 20px 10px 20px\"\r\n      bodyPadding=\"20px 20px 10px 20px\"\r\n      border=\"0\"\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * To account\r\n         */}\r\n        <Form.Group controlId=\"validationToAccount\">\r\n          <Form.Label>{t(\"To account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"toAccount\"\r\n            value={values.toAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferToAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.toAccount && touched.toAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option value=\"acc_curr\" hidden={accountType === \"acc_curr\"}>\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option value=\"acc_cred\" hidden={accountType === \"acc_cred\"}>\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option value=\"acc_save\" hidden={accountType === \"acc_save\"}>\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.toAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setTransferAmount(e.target.value);\r\n              }}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"transfer U2S\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={TransferToSelfForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        fromAccount: transferFromAccount,\r\n        toAccount: transferToAccount,\r\n        amount: transferAmount,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\nimport ModalMessage from \"../modalMessage\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"TanInput\",\r\n    request: \"submit tan\",\r\n    show: false,\r\n    size: \"lg\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { tanRequired, userData, tanInputTAN } = props.barrelGetters;\r\n  const { setTanRequired, setTanInputTAN } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refTAN = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    const tempRef = refTAN.current;\r\n    return () => {\r\n      if (tempRef !== null && tanInputTAN !== tempRef.value)\r\n        setTanInputTAN(tempRef.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    tan: yup.string().required(t(\"TAN is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    setTanRequired(false);\r\n    data.email = userData.email;\r\n    setTanInputTAN(\"\");\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div>\r\n        {t(\"A transaction number has been sent to your email account.\")}\r\n      </div>\r\n      <br />\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFormikTAN\">\r\n          <Form.Label>{t(\"TAN\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"tan\"\r\n              autoFocus\r\n              ref={refTAN}\r\n              value={values.tan}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.tan && touched.tan}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.tan}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  const message = (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        tan: tanInputTAN,\r\n      }}\r\n    />\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        message={message}\r\n        show={tanRequired}\r\n        size={props.size}\r\n        centered={true}\r\n        onHide={() => setTanRequired(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport TanInput from \"../tanInput\";\r\n\r\n/**\r\n * Component: TransferToPerson\r\n */\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2U\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const [transferDescriptionTemp, setTransferDescriptionTemp] = useStickyState(\r\n  //   \"\",\r\n  //   \"transferDescriptionTemp\"\r\n  // );\r\n\r\n  const refPersonalID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPersonalID = refPersonalID.current;\r\n    const tempRefDescription = refDescription.current;\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      if (\r\n        tempRefPersonalID !== null &&\r\n        transferToUID !== tempRefPersonalID.value\r\n      )\r\n        setTransferToUID(tempRefPersonalID.value);\r\n\r\n      if (\r\n        tempRefDescription !== null &&\r\n        transferDescription !== tempRefDescription.value\r\n      )\r\n        setTransferDescription(tempRefDescription.value);\r\n\r\n      if (tempRefAmount !== null && transferAmount !== tempRefAmount.value)\r\n        setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toPersonalID: yup\r\n      .string()\r\n      .required(t(\"Recipients Personal ID is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Personal ID Regex\")),\r\n        t(\"Wrong Personal ID format\")\r\n      ),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToPerson = (data) => {\r\n    // console.log(\"TRANSFER U2U DATA:\", data);\r\n    data.transferType = props.request;\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  // return <>test</>;\r\n\r\n  const onSubmit = (data) => {\r\n    transferToPerson(data);\r\n  };\r\n\r\n  const TransferToPersonForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n      headerPadding=\"20px 20px 10px 20px\"\r\n      bodyPadding=\"20px 20px 10px 20px\"\r\n      border=\"0\"\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Recipients Personal ID\r\n         */}\r\n        <Form.Group controlId=\"validationFormikToPersonalID\">\r\n          <Form.Label>{t(\"To Personal ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={t(\"XXXXXX-XXXXX\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"toPersonalID\"\r\n              ref={refPersonalID}\r\n              value={values.toPersonalID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.toPersonalID && touched.toPersonalID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.toPersonalID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Transfer Description\r\n         */}\r\n        <Form.Group controlId=\"validationFormikDescription\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Button: Next */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToPersonForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          toPersonalID: transferToUID,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport TanInput from \"../tanInput\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2B\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPurposeID = refPurposeID.current;\r\n    const tempRefDescription = refDescription.current;\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      if (\r\n        tempRefPurposeID !== null &&\r\n        transferToPurpose !== tempRefPurposeID.value\r\n      )\r\n        setTransferToPurpose(tempRefPurposeID.value);\r\n\r\n      if (\r\n        tempRefDescription !== null &&\r\n        transferDescription !== tempRefDescription.value\r\n      )\r\n        setTransferDescription(tempRefDescription.value);\r\n\r\n      if (tempRefAmount !== null && transferAmount !== tempRefAmount.value)\r\n        setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    // businessTitle: yup\r\n    //   .string()\r\n    //   .required(t(\"Recipients Business ID is required\")),\r\n    purposeID: yup.string().required(t(\"Purpose ID is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToBusiness = (data) => {\r\n    data.transferType = props.request;\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.currency = currencyAbbr;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // data.amount = parseFloat(data.amount);\r\n    // data.amount = Number(data.amount.replace(/[^0-9.-]+/g, \"\"));\r\n\r\n    data.amount = [data.amount];\r\n    data.currency = [data.currency];\r\n    data.purposeID = [data.purposeID];\r\n    data.fromAccount = [data.fromAccount];\r\n\r\n    // console.log(\"data:\", data);\r\n    // return;\r\n\r\n    // const transfers = [data];\r\n\r\n    // setTransferRequest(\r\n    //   JSON.stringify({ transferType: props.request, transfers })\r\n    // );\r\n    setTransferRequest(JSON.stringify(data));\r\n\r\n    data = { email: data.email, language: data.language };\r\n\r\n    // console.log(\"data:\", data);\r\n    // return;\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToBusiness(data);\r\n  };\r\n\r\n  const TransferToBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n      headerPadding=\"20px 20px 10px 20px\"\r\n      bodyPadding=\"20px 20px 10px 20px\"\r\n      border=\"0\"\r\n    >\r\n      {/* From account */}\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Business ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"businessTitle\"\r\n              value={values.businessTitle}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.businessTitle}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n        */}\r\n\r\n        {/* To purpose */}\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Purpose ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"PXXXXXXXXXXXXXXXXXXXXXXX\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"purposeID\"\r\n              ref={refPurposeID}\r\n              value={values.purposeID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.purposeID && touched.purposeID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.purposeID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Field: Description */}\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/* Amount */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"string\" // do NOT change to number!!\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          purposeID: transferToPurpose,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"BusinessRegistration\",\r\n    request: \"register business\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refBusinessTitle = React.createRef();\r\n  const refBusinessDescription = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefBusinessTitle = refBusinessTitle.current;\r\n    const tempRefBusinessDescription = refBusinessDescription.current;\r\n    return () => {\r\n      if (\r\n        tempRefBusinessTitle !== null &&\r\n        businessRegistrationAddTitle !== tempRefBusinessTitle.value\r\n      )\r\n        setBusinessRegistrationAddTitle(tempRefBusinessTitle.value);\r\n\r\n      if (\r\n        tempRefBusinessDescription !== null &&\r\n        businessRegistrationAddDescription !== tempRefBusinessDescription.value\r\n      )\r\n        setBusinessRegistrationAddDescription(tempRefBusinessDescription.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [addOwnerAsShareholder, setAddOwnerAsShareholder] = useStickyState(\r\n  //   false,\r\n  //   \"addOwnerAsShareholder\"\r\n  // );\r\n\r\n  const schema = yup.object({\r\n    businessTitle: yup\r\n      .string()\r\n      .required(t(\"Business title is a required field\"))\r\n      .min(3, t(\"Business title too short\"))\r\n      .max(70, t(\"Business title too long\"))\r\n      .trim(),\r\n    businessDescription: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * On business registration\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n\r\n    // console.log(\"REGISTER BUSINESS DATA:\", data);\r\n\r\n    // onBusinessRegistration({ req: \"register business\", data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Business Title (Business ID) */}\r\n      <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n        <Form.Label>{t(\"Business Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"businessTitle\"\r\n            ref={refBusinessTitle}\r\n            value={values.businessTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.businessTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/* Business Description */}\r\n      <Form.Group controlId=\"businessDescription\">\r\n        <Form.Label>{t(\"Business Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"businessDescription\"\r\n          ref={refBusinessDescription}\r\n          value={values.businessDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={RegisterBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          businessTitle: businessRegistrationAddTitle,\r\n          businessDescription: businessRegistrationAddDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"PurposeRegistration\",\r\n    requestInsert: \"register purpose\",\r\n    requestUpdate: \"update purpose property\",\r\n    businessID: null,\r\n    purposeID: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    subcategory: \"\",\r\n    subcategory2: \"\",\r\n    keywords: \"\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"PURPOSE REGISTRATION PROPS:\", props);\r\n\r\n  const barrels = props;\r\n  const { businessID, purposeID, id } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    language,\r\n    // businessPurposes,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    // purposeRegistrationCategory,\r\n    // purposeRegistrationSubcategory,\r\n    // purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    // setBusinessPurposes,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n  } = barrels.barrelSetters;\r\n  const { getReviser, getWorkplace } = barrels.barrelFunctions;\r\n  const { onPurposeRegistration } = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeTitle = React.createRef();\r\n  const refPurposeDescription = React.createRef();\r\n  // const refPurposeCategory = React.createRef();\r\n  // const refPurposeSubcategory = React.createRef();\r\n  // const refPurposeSubcategory2 = React.createRef();\r\n  const refPurposeKeywords = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPurposeTitle = refPurposeTitle.current;\r\n    const tempRefPurposeDescription = refPurposeDescription.current;\r\n    const tempRefPurposeKeywords = refPurposeKeywords.current;\r\n    return () => {\r\n      if (\r\n        tempRefPurposeTitle !== null &&\r\n        purposeRegistrationTitle !== tempRefPurposeTitle.value\r\n      )\r\n        setPurposeRegistrationTitle(tempRefPurposeTitle.value);\r\n\r\n      if (\r\n        tempRefPurposeDescription !== null &&\r\n        purposeRegistrationDescription !== tempRefPurposeDescription.value\r\n      )\r\n        setPurposeRegistrationDescription(tempRefPurposeDescription.value);\r\n\r\n      if (\r\n        tempRefPurposeKeywords !== null &&\r\n        purposeRegistrationKeywords !== tempRefPurposeKeywords.value\r\n      )\r\n        setPurposeRegistrationKeywords(tempRefPurposeKeywords.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const schema = yup.object({\r\n    purposeTitle: yup\r\n      .string()\r\n      .required(t(\"Purpose title is a required field\"))\r\n      .min(3, t(\"Purpose title too short\"))\r\n      .max(70, t(\"Purpose title too long\"))\r\n      .trim(),\r\n    purposeDescription: yup.string().optional(),\r\n    // purposeCategory: yup\r\n    //   .string()\r\n    //   .required(t(\"Purpose category is a required field\"))\r\n    //   .max(70, t(\"Purpose category too long\"))\r\n    //   .trim(),\r\n    // purposeSubcategory: yup.string().optional(),\r\n    // purposeSubcategory2: yup.string().optional(),\r\n    purposeKeywords: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const RegisterPurpose = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.businessID = businessID;\r\n    data.id = id;\r\n    data.purposeID = purposeID;\r\n    data.uid = accountNumber;\r\n    data.language = language;\r\n\r\n    // console.log(\"REGISTER PURPOSE DATA:\", data);\r\n\r\n    onPurposeRegistration({\r\n      req: props.purposeID === null ? props.requestInsert : props.requestUpdate,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    RegisterPurpose(data);\r\n  };\r\n\r\n  const RegisterPurposeForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/*\r\n       * Purpose Title (Purpose ID)\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeID\">\r\n        <Form.Label>{t(\"Purpose Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"purposeTitle\"\r\n            ref={refPurposeTitle}\r\n            value={values.purposeTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeTitle && touched.purposeTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Description\r\n       */}\r\n      <Form.Group controlId=\"purposeDescription\">\r\n        <Form.Label>{t(\"Purpose Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"purposeDescription\"\r\n          ref={refPurposeDescription}\r\n          value={values.purposeDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Keywords\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeKeywords\">\r\n        <Form.Label>{t(\"Purpose Keywords\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeKeywords\"\r\n            ref={refPurposeKeywords}\r\n            value={values.purposeKeywords}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeKeywords && touched.purposeKeywords}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeKeywords}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Submit button\r\n       */}\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(props.purposeID === null ? \"Submit\" : \"Save\")}\r\n        request={\r\n          props.purposeID === null ? props.requestInsert : props.requestUpdate\r\n        }\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterPurposeForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        purposeTitle: purposeRegistrationTitle,\r\n        purposeDescription: purposeRegistrationDescription,\r\n        // purposeCategory: purposeRegistrationCategory,\r\n        // purposeSubcategory: purposeRegistrationSubcategory,\r\n        // purposeSubcategory2: purposeRegistrationSubcategory2,\r\n        purposeKeywords: purposeRegistrationKeywords,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"register shareholder\",\r\n    namespace: \"ShareholderRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const barrels = props;\r\n  const { purposeID } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber } = barrels.barrelGetters;\r\n  // const {} = barrels.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n  } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const thisRef = createRef();\r\n\r\n  const schema = yup.object({\r\n    // personalID: yup\r\n    //   .string()\r\n    //   .required(t(\"Personal ID is required\"))\r\n    //   .matches(\r\n    //     new RegExp(t(\"Personal ID Regex\")),\r\n    //     t(\"Wrong Personal ID format\")\r\n    //   ),\r\n    shareholderRoles: yup.string().optional(),\r\n    shares: yup\r\n      .number()\r\n      .typeError(t(\"Shares must be a number\"))\r\n      .required(t(\"Shares is required\"))\r\n      .min(1, t(\"Shares too few\"))\r\n      .max(1000, t(\"Shares too many\")),\r\n  });\r\n\r\n  /**\r\n   * Send shareholder registration request\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.purposeID = purposeID;\r\n\r\n    // console.log(\"REGISTER SHAREHOLDER DATA:\", data);\r\n\r\n    // onShareholderRegistration({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterShareholderForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* id=\"shareholderRegistrationForm\" */}\r\n      <Toast style={{ minWidth: \"100%\" }}>\r\n        {/*\r\n        <Toast.Header closeButton={false}>\r\n          <strong className=\"mr-auto\">{t(\"Add Shareholder\")}</strong>\r\n        </Toast.Header>\r\n        */}\r\n        <Toast.Body>\r\n          <Form.Group controlId=\"validationFormikShareholderPersonalID\">\r\n            <Form.Label>{t(\"Shareholder Personal ID\")}</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={t(\"XXXXXX-XXXXX\")}\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"personalID\"\r\n                value={values.personalID}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.personalID && touched.personalID}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.personalID}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          {/* Shareholder Roles */}\r\n          <Form.Group controlId=\"validationFormikShareholderRoles\">\r\n            <Form.Label>{t(\"Shareholder Roles\")}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"shareholderRoles\"\r\n              value={values.shareholderRoles}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.shareholderRoles && touched.shareholderRoles}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.shareholderRoles}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          {/* Shares */}\r\n          <Form.Group controlId=\"validationFormikShares\">\r\n            <Form.Label>{t(\"Shares\")}</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              min={1}\r\n              max={1000}\r\n              step={1}\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"shares\"\r\n              value={values.shares}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.shares && touched.shares}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.shares}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Toast.Body>\r\n      </Toast>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterShareholderForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        personalID: \"\",\r\n        shares: 1,\r\n        shareholderRoles: \"\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useRef } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Card,\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Add, Store, Edit, FileCopy as FileCopyIcon } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Dropzone from \"../dropzone\";\r\nimport BusinessRegistration from \"../businessRegistration\";\r\nimport PurposeRegistration from \"../purposeRegistration\";\r\nimport ShareholderRegistration from \"../shareholderRegistration\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\nimport CopyableField from \"../copyableField\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"MyBusiness\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    userBusinesses,\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes,\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    purposeShareholders,\r\n    // purposeID,\r\n    activePurposeData,\r\n    // language,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRedirectTo,\r\n    setResponseProps,\r\n    setBusinessPurposes,\r\n    setActiveBusiness,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    setActivePageBusinessPurposes,\r\n    setActivePurposeData,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationKeywords,\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    sendRequest,\r\n    showRequestStatus,\r\n    formatDate,\r\n    copyToClipboard,\r\n    findPurposes,\r\n  } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module constants\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n  const refBusinessID = useRef(null);\r\n  const refPurposeID = useRef(null);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Toggle business (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const ToggleBusiness = ({ eventKey, businessID }) => {\r\n    if (activeBusiness === eventKey) {\r\n      setActiveBusiness(null);\r\n      setActivePageBusinessPurposes(null);\r\n    } else {\r\n      setResponseProps(null);\r\n      getBusinessPurposes(businessID, eventKey, 1);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Toggle purpose (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const TogglePurpose = ({ eventKey, purposeID }) => {\r\n    setResponseProps(null);\r\n    getPurposeShareholders(purposeID, eventKey);\r\n  };\r\n\r\n  /**\r\n   * Create:\r\n   * - business menu\r\n   * - business purposes menu\r\n   */\r\n  let menuItems = [];\r\n  let purposes = [];\r\n  let cntBusinesses = 0;\r\n  let cntPurposes = 0;\r\n  let countShareholders = 0;\r\n  userBusinesses !== null &&\r\n    Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n      cntBusinesses++;\r\n      menuItems[keyBusiness] = [];\r\n      purposes[keyBusiness] = [];\r\n      businessPurposes !== null &&\r\n        Object.keys(businessPurposes).map((purpose, keyPurpose) => {\r\n          cntPurposes++;\r\n          if (\r\n            businessPurposes[purpose].business_id ===\r\n            userBusinesses[business].business_id\r\n          ) {\r\n            menuItems[keyBusiness][keyPurpose] = (\r\n              <ListGroup.Item\r\n                action\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n                style={{\r\n                  cursor: \"default\",\r\n                  // whiteSpace: \"nowrap\",\r\n                  overflow: \"auto\",\r\n                }}\r\n                onClick={() =>\r\n                  TogglePurpose({\r\n                    eventKey: keyPurpose,\r\n                    purposeID: businessPurposes[purpose].purpose_id,\r\n                  })\r\n                }\r\n              >\r\n                <span style={{ cursor: \"pointer\" }}>\r\n                  {businessPurposes[purpose].title}\r\n                </span>\r\n\r\n                <span style={{ paddingLeft: \"5px\", float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={(e) => {\r\n                      setPurposeRegistrationTitle(\r\n                        businessPurposes[purpose].title !== null\r\n                          ? businessPurposes[purpose].title\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationDescription(\r\n                        businessPurposes[purpose].description !== null\r\n                          ? businessPurposes[purpose].description\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationKeywords(\r\n                        businessPurposes[purpose].keywords !== null\r\n                          ? businessPurposes[purpose].keywords\r\n                          : \"\"\r\n                      );\r\n\r\n                      setActivePurposeData(\r\n                        JSON.stringify(businessPurposes[purpose])\r\n                      );\r\n                      setActiveBusinesPurpose(\"addPurpose\");\r\n                      e.stopPropagation();\r\n                    }}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </ListGroup.Item>\r\n            );\r\n\r\n            purposes[keyBusiness][keyPurpose] = (\r\n              <Tab.Pane\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n              >\r\n                <Accordion\r\n                  defaultActiveKey={\r\n                    activePurposeProperty !== null\r\n                      ? activePurposeProperty\r\n                      : \"purpose_id\" // \"shareholders\"\r\n                  }\r\n                >\r\n                  {/* Purpose ID */}\r\n                  <Card\r\n                    style={{\r\n                      border: \"0\",\r\n                      borderRadius: \"0\",\r\n                    }}\r\n                  >\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"purpose_id\"\r\n                      onClick={() => setActivePurposeProperty(\"purpose_id\")}\r\n                    >\r\n                      {t(\"Purpose ID\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"purpose_id\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        <Card.Text>\r\n                          <input\r\n                            ref={refPurposeID}\r\n                            className=\"no-focus\"\r\n                            readOnly\r\n                            style={{\r\n                              border: 0,\r\n                              width: \"15rem\",\r\n                              background: \"Transparent\",\r\n                            }}\r\n                            type=\"text\"\r\n                            defaultValue={businessPurposes[purpose].purpose_id}\r\n                          />\r\n                          {document.queryCommandSupported(\"copy\") && (\r\n                            <span\r\n                              style={{ float: \"right\", marginLeft: \"0.25rem\" }}\r\n                            >\r\n                              <button\r\n                                className=\"button-transparent\"\r\n                                onClick={() => copyToClipboard(refPurposeID)}\r\n                              >\r\n                                <FileCopyIcon\r\n                                  style={{ color: \"var(--dark)\" }}\r\n                                />\r\n                              </button>\r\n                            </span>\r\n                          )}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose shareholders */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"default\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"shareholders\"\r\n                      onClick={() => setActivePurposeProperty(\"shareholders\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Shareholders\")}\r\n                      </span>\r\n                      <span style={{ float: \"right\" }}>\r\n                        <Add\r\n                          onClick={(e) => {\r\n                            setActivePurposeProperty(\"addShareholder\");\r\n                            e.stopPropagation();\r\n                          }}\r\n                          fontSize=\"small\"\r\n                          style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                        />\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    {/* Toggle: Add shareholder */}\r\n                    <Accordion.Collapse eventKey=\"addShareholder\">\r\n                      <Card.Body>\r\n                        <ShareholderRegistration\r\n                          {...args}\r\n                          purposeID={businessPurposes[purpose].purpose_id}\r\n                        />\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n\r\n                    {/* Toggle: Shareholders list */}\r\n                    <Accordion.Collapse eventKey=\"shareholders\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        {typeof purposeShareholders !== \"undefined\" &&\r\n                          purposeShareholders !== null &&\r\n                          Object.keys(purposeShareholders).map(\r\n                            (shareholder, keyShareholder) => {\r\n                              if (\r\n                                purposeShareholders[shareholder].purpose_id ===\r\n                                businessPurposes[purpose].purpose_id\r\n                              ) {\r\n                                const { purpose_id } = purposeShareholders[\r\n                                  shareholder\r\n                                ];\r\n                                const {\r\n                                  shareholder_id,\r\n                                  firstname,\r\n                                  lastname,\r\n                                  // email,\r\n                                  roles,\r\n                                  share,\r\n                                } = purposeShareholders[shareholder];\r\n\r\n                                countShareholders++;\r\n\r\n                                const arrRoles =\r\n                                  roles !== null ? roles.split(\",\") : [];\r\n\r\n                                return (\r\n                                  <Shareholder\r\n                                    {...args}\r\n                                    key={keyShareholder}\r\n                                    id={keyShareholder}\r\n                                    shareholder={shareholder_id}\r\n                                    purpose={purpose_id}\r\n                                    firstname={firstname}\r\n                                    lastname={lastname}\r\n                                    share={share}\r\n                                    roles={arrRoles}\r\n                                  />\r\n                                );\r\n                              } else {\r\n                                return \"\"; // TODO: check if this works\r\n                              }\r\n                            }\r\n                          )}\r\n\r\n                        {showRequestStatus(\r\n                          \"get purpose shareholders / SELECT shares\",\r\n                          countShareholders,\r\n                          t(\"Loading shareholders...\"),\r\n                          t(\"No shareholders\"),\r\n                          \"finished\"\r\n                        )}\r\n\r\n                        {/* End shareholders list */}\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose status */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"productStatus\"\r\n                      onClick={() => setActivePurposeProperty(\"productStatus\")}\r\n                    >\r\n                      {t(\"Purpose Status\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"productStatus\">\r\n                      <Card.Body\r\n                        style={{ background: \"var(--white)\" }}\r\n                        onClick={(e) => {\r\n                          // console.log(\"Click\", e);\r\n\r\n                          const bp = businessPurposes;\r\n                          bp[purpose].status =\r\n                            businessPurposes[purpose].status === 0 ? 1 : 0;\r\n                          setBusinessPurposes(JSON.stringify(bp));\r\n\r\n                          let data = {};\r\n                          data.purpose_id =\r\n                            businessPurposes[purpose].purpose_id;\r\n                          data.purpose_status =\r\n                            businessPurposes[purpose].status;\r\n                          return sendRequest({\r\n                            req: \"change purpose status\",\r\n                            data,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Form>\r\n                          {typeof purposeShareholders === \"undefined\" ||\r\n                            (purposeShareholders === null && (\r\n                              <Form.Text>\r\n                                {t(\r\n                                  \"To publish, please add at least one shareholder\"\r\n                                )}\r\n                                <br />\r\n                                <br />\r\n                              </Form.Text>\r\n                            ))}\r\n\r\n                          {typeof purposeShareholders !== \"undefined\" &&\r\n                            purposeShareholders !== null && (\r\n                              <Form.Check\r\n                                type=\"switch\"\r\n                                custom\r\n                                disabled={\r\n                                  typeof purposeShareholders === \"undefined\" ||\r\n                                  purposeShareholders === null\r\n                                }\r\n                                label={t(\r\n                                  businessPurposes[purpose].status === 0\r\n                                    ? \"Not published\"\r\n                                    : \"Published\"\r\n                                )}\r\n                                checked={businessPurposes[purpose].status === 1}\r\n                                onChange={(e) => {\r\n                                  console.log(e);\r\n                                }}\r\n                              />\r\n                            )}\r\n                        </Form>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose title */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"default\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"title\"\r\n                      onClick={() => setActivePurposeProperty(\"title\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Title\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"title\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        <Card.Text>{businessPurposes[purpose].title}</Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose description\r\n                   */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"default\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"description\"\r\n                      onClick={() => setActivePurposeProperty(\"description\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Description\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"description\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].description}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Keywords\r\n                   */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"default\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"keywords\"\r\n                      onClick={() => setActivePurposeProperty(\"keywords\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Keywords\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"keywords\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].keywords}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* End of purpose properties */}\r\n                </Accordion>\r\n              </Tab.Pane>\r\n            );\r\n          }\r\n          countShareholders = 0;\r\n          return true;\r\n        });\r\n\r\n      return true;\r\n    });\r\n\r\n  const jsx = (\r\n    <>\r\n      <Accordion\r\n        defaultActiveKey={\r\n          activeBusiness !== null || !userBusinessesLoaded\r\n            ? activeBusiness\r\n            : \"myBusinesses\"\r\n        }\r\n      >\r\n        {/* Add business location top */}\r\n\r\n        {/**\r\n         * Card: Add business\r\n         */}\r\n        <Card style={{ background: \"Transparent\", border: \"0\" }}>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"addBusiness\"\r\n            style={{\r\n              background: \"Transparent\",\r\n              padding: \"0 0 20px 0\",\r\n            }}\r\n          >\r\n            <span\r\n              style={{ float: \"right\", cursor: \"pointer\" }}\r\n              onClick={() =>\r\n                setActiveBusiness(\r\n                  activeBusiness !== \"addBusiness\" ? \"addBusiness\" : null\r\n                )\r\n              }\r\n            >\r\n              {t(\"Add Business\")}\r\n              &nbsp;\r\n              <Add\r\n                style={{\r\n                  color: \"var(--dark)\",\r\n                  fontSize: \"1.2rem\",\r\n                  paddingBottom: \"0.2rem\",\r\n                }}\r\n              />\r\n            </span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"addBusiness\">\r\n            <Card.Body>\r\n              <BusinessRegistration {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        {/* List user businesses */}\r\n        {userBusinesses !== null &&\r\n          Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n            const date = new Date(userBusinesses[business].created);\r\n            const businessSince = formatDate(date, {\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n              year: \"numeric\",\r\n            });\r\n\r\n            return (\r\n              <Card key={keyBusiness} style={{ borderRadius: \"0\" }}>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey={keyBusiness}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    ToggleBusiness({\r\n                      eventKey: keyBusiness,\r\n                      businessID: userBusinesses[business].business_id,\r\n                    })\r\n                  }\r\n                >\r\n                  <Store style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                  {userBusinesses[business].title}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={keyBusiness}>\r\n                  <Card.Body>\r\n                    <Tab.Container\r\n                      id=\"left-tabs-example\"\r\n                      defaultActiveKey={\r\n                        activeBusinesPurpose !== null\r\n                          ? activeBusinesPurpose\r\n                          : \"aboutBusiness\"\r\n                      }\r\n                    >\r\n                      {/**\r\n                       * Row: Search\r\n                       */}\r\n                      <Row style={{ marginBottom: \"1.2rem\" }}>\r\n                        <Col>\r\n                          <Search\r\n                            advancedSearch={false}\r\n                            placeholder={t(\"Find purposes...\")}\r\n                            captionAdvancedSearch={t(\"Advanced search\")}\r\n                            onSubmit={findPurposes}\r\n                            {...args}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      {/**\r\n                       * Row: Purposes\r\n                       */}\r\n                      <Row>\r\n                        {/**\r\n                         * Layout: Left side - Menu\r\n                         */}\r\n                        <Col sm={5}>\r\n                          <ListGroup variant=\"flush\">\r\n                            {/* Menu item: About business */}\r\n                            <ListGroup.Item\r\n                              action\r\n                              eventKey=\"aboutBusiness\"\r\n                              style={{ cursor: \"default\" }}\r\n                              onClick={(e) => {\r\n                                setActivePurposeData(null);\r\n                                setActiveBusinesPurpose(null);\r\n                                e.stopPropagation();\r\n                              }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  whiteSpace: \"nowrap\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              >\r\n                                {t(\"Purposes\")}\r\n                              </span>\r\n                              <span style={{ float: \"right\" }}>\r\n                                <Add\r\n                                  onClick={(e) => {\r\n                                    setClearRefs(true);\r\n                                    setActivePurposeData(null);\r\n                                    setActiveBusinesPurpose(\"addPurpose\");\r\n                                    e.stopPropagation();\r\n                                  }}\r\n                                  fontSize=\"small\"\r\n                                  style={{\r\n                                    color: \"var(--dark)\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                />\r\n                              </span>\r\n                            </ListGroup.Item>\r\n\r\n                            {/* Menu items: Registered purposes */}\r\n                            {menuItems[keyBusiness]}\r\n\r\n                            {/* old add purpose */}\r\n                          </ListGroup>\r\n                          {countBusinessPurposes !== null && (\r\n                            <>\r\n                              <br />\r\n                              <Pagination\r\n                                {...args}\r\n                                size=\"sm\"\r\n                                countItems={countBusinessPurposes}\r\n                                itemsPerPage={businessPurposesPerPage}\r\n                                active={activePageBusinessPurposes}\r\n                                onClick={(number) =>\r\n                                  getBusinessPurposes(\r\n                                    activeBusinessID,\r\n                                    0,\r\n                                    number\r\n                                  )\r\n                                }\r\n                              />\r\n                            </>\r\n                          )}\r\n\r\n                          {showRequestStatus(\r\n                            \"get business purposes / SELECT purposes\",\r\n                            cntPurposes,\r\n                            t(\"Loading purposes...\"),\r\n                            t(\"No purposes\"),\r\n                            \"finished\"\r\n                          )}\r\n                        </Col>\r\n\r\n                        {/**\r\n                         * Layout: Right side - Content\r\n                         */}\r\n                        <Col sm={7}>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"aboutBusiness\">\r\n                              <Accordion defaultActiveKey=\"businessID\">\r\n                                {/* Business ID */}\r\n                                <Card\r\n                                  style={{\r\n                                    border: \"0\",\r\n                                    borderRadius: \"0\",\r\n                                    // backgroundColor: \"red\",\r\n                                  }}\r\n                                >\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessID\"\r\n                                  >\r\n                                    {t(\"Business ID\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessID\">\r\n                                    <Card\r\n                                      border=\"light\"\r\n                                      style={{ borderRadius: \"0\" }}\r\n                                    >\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          <CopyableField\r\n                                            value={\r\n                                              userBusinesses[business]\r\n                                                .business_id\r\n                                            }\r\n                                            {...args}\r\n                                          />\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business description */}\r\n                                <Card\r\n                                  style={{\r\n                                    border: \"0\",\r\n                                    borderRadius: \"0\",\r\n                                    // backgroundColor: \"red\",\r\n                                  }}\r\n                                >\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessDescription\"\r\n                                  >\r\n                                    {t(\"Business Description\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessDescription\">\r\n                                    <Card\r\n                                      border=\"light\"\r\n                                      style={{ borderRadius: \"0\" }}\r\n                                    >\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          {userBusinesses[business]\r\n                                            .description !== \"\" ? (\r\n                                            userBusinesses[business].description\r\n                                          ) : (\r\n                                            <span className=\"text-center text-muted\">\r\n                                              {t(\"No description\")}\r\n                                            </span>\r\n                                          )}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business Founded */}\r\n                                <Card\r\n                                  style={{\r\n                                    border: \"0\",\r\n                                    borderRadius: \"0\",\r\n                                    // backgroundColor: \"red\",\r\n                                  }}\r\n                                >\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessCreationDate\"\r\n                                  >\r\n                                    {t(\"Business Created\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessCreationDate\">\r\n                                    <Card\r\n                                      border=\"light\"\r\n                                      style={{ borderRadius: \"0\" }}\r\n                                    >\r\n                                      <Card.Body>\r\n                                        <Card.Text>{businessSince}</Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n\r\n                            {/* Start Business purposes */}\r\n                            {purposes[keyBusiness]}\r\n                            {/* End Business purposes */}\r\n\r\n                            {/*\r\n                             * Add new purpose / update existing purpose\r\n                             */}\r\n                            <Tab.Pane eventKey=\"addPurpose\">\r\n                              <Accordion defaultActiveKey=\"newPurpose\">\r\n                                <Card\r\n                                  style={{ border: \"0\", borderRadius: \"0\" }}\r\n                                >\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    eventKey=\"newPurpose\"\r\n                                    style={{ cursor: \"default\" }}\r\n                                  >\r\n                                    {t(\r\n                                      activePurposeData === null\r\n                                        ? \"New Purpose\"\r\n                                        : \"Edit Purpose\"\r\n                                    )}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"newPurpose\">\r\n                                    <Card.Body>\r\n                                      <PurposeRegistration\r\n                                        {...args}\r\n                                        businessID={\r\n                                          userBusinesses[business].business_id\r\n                                        }\r\n                                        id={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.id\r\n                                            : null\r\n                                        }\r\n                                        purposeID={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.purpose_id\r\n                                            : null\r\n                                        }\r\n                                        title={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.title\r\n                                            : \"\"\r\n                                        }\r\n                                        description={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.description\r\n                                            : \"\"\r\n                                        }\r\n                                        category={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.category\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory2={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory2\r\n                                            : \"\"\r\n                                        }\r\n                                        keywords={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.keywords\r\n                                            : \"\"\r\n                                        }\r\n                                      />\r\n                                    </Card.Body>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>\r\n                        </Col>\r\n                      </Row>\r\n                    </Tab.Container>\r\n                    {/* pagination prev */}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            );\r\n            // console.log(\"BUSINESS:\", userBusinesses[business]);\r\n          })}\r\n\r\n        {/* Add business location bottom */}\r\n      </Accordion>\r\n      {userBusinesses !== null && (\r\n        <>\r\n          <br />\r\n\r\n          <Pagination\r\n            {...args}\r\n            size=\"md\"\r\n            countItems={countBusinesses}\r\n            itemsPerPage={businessesPerPage}\r\n            active={activePageBusinesses}\r\n            onClick={(number) => getBusinesses(number)}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{jsx}</>;\r\n};\r\n","import \"./UserEditor.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup, Form, InputGroup } from \"react-bootstrap\";\r\nimport {\r\n  Visibility,\r\n  VisibilityOff,\r\n  Close,\r\n  Edit,\r\n  // Done,\r\n} from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"UserEditor\",\r\n    request: \"update user\",\r\n    mode: \"label\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"USER EDITOR PROPS:\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    // currencies,\r\n    // currencyAbbr,\r\n    // language,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getReviser, getWorkplace } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefFirstName = refFirstName.current;\r\n    const tempRefLastName = refLastName.current;\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (\r\n        tempRefFirstName !== null &&\r\n        userEditorFirstname !== tempRefFirstName.value\r\n      )\r\n        setUserEditorFirstname(tempRefFirstName.value);\r\n\r\n      if (\r\n        tempRefLastName !== null &&\r\n        userEditorLastname !== tempRefLastName.value\r\n      )\r\n        setUserEditorLastname(tempRefLastName.value);\r\n\r\n      if (tempRefEmail !== null && userEditorEmail !== tempRefEmail.value)\r\n        setUserEditorEmail(tempRefEmail.value);\r\n\r\n      if (\r\n        tempRefPassword !== null &&\r\n        userEditorPassword !== tempRefPassword.value\r\n      )\r\n        setUserEditorPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userEditorEditFirstname ||\r\n      userEditorEditLastname ||\r\n      userEditorEditEmail ||\r\n      userEditorEditPassword\r\n    ) {\r\n      setUserEditorSubmitButtonVisible(true);\r\n    } else {\r\n      setUserEditorSubmitButtonVisible(false);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [\r\n    userEditorEditFirstname,\r\n    userEditorEditLastname,\r\n    userEditorEditEmail,\r\n    userEditorEditPassword,\r\n  ]);\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  const togglePassword = () => {\r\n    setUserEditorPasswordVisible(!userEditorPasswordVisible);\r\n  };\r\n\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    // data.language = language;\r\n    // data.email = userData.email;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.personalID = accountNumber;\r\n    if (!userEditorEditFirstname) data.firstName = null;\r\n    if (!userEditorEditLastname) data.lastName = null;\r\n    if (!userEditorEditEmail) data.email = userData.email;\r\n    if (!userEditorEditPassword) data.password = null;\r\n\r\n    if (data.email !== userData.email) {\r\n      data.newEmail = data.email;\r\n      data.email = userData.email;\r\n      data.validateEmail = true;\r\n    }\r\n\r\n    // console.log(\"onSubmit:\", data);\r\n\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const yupObject = {\r\n    firstName: userEditorEditFirstname\r\n      ? yup.string().required(t(\"First name is required\"))\r\n      : yup.string().optional(),\r\n    lastName: userEditorEditLastname\r\n      ? yup.string().required(t(\"Last name is required\"))\r\n      : yup.string().optional(),\r\n    email: userEditorEditEmail\r\n      ? yup\r\n          .string()\r\n          .email(t(\"Invalid email address\"))\r\n          .required(t(\"Email is required\"))\r\n      : yup.string().optional(),\r\n    password: userEditorEditPassword\r\n      ? yup\r\n          .string()\r\n          .required(t(\"No password provided\"))\r\n          .min(8, t(\"Password is too short\"))\r\n          // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n          .matches(\r\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n            t(\"Password is too weak\")\r\n          )\r\n      : yup.string().optional(),\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object(yupObject);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (userData === null) return <></>;\r\n\r\n  /**\r\n   * Destructuring\r\n   */\r\n  const { mode } = props;\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    email,\r\n    // language,\r\n    // currency_name,\r\n    // currency_abbr,\r\n  } = userData;\r\n  // const currency = `${currency_name} (${currency_abbr})`;\r\n\r\n  const UserEditorForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Card title={t(\"Profile\")} border={0} maxWidthBody=\"700px\">\r\n        {/* First name */}\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"First name\")}</Form.Label>\r\n            {!userEditorEditFirstname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditFirstname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{firstname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditFirstname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditFirstname && (\r\n              <Form.Group controlId=\"validationFormikFirstName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter first name\")}\r\n                    name=\"firstName\"\r\n                    ref={refFirstName}\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.firstName && touched.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Last name */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Last name\")}</Form.Label>\r\n            {!userEditorEditLastname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditLastname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{lastname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditLastname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditLastname && (\r\n              <Form.Group controlId=\"validationFormikLastName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter last name\")}\r\n                    name=\"lastName\"\r\n                    ref={refLastName}\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.lastName && touched.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Email */}\r\n          {accountNumber !== null && (\r\n            <ListGroup.Item as=\"div\" action>\r\n              <Form.Label>{t(\"Email address\")}</Form.Label>\r\n              {!userEditorEditEmail ? (\r\n                <>\r\n                  <span style={{ float: \"right\" }}>\r\n                    <Edit\r\n                      onClick={() => setUserEditorEditEmail(true)}\r\n                      fontSize=\"small\"\r\n                      style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                    />\r\n                  </span>\r\n                  <br />\r\n                  <small>{email}</small>\r\n                </>\r\n              ) : (\r\n                <span style={{ float: \"right\" }}>\r\n                  <Close\r\n                    onClick={() => setUserEditorEditEmail(false)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              )}\r\n\r\n              {userEditorEditEmail && (\r\n                <Form.Group controlId=\"validationFormikEmail\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      placeholder={t(\"Enter email\")}\r\n                      name=\"email\"\r\n                      value={values.email}\r\n                      ref={refEmail}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.email && touched.email}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.email}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              )}\r\n            </ListGroup.Item>\r\n          )}\r\n\r\n          {/* Password */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Password\")}</Form.Label>\r\n            {!userEditorEditPassword ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditPassword(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditPassword(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditPassword && (\r\n              <>\r\n                {/* New password */}\r\n                <Form.Group controlId=\"validationFormikPassword\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      type={userEditorPasswordVisible ? \"text\" : \"password\"}\r\n                      placeholder={t(\"Enter new password\")}\r\n                      name=\"password\"\r\n                      ref={refPassword}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.password && touched.password}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <InputGroup.Text\r\n                        id=\"inputGroupAppend\"\r\n                        onClick={togglePassword}\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        {userEditorPasswordVisible ? (\r\n                          <VisibilityOff\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        ) : (\r\n                          <Visibility\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        )}\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.password}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              </>\r\n            )}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n\r\n        <Form.Group controlId=\"validationSubmitButton\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            visible={userEditorSubmitButtonVisible}\r\n            marginTop={20}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n      </Card>\r\n    </Form>\r\n  );\r\n\r\n  const jsx =\r\n    mode === \"label\" ? (\r\n      <span style={{ whiteSpace: \"nowrap\" }}>\r\n        {firstname} {lastname}\r\n      </span>\r\n    ) : (\r\n      <Formik\r\n        component={UserEditorForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          firstName: userEditorFirstname,\r\n          lastName: userEditorLastname,\r\n          email: userEditorEmail,\r\n          password: userEditorPassword,\r\n        }}\r\n      />\r\n    );\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    request: \"get currencies\", // \"register currency\",\r\n    namespace: \"Currencies\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencies,\r\n    settings,\r\n    countCurrencies,\r\n    activePageCurrencies,\r\n    currenciesPerPage,\r\n    currencyAbbr,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyAbbr,\r\n    setResponseProps,\r\n    setCurrencyRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    showRequestStatus,\r\n    getCurrencies,\r\n    findCurrencies,\r\n    formatExchangeRate,\r\n    getObjectArrayElementIndex,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onCurrencySelected = (e) => {\r\n    setCurrencyAbbr(e.target.id);\r\n    sendRequest({\r\n      req: \"register user currency\",\r\n      data: { email: userData.email, currency_id: e.target.id },\r\n    });\r\n\r\n    // Fetch the selected currency rate\r\n    const id = getObjectArrayElementIndex(currencies, \"abbr\", e.target.id);\r\n    setCurrencyRate(currencies[id].rate);\r\n  };\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    setResponseProps(null);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageCurrencies > 1 ? activePageCurrencies - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageCurrencies < Math.ceil(countCurrencies / currenciesPerPage)\r\n            ? activePageCurrencies + 1\r\n            : Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getCurrencies(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrenciesForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <Search\r\n          placeholder={t(\"Find currency...\")}\r\n          onSubmit={findCurrencies}\r\n          {...args}\r\n        />\r\n      </div>\r\n      <Table responsive striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Currency\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Abbr\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Region\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Rate\")}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currencies !== null &&\r\n            currencies.map((currency, keyCurrency) => {\r\n              cnt++;\r\n              // console.log(\"CURRENCY\", currency);\r\n\r\n              const { name, abbr, rate, region } = currency;\r\n\r\n              if (\r\n                typeof settings[\"currencies\"] === \"undefined\" ||\r\n                settings[\"currencies\"] === null ||\r\n                settings[\"currencies\"].length === 0 ||\r\n                settings[\"currencies\"].includes(abbr)\r\n              ) {\r\n                // valid currency - continue\r\n              } else {\r\n                return \"\"; // invalid currency\r\n              }\r\n\r\n              return (\r\n                <tr key={keyCurrency}>\r\n                  <td style={{ textAlign: \"left\", paddingLeft: \"1rem\" }}>\r\n                    <Form.Check\r\n                      id={abbr}\r\n                      type=\"radio\"\r\n                      checked={currencyAbbr === abbr}\r\n                      aria-label=\"option 1\"\r\n                      label={name}\r\n                      custom\r\n                      inline\r\n                      onChange={onCurrencySelected}\r\n                      name=\"selected-currency\"\r\n                    />\r\n                  </td>\r\n                  <td style={{ textAlign: \"center\" }}>{abbr}</td>\r\n                  <td style={{ textAlign: \"left\" }}>{region}</td>\r\n                  <td style={{ textAlign: \"right\" }}>\r\n                    {formatExchangeRate(rate)}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {showRequestStatus(\r\n        \"get currencies / SELECT currencies\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No currencies\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countCurrencies}\r\n        itemsPerPage={currenciesPerPage}\r\n        active={activePageCurrencies}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  // onSubmit={onSubmit}\r\n  return (\r\n    <Formik\r\n      component={CurrenciesForm}\r\n      initialValues={{\r\n        curr_abbr: \"\",\r\n        curr_title: \"\",\r\n        curr_region: \"\",\r\n        curr_rate: 1.0,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"CurrencyRegistration\",\r\n    request: \"register currency\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    formatExchangeRate,\r\n    // getCurrencies,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([\"CurrencyRegistration\"]);\r\n\r\n  const refAbbr = React.createRef();\r\n  const refTitle = React.createRef();\r\n  const refRegion = React.createRef();\r\n  const refRate = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefAbbr = refAbbr.current;\r\n    const tempRefTitle = refTitle.current;\r\n    const tempRefRegion = refRegion.current;\r\n    const tempRefRate = refRate.current;\r\n    return () => {\r\n      if (tempRefAbbr !== null && currencyCode !== tempRefAbbr.value)\r\n        setCurrencyCode(tempRefAbbr.value);\r\n\r\n      if (tempRefTitle !== null && currencyName !== tempRefTitle.value)\r\n        setCurrencyName(tempRefTitle.value);\r\n\r\n      if (tempRefRegion !== null && currencyRegion !== tempRefRegion.value)\r\n        setCurrencyRegion(tempRefRegion.value);\r\n\r\n      if (tempRefRate !== null && currencyNewRate !== tempRefRate.value)\r\n        setCurrencyNewRate(tempRefRate.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    curr_abbr: yup\r\n      .string()\r\n      .required(t(\"Currency abbreviation is required\"))\r\n      .min(3, t(\"Currency abbreviation is too short\"))\r\n      .max(5, t(\"Currency abbreviation is too long\")),\r\n    curr_title: yup\r\n      .string()\r\n      .required(t(\"Currency name is required\"))\r\n      .min(3, t(\"Currency name is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency name is too long\")), // must be at most 70 characters\r\n    curr_region: yup\r\n      .string()\r\n      .required(t(\"Currency region is required\"))\r\n      .min(3, t(\"Currency region is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency region is too long\")), // must be at most 70 characters\r\n    curr_rate: yup\r\n      .string()\r\n      .required(t(\"Exchange rate is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Exchange Rate Regex\")),\r\n        t(\"Wrong exchange rate format\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrencyRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/* Currency abbreviation */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Abbreviation\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_abbr\"\r\n              ref={refAbbr}\r\n              value={values.curr_abbr}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_abbr && touched.curr_abbr}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_abbr}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency name */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Currency Name\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_title\"\r\n              ref={refTitle}\r\n              value={values.curr_title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_title && touched.curr_title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_title}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency region */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Currency Region\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_region\"\r\n              ref={refRegion}\r\n              value={values.curr_region}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_region && touched.curr_region}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_region}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Initial exchange rate */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Initial Exchange Rate\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={formatExchangeRate(1)}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_rate\"\r\n              value={values.curr_rate}\r\n              ref={refRate}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_rate && touched.curr_rate}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_rate}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={CurrencyRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        curr_abbr: currencyCode,\r\n        curr_title: currencyName,\r\n        curr_region: currencyRegion,\r\n        curr_rate: currencyNewRate,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Rating.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Rating\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Container\r\n        fluid\r\n        style={{\r\n          fontSize: \"0.9rem\",\r\n          textAlign: \"center\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n      >\r\n        <Row>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating1\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating2\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating3\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating4\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating5\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginTop: \"-0.3rem\" }}>\r\n          <Col style={{ padding: \"0\" }}>{t(\"1\")}</Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"2\")}</Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"3\")}</Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"4\")}</Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"5\")}</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col style={{ padding: \"0\" }}>{t(\"Not helpful\")}</Col>\r\n          <Col style={{ padding: \"0\" }}></Col>\r\n          <Col style={{ padding: \"0\" }}></Col>\r\n          <Col style={{ padding: \"0\" }}></Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"Very helpful\")}</Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ListGroupItem\",\r\n    caption: \"Untitled\",\r\n    key: \"untitled\",\r\n    href: \"#\",\r\n    onClick: () => {},\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"props:\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <ListGroup.Item\r\n        action\r\n        key={props.key}\r\n        eventKey={props.key}\r\n        style={{ cursor: \"default\", overflow: \"hidden\" }}\r\n        href={props.href}\r\n        onClick={props.onClick}\r\n      >\r\n        {props.caption}\r\n      </ListGroup.Item>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport ListGroupItem from \"../listGroupItem\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"HelpMenuLevel2\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { helpPath1, helpPath2 } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { setHelpPath } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // console.log(t(\"Common Questions\"));\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    switch (helpPath1) {\r\n      case \"#business\":\r\n        return (\r\n          <ListGroup variant=\"flush\" defaultActiveKey={helpPath2}>\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Common Questions\")}\r\n              key=\"common-questions\"\r\n              href=\"/help/topic/common-questions\"\r\n              onClick={() => setHelpPath(2, \"common-questions\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Merchant Services\")}\r\n              key=\"merchant-services\"\r\n              href=\"/help/topic/merchant-services\"\r\n              onClick={() => setHelpPath(2, \"merchant-services\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"My Account\")}\r\n              key=\"my-account\"\r\n              href=\"/help/topic/my-account\"\r\n              onClick={() => setHelpPath(2, \"my-account\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Local Currency Basics\")}\r\n              key=\"local-currency-basics\"\r\n              href=\"/help/topic/local-currency-basics\"\r\n              onClick={() => setHelpPath(2, \"local-currency-basics\")}\r\n            />\r\n          </ListGroup>\r\n        );\r\n        break;\r\n\r\n      case \"#technical\":\r\n        return (\r\n          <ListGroup variant=\"flush\" defaultActiveKey={helpPath2}>\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Common Questions\")}\r\n              key=\"common-questions\"\r\n              href=\"/help/topic/common-questions\"\r\n              onClick={() => setHelpPath(2, \"common-questions\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"APIs\")}\r\n              key=\"apis\"\r\n              href=\"/help/topic/apis\"\r\n              onClick={() => setHelpPath(2, \"apis\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Shopping Carts\")}\r\n              key=\"shopping-carts\"\r\n              href=\"/help/topic/shopping-carts\"\r\n              onClick={() => setHelpPath(2, \"shopping-carts\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Products\")}\r\n              key=\"products\"\r\n              href=\"/help/topic/products\"\r\n              onClick={() => setHelpPath(2, \"products\")}\r\n            />\r\n          </ListGroup>\r\n        );\r\n        break;\r\n\r\n      default:\r\n        // #personal\r\n        return (\r\n          <ListGroup variant=\"flush\" defaultActiveKey={helpPath2}>\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Common Questions\")}\r\n              key=\"common-questions\"\r\n              href=\"/help/topic/common-questions\"\r\n              onClick={() => setHelpPath(2, \"common-questions\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"My Account\")}\r\n              key=\"my-account\"\r\n              href=\"/help/topic/my-account\"\r\n              onClick={() => setHelpPath(2, \"my-account\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Local Currency Basics\")}\r\n              key=\"local-currency-basics\"\r\n              href=\"/help/topic/local-currency-basics\"\r\n              onClick={() => setHelpPath(2, \"local-currency-basics\")}\r\n            />\r\n          </ListGroup>\r\n        );\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * User CSS\r\n ============================================================================ */\r\nimport \"./Help.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\nimport Search from \"../search\";\r\nimport HelpMenuLevel2 from \"../helpMenuLevel2\";\r\n// import ErrorBoundary from \"../errorBoundary\";\r\nimport FileLoader from \"../fileLoader\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Help\", searchable: false };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { language, helpPath1 } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { setHelpPath } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"Personal Help\"),\r\n      link: \"#personal\",\r\n    },\r\n    {\r\n      name: t(\"Business Help\"),\r\n      link: \"#business\",\r\n    },\r\n    {\r\n      name: t(\"Technical Help\"),\r\n      link: \"#technical\",\r\n    },\r\n  ];\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  const getJSX = () => {\r\n    const onHelpPath1Click = (link) => {\r\n      setHelpPath(1, link);\r\n    };\r\n\r\n    return (\r\n      <Card\r\n        title={t(\"Help center\")}\r\n        navigation={navigation}\r\n        headerPadding=\"20px 20px 10px 20px\"\r\n        bodyPadding=\"20px 20px 10px 20px\"\r\n        border={0}\r\n        maxWidthBody=\"100%\"\r\n        navigationdefaultActiveKey={helpPath1}\r\n        onNavigationClick={onHelpPath1Click}\r\n      >\r\n        <Container fluid>\r\n          {/**\r\n           * Search\r\n           */}\r\n          {props.searchable && (\r\n            <Row>\r\n              <Col>\r\n                <div className=\"header-text\">\r\n                  <h1>{t(\"How can we help?\")}</h1>\r\n                </div>\r\n                <div style={{ textAlign: \"center\", margin: \"0 0 35px 0\" }}>\r\n                  <div\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      width: \"100%\",\r\n                      maxWidth: \"600px\",\r\n                    }}\r\n                  >\r\n                    <Search\r\n                      {...args}\r\n                      placeholder={t(\"Ask a question or search by keyword\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n\r\n          <Row>\r\n            <Col xl={4} style={{}}>\r\n              <HelpMenuLevel2 {...args} />\r\n            </Col>\r\n            <Col xl={8} style={{}}>\r\n              <FileLoader\r\n                {...args}\r\n                path3=\"topics\"\r\n                defaultFile=\"common-questions.js\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n  // return <></>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import _ from \"lodash\";\r\n// import { useTranslation } from \"react-i18next\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Button,\r\n  // Breadcrumb,\r\n  // NavDropdown,\r\n  // Alert,\r\n} from \"react-bootstrap\";\r\n// import Octicon, { SignOut } from \"@primer/octicons-react\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../../settings.json\";\r\nimport AccountRegistration from \"../accountRegistration\";\r\n// import BusinessRegistration from \"../../businessRegistration\";\r\nimport Balance from \"../accountContainer\";\r\nimport { Transfer } from \"../transfer\";\r\nimport MyBusiness from \"../myBusiness\";\r\nimport UserEditor from \"../userEditor\";\r\nimport CurrencyContainer from \"../currencyContainer\";\r\n// import Login from \"../../login\";\r\nimport Contact from \"../contact\";\r\nimport Card from \"../card\";\r\nimport Status_404 from \"../status_404\";\r\nimport Help from \"../help\";\r\n// import LanguageSelector from \"../language-selector\";\r\n// import MainMenu from \"../mainMenu\";\r\n\r\n/**\r\n * Component: Summary\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"Summary\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { settings, accountNumber } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getBusinesses } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const { t } = useTranslation(props.namespace);\r\n\r\n  // const location = useLocation();\r\n\r\n  const pageBody = (\r\n    <Router>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/summary\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/account-registration\"\r\n          component={() => {\r\n            return AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/profile\"\r\n          component={() => {\r\n            return UserEditor({ ...args, mode: \"profile\" });\r\n          }}\r\n        />\r\n        {settings !== null &&\r\n          typeof settings[\"currencies\"] !== \"undefined\" &&\r\n          (settings[\"currencies\"] === null ||\r\n            settings[\"currencies\"].length === 0 ||\r\n            settings[\"currencies\"].length > 1) && (\r\n            <Route\r\n              exact\r\n              path=\"/currency\"\r\n              component={() => {\r\n                return CurrencyContainer({ ...args });\r\n              }}\r\n            />\r\n          )}\r\n\r\n        <Route\r\n          exact\r\n          path=\"/my-business\"\r\n          component={() => {\r\n            return MyBusiness(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/balance\"\r\n          component={() => {\r\n            return Balance(args);\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/transfer\"\r\n          component={() => {\r\n            return Transfer(args);\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/feedback\"\r\n          component={() => {\r\n            return Contact(args);\r\n          }}\r\n        />\r\n\r\n        {/**\r\n         * Default route\r\n         */}\r\n        <Route\r\n          path=\"*\"\r\n          component={() => {\r\n            return Status_404(args);\r\n          }}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n\r\n      {/* Content */}\r\n      {/*<h3>{t(\"Summary\")}</h3>*/}\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <Card\r\n              backgroundHeader=\"Transparent\"\r\n              backgroundBody=\"Transparent\"\r\n              border=\"0\"\r\n              align=\"left\"\r\n              maxWidthBody=\"700px\"\r\n              header={false}\r\n            >\r\n              {pageBody}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../settings.json\";\r\n// import Card from \"../card\";\r\nimport Currencies from \"../currencies\";\r\nimport CurrencyRegistration from \"../currencyRegistration\";\r\nimport AccordionCard from \"../accordionCard\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\", paddingBody: \"20px 0 0 0\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    accordionViewCurrency,\r\n    activePageCurrencies,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setAccordionViewCurrency,\r\n    setRedirectTo,\r\n    setResponseProps,\r\n  } = props.barrelSetters;\r\n  const { getCurrencies } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const ToggleCurrencies = () => {\r\n    if (accordionViewCurrency !== \"currencies\") {\r\n      setResponseProps(null);\r\n      setAccordionViewCurrency(\"currencies\");\r\n      getCurrencies(activePageCurrencies);\r\n    } else {\r\n      setAccordionViewCurrency(null);\r\n    }\r\n  };\r\n\r\n  const ToggleCurrencyRegistration = () => {\r\n    setAccordionViewCurrency(\r\n      accordionViewCurrency !== \"currencyRegistration\"\r\n        ? \"currencyRegistration\"\r\n        : null\r\n    );\r\n  };\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  if (\r\n    typeof settings[\"currencies\"] !== \"undefined\" &&\r\n    settings[\"currencies\"] !== null &&\r\n    settings[\"currencies\"].length < 2\r\n  ) {\r\n    return <></>; // currency creation is disabled\r\n  } else {\r\n    return (\r\n      <>\r\n        <Accordion defaultActiveKey={accordionViewCurrency}>\r\n          {/**\r\n           * Currencies\r\n           */}\r\n          <AccordionCard\r\n            title={t(\"Currencies\")}\r\n            eventkey=\"currencies\"\r\n            active={accordionViewCurrency}\r\n            paddingBody={props.paddingBody}\r\n            onClick={ToggleCurrencies}\r\n          >\r\n            <Currencies {...args} />\r\n          </AccordionCard>\r\n\r\n          {/**\r\n           * Currency registration\r\n           */}\r\n          {typeof settings[\"currencyCreationAllowed\"] !== \"undefined\" &&\r\n            settings[\"currencyCreationAllowed\"] && (\r\n              <AccordionCard\r\n                title={t(\"Currency Registration\")}\r\n                eventkey=\"currencyRegistration\"\r\n                active={accordionViewCurrency}\r\n                paddingBody={props.paddingBody}\r\n                onClick={ToggleCurrencyRegistration}\r\n              >\r\n                <CurrencyRegistration {...args} />\r\n              </AccordionCard>\r\n            )}\r\n        </Accordion>\r\n      </>\r\n    );\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { TransferToSelf, TransferToPerson, TransferToBusiness } from \"./index\";\r\n\r\n/**\r\n * Component: Transfer\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber, transferType } = props.barrelGetters;\r\n  const { setRedirectTo } = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  const { onTransferTypeChange } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"Transfer\");\r\n\r\n  const data = props.data;\r\n  const type = transferType;\r\n  // const onTypeChange = args.onTypeChange;\r\n\r\n  // console.log(\"TRANSFER DATA TYPE:\", type);\r\n\r\n  // const [transferCard, setTransferCard] = useState(null);\r\n\r\n  const onNavigationClick = (id) => {\r\n    onTransferTypeChange(id);\r\n  };\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"U2S\"),\r\n      link: \"#u2s\",\r\n    },\r\n    {\r\n      name: t(\"U2U\"),\r\n      link: \"#u2u\",\r\n    },\r\n    {\r\n      name: t(\"U2B\"),\r\n      link: \"#u2b\",\r\n    },\r\n  ];\r\n\r\n  // console.log(\"TRANSFER DATA\", data);\r\n  // const title = t(\"Transfer to account\");\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  switch (type) {\r\n    case \"#u2u\": // User to user\r\n      // case \"/u2u\": // User to user\r\n      return (\r\n        <TransferToPerson\r\n          title={t(\"Transfer to account\")}\r\n          args={props}\r\n          navigation={navigation}\r\n          navigationdefaultActiveKey={type}\r\n          onNavigationClick={onNavigationClick}\r\n        />\r\n      );\r\n      break;\r\n    case \"#u2b\": // User to business\r\n      // case \"/u2b\": // User to business\r\n      return (\r\n        <TransferToBusiness\r\n          title={t(\"Transfer to account\")}\r\n          args={props}\r\n          navigation={navigation}\r\n          navigationdefaultActiveKey={type}\r\n          onNavigationClick={onNavigationClick}\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      // \"#u2s\"\r\n      return (\r\n        <TransferToSelf\r\n          title={t(\"Transfer to account\")}\r\n          args={props}\r\n          navigation={navigation}\r\n          navigationdefaultActiveKey={type}\r\n          onNavigationClick={onNavigationClick}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\nimport Rating from \"../rating\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Contact\", request: \"send message\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    language,\r\n    accountNumber,\r\n    contactSubject,\r\n    contactMessage,\r\n  } = props.barrelGetters;\r\n  const { setContactSubject, setContactMessage } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refSubject = React.createRef();\r\n  const refMessage = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefSubject = refSubject.current;\r\n    const tempRefMessage = refMessage.current;\r\n    return () => {\r\n      // console.log(\"ON UNMOUNT:\", tempRefSubject.value);\r\n      if (tempRefSubject !== null && contactSubject !== tempRefSubject.value)\r\n        setContactSubject(tempRefSubject.value);\r\n\r\n      if (tempRefMessage !== null && contactMessage !== tempRefMessage.value)\r\n        setContactMessage(tempRefMessage.value);\r\n      // console.log(\"CONTACT UNMOUNTS\");\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    subject: yup.string().required(t(\"Subject is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.sender = accountNumber;\r\n    data.language = language;\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  // const navigation = [\r\n  //   {\r\n  //     name: t(\"U2S\"),\r\n  //     link: \"#u2s\",\r\n  //   },\r\n  // ];\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card header={false} border={0} maxWidthBody=\"700px\">\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * Rating\r\n         */}\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <Trans i18nKey=\"Rating:Thank you for your feedback\">\r\n            Thank you for your feedback! How helpful was our site?*\r\n          </Trans>\r\n        </div>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <Rating {...args} />\r\n        </div>\r\n\r\n        {/*\r\n         * Subject\r\n         */}\r\n        <Form.Group controlId=\"validationFormikSubject\">\r\n          <Form.Label>{t(\"Subject\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={t(\"Enter message subject\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"subject\"\r\n              ref={refSubject}\r\n              value={values.subject}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setContactSubject(e.target.value);\r\n              }}\r\n              isInvalid={!!errors.subject && touched.subject}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.subject}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Message\r\n         */}\r\n        <Form.Group controlId=\"validationFormikMessage\">\r\n          <Form.Label>{t(\"Message\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter message\")}\r\n            name=\"message\"\r\n            value={values.message}\r\n            ref={refMessage}\r\n            onChange={handleChange}\r\n            as=\"textarea\"\r\n            rows=\"10\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        subject: contactSubject,\r\n        message: contactMessage,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"HttpResponseStatusCodes\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return <Card title={t(\"404 Not found\")} border={0}></Card>;\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Overlay.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { cloneElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Overlay\",\r\n    visible: false,\r\n    variant: \"info\",\r\n    dismissible: false,\r\n    onClose: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"dismissible:\", props.dismissible);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  useTimeout(\r\n    () => {\r\n      props.onClose();\r\n    },\r\n    !props.dismissible ? 5000 : -1 // millisec till overlay closes, -1 never\r\n  );\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      let className = \"custom-overlay\";\r\n\r\n      /**\r\n       * Implement property: dismissible\r\n       */\r\n      if (props.dismissible) {\r\n        className += \" alert-dismissible\";\r\n      }\r\n\r\n      /**\r\n       * Implement property: variant\r\n       */\r\n      switch (props.variant) {\r\n        case \"danger\":\r\n          className += \" alert-danger\";\r\n          break;\r\n\r\n        default:\r\n          className += \" alert-info\";\r\n          break;\r\n      }\r\n      let key = 0;\r\n      return (\r\n        <div className={className}>\r\n          {props.dismissible && (\r\n            <button type=\"button\" className=\"close\" onMouseDown={props.onClose}>\r\n              <span aria-hidden=\"true\">×</span>\r\n              <span className=\"sr-only\">Close alert</span>\r\n            </button>\r\n          )}\r\n          {React.Children.map(args.children, (child) => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                ...args,\r\n                styles: null,\r\n                key: key,\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./AlertContainer.css\";\r\n\r\n/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = { namespace: \"AlertContainer\", visible: false };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      return (\r\n        <div className=\"alert-container\">\r\n          {React.Children.map(args.children, (child) => child)}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Alert } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Overlay from \"../overlay\";\r\nimport AlertContainer from \"../alertContainer\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args.data);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onAlertClose: onClose } = props.barrelEventHandlers;\r\n\r\n  // let t;\r\n  const errorStrings = useTranslation(\"Errors\").t;\r\n  const infoStrings = useTranslation(\"Infos\").t;\r\n\r\n  if (error !== null && info !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <>\r\n        <AlertContainer visible={true}>\r\n          {msgError !== \"\" && msgError !== null && (\r\n            <Overlay\r\n              visible={true}\r\n              variant=\"danger\"\r\n              onClose={() => onClose(\"error\")}\r\n              dismissible={error.dismissible}\r\n            >\r\n              {msgError}\r\n            </Overlay>\r\n          )}\r\n\r\n          {msgInfo !== \"\" && msgInfo !== null && (\r\n            <Overlay\r\n              visible={true}\r\n              variant=\"info\"\r\n              onClose={() => onClose(\"info\")}\r\n              dismissible={info.dismissible}\r\n            >\r\n              {msgInfo}\r\n            </Overlay>\r\n          )}\r\n        </AlertContainer>\r\n      </>\r\n    );\r\n  } else if (error !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        {msgError !== \"\" && msgError !== null && (\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"danger\"\r\n            onClose={() => onClose(\"error\")}\r\n            dismissible={error.dismissible}\r\n          >\r\n            {msgError}\r\n          </Overlay>\r\n        )}\r\n      </AlertContainer>\r\n    );\r\n  } else if (info !== null) {\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        {msgInfo !== \"\" && msgInfo !== null && (\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"info\"\r\n            onClose={() => onClose(\"info\")}\r\n            dismissible={info.dismissible}\r\n          >\r\n            {msgInfo}\r\n          </Overlay>\r\n        )}\r\n      </AlertContainer>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, Container, Row, Col } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"LogIn\", request: \"sign in user\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { ip, logInEmail, logInPassword } = props.barrelGetters;\r\n  const {\r\n    setLoggingIn,\r\n    setUpdateInterval,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    getUri,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (tempRefEmail !== null && logInEmail !== tempRefEmail.value)\r\n        setLogInEmail(tempRefEmail.value);\r\n\r\n      if (tempRefPassword !== null && logInPassword !== tempRefPassword.value)\r\n        setLogInPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup.string().required(t(\"No password provided\")),\r\n  });\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserLogInRequest = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.ip = ip;\r\n    data.uri = getUri();\r\n    sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    setUpdateInterval(-1);\r\n    setLoggingIn(true);\r\n    sendUserLogInRequest(data);\r\n  };\r\n\r\n  const UserLogInForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      align=\"left\"\r\n      // maxWidth=\"500px\"\r\n      header={false}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <h3>{t(\"Sign In\")}</h3>\r\n\r\n        {/**\r\n         * Email\r\n         */}\r\n        <Form.Group controlId=\"validationFormikEmail\">\r\n          <Form.Label>{t(\"Email address\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            // autoFocus\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Password\r\n         */}\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <Form.Label>{t(\"Password\")}</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            ref={refPassword}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Submit button\r\n         */}\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace=\"LogIn\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Container fluid=\"md\">\r\n          <Row>\r\n            {/**\r\n             * Register\r\n             */}\r\n            <Col>\r\n              <p className=\"other-options text-left\">\r\n                <Trans i18nKey=\"LogIn:Not yet registered\">\r\n                  Not yet <a href=\"/sign-up\">registered?</a>\r\n                </Trans>\r\n              </p>\r\n            </Col>\r\n\r\n            {/**\r\n             * Forgot password\r\n             */}\r\n            <Col>\r\n              <p className=\"other-options text-right\">\r\n                <Trans i18nKey=\"LogIn:Forgot password\">\r\n                  Forgot <a href=\"/reset\">password?</a>\r\n                </Trans>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={UserLogInForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          email: logInEmail,\r\n          password: logInPassword,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"register user\", namespace: \"SignUp\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    language,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n  } = props.barrelSetters;\r\n  const { getReviser, getWorkplace, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefFirstName = refFirstName.current;\r\n    const tempRefLastName = refLastName.current;\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (\r\n        tempRefFirstName !== null &&\r\n        signUpFirstName !== tempRefFirstName.value\r\n      )\r\n        setSignUpFirstName(tempRefFirstName.value);\r\n\r\n      if (tempRefLastName !== null && signUpLastName !== tempRefLastName.value)\r\n        setSignUpLastName(tempRefLastName.value);\r\n\r\n      if (tempRefEmail !== null && signUpEmail !== tempRefEmail.value)\r\n        setSignUpEmail(tempRefEmail.value);\r\n\r\n      if (tempRefPassword !== null && signUpPassword !== tempRefPassword.value)\r\n        setSignUpPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    firstName: yup.string().required(t(\"First name is required\")),\r\n    lastName: yup.string().required(t(\"Last name is required\")),\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.language = language;\r\n    data.validateEmail = true;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    // const recaptchaValue = refReCAPTCHA.current.getValue();\r\n    // this.props.onSubmit(recaptchaValue);\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  // const onChange = (data) => {\r\n  //   console.log(\"onChange:\", data);\r\n  // };\r\n\r\n  const UserRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      align=\"left\"\r\n      // maxWidth=\"500px\"\r\n      header={false}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <h3>{t(\"Sign Up\")}</h3>\r\n\r\n        {/**\r\n         * First name\r\n         */}\r\n        <Form.Group controlId=\"validationFormikFirstName\">\r\n          <Form.Label>{t(\"First name\")}</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter first name\")}\r\n            name=\"firstName\"\r\n            ref={refFirstName}\r\n            // autoFocus\r\n            value={values.firstName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.firstName && touched.firstName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.firstName}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Last name\r\n         */}\r\n        <Form.Group controlId=\"validationFormikLastName\">\r\n          <Form.Label>{t(\"Last name\")}</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter last name\")}\r\n            name=\"lastName\"\r\n            ref={refLastName}\r\n            value={values.lastName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.lastName && touched.lastName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.lastName}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Email\r\n         */}\r\n        <Form.Group controlId=\"validationFormikEmail\">\r\n          <Form.Label>{t(\"Email address\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Password\r\n         */}\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <Form.Label>{t(\"Password\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type={passwordVisible ? \"text\" : \"password\"}\r\n              placeholder={t(\"Enter password\")}\r\n              name=\"password\"\r\n              ref={refPassword}\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.password && touched.password}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text\r\n                id=\"inputGroupAppend\"\r\n                onClick={togglePassword}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                {passwordVisible ? (\r\n                  <VisibilityOff\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\" }}\r\n                  />\r\n                ) : (\r\n                  <Visibility\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\" }}\r\n                  />\r\n                )}\r\n              </InputGroup.Text>\r\n            </InputGroup.Append>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.password}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Submit button\r\n         */}\r\n        <Form.Group controlId=\"validationSubmitButton\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Login link\r\n         */}\r\n        <p className=\"other-options text-right\">\r\n          <Trans i18nKey=\"SignUp:Already registered\">\r\n            Already registered <a href=\"/sign-in\">sign in?</a>\r\n          </Trans>\r\n        </p>\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={UserRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        firstName: signUpFirstName,\r\n        lastName: signUpLastName,\r\n        email: signUpEmail,\r\n        password: signUpPassword,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport TanInput from \"../tanInput\";\r\nimport { useEffect } from \"react\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Checkout\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    // externalRequest,\r\n    // accountNumber,\r\n    cartProps,\r\n    cartContent,\r\n    cartPurposes,\r\n    tanRequired,\r\n    userData,\r\n    language,\r\n    accountNumber,\r\n    currencyAbbr,\r\n    cartID,\r\n    cartProcessingStatus,\r\n  } = props.barrelGetters;\r\n  const { setTransferRequest, setCartProcessingStatus } = props.barrelSetters;\r\n  const { format, sendRequest, formatDate } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const schema = yup.object({});\r\n\r\n  const getCartPurposes = () => {\r\n    if (cartContent === null) return false;\r\n\r\n    let priceTotal = 0;\r\n    let priceReal = 0;\r\n\r\n    let purposeID = [];\r\n    let amount = [];\r\n    let currency = [];\r\n    let fromAccount = [];\r\n\r\n    cartContent.map((element) => {\r\n      priceTotal += element.price * element.amount;\r\n      let product_found = \"N\";\r\n\r\n      if (cartPurposes !== null) {\r\n        let product = cartPurposes.find(\r\n          (products) => products.purpose_id === element.product\r\n        );\r\n\r\n        if (typeof product !== \"undefined\") {\r\n          product_found = \"Y\";\r\n          priceReal += element.price * element.amount;\r\n        }\r\n        // console.log(\"product:\", product);\r\n      }\r\n\r\n      /**\r\n       * In current implementation if product could be added to the cart,\r\n       * then subsequential deactivation is ignored.\r\n       */\r\n      purposeID.push(element.product);\r\n      amount.push(element.price * element.amount);\r\n      currency.push(currencyAbbr);\r\n      fromAccount.push(\"acc_curr\");\r\n    });\r\n\r\n    return { purposeID, amount, currency, fromAccount };\r\n  };\r\n\r\n  const Cart = () => {\r\n    if (cartProps === null) return <></>;\r\n\r\n    let priceTotal = 0; // Price of active AND inactive purposes\r\n    let priceReal = 0; // Price of active purposes\r\n\r\n    const businessCreated = formatDate(cartProps.business_created, {\r\n      month: \"numeric\",\r\n      year: \"numeric\",\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {cartContent !== null &&\r\n          cartContent.map((element, key) => {\r\n            priceTotal += element.price * element.amount;\r\n            let product_found = \"N\";\r\n\r\n            if (cartPurposes !== null) {\r\n              let product = cartPurposes.find(\r\n                (products) => products.purpose_id === element.product\r\n              );\r\n\r\n              if (typeof product !== \"undefined\") {\r\n                product_found = \"Y\";\r\n                priceReal += element.price * element.amount;\r\n              }\r\n              // console.log(\"product:\", product);\r\n            }\r\n\r\n            //   if (typeof product !== \"undefined\") {\r\n            //     product_found = product.title;\r\n            //   }\r\n            // }\r\n\r\n            return (\r\n              <div key={key}>\r\n                {false && (\r\n                  <>\r\n                    <div>product: {element.product}</div>\r\n                    <div>price: {element.price}</div>\r\n                    <div>amount: {element.amount}</div>\r\n                    <div>found: {product_found}</div>\r\n                    <br />\r\n                  </>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        <div style={{ fontWeight: \"bold\" }}>{t(\"Merchant\")}</div>\r\n        <div style={{}}>{cartProps.merchant}</div>\r\n        <div style={{}}>{cartProps.business_title}</div>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <Trans\r\n            i18nKey=\"Checkout:Business created\"\r\n            businessCreated={businessCreated}\r\n          >\r\n            Since {{ businessCreated }}\r\n          </Trans>\r\n        </div>\r\n\r\n        <div style={{ fontWeight: \"bold\" }}>{t(\"Amount\")}</div>\r\n        <div style={{ fontSize: \"1.5rem\" }}>{format(priceTotal)}</div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    setCartProcessingStatus(null);\r\n\r\n    data.transferType = \"transfer U2B\";\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n\r\n    const { amount, currency, purposeID, fromAccount } = getCartPurposes();\r\n\r\n    data.amount = amount;\r\n    data.currency = currency;\r\n    data.purposeID = purposeID;\r\n    data.fromAccount = fromAccount;\r\n\r\n    data.cart = cartProps.cartid;\r\n    data.merchant = cartProps.merchant;\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n\r\n    data = { email: userData.email, language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n\r\n    // setTransferAmount(\"\");\r\n  };\r\n\r\n  const CheckoutForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card title={t(\"Checkout\")} border=\"0\">\r\n      {/* From account */}\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <Cart />\r\n        </div>\r\n        {/* Submit button */}\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  // return <>{getJSX()}</>;\r\n\r\n  return (\r\n    <>\r\n      {cartProcessingStatus === null ? (\r\n        <>\r\n          <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n          <Formik\r\n            component={CheckoutForm}\r\n            validationSchema={schema}\r\n            onSubmit={onSubmit}\r\n            initialValues={{}}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {cartProcessingStatus === true\r\n            ? \"Transfer successful\"\r\n            : \"Transfer error\"}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../../translations/i18n\";\r\n// import { withNamespaces } from \"react-i18next\";\r\nimport { Form, Badge } from \"react-bootstrap\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"LanguageSelector\",\r\n    backgroundColor: \"var(--dark)\",\r\n    color: \"var(--light)\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { userData, signedIn } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n  const languages = [\r\n    { id: 1, language: \"Latviešu\", code: \"lv\" },\r\n    { id: 2, language: \"English\", code: \"en\" },\r\n  ];\r\n  const handleLanguageSelect = (e) => {\r\n    changeLanguage(e.target.value);\r\n  };\r\n  const selectLanguage = (language) => {\r\n    changeLanguage(language);\r\n\r\n    if (userData !== null && signedIn) {\r\n      sendRequest({\r\n        req: \"register user language\",\r\n        data: { email: userData.email, language },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (1) {\r\n    return (\r\n      <span style={{ paddingLeft: \"0.5rem\", paddingRight: \"0.5rem\" }}>\r\n        <Badge\r\n          pill\r\n          style={{\r\n            cursor: \"pointer\",\r\n            backgroundColor: props.backgroundColor,\r\n            color: props.color,\r\n            marginBottom: \"0.3rem\",\r\n          }}\r\n          onClick={() => {\r\n            selectLanguage(\"en\");\r\n          }}\r\n        >\r\n          en\r\n        </Badge>{\" \"}\r\n        <Badge\r\n          pill\r\n          style={{\r\n            cursor: \"pointer\",\r\n            backgroundColor: props.backgroundColor,\r\n            color: props.color,\r\n            marginBottom: \"0.3rem\",\r\n          }}\r\n          onClick={() => {\r\n            selectLanguage(\"lv\");\r\n          }}\r\n        >\r\n          lv\r\n        </Badge>\r\n      </span>\r\n    );\r\n  } else {\r\n    return (\r\n      <Form.Control\r\n        as=\"select\"\r\n        id=\"languageSelector\"\r\n        onChange={handleLanguageSelect}\r\n        custom\r\n      >\r\n        <option key=\"0\" value={props.language}>\r\n          {t(\"Language\")}\r\n        </option>\r\n        {languages.map((el) => (\r\n          <option key={el.id} value={el.code}>\r\n            {el.language}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    );\r\n  }\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col, Navbar, Nav } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\nimport LanguageSelector from \"../language-selector\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Footer\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { signedIn } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Card\r\n        title=\"\"\r\n        header={true}\r\n        border={0}\r\n        maxWidthBody=\"100%\"\r\n        headerPadding=\"10px\"\r\n        bodyPadding=\"10px 20px\"\r\n      >\r\n        {window.location.pathname !== \"/auth\" ? (\r\n          /**\r\n           * Full footer\r\n           */\r\n          <Container\r\n            fluid\r\n            style={{\r\n              paddingRight: \"0\",\r\n              paddingLeft: \"0\",\r\n            }}\r\n          >\r\n            {/*\r\n             * Top Footer\r\n             */}\r\n            <Row style={{ padding: 0 }}>\r\n              <Col style={{ padding: 0 }}>\r\n                <Navbar\r\n                  collapseOnSelect\r\n                  expand=\"sm\"\r\n                  style={{\r\n                    borderRadius: \"5px\",\r\n                    backgroundColor: \"var(--light)\", // e8f6f3\r\n                    boxShadow: \"none\",\r\n                    padding: \"0 .5rem\",\r\n                  }}\r\n                >\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"help\" href=\"/help\">\r\n                      {t(\"Help\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    {signedIn &&\r\n                      window.location.pathname !== \"/contact\" &&\r\n                      window.location.pathname !== \"/account-registration\" && (\r\n                        <Nav>\r\n                          <Nav.Link eventKey=\"contact\" href=\"/contact\">\r\n                            {t(\"Contact\")}\r\n                          </Nav.Link>\r\n                        </Nav>\r\n                      )}\r\n\r\n                    <Nav className=\"mr-auto\">\r\n                      <Nav.Link eventKey=\"about\" href=\"/security\">\r\n                        {t(\"Security\")}\r\n                      </Nav.Link>\r\n                    </Nav>\r\n\r\n                    <Nav>\r\n                      <Nav.Item>\r\n                        <LanguageSelector {...args} />\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                  </Navbar.Collapse>\r\n                </Navbar>\r\n              </Col>\r\n            </Row>\r\n\r\n            {/*\r\n             * Bottom Footer\r\n             */}\r\n            <Row\r\n              className=\"d-none d-sm-block\"\r\n              style={{ padding: 0, fontSize: \"0.86rem\" }}\r\n            >\r\n              <Col style={{ padding: 0 }}>\r\n                <Navbar\r\n                  collapseOnSelect\r\n                  expand=\"sm\"\r\n                  style={{\r\n                    borderRadius: \"5px\",\r\n                    backgroundColor: \"var(--light)\", // e8f6f3\r\n                    boxShadow: \"none\",\r\n                    padding: \"0 .5rem\",\r\n                  }}\r\n                >\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/about\">\r\n                      {t(\"About\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/newsroom\">\r\n                      {t(\"Newsroom\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/jobs\">\r\n                      {t(\"Jobs\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link eventKey=\"about\" href=\"/sitemap\">\r\n                      {t(\"Sitemap\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Item style={{}}>\r\n                      &copy;&nbsp;{now.getFullYear()}\r\n                    </Nav.Item>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/feedback\">\r\n                      {t(\"Feedback\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n                </Navbar>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        ) : (\r\n          /**\r\n           * Minimal footer\r\n           */\r\n          <Container\r\n            fluid\r\n            style={{\r\n              paddingRight: \"0\",\r\n              paddingLeft: \"0\",\r\n            }}\r\n          >\r\n            {/*\r\n             * Top Footer\r\n             */}\r\n            <Row style={{ padding: 0 }}>\r\n              <Col style={{ padding: 0 }}>\r\n                <Nav className=\"justify-content-center\">\r\n                  <Nav.Item>\r\n                    <LanguageSelector {...args} />\r\n                  </Nav.Item>\r\n                </Nav>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        )}\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AvTimer } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n//  let time = new Date().toLocaleString();\r\nimport { useInterval } from \"../../utils/useInterval\";\r\nimport { useEventListener } from \"../../utils/useEventListener\";\r\n\r\nimport ModalMessage from \"../modalMessage\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Constants\r\n     ============================================================================ */\r\n  const minute = 60; // seconds, for testing purposes > 60\r\n\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"IdleTimer\",\r\n    timeout: 5 * minute,\r\n    timestamp: null,\r\n    stage2: 60, // show seconds (vs minutes) in stage 2\r\n    stage3: 20, // show modal message on stage 3\r\n    onTick: () => {},\r\n    onTimerReset: () => {},\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { formatDate } = props.barrelFunctions;\r\n  const { onSessionTimeout } = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const [seconds, setSeconds] = useState(props.timeout);\r\n  const [modalMessageShow, setModalMessageShow] = React.useState(false);\r\n\r\n  useInterval(() => {\r\n    // Your custom logic here\r\n\r\n    setSeconds(seconds - 1);\r\n    props.onTick(seconds);\r\n  }, 1000);\r\n\r\n  useEventListener(() => {\r\n    setSeconds(props.timeout);\r\n    props.onTimerReset();\r\n  }, [\"mousedown\", \"click\", \"scroll\", \"keypress\"]); // \"click\",\r\n\r\n  useEffect(() => {\r\n    if (seconds === props.timeout) setModalMessageShow(false);\r\n    if (seconds === props.stage3) setModalMessageShow(true);\r\n    if (seconds === 0) onSessionTimeout();\r\n\r\n    // eslint-disable-next-line\r\n  }, [seconds]);\r\n\r\n  // useEffect(() => {\r\n  //   setSeconds(props.timeout);\r\n  //   props.onTimerReset();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [session]);\r\n\r\n  const getJSX = () => {\r\n    let currTime;\r\n    if (seconds > props.stage2) currTime = Math.ceil(seconds / minute);\r\n    else currTime = seconds;\r\n\r\n    const timeFormatted = formatDate(new Date(1970, 1, 1, 0, 0, currTime), {\r\n      minute: \"numeric\",\r\n      second: \"numeric\",\r\n    });\r\n\r\n    const onSessionContinue = () => {\r\n      // console.log(\"onSessionContinue\");\r\n      setSeconds(props.timeout);\r\n      setModalMessageShow(false);\r\n    };\r\n\r\n    const modalMessage = (\r\n      <>\r\n        <Trans\r\n          i18nKey=\"IdleTimer:Automatic logout\"\r\n          timeFormatted={timeFormatted}\r\n        >\r\n          <div className=\"text-center\">Automatic logout in</div>\r\n          <div\r\n            className=\"text-center\"\r\n            style={{ fontSize: \"4em\", fontWeight: \"bold\", color: \"#A93226\" }}\r\n          >\r\n            {{ timeFormatted }}\r\n          </div>\r\n          <div className=\"text-center\">\r\n            Do you want to continue the session?\r\n          </div>\r\n        </Trans>\r\n        <br />\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Continue now\")}\r\n          request=\"continue session\"\r\n          onSubmit={onSessionContinue}\r\n          namespace={props.namespace}\r\n        />\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <ModalMessage\r\n          show={modalMessageShow}\r\n          message={modalMessage}\r\n          onHide={() => setModalMessageShow(false)}\r\n        />\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip>\r\n              {seconds > props.stage2 ? (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Minutes to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  minutes.\r\n                </Trans>\r\n              ) : (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Seconds to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  seconds.\r\n                </Trans>\r\n              )}\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <div style={{ whiteSpace: \"nowrap\", cursor: \"default\" }}>\r\n            <AvTimer\r\n              style={{\r\n                fontSize: \"1.2rem\",\r\n                paddingBottom: \"0.2rem\",\r\n                color: \"var(--dark)\",\r\n              }}\r\n            />\r\n            &nbsp;\r\n            {seconds > props.stage2 ? (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:minutes\" currTime={currTime}>\r\n                    {{ currTime }} minutes\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:min\" currTime={currTime}>\r\n                    {{ currTime }} min\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:seconds\" currTime={currTime}>\r\n                    {{ currTime }} seconds\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:sec\" currTime={currTime}>\r\n                    <span>{{ currTime }}</span> sec\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </OverlayTrigger>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useEventListener = (callback, events) => {\r\n  let defaults = {\r\n    namespace: \"EventListener\",\r\n\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, { events: events });\r\n\r\n  useEffect(() => {\r\n    const eventHandler = (e) => {\r\n      callback(e);\r\n    };\r\n\r\n    for (let i in props.events) {\r\n      window.addEventListener(props.events[i], eventHandler);\r\n    }\r\n\r\n    return () => {\r\n      for (let i in props.events) {\r\n        window.removeEventListener(props.events[i], eventHandler);\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Button,\r\n  // Breadcrumb,\r\n  // NavDropdown,\r\n  // Alert,\r\n} from \"react-bootstrap\";\r\nimport { PowerSettingsNew, AccountCircle } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport UserEditor from \"../userEditor\";\r\nimport IdleTimer from \"../idleTimer\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"MainMenu\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    sessionTimeout,\r\n    accountNumber,\r\n    signedIn,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getBusinesses } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Container\r\n        fluid\r\n        style={{\r\n          paddingRight: \"0\",\r\n          paddingLeft: \"0\",\r\n        }}\r\n      >\r\n        <Row>\r\n          {/*\r\n           * User Menu\r\n           */}\r\n          <Col>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: 0,\r\n                // background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"var(--light)\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              {/**\r\n               * Brand\r\n               */}\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src={\r\n                    settings !== null && typeof settings[\"logo\"] !== \"undefined\"\r\n                      ? settings[\"logo\"]\r\n                      : \"/gfx/zlogo_light.png\"\r\n                  }\r\n                  alt=\"\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n\r\n              {/**\r\n               * User editor\r\n               */}\r\n              <Nav className=\"mr-auto\">\r\n                {signedIn ? (\r\n                  <>\r\n                    {window.location.pathname !== \"/auth\" ? (\r\n                      <Nav.Link eventKey=\"profile\" href=\"/profile\">\r\n                        <UserEditor {...args} />\r\n                      </Nav.Link>\r\n                    ) : (\r\n                      <Nav.Item>\r\n                        <UserEditor {...args} />\r\n                      </Nav.Item>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {false ? (\r\n                      <Nav.Item>\r\n                        <strong>{t(\"Local Currency\")}</strong>\r\n                      </Nav.Item>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Nav>\r\n\r\n              {/**\r\n               * Register\r\n               */}\r\n              {!signedIn && window.location.pathname !== \"/sign-up\" && (\r\n                <Nav>\r\n                  <Nav.Link eventKey=\"sign-out\" href=\"/sign-up\">\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      <span>\r\n                        <AccountCircle\r\n                          style={{\r\n                            fontSize: \"1.2rem\",\r\n                            paddingBottom: \"0.2rem\",\r\n                            color: \"var(--dark)\",\r\n                          }}\r\n                        />\r\n                      </span>\r\n\r\n                      <span className=\"d-none d-sm-inline\">\r\n                        &nbsp;\r\n                        {t(\"Register\")}\r\n                      </span>\r\n                    </span>\r\n                  </Nav.Link>\r\n                </Nav>\r\n              )}\r\n\r\n              {/**\r\n               * Sign in\r\n               */}\r\n              {!signedIn && window.location.pathname !== \"/sign-in\" && (\r\n                <Nav>\r\n                  <Nav.Link eventKey=\"sign-out\" href=\"/sign-in\">\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      <span>\r\n                        <PowerSettingsNew\r\n                          style={{\r\n                            fontSize: \"1.2rem\",\r\n                            paddingBottom: \"0.2rem\",\r\n                            color: \"var(--dark)\",\r\n                          }}\r\n                        />\r\n                      </span>\r\n\r\n                      <span className=\"d-none d-sm-inline\">\r\n                        &nbsp;\r\n                        {t(\"Sign in\")}\r\n                      </span>\r\n                    </span>\r\n                  </Nav.Link>\r\n                </Nav>\r\n              )}\r\n\r\n              {/**\r\n               * Sign out\r\n               */}\r\n              {signedIn && (\r\n                <Nav>\r\n                  <Nav.Link eventKey=\"sign-out\" href=\"/sign-out\">\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      <span>\r\n                        <PowerSettingsNew\r\n                          style={{\r\n                            fontSize: \"1.2rem\",\r\n                            paddingBottom: \"0.2rem\",\r\n                            color: \"var(--dark)\",\r\n                          }}\r\n                        />\r\n                      </span>\r\n\r\n                      <span className=\"d-none d-sm-inline\">\r\n                        &nbsp;\r\n                        {t(\"Sign out\")}\r\n                      </span>\r\n                    </span>\r\n                  </Nav.Link>\r\n                </Nav>\r\n              )}\r\n\r\n              {/**\r\n               * Idle timer\r\n               */}\r\n              {signedIn && (\r\n                <Nav>\r\n                  <Nav.Item>\r\n                    <IdleTimer timeout={sessionTimeout} {...args} />\r\n                  </Nav.Item>\r\n                </Nav>\r\n              )}\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/*\r\n         * Account Menu\r\n         */}\r\n        {signedIn && window.location.pathname !== \"/auth\" && (\r\n          <Row>\r\n            <Col>\r\n              <Navbar\r\n                collapseOnSelect\r\n                expand=\"sm\"\r\n                // className=\"card-header\"\r\n                // className=\"navbar-trans\"\r\n                // bg=\"dark\"\r\n                variant=\"dark\"\r\n                style={{\r\n                  borderRadius: 0,\r\n                  background: \"transparent !important\",\r\n                  backgroundColor: \"var(--dark)\",\r\n                  boxShadow: \"none\",\r\n                }}\r\n              >\r\n                <Nav>\r\n                  <Nav.Link\r\n                    className=\"nav-link-2\"\r\n                    eventKey=\"balance\"\r\n                    href=\"/balance\"\r\n                    style={{\r\n                      fontWeight:\r\n                        window.location.pathname === \"/balance\"\r\n                          ? \"bold\"\r\n                          : \"normal\",\r\n                    }}\r\n                  >\r\n                    {t(\"Balance\")}\r\n                  </Nav.Link>\r\n                </Nav>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                  <Nav className=\"mr-auto\">\r\n                    {accountNumber !== null && (\r\n                      <>\r\n                        <Nav.Link\r\n                          className=\"nav-link-2\"\r\n                          eventKey=\"transfer\"\r\n                          href=\"/transfer\"\r\n                          style={{\r\n                            fontWeight:\r\n                              window.location.pathname === \"/transfer\"\r\n                                ? \"bold\"\r\n                                : \"normal\",\r\n                          }}\r\n                        >\r\n                          {t(\"Transfer\")}\r\n                        </Nav.Link>\r\n                        <Nav.Link\r\n                          className=\"nav-link-2\"\r\n                          eventKey=\"my-business\"\r\n                          href=\"#\"\r\n                          onClick={() => getBusinesses(1)}\r\n                          style={{\r\n                            fontWeight:\r\n                              window.location.pathname === \"/my-business\"\r\n                                ? \"bold\"\r\n                                : \"normal\",\r\n                          }}\r\n                        >\r\n                          {t(\"Business\")}\r\n                        </Nav.Link>\r\n\r\n                        {/**\r\n                         * Currency\r\n                         */}\r\n                        {settings !== null &&\r\n                          typeof settings[\"currencies\"] !== \"undefined\" &&\r\n                          (settings[\"currencies\"] === null ||\r\n                            settings[\"currencies\"].length === 0 ||\r\n                            settings[\"currencies\"].length > 1) && (\r\n                            <Nav.Link\r\n                              className=\"nav-link-2\"\r\n                              eventKey=\"currency\"\r\n                              href=\"/currency\"\r\n                              style={{\r\n                                fontWeight:\r\n                                  window.location.pathname === \"/currency\"\r\n                                    ? \"bold\"\r\n                                    : \"normal\",\r\n                              }}\r\n                            >\r\n                              {t(\"Currency\")}\r\n                            </Nav.Link>\r\n                          )}\r\n                      </>\r\n                    )}\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Summary from \"../summary\";\r\nimport Alert from \"../alert\";\r\nimport Login from \"../login\";\r\nimport Logout from \"../logout\";\r\nimport SignUp from \"../signup\";\r\nimport PasswordReset from \"../passwordReset\";\r\nimport ValidateEmail from \"../validateEmail\";\r\nimport ChangePassword from \"../changePassword\";\r\nimport Auth from \"../auth\";\r\nimport Footer from \"../footer\";\r\nimport MainMenu from \"../mainMenu\";\r\nimport Help from \"../help\";\r\nimport Article from \"../article\";\r\nimport Jobs from \"../jobs\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { signedIn } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getRedirect, getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module constats\r\n   ============================================================================ */\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <>\r\n        <Router>\r\n          {getRedirect()}\r\n\r\n          <div className={appClass} style={{}}>\r\n            {/**\r\n             * The alert\r\n             */}\r\n            <Alert data={args} />\r\n\r\n            {/**\r\n             * Wrapper for the main window\r\n             */}\r\n            <div className={wrapperClass} style={{}}>\r\n              {/**\r\n               * The main window\r\n               */}\r\n              <div\r\n                className={innerClass}\r\n                style={{\r\n                  backgroundColor: \"Transparent\",\r\n                }}\r\n              >\r\n                <MainMenu {...args} />\r\n\r\n                {(window.location.pathname === \"/sign-in\" ||\r\n                  window.location.pathname === \"/sign-out\" ||\r\n                  (window.location.pathname === \"/\" && !signedIn)) && (\r\n                  <Image\r\n                    className=\"d-none d-md-block\"\r\n                    src=\"gfx/raised_hands.png\"\r\n                    fluid\r\n                  />\r\n                )}\r\n\r\n                {/**\r\n                 * Routes\r\n                 */}\r\n                <Switch>\r\n                  {/**\r\n                   * Route: Sign up\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/sign-up\"\r\n                    component={() => {\r\n                      return SignUp(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Sign up\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/auth\"\r\n                    component={() => (signedIn ? Auth(args) : Login(args))}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Validate mail\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/validate-email\"\r\n                    component={() => {\r\n                      return ValidateEmail(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Change password\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/password\"\r\n                    component={() => {\r\n                      return ChangePassword(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Sign out\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/sign-out\"\r\n                    component={() => {\r\n                      return Logout(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Topic\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/jobs\"\r\n                    component={() => {\r\n                      return Jobs(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Topic\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/help\"\r\n                    component={() => {\r\n                      return Help(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Topic\r\n                   */}\r\n                  <Route\r\n                    path=\"/help/topic\"\r\n                    component={() => {\r\n                      return Help(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Article\r\n                   */}\r\n                  <Route\r\n                    path=\"/help/article\"\r\n                    component={() => {\r\n                      return Article(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Password reset\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/reset\"\r\n                    component={() => {\r\n                      return PasswordReset(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Default route\r\n                   */}\r\n                  <Route\r\n                    path=\"*\"\r\n                    component={() => {\r\n                      return signedIn ? Summary(args) : Login(args);\r\n                    }}\r\n                  />\r\n                </Switch>\r\n                <Footer {...args} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ValidateEmail\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    // validateTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    language,\r\n  } = props.barrelGetters;\r\n  const { setValidateTokenEmail } = props.barrelSetters;\r\n  const { getUrlParam, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Hooks\r\n    ============================================================================ */\r\n\r\n  // setToken(getUrlParam(\"token\"));\r\n  // setEmail(getUrlParam(\"email\"));\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenEmail(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (data) => {\r\n    sendRequest({\r\n      req: \"resend validate email token\",\r\n      data: {\r\n        token: validationTokenEmail.token,\r\n        email: validationTokenEmail.email,\r\n        language,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const queryString = window.location.search;\r\n    // const urlParams = new URLSearchParams(queryString);\r\n\r\n    return token === null ? (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        <h4>{t(\"A verification link has been sent to your email account.\")}</h4>\r\n        <hr />\r\n        <p>\r\n          {t(\r\n            \"Please click on the link that has just been sent to your email account\"\r\n          )}\r\n        </p>\r\n        {validationTokenEmailResent < 5 && (\r\n          <>\r\n            <br />\r\n            <h5>{t(\"Didn't receive email?\")}</h5>\r\n\r\n            <SubmitButton\r\n              {...args}\r\n              caption={t(\"Submit\")}\r\n              visible={true}\r\n              marginTop={20}\r\n              request={\"resend validate email token\"}\r\n              namespace={props.namespace}\r\n              onSubmit={handleSubmit}\r\n            />\r\n          </>\r\n        )}\r\n      </Card>\r\n    ) : (\r\n      <div className=\"text-center\">\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"border\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={false}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ChangePassword\",\r\n    request: \"change password\",\r\n    email: null,\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([\r\n    passwordResetTokenValidated === true ? \"SignUp\" : \"ChangePassword\",\r\n  ]); // adjust namespace\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.email = passwordResetTokenEmail;\r\n    // console.log(data);\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ChangePasswordForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Password */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"New password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  if (passwordResetTokenValidated === true) {\r\n    // if (true) {\r\n    return (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        <Formik\r\n          component={ChangePasswordForm}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            password: \"\",\r\n          }}\r\n        />\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        {t(\"Awaiting validation\")}\r\n      </Card>\r\n    );\r\n  }\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(\"Logout\");\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info, language, emailChanged } = props.barrelGetters;\r\n  const {\r\n    setLanguage,\r\n    setRedirectTo,\r\n    // setEmailChanged,\r\n    // setLoggingOut,\r\n    setInfo,\r\n    setError,\r\n  } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onLogOut, onRedirect } = props.barrelEventHandlers;\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Save vars\r\n     */\r\n    const tempError = error;\r\n    const tempInfo = info;\r\n    const tempLanguage = language;\r\n    const tempEmailChanged = emailChanged;\r\n\r\n    /**\r\n     * Log out\r\n     */\r\n    onLogOut();\r\n\r\n    /**\r\n     * Restore vars\r\n     */\r\n    setLanguage(tempLanguage);\r\n\r\n    if (tempEmailChanged) {\r\n      onRedirect(\"/validate-email\");\r\n    }\r\n\r\n    if (tempError !== null) {\r\n      setError(JSON.stringify(tempError));\r\n    } else {\r\n      setError(null);\r\n    }\r\n\r\n    if (tempInfo !== null) {\r\n      setInfo(JSON.stringify(tempInfo));\r\n    } else {\r\n      setInfo(null);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, []); // JSON.stringify(error), JSON.stringify(info) - logOut\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        <h4>{t(\"See you soon\")}</h4>\r\n        <hr />\r\n\r\n        <Trans i18nKey=\"Logout:Security note\">\r\n          <strong>Security note:</strong> For security reasons, it is\r\n          recommended that you close the browser completely at the end of your\r\n          visit to the Local Currency website (i.e. all browser windows or\r\n          browser tabs) and then open it again if necessary to visit other\r\n          websites. This note applies in particular if you do not use your Local\r\n          Currency website at home, but on a public device or a device that is\r\n          accessible to other people - for example in an internet cafe, in a\r\n          hotel or at work.\r\n        </Trans>\r\n\r\n        <br />\r\n        <br />\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Sign in\")}\r\n          request=\"get started\"\r\n          namespace=\"LogIn\"\r\n          onSubmit={() => setRedirectTo(\"/\")}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Component\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        maxWidth=\"700px\"\r\n        header={false}\r\n      >\r\n        test\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default () => {\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>test3</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n  * Default export\r\n  ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ResetPassword\", request: \"reset password\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { language, passwordResetEmail } = props.barrelGetters;\r\n  const {\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetEmail,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getUrlParam } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  const refEmail = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    const tempRefEmail = refEmail.current;\r\n    return () => {\r\n      if (tempRefEmail !== null && passwordResetEmail !== tempRefEmail.value)\r\n        setPasswordResetEmail(tempRefEmail.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenPasswordReset(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n    * Event listeners\r\n    ============================================================================ */\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    data.language = language;\r\n    sendRequest({\r\n      req: props.request,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n  });\r\n\r\n  const passwordResetForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      align=\"left\"\r\n      // maxWidth=\"500px\"\r\n      header={false}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <h3>{t(\"Reset password\")}</h3>\r\n\r\n        {/* Email */}\r\n        <Form.Group controlId=\"validationFormikEmail\">\r\n          <Form.Label>{t(\"Email address\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              placeholder={t(\"Enter email\")}\r\n              name=\"email\"\r\n              ref={refEmail}\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.email && touched.email}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.email}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  // return (\r\n  //   <Formik\r\n  //     component={passwordResetForm}\r\n  //     validationSchema={schema}\r\n  //     onSubmit={onSubmit}\r\n  //     initialValues={{\r\n  //       email: \"\",\r\n  //     }}\r\n  //   />\r\n  // );\r\n\r\n  return token === null ? (\r\n    <Formik\r\n      component={passwordResetForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        email: passwordResetEmail,\r\n      }}\r\n    />\r\n  ) : (\r\n    <div className=\"text-center\">\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n        hidden={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Leads.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n    * User imports\r\n    ============================================================================ */\r\n// import Alert from \"../alert\";\r\n// import LanguageSelector from \"../language-selector\";\r\nimport FileLoader from \"../fileLoader\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n      * Default Properties\r\n      ============================================================================ */\r\n  let defaults = { namespace: \"Leads\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const { signedIn, language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n      * Destructured vars\r\n      ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n  // const appClass = \"App\";\r\n\r\n  /**\r\n      * Functions\r\n      ============================================================================ */\r\n  const getJSX = () => {\r\n    let leadFile;\r\n    switch (window.location.pathname) {\r\n      case \"/\":\r\n      case \"/sign-in\":\r\n        leadFile = \"LeadHome.js\";\r\n        break;\r\n\r\n      case \"/sign-up\":\r\n        leadFile = \"LeadSignUp.js\";\r\n        break;\r\n\r\n      case \"/auth\":\r\n        leadFile = \"LeadAuth.js\";\r\n        break;\r\n\r\n      case \"/transfer\":\r\n        leadFile = \"Transfer.js\";\r\n        break;\r\n\r\n      // case \"/transfer/u2s\":\r\n      //   leadFile = \"TransferU2S.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2u\":\r\n      //   leadFile = \"TransferU2U.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2b\":\r\n      //   leadFile = \"TransferU2B.js\";\r\n      //   break;\r\n\r\n      default:\r\n        leadFile = \"_LeadDefault.js\";\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className={appClass} style={{ padding: \"0 0% 0 0%\" }}>\r\n        {/**\r\n         * Wrapper for the main window\r\n         */}\r\n        <div className={wrapperClass} style={{}}>\r\n          {/**\r\n           * Top margin of the main window (only for >= sm)\r\n           */}\r\n          <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n          {/**\r\n           * The main window\r\n           */}\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              background: \"Transparent\",\r\n              boxShadow: \"none\",\r\n              padding: \"0 15px\",\r\n            }}\r\n          >\r\n            <FileLoader\r\n              {...args}\r\n              path3=\"leads\"\r\n              file={leadFile}\r\n              defaultFile=\"LeadLogIn.js\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n      * Return\r\n      ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Toasts.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n    * User imports\r\n    ============================================================================ */\r\nimport LanguageSelector from \"../language-selector\";\r\nimport FileLoader from \"../fileLoader\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n      * Default Properties\r\n      ============================================================================ */\r\n  let defaults = { namespace: \"Toasts\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const { signedIn, language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n      * Destructured vars\r\n      ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n  // const appClass = \"App\";\r\n\r\n  /**\r\n      * Functions\r\n      ============================================================================ */\r\n  const getJSX = () => {\r\n    let fileName;\r\n    switch (window.location.pathname) {\r\n      case \"/\":\r\n      case \"/sign-in\":\r\n        fileName = \"ToastHome.js\";\r\n        break;\r\n\r\n      case \"/sign-up\":\r\n        fileName = \"ToastSignUp.js\";\r\n        break;\r\n\r\n      case \"/auth\":\r\n        fileName = \"ToastAuth.js\";\r\n        break;\r\n\r\n      // case \"/transfer\":\r\n      //   fileName = \"Transfer.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2s\":\r\n      //   fileName = \"TransferU2S.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2u\":\r\n      //   fileName = \"TransferU2U.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2b\":\r\n      //   fileName = \"TransferU2B.js\";\r\n      //   break;\r\n\r\n      default:\r\n        fileName = \"_ToastDefault.js\";\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={appClass}\r\n        style={{\r\n          padding: \"0 0% 0 0%\",\r\n        }}\r\n      >\r\n        {/**\r\n         * Wrapper for the main window\r\n         */}\r\n        <div className={wrapperClass} style={{}}>\r\n          {/** overflowY: \"auto\", maxHeight: \"100vh\" */}\r\n          {/**\r\n           * Top margin of the main window (only for >= sm)\r\n           */}\r\n          <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n          {/**\r\n           * The main window\r\n           */}\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              background: \"Transparent\",\r\n              boxShadow: \"none\",\r\n              padding: \"0 15px\",\r\n            }}\r\n          >\r\n            <FileLoader\r\n              {...args}\r\n              file={fileName}\r\n              path3=\"toasts\"\r\n              defaultFile=\"_ToastDefault.js\"\r\n            />\r\n\r\n            {/**\r\n             * Footer\r\n             */}\r\n            {false && (\r\n              <div className=\"text-center\">\r\n                <span style={{}}>\r\n                  <LanguageSelector {...args} />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n      * Return\r\n      ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n// import { useScrollPosition } from \"../../utils/useScrollPosition\";\r\nimport Routes from \"./Routes\";\r\nimport Leads from \"../leads\";\r\nimport Toasts from \"../toasts\";\r\n\r\n/**\r\n * Component: Main\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const {\r\n    session,\r\n    serverResponseReceived,\r\n    signedIn,\r\n    userData,\r\n    dailyAllowanceDispatched,\r\n    accountNumber,\r\n    cartID,\r\n    cartContent,\r\n    validateTokenEmail,\r\n    passwordResetTokenValidated,\r\n    validateTokenPasswordReset,\r\n    connected,\r\n    // isExternalRequest,\r\n    clearRefs,\r\n    loggingOut,\r\n    scrollPositionY,\r\n    // hideOnScroll,\r\n    cartProcessingStatus,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRequestTimedOut,\r\n    setUpdateInterval,\r\n    setDailyAllowanceDispatched,\r\n    setRequest,\r\n    // setIsExternalRequest,\r\n    setUserEditorFirstname,\r\n    setUserEditorLastname,\r\n    setUserEditorEmail,\r\n    setUserEditorPassword,\r\n    setRedirectTo,\r\n\r\n    // Currency registration\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n\r\n    // Business registration\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n\r\n    // Purpose registration\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationKeywords,\r\n\r\n    // Contact\r\n    setContactSubject,\r\n    setContactMessage,\r\n\r\n    // Date range\r\n    setDateRangeStart,\r\n    setDateRangeEnd,\r\n\r\n    // Search\r\n    setSearch,\r\n\r\n    //\r\n    setClearRefs,\r\n\r\n    // setHideOnScroll,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // processUserResponse,\r\n    getIP,\r\n    saveCartID,\r\n    getCartPurposes,\r\n    // updateLastSeenUser,\r\n    getAccountData,\r\n    sendRequest,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    showMessage,\r\n    getCart,\r\n    // setScrollPosition,\r\n  } = props.barrelFunctions;\r\n  const {\r\n    onRedirect,\r\n    onSessionStart,\r\n    // onSessionEnd,\r\n  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  /** \r\n   * Effect hooks\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On mount / on unmount\r\n   */\r\n  useEffect(() => {\r\n    getIP();\r\n\r\n    return () => {\r\n      // on unmount\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * On session ID change\r\n   */\r\n  useEffect(() => {\r\n    if (session === null) return;\r\n\r\n    onSessionStart();\r\n\r\n    // eslint-disable-next-line\r\n  }, [session]);\r\n\r\n  /**\r\n   * On connected\r\n   */\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n  }, [connected]);\r\n\r\n  /**\r\n   * On request timeout\r\n   */\r\n  useTimeout(\r\n    () => {\r\n      setRequestTimedOut(true);\r\n      setRequest(null);\r\n      showMessage(\"REQUEST_EXPIRED\", \"info\");\r\n    },\r\n    serverResponseReceived === false ? 7000 : -1 // 7 sec till socket request timeout\r\n  );\r\n\r\n  /**\r\n   * Map user data to user editor vars\r\n   */\r\n  useEffect(() => {\r\n    if (userData === null) return;\r\n    setUserEditorFirstname(userData.firstname);\r\n    setUserEditorLastname(userData.lastname);\r\n    setUserEditorEmail(userData.email);\r\n    setUserEditorPassword(\"\");\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(userData)]);\r\n\r\n  /**\r\n   * On signed in status change\r\n   */\r\n  useEffect(() => {\r\n    if (!signedIn) return;\r\n\r\n    setUpdateInterval(-1);\r\n\r\n    // Dispatch daily allowance\r\n    if (accountNumber !== null && !dailyAllowanceDispatched) {\r\n      getAccountData();\r\n      sendRequest({\r\n        req: \"dispatch daily allowance\",\r\n        data: { uid: accountNumber },\r\n      });\r\n      setDailyAllowanceDispatched(true);\r\n    }\r\n\r\n    /**\r\n     * Handle external request\r\n     */\r\n    // let redirectTarget;\r\n    if (accountNumber !== null) {\r\n      if (cartID !== null) {\r\n        getCart();\r\n        onRedirect(\"/auth\");\r\n      }\r\n    } else {\r\n      if (window.location.pathname !== \"/sign-out\") {\r\n        if (\r\n          userData === null ||\r\n          userData.status !== 1 ||\r\n          typeof userData.status === \"undefined\"\r\n        ) {\r\n          showMessage(\"EMAIL_NOT_YET_VALIDATED\", \"info\");\r\n          onRedirect(\"/sign-out\");\r\n          return;\r\n        } else {\r\n          onRedirect(\"/account-registration\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [signedIn]);\r\n\r\n  /**\r\n   * On account number change\r\n   */\r\n  useEffect(() => {\r\n    // if (accountNumber === null) return;\r\n\r\n    getCart();\r\n\r\n    // eslint-disable-next-line\r\n  }, [accountNumber]);\r\n\r\n  /**\r\n   * On account number change\r\n   */\r\n  // useEffect(() => {\r\n  //   if (cartProcessingStatus === null) return;\r\n\r\n  //   console.log(\"cartProcessingStatus: \", cartProcessingStatus);\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [cartProcessingStatus]);\r\n\r\n  /**\r\n   * Clear refs\r\n   */\r\n  useEffect(() => {\r\n    if (clearRefs === false) return;\r\n\r\n    // Business registration\r\n    setBusinessRegistrationAddTitle(\"\");\r\n    setBusinessRegistrationAddDescription(\"\");\r\n\r\n    // Purpose registration\r\n    setPurposeRegistrationTitle(\"\");\r\n    setPurposeRegistrationDescription(\"\");\r\n    setPurposeRegistrationKeywords(\"\");\r\n\r\n    // Currency registration\r\n    setCurrencyCode(\"\");\r\n    setCurrencyName(\"\");\r\n    setCurrencyRegion(\"\");\r\n    setCurrencyNewRate(\"\");\r\n\r\n    // Contact\r\n    setContactSubject(\"\");\r\n    setContactMessage(\"\");\r\n\r\n    // Date range\r\n    setDateRangeStart(now.setDate(now.getDate() - 7));\r\n    setDateRangeEnd(\"today\");\r\n\r\n    // Search\r\n    setSearch(\"\");\r\n\r\n    setClearRefs(false);\r\n\r\n    // eslint-disable-next-line\r\n  }, [clearRefs]);\r\n\r\n  /**\r\n   * On cart content change\r\n   */\r\n  useEffect(() => {\r\n    if (!signedIn || cartContent === null) return;\r\n\r\n    getCartPurposes();\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(cartContent)]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenEmail === null) return;\r\n\r\n    sendEmailValidationRequest(JSON.parse(validateTokenEmail));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenEmail]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (passwordResetTokenValidated === null) return;\r\n\r\n    onRedirect(\"/password\");\r\n\r\n    // eslint-disable-next-line\r\n  }, [passwordResetTokenValidated]);\r\n\r\n  /**\r\n   * On password reset validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenPasswordReset === null) return;\r\n\r\n    sendPasswordResetRequest(JSON.parse(validateTokenPasswordReset));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenPasswordReset]);\r\n\r\n  const getJSX = () => {\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          <Row>\r\n            {/** Left column */}\r\n            <Col xl={4} lg={6} className=\"d-none d-lg-block\" style={{}}>\r\n              <Leads {...barrels} />\r\n            </Col>\r\n\r\n            {/** Middle column */}\r\n            <Col\r\n              lg={6}\r\n              md={12}\r\n              style={{ padding: 0, backgroundColor: \"Transparent\" }}\r\n            >\r\n              <Routes {...barrels} />\r\n            </Col>\r\n\r\n            {/** Right column */}\r\n            <Col\r\n              className=\"d-none d-xl-block\"\r\n              style={{ paddingLeft: 0, paddingRight: 0 }}\r\n            >\r\n              <Toasts {...barrels} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Build } from \"@material-ui/icons\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"UnderConstruction\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          {/** Left column */}\r\n          <Col xl={4} lg={6} className=\"d-none d-lg-block\" style={{}}></Col>\r\n\r\n          {/** Middle column */}\r\n          <Col\r\n            lg={6}\r\n            md={12}\r\n            style={{ padding: \"40px 0 0 0\", backgroundColor: \"Transparent\" }}\r\n          >\r\n            <center>\r\n              <h3>\r\n                <Build style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n                <br />\r\n                <br />\r\n                {t(\"We are constructing\")}\r\n                <br />\r\n                <br />\r\n              </h3>\r\n            </center>\r\n          </Col>\r\n\r\n          {/** Right column */}\r\n          <Col\r\n            className=\"d-none d-xl-block\"\r\n            style={{ paddingLeft: 0, paddingRight: 0 }}\r\n          ></Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { PowerOff } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"NotConnected\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <PowerOff style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"Not connected\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport config from \"./config\";\r\nimport openSocket from \"socket.io-client\";\r\n// import { useTimeout } from \"./useTimeout\";\r\n\r\nlet socket = openSocket.connect(config.uri.ENDPOINT, {\r\n  secure: true,\r\n  reconnect: true,\r\n});\r\n\r\n/**\r\n * Send request to the server\r\n * @param {*} param0\r\n */\r\nexport const sendData = (data, debug = false) => {\r\n  if (debug) console.log(`request: ${data.req}`, data);\r\n\r\n  // No data - do not send\r\n  // if (req.length === 0) return false;\r\n\r\n  // useTimeout(() => {\r\n  //   console.log(\"Socket timeout\");\r\n  // }, 3000);\r\n\r\n  socket.emit(`onDataReceived`, data);\r\n  return true;\r\n};\r\n\r\n// Start a session\r\nexport const startSession = (data, session, debug = false) => {\r\n  // console.log(\"startSession\");\r\n  if (debug) console.log(`request: start session`, data, session);\r\n\r\n  socket.emit(`start session`, {\r\n    data: data,\r\n    session: session,\r\n    req: \"start session\",\r\n  });\r\n};\r\n\r\n// End the session\r\nexport const endSession = (data, session, debug = false) => {\r\n  if (debug) console.log(`request: end session`, data, session);\r\n  socket.emit(`end session`, {\r\n    // char: data,\r\n    data: data,\r\n    // uid: uid,\r\n    session: session,\r\n    req: \"end session\",\r\n  });\r\n};\r\n\r\n// Custom hook: useSocket\r\nexport const useSocket = (callback) => {\r\n  const [responseData, setResponseData] = useState(null);\r\n\r\n  socket.on(`onDataReceived`, (data) => {\r\n    setResponseData(data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (responseData === null) return;\r\n\r\n    callback(responseData);\r\n    // eslint-disable-next-line\r\n  }, [responseData]);\r\n};\r\n\r\nexport const useSystemSocket = (callback, instance) => {\r\n  useEffect(() => {\r\n    // socket.on(\"onDataReceived\", (data) => {\r\n    //   callback(data);\r\n    // });\r\n\r\n    /**\r\n     * System error listeners\r\n     */\r\n    socket.on(\"connect_error\", () => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_error\",\r\n          context: {},\r\n          error: { code: \"none\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"connect_timeout\", (timeout) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_timeout\",\r\n          context: {},\r\n          error: { code: \"connect_timeout\", timeout },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_error\",\r\n          context: {},\r\n          error: { code: error.type, error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_failed\", () => {\r\n      // This should never occur\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_failed\",\r\n          context: {},\r\n          error: { code: \"reconnect_failed\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"error\",\r\n          context: {},\r\n          error: { code: \"error\", error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    /**\r\n     * System status listeners\r\n     */\r\n    socket.on(\"ping\", () => {\r\n      // callback({ data: \"ping\" }, true);\r\n    });\r\n    socket.on(\"pong\", (latency) => {\r\n      // callback({ data: \"pong\", latency }, true);\r\n    });\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n      if (reason === \"io server disconnect\") {\r\n        // the disconnection was initiated by the server, you need to reconnect manually\r\n        socket.connect();\r\n      } else {\r\n        // else the socket will automatically try to reconnect\r\n      }\r\n      // Reasons:\r\n      // - \"transport close\": Server was stopped\r\n      callback({ req: \"disconnect\", status: \"success\", reason }, true);\r\n    });\r\n    socket.on(\"reconnect\", (attemptNumber) => {\r\n      // Successfully reconnected on attempt: attemptNumber\r\n      callback({ req: \"reconnect\", status: \"success\", attemptNumber }, true);\r\n    });\r\n    socket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnect attempt\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnecting\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnecting\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n  }, [instance]);\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"RESPONSE HANDLER: \", props, barrels);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    debug,\r\n    // requestTS,\r\n    // session,\r\n    // sessionTimeout,\r\n    // settings,\r\n    // loggingIn,\r\n    // isExternalRequest,\r\n    signedIn,\r\n    instance,\r\n    responseProps,\r\n    currencies,\r\n    transactions,\r\n    transferRequest,\r\n    shares,\r\n    // transactionsPerPage,\r\n    // sharesPerPage,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    // uid,\r\n    userBusinesses,\r\n    cartPurposes,\r\n    businessPurposes,\r\n    purposeShareholders,\r\n    activeBusinesPurpose,\r\n    lastInsertId,\r\n    cartContent,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setSession,\r\n    // setSessionTimeoutApplied,\r\n    setResponseProps,\r\n    setSettings,\r\n    setLoggingIn,\r\n    // setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setConnected,\r\n    // setLanguage,\r\n    setUserData,\r\n    setSignedIn,\r\n    // setIsExternalRequest,\r\n    setCartContent,\r\n    setCartProps,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    // setTransferSuccess,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setCartPurposes,\r\n    setBusinessPurposes,\r\n    setCountBusinessPurposes,\r\n    setPurposeShareholders,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidateTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setActivePurposeData,\r\n    setTanRequired,\r\n    // setRedirect,\r\n    setClearRefs,\r\n    setEmailChanged,\r\n    setCartProcessingStatus,\r\n    setActiveBusiness,\r\n  } = barrels.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    // processUserResponse,\r\n    // getBusinesses,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    showMessage,\r\n    changeLanguage,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    // endSession,\r\n    // updateLastSeenUser,\r\n    // showTanInput,\r\n    // updateTimestamp,\r\n    // hideMessage,\r\n  } = barrels.barrelFunctions;\r\n  const {\r\n    // onTransferSuccess,\r\n    onRedirect,\r\n    // onSessionTimeout,\r\n    onSessionEnd,\r\n    // onLogOut,\r\n  } = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug) console.log(`response: ${req} (${props.status})`, props, barrels);\r\n\r\n  /**\r\n   * Save response properties\r\n   * @param {string} req\r\n   * @param {string} name\r\n   * @param {string} status\r\n   */\r\n  const saveResponseProps = ({ req, name, status }) => {\r\n    const res = typeof name !== \"undefined\" ? `${req} / ${name}` : req;\r\n    if (responseProps === null) {\r\n      setResponseProps(JSON.stringify([{ res, status }]));\r\n    } else {\r\n      const tempRP = deleteObjectArrayElement(responseProps, \"res\", res);\r\n      setResponseProps(JSON.stringify([...tempRP, { res, status }]));\r\n    }\r\n  };\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (instance === props.reqData.instance &&\r\n        res === \"*\" &&\r\n        status === props.status &&\r\n        name === props.name) ||\r\n      (instance === props.reqData.instance &&\r\n        res === props.req &&\r\n        status === props.status) ||\r\n      (instance === props.reqData.instance && res === \"unknown\")\r\n    ) {\r\n      saveResponseProps({ req, name: props.name, status: props.status });\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n    if (typeof props.token !== \"undefined\") {\r\n      console.log(\"Renewing session...\");\r\n\r\n      onSessionEnd();\r\n      setSession(props.token);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Start session (success)\r\n   */\r\n  onResponse([\"start session\", \"success\"], () => {\r\n    if (signedIn) {\r\n      sendRequest({ req: \"validate session\", data: {} });\r\n    }\r\n    setConnected(true);\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * End session (success)\r\n   */\r\n  onResponse([\"end session\", \"success\"], () => {\r\n    // console.log(\"ON END SESSION\");\r\n\r\n    setConnected(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM users\") {\r\n      setUserSequence(props.results.sequence);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"success\"], () => {\r\n    // register user\r\n    sendRequest({ req: \"register account\", data: props.reqData });\r\n  });\r\n\r\n  onResponse([\"get tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n    setTanRequired(true);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get cart\", \"continue\"], () => {\r\n    if (props.name === \"SELECT carts\") {\r\n      setCartContent(props.results.content);\r\n      delete props.results.content;\r\n      setCartProps(JSON.stringify(props.results));\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"pending\"], () => {\r\n    // setTanRequired(false);\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"finished\"], () => {\r\n    if (props.name === \"UPDATE tans\") {\r\n      if (props.queryCnt > 0) {\r\n        // setTanRequired(true);\r\n        return false;\r\n      } else {\r\n        // setTanRequired(false);\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n\r\n    sendRequest({ req: transferRequest.transferType, data: transferRequest });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (pending)\r\n   */\r\n  onResponse([\"register user\", \"pending\"], () => {\r\n    // Might show some user feedback\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register user\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO users\") {\r\n      if (props.results.insertId > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    } else if (props.name === \"INSERT INTO validation_tokens\") {\r\n      // const { token, email } = props.tags;\r\n      // setValidateTokenEmail(\r\n      //   JSON.stringify({\r\n      //     token,\r\n      //     email,\r\n      //   })\r\n      // );\r\n      setValidationTokenEmail({\r\n        token: props.tags.token,\r\n        email: props.tags.email,\r\n      });\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (success)\r\n   */\r\n  onResponse([\"register user\", \"success\"], () => {\r\n    // console.log(\"REGISTER USER PROPS:\", props);\r\n    const noEmailValidation = false;\r\n\r\n    if (noEmailValidation) {\r\n      setSignedIn(true);\r\n      setSession(props.email); // TODO: Might restore\r\n      onRedirect(\"/account-registration\");\r\n      sendRequest({ req: \"get user\", data: { email: props.email } }); // to not require a log in\r\n      return false;\r\n    } else {\r\n      onRedirect(\"/validate-email\");\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"continue\"], () => {\r\n    if (props.name === \"SELECT validation_tokens\") {\r\n      setValidationTokenEmailResent(props.results.resent);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"continue\"], () => {\r\n    if (props.name === \"UPDATE validation tokens\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        // onRedirect(\"/sign-in\");\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (props.name === \"UPDATE users\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        onRedirect(\"/sign-in\");\r\n        return true;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"success\"], () => {\r\n    showMessage(\"EMAIL_VALIDATION_SUCCESS\", \"info\", false);\r\n    setValidateTokenEmail(null); // email validation token not needed any more + prevent the unnecessary resend\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"validate password reset token\", \"continue\"], () => {\r\n  //   if (props.name === \"UPDATE validation tokens\") {\r\n  //     if (props.results.affectedRows > 0) {\r\n  //       // onRedirect(\"/password\");\r\n  //       setPasswordResetTokenValidated(true);\r\n  //       return true;\r\n  //     } else {\r\n  //       // No row was inserted - an error was returned\r\n  //       return true;\r\n  //     }\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"validate password reset token\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(true);\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get URI settings (continue)\r\n   */\r\n  onResponse([\"get uri settings\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM uri_settings\") {\r\n      const results = JSON.parse(props.results.settings);\r\n\r\n      // console.log(\"results.settings\", results);\r\n\r\n      setSettings(JSON.stringify(results));\r\n\r\n      // Force single currency\r\n      if (\r\n        typeof results[\"currency\"] !== \"undefined\" &&\r\n        results[\"currency\"] !== null\r\n      ) {\r\n        const abbr = results[\"currency\"];\r\n        // setCurrencyAbbr(abbr);\r\n        sendRequest({\r\n          req: \"register user currency\",\r\n          data: { email: userData.email, currency_id: abbr },\r\n        });\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user currency (success)\r\n   */\r\n  onResponse([\"register user currency\", \"success\"], () => {\r\n    setCurrencyAbbr(props.reqData.currency_id);\r\n    // return false;\r\n  });\r\n\r\n  /**\r\n   * Sign in user (continue)\r\n   */\r\n  onResponse([\"sign in user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      /**\r\n       * Validated user\r\n       */\r\n      if (props.results.status === 1) {\r\n        // email validated\r\n        setUserData(JSON.stringify(props.results));\r\n        setAccountNumber(props.results.uid);\r\n        // setSession(props.results.email); // TODO: Might restore\r\n        setCurrencyAbbr(props.results.currency_abbr);\r\n        setCurrencyRate(\r\n          isNaN(props.results.currency_rate) ? 1 : props.results.currency_rate\r\n        );\r\n\r\n        changeLanguage(props.results.language);\r\n\r\n        return false;\r\n\r\n        /**\r\n         * Not yet validated user\r\n         */\r\n      } else if (props.results.status === 0) {\r\n        // setAccountNumber(props.results.uid);\r\n        setUserData(JSON.stringify(props.results));\r\n        changeLanguage(props.results.language);\r\n        onRedirect(\"/validate-email\");\r\n        return true;\r\n\r\n        /**\r\n         * Suspended user\r\n         */\r\n      } else if (props.results.status === 2) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_SUSPENDED\", \"error\");\r\n        return true;\r\n\r\n        /**\r\n         * Deleted user\r\n         */\r\n      } else if (props.results.status === 3) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_DELETED\", \"error\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Sign in user (finished)\r\n   */\r\n  onResponse([\"sign in user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt > 0) {\r\n        return false;\r\n      } else {\r\n        showMessage(\"INVALID_SIGN_IN\", \"error\");\r\n        // setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"sign in user\", \"success\"], () => {\r\n    setSignedIn(true);\r\n    setLoggingIn(false);\r\n    onSessionEnd();\r\n    setSession(props.token);\r\n    setRedirectTo(\"/balance\");\r\n\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Update user (continue)\r\n  //  */\r\n  // onResponse([\"update user\", \"continue\"], () => {\r\n  //   if (props.name === \"INSERT INTO validation_tokens\") {\r\n  //     onRedirect(\"/validate-email\");\r\n  //     return false;\r\n  //   }\r\n  //   return true;\r\n  // });\r\n\r\n  /**\r\n   * Update user (success)\r\n   */\r\n  onResponse([\"update user\", \"success\"], () => {\r\n    if (\r\n      typeof props.reqData.newEmail !== \"undefined\" &&\r\n      props.reqData.newEmail !== null\r\n    ) {\r\n      setEmailChanged(true);\r\n      onRedirect(\"/sign-out\");\r\n      // onRedirect(\"/validate-email\");\r\n      return true;\r\n    } else {\r\n      sendRequest({ req: \"get user\", data: { email: userData.email } });\r\n      return false;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Get user (continue)\r\n   */\r\n  onResponse([\"get user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUserData(JSON.stringify(props.results));\r\n      setUID(props.results.uid);\r\n      setAccountNumber(props.results.uid);\r\n      if (accountNumber === null && props.results.uid !== null) {\r\n        setRedirectTo(\"/summary\");\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user (finished)\r\n   */\r\n  onResponse([\"get user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 1) {\r\n        // exactly one user found - all is good\r\n        return false;\r\n      } else if (props.queryCnt === 0) {\r\n        // Something wrong with (accessing) the user data\r\n        // Probable causes:\r\n        // - user was deleted from the DB\r\n        // - user status was set to >= 2\r\n        // - multiple users with the same email address, most improbable (db constraint)\r\n        // - user changed the email address or password\r\n        setRedirectTo(\"/sign-out\");\r\n        // showMessage(\"INVALID_DATA\", \"error\");\r\n        return true;\r\n      }\r\n      return true;\r\n    }\r\n    // if (props.rowNum === 1) {\r\n    //   return true;\r\n    // } else {\r\n    //   // Something wrong with (accessing) the user data\r\n    //   // Probable causes:\r\n    //   // - user was deleted from the DB\r\n    //   // - user status was set to >= 2\r\n    //   // - multiple users with the same email address, most improbable (db constraint)\r\n    //   // - user changed the email address or password\r\n    //   // onLogOut();\r\n    //   setRedirectTo(\"/sign-out\");\r\n    //   // showMessage(\"INVALID_DATA\", \"error\");\r\n    //   return true;\r\n    // }\r\n  });\r\n\r\n  onResponse([\"get user\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (continue)\r\n   */\r\n  onResponse([\"get user businesses\", \"continue\"], () => {\r\n    if (props.name === \"SELECT businesses\") {\r\n      const business = props.results;\r\n      const { business_id } = business;\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([business]));\r\n        getBusinessPurposes(business_id, 0, 1);\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, business]));\r\n      }\r\n    } else if (props.name === \"COUNT businesses\") {\r\n      setCountBusinesses(props.results.count_businesses);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (finished)\r\n   */\r\n  onResponse([\"get user businesses\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    setUserBusinessesLoaded(true);\r\n    setRedirectTo(\"/my-business\");\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get user businesses\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (continue)\r\n   */\r\n  onResponse([\"get cart purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (cartPurposes === null) {\r\n        setCartPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setCartPurposes(JSON.stringify([...cartPurposes, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      // setCartPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (success)\r\n   */\r\n  onResponse([\"get cart purposes\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (continue)\r\n   */\r\n  onResponse([\"get business purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (businessPurposes === null) {\r\n        setBusinessPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setBusinessPurposes(\r\n          JSON.stringify([...businessPurposes, props.results])\r\n        );\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      setCountBusinessPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (finished)\r\n   */\r\n  onResponse([\"get business purposes\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (continue)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"continue\"], () => {\r\n    if (props.name === \"SELECT shares\") {\r\n      if (purposeShareholders === null) {\r\n        setPurposeShareholders(JSON.stringify([props.results]));\r\n      } else {\r\n        setPurposeShareholders(\r\n          JSON.stringify([...purposeShareholders, props.results])\r\n        );\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (finished)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user business by id (continue)\r\n   */\r\n  // onResponse([\"get business by id\", \"continue\"], () => {\r\n  //   if (userBusinesses === null) {\r\n  //     setUserBusinesses(JSON.stringify([props.results]));\r\n  //   } else {\r\n  //     setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"get business by id\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.name === \"SELECT businesses\") {\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([props.results]));\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business by id (finished)\r\n   */\r\n  onResponse([\"get business by id\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.queryCnt > 0) {\r\n      // getting business was successful - query returned results\r\n      return false;\r\n    } else {\r\n      console.log(\"Error getting business by id\");\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get business by id\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (continue)\r\n   */\r\n  onResponse([\"get purpose by id\", \"continue\"], () => {\r\n    /**\r\n     * Replace the purpose if it is already there\r\n     */\r\n    const index = getObjectArrayElementIndex(\r\n      businessPurposes,\r\n      \"purpose_id\",\r\n      props.results.purpose_id\r\n    );\r\n    if (index > -1) {\r\n      businessPurposes.splice(index, 1);\r\n      let temp = [...businessPurposes, props.results];\r\n      temp = sortObjectArray(temp, \"title\");\r\n      setBusinessPurposes(JSON.stringify(temp));\r\n      setActivePurposeData(JSON.stringify(props.results));\r\n\r\n      /**\r\n       * ... otherwise add the purpose\r\n       */\r\n    } else {\r\n      if (props.name === \"SELECT purposes\") {\r\n        if (businessPurposes === null) {\r\n          setBusinessPurposes(JSON.stringify([props.results]));\r\n        } else {\r\n          setBusinessPurposes(\r\n            JSON.stringify([...businessPurposes, props.results])\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (finished)\r\n   */\r\n  onResponse([\"get purpose by id\", \"finished\"], () => {\r\n    if (props.queryCnt < 1) {\r\n      // Something went wrong\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (success)\r\n   */\r\n  onResponse([\"get purpose by id\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (continue)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"continue\"], () => {\r\n    if (purposeShareholders === null) {\r\n      setPurposeShareholders(JSON.stringify([props.results]));\r\n    } else {\r\n      setPurposeShareholders(\r\n        JSON.stringify([...purposeShareholders, props.results])\r\n      );\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (finished)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Upload file (ready)\r\n   */\r\n  onResponse([\"upload file\", \"continue\"], () => {\r\n    // console.log(\"UPLOAD FILE =========== \");\r\n\r\n    // if (props.name === \"SELECT 1\") {\r\n    // setAccountPhotoPath(props + \"?r=\" + Math.random());\r\n    setAccountPhotoPath(Date.now()); // ok\r\n    return false;\r\n    // }\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"finished\"], () => {\r\n    if (props.name === \"SELECT 1\") {\r\n      if (props.queryCnt === 0) {\r\n        // something went wrong\r\n        // setAccountPhotoPath(\"ok\");\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"continue\"], () => {\r\n    if (props.results.affectedRows < 1) {\r\n      // error registering account\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"INVALID_DATA\", \"error\");\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"success\"], () => {\r\n    // getAccountData();\r\n    sendRequest({ req: \"get user\", data: { email: props.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (continue)\r\n   */\r\n  onResponse([\"get account data\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUID(props.results.uid);\r\n      setUserData(JSON.stringify(props.results));\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (finished)\r\n   */\r\n  onResponse([\"get account data\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 0) {\r\n        // Account not reachable\r\n        // - user session timed out\r\n        showMessage(\"SESSION_TIMED_OUT\", \"info\", false);\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get account data\", \"success\"], () => {\r\n    if (userData === null) return true;\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2S\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (continue)\r\n   */\r\n  onResponse([\"transfer U2S\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (success)\r\n   */\r\n  onResponse([\"transfer U2S\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2U\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (continue)\r\n   */\r\n  onResponse([\"transfer U2U\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (success)\r\n   */\r\n  onResponse([\"transfer U2U\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2B\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (continue)\r\n   */\r\n  onResponse([\"transfer U2B\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (success)\r\n   */\r\n  onResponse([\"transfer U2B\", \"success\"], () => {\r\n    setTanRequired(false);\r\n\r\n    // If not an external request\r\n    if (cartContent === null) {\r\n      showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n      getTransactionById(lastInsertId);\r\n\r\n      return false;\r\n    } else {\r\n      setCartProcessingStatus(true);\r\n      return true;\r\n    }\r\n\r\n    // If an external request\r\n  });\r\n\r\n  /**\r\n   * Register business\r\n   ============================================================================================*/\r\n  onResponse([\"register business\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    if (props.name === \"INSERT INTO businesses\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register business\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    // <ModalConfirm\r\n    //   title=\"Add Shareholders\"\r\n    //   message=\"Do you want to add yourself as a shareholder?\"\r\n    // />;\r\n\r\n    setClearRefs(true);\r\n\r\n    setActiveBusiness(null);\r\n\r\n    showMessage(\"REGISTER_BUSINESS_SUCCESS\", \"info\", false);\r\n\r\n    sendRequest({\r\n      req: \"get business by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    // getBusinesses();\r\n    return false;\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"register currency\", \"continue\"], () => {\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    if (props.results.insertId > 0) {\r\n      setLastInsertId(props.results.insertId);\r\n\r\n      return false;\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register currency\", \"success\"], () => {\r\n    showMessage(\"REGISTER_CURRENCY_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get currency by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (continue)\r\n   */\r\n  onResponse([\"get currencies\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT currencies\") {\r\n      setCountCurrencies(props.results.count_currencies);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (finished)\r\n   */\r\n  onResponse([\"get currencies\", \"finished\"], () => {\r\n    // setRedirectTo(\"/currency\");\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Find currencies (continue)\r\n  //  */\r\n  // onResponse([\"find currencies\", \"continue\"], () => {\r\n  //   // console.log(\"PROPS NAME:\", props.name);\r\n\r\n  //   if (props.name === \"SELECT currencies\") {\r\n  //     if (currencies === null) {\r\n  //       setCurrencies(JSON.stringify([props.results]));\r\n  //     } else {\r\n  //       setCurrencies(JSON.stringify([...currencies, props.results]));\r\n  //     }\r\n  //   } else if (props.name === \"COUNT currencies\") {\r\n  //     setCountCurrencies(props.results.count_currencies);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get currency by id (continue)\r\n   */\r\n  onResponse([\"get currency by id\", \"continue\"], () => {\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get currency by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transactions (continue)\r\n   */\r\n  onResponse([\"get transactions\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT transactions\") {\r\n      if (transactions === null) {\r\n        setTransactions(JSON.stringify([props.results]));\r\n      } else {\r\n        setTransactions(JSON.stringify([...transactions, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT transactions\") {\r\n      setCountTransactions(props.results.count_transaction_positions);\r\n      // } else if (props.name === \"VALIDATE SESSION\") {\r\n      //   if (typeof props.token !== \"undefined\") {\r\n      //     console.log(\"RESET SESSION\");\r\n      //     onSessionEnd();\r\n      //     // setSession(props.newToken);\r\n      //     setSession(props.token);\r\n      //   }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get transactions (finished)\r\n   */\r\n  onResponse([\"get transactions\", \"finished\"], () => {\r\n    setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Find transactions (continue)\r\n  //  */\r\n  // onResponse([\"find transactions\", \"continue\"], () => {\r\n  //   // console.log(\"PROPS NAME:\", props.name);\r\n\r\n  //   if (props.name === \"SELECT transactions\") {\r\n  //     if (transactions === null) {\r\n  //       setTransactions(JSON.stringify([props.results]));\r\n  //     } else {\r\n  //       setTransactions(JSON.stringify([...transactions, props.results]));\r\n  //     }\r\n  //   } else if (props.name === \"COUNT transactions\") {\r\n  //     setCountTransactions(props.results.count_transaction_positions);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get shares (continue)\r\n   */\r\n  onResponse([\"get shares\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT shares\") {\r\n      if (shares === null) {\r\n        setShares(JSON.stringify([props.results]));\r\n      } else {\r\n        setShares(JSON.stringify([...shares, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT shares\") {\r\n      setCountShares(props.results.count_shares);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shares (finished)\r\n   */\r\n  onResponse([\"get shares\", \"finished\"], () => {\r\n    // setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transaction by id (continue)\r\n   */\r\n  onResponse([\"get transaction by id\", \"continue\"], () => {\r\n    if (transactions === null) {\r\n      setTransactions(JSON.stringify([props.results]));\r\n    } else {\r\n      setTransactions(JSON.stringify([...transactions, props.results]));\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get transaction by id\", \"finished\"], () => {\r\n    getAccountData();\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"send message\", \"success\"], () => {\r\n    setClearRefs(true);\r\n    showMessage(\"SEND_MESSAGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"continue\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get purpose by id\",\r\n    //   data: { id: props.results.insertId },\r\n    // });\r\n    if (props.name === \"INSERT INTO purposes\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"success\"], () => {\r\n    showMessage(\"REGISTER_PURPOSE_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: lastInsertId, language: language },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"update purpose property\", \"success\"], () => {\r\n    showMessage(\"UPDATE_PURPOSE_SUCCESS\", \"info\", false);\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: props.reqData.id, language: language },\r\n    });\r\n    // getBusinessPurposes(props.reqData.business_id, 0, 1);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"continue\"], () => {\r\n    if (props.results.insertId > 0) {\r\n      // showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\");\r\n\r\n      // return sendRequest({\r\n      //   req: \"get shareholder by id\",\r\n      //   data: { id: props.results.insertId },\r\n      // });\r\n      setLastInsertId(props.results.insertId);\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"success\"], () => {\r\n    showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\", false);\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"change share\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    // getPurposeShareholders(activeBusinesPurpose);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"remove shareholder\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"reset password\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"change password\", \"success\"], () => {\r\n    // TOTO: If NO_ROWS_CHANGE - probably the currently saved password was submitted\r\n    setPasswordResetTokenValidated(null);\r\n    setPasswordResetTokenEmail(null);\r\n    onRedirect(\"/sign-in\");\r\n    showMessage(\"PASSWORD_CHANGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"unknown\"], () => {\r\n  //   if (\r\n  //     status === \"pending\" ||\r\n  //     status === \"continue\" ||\r\n  //     status === \"finished\" ||\r\n  //     status === \"success\"\r\n  //   ) {\r\n  //     return false;\r\n  //   } else {\r\n  //     showMessage(`${req}: ${status}`, \"info\");\r\n  //     return true;\r\n  //   }\r\n  // });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Loading.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Loading\" };\r\n\r\n  /**\r\n        * Properties\r\n        ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  //   const barrels = DispatcherSkeleton();\r\n\r\n  //\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          {/** Left column */}\r\n          <Col xl={4} lg={6} className=\"d-none d-lg-block\" style={{}}>\r\n            {/** Left column */}\r\n          </Col>\r\n\r\n          {/** Middle column */}\r\n          <Col\r\n            lg={6}\r\n            md={12}\r\n            style={{\r\n              padding: 0,\r\n              backgroundColor: \"Transparent\",\r\n              textAlign: \"center\",\r\n              paddingTop: \"3rem\",\r\n            }}\r\n          >\r\n            <div className=\"lds-ellipsis\">\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </Col>\r\n\r\n          {/** Right column */}\r\n          <Col\r\n            className=\"d-none d-xl-block\"\r\n            style={{ paddingLeft: 0, paddingRight: 0 }}\r\n          >\r\n            {/** Right column */}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport {\r\n  // BrowserRouter as Router,\r\n  // Switch,\r\n  // Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport i18n from \"./translations/i18n\";\r\nimport config from \"./utils/config\";\r\nimport { useStickyState } from \"./utils/state\";\r\nimport Main from \"./components/main\";\r\nimport UnderConstruction from \"./components/underConstruction\";\r\nimport NotConnected from \"./components/notConnected\";\r\n\r\nimport {\r\n  useSocket,\r\n  useSystemSocket,\r\n  sendData,\r\n  startSession,\r\n  endSession,\r\n} from \"./utils/sockets\";\r\n// import { useInterval } from \"./utils/useInterval\";\r\n// import { useTimeout } from \"./utils/useTimeout\";\r\nimport requestHandler from \"./utils/requestHandler\";\r\nimport userErrorHandler from \"./utils/userErrorHandler\";\r\nimport userResponseHandler from \"./utils/userResponseHandler\";\r\nimport systemErrorHandler from \"./utils/systemErrorHandler\";\r\nimport systemResponseHandler from \"./utils/systemResponseHandler\";\r\nimport Loading from \"./components/loading\";\r\n\r\n/**\r\n * Component: Dispatcher\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Dispatcher\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const isLocalhost =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\";\r\n\r\n  /** \r\n   * Hooks\r\n   ============================================================================ */\r\n  const [debug, setDebug] = useState(\r\n    isLocalhost || config.uri.SITEMODE === \"STAGING\"\r\n  );\r\n  const [loggingOut, setLoggingOut] = useState(false);\r\n  const [loggingIn, setLoggingIn] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(true);\r\n  const [request, setRequest] = useStickyState(null, \"request\");\r\n  const [serverResponseReceived, setServerResponseReceived] = useStickyState(\r\n    null,\r\n    \"serverResponseReceived\"\r\n  );\r\n  const [requestTimedOut, setRequestTimedOut] = useStickyState(\r\n    false,\r\n    \"requestTimedOut\"\r\n  );\r\n  const [instance, setInstance] = useState(Date.now());\r\n  const [session, setSession] = useStickyState(uuidv4(), \"session\");\r\n  const [settings, setSettings] = useStickyState(null, \"settings\");\r\n  const [responseProps, setResponseProps] = useStickyState(\r\n    null,\r\n    \"responseProps\"\r\n  );\r\n  const [sessionTimeout, setSessionTimeout] = useStickyState(\r\n    (!debug ? 5 : 120) * 60, // 30 | 5 * 60\r\n    \"sessionTimeout\"\r\n  );\r\n  const [connected, setConnected] = useStickyState(false, \"connected\");\r\n  const [reconnecting, setReconnecting] = useStickyState(false, \"reconnecting\");\r\n  const [ip, setIP] = useStickyState(\"\", \"ip\");\r\n  const [signedIn, setSignedIn] = useStickyState(false, \"signedIn\");\r\n  const [\r\n    dailyAllowanceDispatched,\r\n    setDailyAllowanceDispatched,\r\n  ] = useStickyState(false, \"dailyAllowanceDispatched\");\r\n  // const [isExternalRequest, setIsExternalRequest] = useStickyState(\r\n  //   false,\r\n  //   \"isExternalRequest\"\r\n  // );\r\n  const [cartID, setCartID] = useStickyState(null, \"cartID\");\r\n  const [cartContent, setCartContent] = useStickyState(null, \"cartContent\");\r\n  const [cartProps, setCartProps] = useStickyState(null, \"cartProps\");\r\n  const [cartProcessingStatus, setCartProcessingStatus] = useStickyState(\r\n    null,\r\n    \"cartProcessingStatus\"\r\n  );\r\n  const [updateInterval, setUpdateInterval] = useStickyState(\r\n    -1,\r\n    \"updateInterval\"\r\n  );\r\n  const [currencyAbbr, setCurrencyAbbr] = useStickyState(\"Z\", \"currencyAbbr\");\r\n  const [currencyRate, setCurrencyRate] = useStickyState(1.0, \"currencyRate\");\r\n  const [currencies, setCurrencies] = useStickyState(null, \"currencies\");\r\n  const [transactions, setTransactions] = useStickyState(null, \"transactions\");\r\n  const [shares, setShares] = useStickyState(null, \"shares\");\r\n  const [accordionView, setAccordionView] = useStickyState(\r\n    \"balance\",\r\n    \"accordionView\"\r\n  );\r\n  const [accordionViewCurrency, setAccordionViewCurrency] = useStickyState(\r\n    null,\r\n    \"accordionViewCurrency\"\r\n  );\r\n  const [countCurrencies, setCountCurrencies] = useStickyState(\r\n    null,\r\n    \"countCurrencies\"\r\n  );\r\n  const [countTransactions, setCountTransactions] = useStickyState(\r\n    null,\r\n    \"countTransactions\"\r\n  );\r\n  const [countShares, setCountShares] = useStickyState(null, \"countShares\");\r\n  const [activePageCurrencies, setActivePageCurrencies] = useStickyState(\r\n    1,\r\n    \"activePageCurrencies\"\r\n  );\r\n  const [activePageTransactions, setActivePageTransactions] = useStickyState(\r\n    1,\r\n    \"activePageTransactions\"\r\n  );\r\n  const [activePageShares, setActivePageShares] = useStickyState(\r\n    1,\r\n    \"activePageShares\"\r\n  );\r\n  const [currenciesPerPage, setCurrenciesPerPage] = useStickyState(\r\n    5,\r\n    \"currenciesPerPage\"\r\n  );\r\n  const [transactionsPerPage, setTransactionsPerPage] = useStickyState(\r\n    5,\r\n    \"transactionsPerPage\"\r\n  );\r\n  const [sharesPerPage, setSharesPerPage] = useStickyState(5, \"sharesPerPage\");\r\n  const [userData, setUserData] = useStickyState(null, \"userData\");\r\n  const [uid, setUID] = useStickyState(null, \"uid\");\r\n  const [accountNumber, setAccountNumber] = useStickyState(\r\n    null,\r\n    \"accountNumber\"\r\n  );\r\n  const [userSequence, setUserSequence] = useStickyState(null, \"userSequence\");\r\n  const [accountType, setAccountType] = useStickyState(null, \"accountType\");\r\n  const [userBusinesses, setUserBusinesses] = useStickyState(\r\n    null,\r\n    \"userBusinesses\"\r\n  );\r\n  const [countBusinesses, setCountBusinesses] = useStickyState(\r\n    null,\r\n    \"countBusinesses\"\r\n  );\r\n  const [businessesPerPage, setBusinessesPerPage] = useStickyState(\r\n    1,\r\n    \"businessesPerPage\"\r\n  );\r\n  const [activePageBusinesses, setActivePageBusinesses] = useStickyState(\r\n    1,\r\n    \"activePageBusinesses\"\r\n  );\r\n  const [userBusinessesLoaded, setUserBusinessesLoaded] = useStickyState(\r\n    false,\r\n    \"userBusinessesLoaded\"\r\n  );\r\n  const [activeBusiness, setActiveBusiness] = useStickyState(\r\n    null,\r\n    \"activeBusiness\"\r\n  );\r\n  const [activeBusinessID, setActiveBusinessID] = useStickyState(\r\n    null,\r\n    \"activeBusinessID\"\r\n  );\r\n\r\n  const [businessPurposes, setBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"businessPurposes\"\r\n  );\r\n\r\n  const [cartPurposes, setCartPurposes] = useStickyState(null, \"cartPurposes\");\r\n\r\n  const [countBusinessPurposes, setCountBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"countBusinessPurposes\"\r\n  );\r\n  const [businessPurposesPerPage, setBusinessPurposesPerPage] = useStickyState(\r\n    5,\r\n    \"businessPurposesPerPage\"\r\n  );\r\n  const [\r\n    activePageBusinessPurposes,\r\n    setActivePageBusinessPurposes,\r\n  ] = useStickyState(1, \"activePageBusinessPurposes\");\r\n\r\n  const [activeBusinesPurpose, setActiveBusinesPurpose] = useStickyState(\r\n    null,\r\n    \"activeBusinesPurpose\"\r\n  );\r\n\r\n  const [activePurposeData, setActivePurposeData] = useStickyState(\r\n    null,\r\n    \"activePurposeData\"\r\n  );\r\n\r\n  const [activePurposeProperty, setActivePurposeProperty] = useStickyState(\r\n    null,\r\n    \"activePurposeProperty\"\r\n  );\r\n\r\n  const [purposeShareholders, setPurposeShareholders] = useStickyState(\r\n    null,\r\n    \"purposeShareholders\"\r\n  );\r\n\r\n  const [clearRefs, setClearRefs] = useStickyState(false, \"clearRefs\");\r\n\r\n  /**\r\n   * Log in\r\n   */\r\n  const [logInEmail, setLogInEmail] = useStickyState(\"\", \"logInEmail\");\r\n  const [logInPassword, setLogInPassword] = useStickyState(\"\", \"logInPassword\");\r\n\r\n  /**\r\n   * Sign Up\r\n   */\r\n  const [signUpFirstName, setSignUpFirstName] = useStickyState(\r\n    \"\",\r\n    \"signUpFirstName\"\r\n  );\r\n  const [signUpLastName, setSignUpLastName] = useStickyState(\r\n    \"\",\r\n    \"signUpLastName\"\r\n  );\r\n  const [signUpEmail, setSignUpEmail] = useStickyState(\"\", \"signUpEmail\");\r\n  const [signUpPassword, setSignUpPassword] = useStickyState(\r\n    \"\",\r\n    \"signUpPassword\"\r\n  );\r\n\r\n  /**\r\n   * Transactions\r\n   */\r\n  const [dateRangeStart, setDateRangeStart] = useStickyState(\r\n    now.setDate(now.getDate() - 7), // new Date().fp_incr(-7),\r\n    \"dateRangeStart\"\r\n  );\r\n  const [dateRangeEnd, setDateRangeEnd] = useStickyState(\r\n    \"today\",\r\n    \"dateRangeEnd\"\r\n  );\r\n\r\n  /**\r\n   * Business registration\r\n   */\r\n  const [\r\n    businessRegistrationAddTitle,\r\n    setBusinessRegistrationAddTitle,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddTitle\");\r\n  const [\r\n    businessRegistrationAddDescription,\r\n    setBusinessRegistrationAddDescription,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddDescription\");\r\n\r\n  /**\r\n   * Purpose registration\r\n   */\r\n  const [\r\n    purposeRegistrationTitle,\r\n    setPurposeRegistrationTitle,\r\n  ] = useStickyState(\"\", \"purposeRegistrationTitle\");\r\n  const [\r\n    purposeRegistrationDescription,\r\n    setPurposeRegistrationDescription,\r\n  ] = useStickyState(\"\", \"purposeRegistrationDescription\");\r\n  const [\r\n    purposeRegistrationKeywords,\r\n    setPurposeRegistrationKeywords,\r\n  ] = useStickyState(\"\", \"purposeRegistrationKeywords\");\r\n\r\n  /**\r\n   * User editor\r\n   */\r\n  const [userEditorEditFirstname, setUserEditorEditFirstname] = useStickyState(\r\n    false,\r\n    \"userEditorEditFirstname\"\r\n  );\r\n  const [userEditorFirstname, setUserEditorFirstname] = useStickyState(\r\n    \"\",\r\n    \"userEditorFirstname\"\r\n  );\r\n  const [userEditorEditLastname, setUserEditorEditLastname] = useStickyState(\r\n    false,\r\n    \"userEditorEditLastname\"\r\n  );\r\n  const [userEditorLastname, setUserEditorLastname] = useStickyState(\r\n    \"\",\r\n    \"userEditorLastname\"\r\n  );\r\n  const [userEditorEditEmail, setUserEditorEditEmail] = useStickyState(\r\n    false,\r\n    \"userEditorEditEmail\"\r\n  );\r\n  const [userEditorEmail, setUserEditorEmail] = useStickyState(\r\n    \"\",\r\n    \"userEditorEmail\"\r\n  );\r\n  const [userEditorEditPassword, setUserEditorEditPassword] = useStickyState(\r\n    false,\r\n    \"userEditorEditPassword\"\r\n  );\r\n  const [userEditorPassword, setUserEditorPassword] = useStickyState(\r\n    \"\",\r\n    \"userEditorPassword\"\r\n  );\r\n  const [\r\n    userEditorPasswordVisible,\r\n    setUserEditorPasswordVisible,\r\n  ] = useStickyState(false, \"userEditorPasswordVisible\");\r\n  const [\r\n    userEditorSubmitButtonVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  ] = useStickyState(false, \"userEditorSubmitButtonVisible\");\r\n\r\n  /**\r\n   * Password reset\r\n   */\r\n  const [passwordResetEmail, setPasswordResetEmail] = useStickyState(\r\n    \"\",\r\n    \"passwordResetEmail\"\r\n  );\r\n\r\n  /**\r\n   * TAN input\r\n   */\r\n  const [tanInputTAN, setTanInputTAN] = useStickyState(\"\", \"tanInputTAN\");\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  const [search, setSearch] = useStickyState(\"\", \"search\");\r\n  const [searchTransactions, setSearchTransactions] = useStickyState(\r\n    \"\",\r\n    \"searchTransactions\"\r\n  );\r\n  const [searchPurposes, setSearchPurposes] = useStickyState(\r\n    \"\",\r\n    \"searchPurposes\"\r\n  );\r\n  const [searchShares, setSearchShares] = useStickyState(\"\", \"searchShares\");\r\n\r\n  /**\r\n   * Misc\r\n   */\r\n\r\n  // const [businessLoaded, setBusinessLoaded] = useState(null);\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [redirectTo, setRedirectTo] = useState(null);\r\n  const [lastInsertId, setLastInsertId] = useState(null);\r\n  // const [responseData, setResponseData] = useState(null);\r\n\r\n  const [validateTokenEmail, setValidateTokenEmail] = useState(null);\r\n  const [validateTokenPasswordReset, setValidateTokenPasswordReset] = useState(\r\n    null\r\n  );\r\n\r\n  /**\r\n   * User changed the email address; must log out and show the validation dialog\r\n   */\r\n  const [emailChanged, setEmailChanged] = useStickyState(false, \"emailChanged\"); //\r\n\r\n  const [\r\n    passwordResetTokenValidated,\r\n    setPasswordResetTokenValidated,\r\n  ] = useState(null);\r\n  const [passwordResetTokenEmail, setPasswordResetTokenEmail] = useState(null);\r\n\r\n  // const [tmrConnected] = useState(null);\r\n  const [validationTokenEmail, setValidationTokenEmail] = useStickyState(\r\n    null,\r\n    \"validationTokenEmail\"\r\n  ); //\r\n  const [\r\n    validationTokenEmailResent,\r\n    setValidationTokenEmailResent,\r\n  ] = useStickyState(0, \"validationTokenEmailResent\"); //\r\n  const [language, setLanguage] = useStickyState(\r\n    i18n.options.fallbackLng[0],\r\n    \"language\"\r\n  ); //\r\n  const [transferType, setTransferType] = useStickyState(\r\n    \"#u2s\",\r\n    \"transferType\"\r\n  );\r\n  const [transferRequest, setTransferRequest] = useStickyState(\r\n    null,\r\n    \"transferRequest\"\r\n  );\r\n  const [transferFromAccount, setTransferFromAccount] = useStickyState(\r\n    \"\",\r\n    \"transferFromAccount\"\r\n  );\r\n  const [transferToAccount, setTransferToAccount] = useStickyState(\r\n    \"\",\r\n    \"transferToAccount\"\r\n  );\r\n  const [transferAmount, setTransferAmount] = useStickyState(\r\n    \"\",\r\n    \"transferAmount\"\r\n  );\r\n  const [transferToUID, setTransferToUID] = useStickyState(\"\", \"transferToUID\");\r\n  const [transferToPurpose, setTransferToPurpose] = useStickyState(\r\n    \"\",\r\n    \"transferToPurpose\"\r\n  );\r\n  const [transferDescription, setTransferDescription] = useStickyState(\r\n    \"\",\r\n    \"transferDescription\"\r\n  );\r\n  const [contactSubject, setContactSubject] = useStickyState(\r\n    \"\",\r\n    \"contactSubject\"\r\n  );\r\n  const [contactMessage, setContactMessage] = useStickyState(\r\n    \"\",\r\n    \"contactMessage\"\r\n  );\r\n  const [userBirthYear, setUserBirthYear] = useStickyState(\"\", \"userBirthYear\");\r\n  const [userBirthMonth, setUserBirthMonth] = useStickyState(\r\n    \"\",\r\n    \"userBirthMonth\"\r\n  );\r\n  const [userBirthDay, setUserBirthDay] = useStickyState(\"\", \"userBirthDay\");\r\n  const [userBirthDateError, setUserBirthDateError] = useState(\r\n    \"\",\r\n    \"userBirthDateError\"\r\n  );\r\n  const [userTimezone, setUserTimezone] = useStickyState(\"\", \"userTimezone\");\r\n\r\n  const [currencyCode, setCurrencyCode] = useStickyState(\"\", \"currencyCode\");\r\n  const [currencyName, setCurrencyName] = useStickyState(\"\", \"currencyName\");\r\n  const [currencyRegion, setCurrencyRegion] = useStickyState(\r\n    \"\",\r\n    \"currencyRegion\"\r\n  );\r\n  const [currencyNewRate, setCurrencyNewRate] = useStickyState(\r\n    1.0,\r\n    \"currencyNewRate\"\r\n  );\r\n\r\n  /**\r\n   * Help topics and articles\r\n   */\r\n  const [\r\n    articleFeedbackSubmitted,\r\n    setArticleFeedbackSubmitted,\r\n  ] = useStickyState(false, \"articleFeedbackSubmitted\");\r\n  const [scrollPositionY, setScrollPositionY] = useStickyState(\r\n    0,\r\n    \"scrollPositionY\"\r\n  );\r\n  const [helpPath1, setHelpPath1] = useStickyState(\"#personal\", \"helpPath1\");\r\n  const [helpPath2, setHelpPath2] = useStickyState(\r\n    \"common-questions\",\r\n    \"helpPath2\"\r\n  );\r\n  const [helpPath3, setHelpPath3] = useStickyState(\"\", \"helpPath3\");\r\n\r\n  // const [hideOnScroll, setHideOnScroll] = useStickyState(true, \"hideOnScroll\");\r\n\r\n  const [tanRequired, setTanRequired] = useStickyState(false, \"tanRequired\");\r\n  // const [transferSuccess, setTransferSuccess] = useStickyState(\r\n  //   false,\r\n  //   \"transferSuccess\"\r\n  // );\r\n  const [accountPhotoPath, setAccountPhotoPath] = useState(\"\");\r\n  const [error, setError] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  const [info, setInfo] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  // const [alertVisible, setAlertVisible] = useState(false);\r\n\r\n  // const gotEvent = useEventListener();\r\n  // console.log(gotEvent);\r\n\r\n  /**\r\n   * Barrel: Getters\r\n   */\r\n  const barrelGetters = {\r\n    debug,\r\n    // instance,\r\n    loggingOut,\r\n    loggingIn,\r\n    // timestamp,\r\n    // startTimestamp,\r\n    pageLoading,\r\n    request,\r\n    serverResponseReceived,\r\n    requestTimedOut,\r\n    // requestTS,\r\n    instance,\r\n    responseProps: JSON.parse(responseProps),\r\n    // deleteResponseProp,\r\n    // lastRequest,\r\n    session,\r\n    // secureSession,\r\n    sessionTimeout,\r\n    // sessionTimeoutApplied,\r\n    settings: JSON.parse(settings),\r\n    ip,\r\n    updateInterval,\r\n    currencies: JSON.parse(currencies),\r\n    transactions: JSON.parse(transactions),\r\n    shares: JSON.parse(shares),\r\n    accordionView,\r\n    accordionViewCurrency,\r\n    countCurrencies,\r\n    countTransactions,\r\n    countShares,\r\n    activePageCurrencies,\r\n    activePageTransactions,\r\n    activePageShares,\r\n    currenciesPerPage,\r\n    transactionsPerPage,\r\n    sharesPerPage,\r\n    userData: JSON.parse(userData),\r\n    // redirect,\r\n    redirectTo,\r\n    lastInsertId,\r\n    connected,\r\n    reconnecting,\r\n    signedIn,\r\n    dailyAllowanceDispatched,\r\n    // isExternalRequest,\r\n    cartID,\r\n    cartContent: JSON.parse(cartContent),\r\n    cartProps: JSON.parse(cartProps),\r\n    cartProcessingStatus,\r\n    currencyAbbr,\r\n    currencyRate,\r\n    // currencyStatus,\r\n    accountNumber,\r\n    userSequence,\r\n    accountType,\r\n    uid,\r\n    userBusinesses: JSON.parse(userBusinesses),\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes: JSON.parse(businessPurposes),\r\n    cartPurposes: JSON.parse(cartPurposes),\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    // purposeID,\r\n    activePurposeData: JSON.parse(activePurposeData),\r\n    purposeShareholders: JSON.parse(purposeShareholders),\r\n    clearRefs,\r\n    logInEmail,\r\n    logInPassword,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n    dateRangeStart,\r\n    dateRangeEnd,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    // purposeRegistrationCategory,\r\n    // purposeRegistrationSubcategory,\r\n    // purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n    passwordResetEmail,\r\n    tanInputTAN,\r\n    search,\r\n    searchTransactions,\r\n    searchPurposes,\r\n    searchShares,\r\n    // businessLoaded,\r\n    tanRequired,\r\n    articleFeedbackSubmitted,\r\n    scrollPositionY,\r\n    helpPath1,\r\n    helpPath2,\r\n    helpPath3,\r\n    // hideOnScroll,\r\n    // tmrConnected,\r\n    validateTokenEmail,\r\n    validateTokenPasswordReset,\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    emailChanged,\r\n    transferRequest: JSON.parse(transferRequest),\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    contactSubject,\r\n    contactMessage,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n    language,\r\n    transferType,\r\n    // transferSuccess,\r\n    accountPhotoPath,\r\n    error: JSON.parse(error),\r\n    info: JSON.parse(info),\r\n    // alertVisible,\r\n  };\r\n\r\n  /**\r\n   * Barrel: Setters\r\n   */\r\n  const barrelSetters = {\r\n    setDebug,\r\n    setLoggingOut,\r\n    setLoggingIn,\r\n    // setTimestamp,\r\n    // setStartTimestamp,\r\n    setPageLoading,\r\n    setRequest,\r\n    setServerResponseReceived,\r\n    setRequestTimedOut,\r\n    // setRequestTS,\r\n    setInstance,\r\n    setResponseProps,\r\n    // setDeleteResponseProp,\r\n    // setLastRequest,\r\n    setSession,\r\n    // setSecureSession,\r\n    setSessionTimeout,\r\n    // setSessionTimeoutApplied,\r\n    setSettings,\r\n    setIP,\r\n    setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setAccordionView,\r\n    setAccordionViewCurrency,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setActivePageCurrencies,\r\n    setActivePageTransactions,\r\n    setActivePageShares,\r\n    setCurrenciesPerPage,\r\n    setTransactionsPerPage,\r\n    setSharesPerPage,\r\n    setConnected,\r\n    setReconnecting,\r\n    setLanguage,\r\n    setUserData,\r\n    // sendRequest,\r\n    setSignedIn,\r\n    setDailyAllowanceDispatched,\r\n    // setIsExternalRequest,\r\n    setCartID,\r\n    setCartContent,\r\n    setCartProps,\r\n    setCartProcessingStatus,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setAccountType,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setBusinessesPerPage,\r\n    setActivePageBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setActiveBusiness,\r\n    setActiveBusinessID,\r\n    setBusinessPurposes,\r\n    setCartPurposes,\r\n    setCountBusinessPurposes,\r\n    setBusinessPurposesPerPage,\r\n    setActivePageBusinessPurposes,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePurposeData,\r\n    setPurposeShareholders,\r\n    setClearRefs,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n    setDateRangeStart,\r\n    setDateRangeEnd,\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n    setPasswordResetEmail,\r\n    setTanInputTAN,\r\n    setSearch,\r\n    setSearchTransactions,\r\n    setSearchPurposes,\r\n    setSearchShares,\r\n    setError,\r\n    setInfo,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setValidateTokenEmail,\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setEmailChanged,\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setContactSubject,\r\n    setContactMessage,\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n    setTanRequired,\r\n    setArticleFeedbackSubmitted,\r\n    setScrollPositionY,\r\n    setHelpPath1,\r\n    setHelpPath2,\r\n    setHelpPath3,\r\n    // setHideOnScroll,\r\n  };\r\n\r\n  /** \r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Sends requests to the server\r\n   * @param {string} request Request name\r\n   * @param {object} data Request data\r\n   */\r\n  const sendRequest = ({ req, data = null }) => {\r\n    if (processRequest({ req, data, session, uid: \"STA\", barrels })) {\r\n      // request processed successfully\r\n      setServerResponseReceived(false);\r\n      return true;\r\n    } else {\r\n      console.log(\"THIS SHOULD NEVER BE REACHED\");\r\n      return sendData({ req, uid: \"STA\", session, data }, debug);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Processes user request\r\n   * @param {*} param0\r\n   */\r\n  const processRequest = ({ req, data, session, uid, barrels }) => {\r\n    data.instance = instance;\r\n\r\n    // if (req !== \"update last seen user\") {\r\n    setRequest(req);\r\n    // }\r\n\r\n    return requestHandler({\r\n      req,\r\n      data,\r\n      session,\r\n      uid,\r\n      barrels,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Processes server response\r\n   *\r\n   * Chooses a handler depending on response status:\r\n   * Error or other (success | continue | finished | pending etc.)\r\n   *\r\n   * @param {*} param0\r\n   */\r\n  const processUserResponse = ({ args, barrels }) => {\r\n    return args.status === \"error\"\r\n      ? userErrorHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        })\r\n      : userResponseHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  const processSystemResponse = ({ args, barrels }) => {\r\n    // console.log(\"SYSTEM RESPONSE DATA:\", args);\r\n    return args.status === \"error\"\r\n      ? systemErrorHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        })\r\n      : systemResponseHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  /**\r\n   * Shows a messgae (error or info)\r\n   *\r\n   * @param {string} msg, Messgae text\r\n   * @param {string} type, Message type (\"error\" | \"info\")\r\n   */\r\n  const showMessage = (msg, type = \"error\", dismissible = true) => {\r\n    type === \"error\"\r\n      ? setError(JSON.stringify({ msg, dismissible }))\r\n      : setInfo(JSON.stringify({ msg, dismissible }));\r\n  };\r\n\r\n  /**\r\n   * Hides the message\r\n   */\r\n  const hideMessage = (type = null) => {\r\n    if (type === \"error\") {\r\n      setError(null);\r\n    } else if (type === \"info\") {\r\n      setInfo(null);\r\n    } else {\r\n      setError(null);\r\n      setInfo(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the object-element of an array\r\n   * @param {object array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const getArrayObject = (array, property, value) => {\r\n    if (array === null) return null;\r\n    return array.find((o) => o[property] === value);\r\n  };\r\n\r\n  /**\r\n   * Returns the current processing status of the request\r\n   * @param {string} req\r\n   */\r\n  const getRequestStatus = (req) => {\r\n    const obj = getArrayObject(barrelGetters.responseProps, \"res\", req);\r\n    if (obj === null) return \"undefined\";\r\n    return typeof obj !== \"undefined\" ? obj.status : \"undefined\";\r\n  };\r\n\r\n  /**\r\n   * Clears the current processing status of the request\r\n   * @param {string} req\r\n   */\r\n  const clearRequestStatus = (req) => {\r\n    deleteObjectArrayElement(barrelGetters.responseProps, \"res\", req);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {*} status\r\n   * @param {*} cnt\r\n   * @param {*} strLoading\r\n   * @param {*} strNotFound\r\n   */\r\n  const showRequestStatus = (\r\n    req,\r\n    cnt,\r\n    strLoading,\r\n    strNotFound,\r\n    finalStatus = \"success\"\r\n  ) => {\r\n    const status = getRequestStatus(req);\r\n    if (status === \"undefined\") return \"\";\r\n\r\n    if (status === \"undefined\" || status !== finalStatus) {\r\n      return <p className=\"text-center text-muted\">{strLoading}</p>;\r\n    } else if (status === finalStatus && cnt === 0) {\r\n      return <p className=\"text-center text-muted\">{strNotFound}</p>;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Changes the website language\r\n   */\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n    setLanguage(lng);\r\n  };\r\n\r\n  const roundTo = (n, digits) => {\r\n    let negative = false;\r\n    if (digits === undefined) {\r\n      digits = 0;\r\n    }\r\n    if (n < 0) {\r\n      negative = true;\r\n      n = n * -1;\r\n    }\r\n    const multiplicator = Math.pow(10, digits);\r\n    n = parseFloat((n * multiplicator).toFixed(11));\r\n    n = (Math.round(n) / multiplicator).toFixed(2);\r\n    if (negative) {\r\n      n = (n * -1).toFixed(2);\r\n    }\r\n    return n;\r\n  };\r\n\r\n  /**\r\n   * Format number\r\n   * @param {number} number\r\n   */\r\n  const format = (number, currency = currencyAbbr, useGrouping = true) => {\r\n    const retIntl = new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      useGrouping: useGrouping,\r\n    }).format(number * currencyRate);\r\n\r\n    if (parseFloat(number) !== 0 && number.toString().substr(0, 4) === \"0.00\")\r\n      return t(\"micro amount\");\r\n\r\n    return retIntl + \" \" + currency;\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   * @param {number} number\r\n   */\r\n  const formatPerCent = (number) => {\r\n    return (\r\n      new Intl.NumberFormat(language, {\r\n        notation: \"standard\",\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2,\r\n      }).format(number) + \"%\"\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   *\r\n   * @param {number} number\r\n   */\r\n  const formatExchangeRate = (number) => {\r\n    return new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 5,\r\n      maximumFractionDigits: 5,\r\n    }).format(number);\r\n  };\r\n\r\n  /**\r\n   * Parses a number according to a locale\r\n   *\r\n   * @param {string} stringNumber\r\n   * @param {string} locale\r\n   */\r\n  const parseLocaleNumber = (stringNumber, locale) => {\r\n    let num = 123456.789,\r\n      fmt_local = new Intl.NumberFormat(locale, {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n      }),\r\n      parts_local = fmt_local.formatToParts(num),\r\n      group = \"\",\r\n      decimal = \"\",\r\n      currency = \"\";\r\n\r\n    // separators\r\n    parts_local.forEach(function (i) {\r\n      switch (i.type) {\r\n        case \"group\":\r\n          group = i.value;\r\n          break;\r\n        case \"decimal\":\r\n          decimal = i.value;\r\n          break;\r\n        case \"currency\":\r\n          currency = i.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return parseFloat(\r\n      stringNumber\r\n        .replace(new RegExp(\"\\\\\" + group, \"g\"), \"\")\r\n        .replace(new RegExp(\"\\\\\" + decimal), \".\")\r\n        .replace(new RegExp(\"\\\\\" + currency, \"g\"), \"\")\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Formates a date\r\n   *\r\n   * @param {date} ts A timestamp.\r\n   * @param {object} options The date options.\r\n   * @param {boolean} isUTC\r\n   * @param {string} locales e.g. \"lv\"\r\n   * @param {string} format e.g. \"YYYY-MM-DD HH:mm:ss\"\r\n   */\r\n  const formatDate = (\r\n    ts,\r\n    options = {\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    },\r\n    isUTC = true,\r\n    locales = language,\r\n    format = null\r\n  ) => {\r\n    let date = new Date(ts);\r\n    if (isUTC) {\r\n      const diff = date.getTimezoneOffset();\r\n      date = moment(date).add(-diff, \"m\").toDate();\r\n    }\r\n    return format === null\r\n      ? new Intl.DateTimeFormat(locales, options).format(date)\r\n      : moment(date).format(format);\r\n  };\r\n\r\n  /**\r\n   * Retrieves an URL parameter\r\n   */\r\n  const getUrlParam = (param) => {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    return urlParams.get(param);\r\n  };\r\n\r\n  /**\r\n   * Returns the file name from URI path\r\n   */\r\n  const getFileNameFromURI = () => {\r\n    const path = window.location.pathname;\r\n    const pathLast = path.substring(path.lastIndexOf(\"/\") + 1);\r\n    return `${pathLast}.js`;\r\n  };\r\n\r\n  const sendEmailValidationRequest = ({ token, email }) => {\r\n    sendRequest({\r\n      req: \"validate email token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Sends the password reset request\r\n   *\r\n   * @param {string} token The password reset token\r\n   * @param {string} email User's email\r\n   */\r\n  const sendPasswordResetRequest = ({ token, email }) => {\r\n    setPasswordResetTokenEmail(email);\r\n    sendRequest({\r\n      req: \"validate password reset token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets client URI\r\n   */\r\n  const getUri = () => {\r\n    return `${window.location.hostname}`;\r\n  };\r\n\r\n  /**\r\n   * Gets client IP\r\n   */\r\n  const getIP = () => {\r\n    if (debug) return;\r\n    fetch(`${config.uri.ENDPOINT}/ip`, {\r\n      method: \"post\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((results) => results.json())\r\n      .then((data) => {\r\n        setIP(typeof data.ip === \"string\" ? data.ip : \"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Gets the scroll position\r\n   */\r\n  const getScrollPosition = () => {\r\n    return { x: window.scrollX, y: window.scrollY };\r\n  };\r\n\r\n  /**\r\n   * Sets the help path\r\n   * @param {integer} id\r\n   * @param {string} name\r\n   */\r\n  const setHelpPath = (id, name) => {\r\n    if (id === 1) {\r\n      setHelpPath1(name);\r\n      setHelpPath2(\"\");\r\n      setHelpPath3(\"\");\r\n    } else if (id === 2) {\r\n      setHelpPath2(name);\r\n      setHelpPath3(\"\");\r\n    } else {\r\n      setHelpPath3(name);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sets the scroll position\r\n   */\r\n  const setScrollPosition = (x, y) => {\r\n    console.log(\"setScrollPosition:\", x, y);\r\n    // window.scrollTo(x, y);\r\n    window.scroll(x, y);\r\n  };\r\n\r\n  /**\r\n   * Saves the cart request\r\n   */\r\n  const saveCartID = () => {\r\n    const cart = getUrlParam(\"cart\");\r\n\r\n    if (cart !== null) {\r\n      setCartID(cart);\r\n      // if (!signedIn) setIsExternalRequest(true);\r\n      // } else {\r\n      //   setCartID(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the cart from DB\r\n   */\r\n  const getCart = () => {\r\n    // if (typeof externalRequest.cart === \"undefined\" || accountNumber === null)\r\n    //   return;\r\n\r\n    if (!signedIn || accountNumber === null) {\r\n      saveCartID();\r\n      return;\r\n    }\r\n\r\n    // const cartFromUrl = getUrlParam(\"cart\");\r\n\r\n    // saveCartID();\r\n\r\n    let cart = cartID !== null ? cartID : getUrlParam(\"cart\");\r\n    if (cart === null) return;\r\n\r\n    const data = {\r\n      customer: accountNumber,\r\n      cart,\r\n    };\r\n\r\n    sendRequest({ req: \"get cart\", data: data });\r\n\r\n    setCartID(null);\r\n  };\r\n\r\n  /**\r\n   * Gets cart purposses\r\n   */\r\n  const getCartPurposes = () => {\r\n    if (cartContent === null) return;\r\n\r\n    let cartPurposes = [];\r\n\r\n    barrelGetters.cartContent.map((element) =>\r\n      cartPurposes.push(element.product)\r\n    );\r\n\r\n    setCartPurposes(null);\r\n\r\n    sendRequest({\r\n      req: \"get cart purposes\",\r\n      data: {\r\n        purposes: JSON.stringify(cartPurposes),\r\n        language: language,\r\n        page: 1,\r\n        limit: 5,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the currencies\r\n   *\r\n   * @param {*} newPage\r\n   */\r\n  const getCurrencies = (newPage) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: {\r\n        uid: accountNumber,\r\n        search: null,\r\n        page: newPage,\r\n        limit: currenciesPerPage,\r\n      },\r\n    });\r\n    setActivePageCurrencies(newPage);\r\n  };\r\n\r\n  /**\r\n   * Finds currencies\r\n   *\r\n   * @param {string} search The search sring.\r\n   */\r\n  const findCurrencies = (search) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: {\r\n        uid: accountNumber,\r\n        search,\r\n        page: 1,\r\n        limit: currenciesPerPage,\r\n      },\r\n    });\r\n    setActivePageCurrencies(1);\r\n  };\r\n\r\n  /**\r\n   * Gets user transactions\r\n   *\r\n   * @param {integer} newPage\r\n   */\r\n  const getTransactions = (newPage, search = null) => {\r\n    setTransactions(null);\r\n\r\n    let dateStart = dateRangeStart;\r\n    let dateEnd = dateRangeEnd;\r\n    if (dateEnd === \"today\") {\r\n      const now = new Date();\r\n      dateEnd = now.setDate(now.getDate());\r\n    }\r\n    dateStart = formatDate(dateStart, null, true, null, \"YYYY-MM-DD\");\r\n    dateEnd = formatDate(dateEnd, null, true, null, \"YYYY-MM-DD\");\r\n\r\n    sendRequest({\r\n      req: \"get transactions\",\r\n      data: {\r\n        page: newPage,\r\n        limit: transactionsPerPage,\r\n        uid: accountNumber,\r\n        language,\r\n        dateStart,\r\n        dateEnd,\r\n        search: search !== null ? search : searchTransactions,\r\n      },\r\n    });\r\n    setActivePageTransactions(newPage);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {ref} ref\r\n   */\r\n  const copyToClipboard = (ref) => {\r\n    ref.current.select();\r\n    document.execCommand(\"copy\");\r\n    ref.current.blur();\r\n    showMessage(\"COPIED_TO_CLIPBOARD\", \"info\", false);\r\n  };\r\n\r\n  /**\r\n   * Finds transactions\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findTransactions = (search) => {\r\n    setSearchTransactions(search);\r\n    getTransactions(1, search);\r\n  };\r\n\r\n  /**\r\n   * Finds transactions\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findPurposes = (search) => {\r\n    setSearchPurposes(search);\r\n    setResponseProps(null);\r\n    getBusinessPurposes(activeBusinessID, activeBusiness, 1, search);\r\n  };\r\n\r\n  /**\r\n   * Gets user shares\r\n   *\r\n   * @param {*} newPage\r\n   */\r\n  const getShares = (newPage, search = null) => {\r\n    setShares(null);\r\n    sendRequest({\r\n      req: \"get shares\",\r\n      data: {\r\n        page: newPage,\r\n        limit: sharesPerPage,\r\n        uid: accountNumber,\r\n        language: language,\r\n        search: search !== null ? search : searchShares,\r\n      },\r\n    });\r\n    setActivePageShares(newPage);\r\n  };\r\n\r\n  /**\r\n   * Finds shares\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findShares = (search) => {\r\n    setSearchShares(search);\r\n    getShares(1, search);\r\n  };\r\n\r\n  /**\r\n   * Gets user businesses\r\n   *\r\n   * @param {integer} newPage\r\n   */\r\n  const getBusinesses = (newPage = 1) => {\r\n    setUserBusinesses(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(1);\r\n    setActiveBusinessID(null);\r\n    sendRequest({\r\n      req: \"get user businesses\",\r\n      data: { uid: accountNumber, page: newPage, limit: businessesPerPage },\r\n    });\r\n    setActivePageBusinesses(newPage);\r\n  };\r\n\r\n  /**\r\n   * Gets the business purposes\r\n   *\r\n   * @param {*} business_id\r\n   * @param {*} selected\r\n   * @param {*} newPage\r\n   */\r\n  const getBusinessPurposes = (\r\n    business_id,\r\n    selected = null,\r\n    newPage = 1,\r\n    search = null\r\n  ) => {\r\n    // console.log(\"BUSINESS PURPOSES FOR ID \" + business_id, businessPurposes);\r\n\r\n    if (selected !== null) {\r\n      setActiveBusiness(selected);\r\n      setActiveBusinesPurpose(null);\r\n      setActivePurposeProperty(null);\r\n    }\r\n    setBusinessPurposes(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(newPage);\r\n    setActiveBusinessID(business_id);\r\n    return sendRequest({\r\n      req: \"get business purposes\",\r\n      data: {\r\n        business_id: business_id,\r\n        language: language,\r\n        search: search !== null ? search : searchPurposes,\r\n        page: newPage,\r\n        limit: businessPurposesPerPage,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the purpose shareholders\r\n   *\r\n   * @param {*} purpose_id\r\n   * @param {*} selected\r\n   */\r\n  const getPurposeShareholders = (purpose_id, selected = null) => {\r\n    if (selected !== null) {\r\n      setActiveBusinesPurpose(purpose_id);\r\n    }\r\n    setPurposeShareholders(null);\r\n    return sendRequest({\r\n      req: \"get purpose shareholders\",\r\n      data: { purpose_id: purpose_id },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get account data\r\n   */\r\n  const getAccountData = () => {\r\n    if (accountNumber === null) return;\r\n    sendRequest({\r\n      req: \"get account data\",\r\n      data: {\r\n        uid: accountNumber,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get transaction by id\r\n   *\r\n   * @param {integer} id The primary key\r\n   */\r\n  const getTransactionById = (id) => {\r\n    sendRequest({\r\n      req: \"get transaction by id\",\r\n      data: { id: id, language: language },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get conatainer class\r\n   *\r\n   * Returns object cantaining the classes for layout container appearance.\r\n   *\r\n   * @param {boolean} signedIn, True if user has signed in, otherwise false.\r\n   */\r\n  // const getContainerClass = (signedIn) => {\r\n  //   return {\r\n  //     wrapperClass: signedIn\r\n  //       ? \"auth-wrapper auth-wrapper-summary\"\r\n  //       : \"auth-wrapper\",\r\n  //     innerClass: signedIn\r\n  //       ? \"auth-inner auth-inner-summary\"\r\n  //       : \"auth-inner autoWidth\",\r\n  //   };\r\n  // };\r\n  const getContainerClass = (signedIn) => {\r\n    return {\r\n      wrapperClass: \"auth-wrapper auth-wrapper-summary\",\r\n      innerClass: \"auth-inner auth-inner-summary\",\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Get redirect\r\n   *\r\n   * Returns router redirect component.\r\n   */\r\n  const getRedirect = () => {\r\n    return redirectTo === null ? \"\" : <Redirect push to={redirectTo} />;\r\n  };\r\n\r\n  /**\r\n   * Sorts an object array by value of the property\r\n   *\r\n   * @param {array} array The array\r\n   * @param {string} property The property name\r\n   */\r\n  const sortObjectArray = (array, property) => {\r\n    return array.sort((a, b) =>\r\n      a[property] > b[property] ? 1 : b[property] > a[property] ? -1 : 0\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Returns an array index of the object\r\n   * containing the property with the certain value.\r\n   *\r\n   * @param {array} array The array\r\n   * @param {string} property The property name\r\n   * @param {any} value The property value\r\n   */\r\n  const getObjectArrayElementIndex = (array, property, value) => {\r\n    if (array === null) return -1;\r\n    return array\r\n      .map((properties) => {\r\n        return properties[property];\r\n      })\r\n      .indexOf(value);\r\n  };\r\n\r\n  /**\r\n   * Deletes an object array element\r\n   *\r\n   * @param {array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const deleteObjectArrayElement = (arr, property, value) => {\r\n    return arr.filter((obj) => {\r\n      return obj[property] !== value;\r\n    });\r\n  };\r\n\r\n  const getReviser = () => {\r\n    return \"STA\";\r\n  };\r\n\r\n  const getWorkplace = () => {\r\n    return \"LAPSTA\";\r\n  };\r\n\r\n  const barrelFunctions = {\r\n    sendRequest,\r\n    processUserResponse,\r\n    showMessage,\r\n    hideMessage,\r\n    changeLanguage,\r\n    roundTo,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    getArrayObject,\r\n    getRequestStatus,\r\n    clearRequestStatus,\r\n    showRequestStatus,\r\n    format,\r\n    formatPerCent,\r\n    formatExchangeRate,\r\n    getContainerClass,\r\n    formatDate,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    getRedirect,\r\n    getUri,\r\n    getIP,\r\n    getScrollPosition,\r\n    setScrollPosition,\r\n    setHelpPath,\r\n    saveCartID,\r\n    getCart,\r\n    getCartPurposes,\r\n    getUrlParam,\r\n    getFileNameFromURI,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    getCurrencies,\r\n    findCurrencies,\r\n    getTransactions,\r\n    copyToClipboard,\r\n    findTransactions,\r\n    findPurposes,\r\n    getShares,\r\n    findShares,\r\n    parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n  };\r\n\r\n  /** \r\n   * Event handlers\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On language change\r\n   */\r\n  i18n.on(\"languageChanged\", function (lng) {\r\n    const languages = [\"en\", \"lv\"];\r\n    if (languages.indexOf(lng) < 0) lng = \"en\";\r\n    // if (lng === \"en-US\") lng = \"en\";\r\n    setLanguage(lng);\r\n  });\r\n\r\n  /**\r\n   * On redirect\r\n   * @param {string} to Redirect path (e.g. \"/sign-in\")\r\n   */\r\n  const onRedirect = (to) => {\r\n    setRedirectTo(to);\r\n  };\r\n\r\n  const onSessionStart = () => {\r\n    // start new session\r\n    let data = {};\r\n    data.request = \"hello\";\r\n    data.instance = instance;\r\n    startSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionEnd = () => {\r\n    // end current session\r\n    sendRequest({ req: \"end session\", data: {} });\r\n\r\n    let data = {};\r\n    data.request = \"bye\";\r\n    data.instance = instance;\r\n    endSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionReset = () => {\r\n    setSession(uuidv4());\r\n  };\r\n\r\n  /**\r\n   * On signup\r\n   * @param {object} data Signup data\r\n   */\r\n  const onSignUp = (data) => {\r\n    return sendRequest({ req: \"register user\", data });\r\n  };\r\n\r\n  const onSessionTimeout = () => {\r\n    // console.log(\"Session timed out...\");\r\n    setLoggingOut(true);\r\n    setRedirectTo(\"/sign-out\");\r\n  };\r\n\r\n  /**\r\n   * On transfer type change\r\n   * @param {string} id The transfer type id (\"U2S\", \"U2U\", \"U2B\" etc.)\r\n   */\r\n  const onTransferTypeChange = (id) => {\r\n    console.log(\"setTransferType: \", id);\r\n    setTransferType(id);\r\n  };\r\n\r\n  const onTransferSuccess = () => {\r\n    // console.log(\"ON TRANSFER SUCCESS\", barrels);\r\n  };\r\n\r\n  /**\r\n   * On transfer\r\n   * @param {object} data Transfer data\r\n   */\r\n  const onTransfer = (data) => {\r\n    // console.log(\"ON TRANSFER (data):\", data);\r\n    // sendRequest({ req: \"register account\", data: data });\r\n    sendRequest(data);\r\n  };\r\n\r\n  const onPurposeRegistration = (data) => {\r\n    sendRequest(data);\r\n  };\r\n\r\n  const onLogOut = () => {\r\n    window.localStorage.clear();\r\n    setSignedIn(false);\r\n    // onSessionEnd(); // DO NOT ACTIVATE THIS HERE - EXECUTING MULTIPLE TIMES\r\n    // setSession(uuidv4()); // DO NOT SET SESSION HERE - INFINITE LOOP!!\r\n  };\r\n\r\n  const onAlertClose = (type = null) => {\r\n    hideMessage(type);\r\n  };\r\n\r\n  /**\r\n   * Barrel: Event handlers\r\n   */\r\n  const barrelEventHandlers = {\r\n    onRedirect,\r\n    onSignUp,\r\n    onSessionTimeout,\r\n    onTransferTypeChange,\r\n    onTransferSuccess,\r\n    onTransfer,\r\n    onSessionStart,\r\n    onSessionEnd,\r\n    onSessionReset,\r\n    onPurposeRegistration,\r\n    onLogOut,\r\n    onAlertClose,\r\n  };\r\n\r\n  /**\r\n   * Barrel of barrels\r\n   */\r\n  const barrels = {\r\n    barrelGetters,\r\n    barrelSetters,\r\n    barrelFunctions,\r\n    barrelEventHandlers,\r\n  };\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  useSocket((data) => {\r\n    setServerResponseReceived(true);\r\n    setRequestTimedOut(false);\r\n    processUserResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  });\r\n\r\n  useSystemSocket((data) => {\r\n    processSystemResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  }, instance);\r\n\r\n  /** \r\n   * Return\r\n   ============================================================================ */\r\n\r\n  if (props.mode === \"construction\") {\r\n    return <UnderConstruction {...barrels} />;\r\n    // } else if (props.mode === \"loading\") {\r\n    //   return <Loading {...barrels} />;\r\n  } else {\r\n    if (!reconnecting || debug) {\r\n      return <Main {...barrels} />;\r\n    } else {\r\n      return <NotConnected {...barrels} />;\r\n    }\r\n  }\r\n};\r\n","import { sendData } from \"../utils/sockets\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const { req, data, session, uid, barrels } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, userData, userSequence } = barrels.barrelGetters;\r\n  const {\r\n    setUserData,\r\n    setUID,\r\n    // setAccountNumber,\r\n    // setRequest,\r\n    // setUserBusinesses,\r\n  } = barrels.barrelSetters;\r\n  // const {} = barrels.barrelFunctions;\r\n  //   const {} = barrels.barrelEventHandlers;\r\n\r\n  let requestFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onRequest = (req, callback) => {\r\n    if (requestFound) return;\r\n    if (req === props.req || req === \"default\") {\r\n      callback();\r\n      requestFound = true;\r\n    }\r\n  };\r\n\r\n  /** \r\n   * Request handlers\r\n  ============================================================================ */\r\n\r\n  onRequest(\"sign in user\", () => {\r\n    setUserData(JSON.stringify(data));\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"get user sequence\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"register account\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const year = fullyear.slice(-2);\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n    const birthDate = `${day}${month}${year}`;\r\n    const timezone = data.timezone.slice(0, 2);\r\n    const initial = userData.lastname.slice(0, 1).toUpperCase();\r\n    const icode = initial.charCodeAt(0).toString().padStart(5, \"0\");\r\n\r\n    data.scode = `${timezone}${birthDate}${initial}`;\r\n    data.tcode = `${timezone}${birthDate}${icode}`;\r\n    data.timezone = data.timezone.slice(5);\r\n    data.sequence = userSequence.toString().padStart(5, \"0\");\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    setUID(data.personalID);\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"default\", () => {\r\n    sendData({ req, data, uid, session }, debug);\r\n\r\n    return true;\r\n  });\r\n\r\n  // onRequest(\"unknown\", () => {\r\n  //   showMessage(`UNKNOWN REQUEST ${req}`, \"info\");\r\n\r\n  //   return true;\r\n  // });\r\n\r\n  return requestFound;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug, cartContent } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setUID,\r\n    setAccountNumber,\r\n    setRedirectTo,\r\n    setCartProcessingStatus,\r\n  } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  const { onRedirect } = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug) console.log(`ERROR: ${req}`, error, context, props, barrels);\r\n  // const { showMessage } = barrels.barrelFunctions;\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n    // console.log(res, status);\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onError([\"*\", \"INVALID_SESSION\"], () => {\r\n    showMessage(\"SESSION_TIMED_OUT\", \"info\", false);\r\n    setRedirectTo(\"/sign-out\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer errors\r\n   */\r\n  onError([\"transfer U2S\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2B\", \"NO_ROWS_CHANGED\"], () => {\r\n    if (cartContent !== null) {\r\n      setCartProcessingStatus(false);\r\n    } else {\r\n      showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    }\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_USER_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // user selected the same language again - just ignore\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate email token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate password reset token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"reset password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // showMessage(\"REQUEST_ALREADY_SENT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same language again - that's ok\r\n    return true;\r\n  });\r\n\r\n  onError([\"update user\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same password again - that's ok\r\n    return true;\r\n  });\r\n\r\n  // onError([\"update last seen user\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Same last seen time was submitted (shouldn't be possible) - ignore for now\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"sign in user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"change password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"SAME_PASSWORD_RESET\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"submit tan\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"INVALID_TAN\", \"error\", false);\r\n    return true;\r\n  });\r\n\r\n  onError([\"get cart\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User accessed the same cart again - it's fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer V2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Allowance already dispatched today - totally fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    // The same currency was selected again - no problem\r\n    return true;\r\n  });\r\n\r\n  onError([\"end session\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Session updated to the same data ??\r\n    return true;\r\n  });\r\n\r\n  onError([\"register currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_CURRENCY_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"update purpose property\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register purpose\", \"ER_DUP_ENTRY\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  // onError([\"get user sequence\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Session updated to the same data ??\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"register account\", \"ER_DUP_ENTRY\"], () => {\r\n    setUID(null);\r\n    setAccountNumber(null);\r\n    showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError(\r\n    [\"register account\", \"ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO\"],\r\n    () => {\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n      return true;\r\n    }\r\n  );\r\n\r\n  onError([\"register shareholder\", \"ER_NO_REFERENCED_ROW_2\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"reset password\", \"ER_NO_REFERENCED_ROW_2\"], () => {\r\n    // Reset password email not found - might be an attack - imitate the behavior as if the link was sent\r\n    onRedirect(\"/password\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"*\", \"ER_CANT_CREATE_THREAD\"], () => {\r\n    showMessage(\"NO_RESPONSE_FROM_SERVER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug, error: msgError } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug)\r\n    console.log(`SYSTEM ERROR: ${req}`, error, context, props, barrels);\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onError([\"*\", \"INVALID_SESSION\"], () => {\r\n  //   showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n  //   setRedirectTo(\"/sign-out\");\r\n  //   return true;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_error\", \"none\"], () => {\r\n    if (msgError !== \"SERVER_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_timeout\", \"connect_timeout\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"reconnect_error\", \"TransportError\"], () => {\r\n    if (msgError !== \"SERVER_STILL_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_STILL_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, info: msgInfo } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage, hideMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug)\r\n    console.log(`system response: ${req} (${props.status})`, props, barrels);\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (res === \"*\" && status === props.status) ||\r\n      (res === props.req && status === props.status) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n  //   if (typeof props.token !== \"undefined\") {\r\n  //     console.log(\"Renewing session...\");\r\n\r\n  //     onSessionEnd();\r\n  //     setSession(props.token);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect attempt\", \"continue\"], () => {\r\n    // if (msgInfo !== \"RECONNECT_ATTEMPT\")\r\n    //   showMessage(\"RECONNECT_ATTEMPT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnecting\", \"continue\"], () => {\r\n    if (msgInfo !== \"RECONNECTING\") {\r\n      setReconnecting(true);\r\n      showMessage(\"RECONNECTING\", \"info\");\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect\", \"success\"], () => {\r\n    setReconnecting(false);\r\n    hideMessage();\r\n    // hideMessage(\"error\");\r\n    // hideMessage(\"info\");\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","import React from \"react\";\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n    console.log(\"Error boundary:\", error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      //   return <h1>Something went wrong.</h1>;\r\n      return <></>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/**\r\n * System CSS\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * User CSS\r\n */\r\nimport \"./normalize.css\";\r\nimport \"./index.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Loading from \"./components/loading\";\r\nimport ErrorBoundary from \"./components/errorBoundary\";\r\n\r\n/**\r\n * Retrieves an URL parameter\r\n */\r\nconst getUrlParam = (param) => {\r\n  const queryString = window.location.search;\r\n  const urlParams = new URLSearchParams(queryString);\r\n  return urlParams.get(param);\r\n};\r\n\r\n/**\r\n * Clear local storage (URL param ?reset)\r\n */\r\nif (getUrlParam(\"reset\") !== null) {\r\n  window.localStorage.clear();\r\n  console.log(\"Local storage cleared\");\r\n}\r\n\r\nconst Dummy = () => {\r\n  return <></>;\r\n};\r\n\r\n// <Dummy /> | <Loading />\r\n\r\n/**\r\n * Render (with suspense)\r\n * mode = default | construction\r\n */\r\nconst root = document.getElementById(\"root\");\r\nconst construction = document.getElementById(\"construction\");\r\nif (root) {\r\n  ReactDOM.render(\r\n    <Suspense fallback={<Loading />}>\r\n      <ErrorBoundary>\r\n        <Dispatcher mode={!construction ? \"\" : \"construction\"} />\r\n      </ErrorBoundary>\r\n    </Suspense>,\r\n    root\r\n  );\r\n}\r\n"],"sourceRoot":""}