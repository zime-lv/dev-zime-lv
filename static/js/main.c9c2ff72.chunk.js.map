{"version":3,"sources":["utils/state.js","components/card/index.js","components/submitButton/index.js","components/search/index.js","components/listGroupItem/index.js","components/fileLoader/index.js","components/pagination/index.js","utils/sockets.js","components/accordionCard/index.js","components/modalMessage/index.js","components/tanInput/index.js","components/transfer/index.js","components/language-selector/index.js","components/errorBoundary/index.js","components/userEditor/index.js","components/overlay/index.js","components/alert/index.js","components/shareholder/index.js","components/copyableField/index.js","components/help/index.js","components/helpMenuLevel2/index.js","components/accountRegistration/index.js","components/accountContainer/index.js","components/alertContainer/index.js","translations/i18n.js","components/loading/index.js","components/datePicker/index.js","components/login/index.js","utils/config.js","components/businessRegistration/index.js","components/purposeRegistration/index.js","components/shareholderRegistration/index.js","components/transactions/index.js","components/shares/index.js","components/currencies/index.js","components/currencyRegistration/index.js","components/underConstruction/index.js","components/notConnected/index.js","components/main/index.js","components/summary/index.js","components/dateRangePicker/index.js","components/balance/index.js","components/myBusiness/index.js","components/currencyContainer/index.js","components/contact/index.js","components/rating/index.js","components/status_404/index.js","components/logout/index.js","components/signup/index.js","components/passwordReset/index.js","components/validateEmail/index.js","components/changePassword/index.js","components/auth/index.js","components/footer/index.js","components/mainMenu/index.js","components/idleTimer/index.js","components/article/index.js","components/breadcrumb/index.js","components/jobs/index.js","components/leads/index.js","components/toasts/index.js","utils/useTimeout.js","index.js","components/main/Main.js","components/summary/Summary.js","components/accountRegistration/AccountRegistration.js","components/card/Card.js","components/submitButton/SubmitButton.js","components/modalMessage/ModalMessage.js","components/fileLoader/FileLoader.js","components/errorBoundary/ErrorBoundary.js","components/accountContainer/AccountContainer.js","components/transactions/Transactions.js","components/pagination/Pagination.js","components/search/Search.js","components/dateRangePicker/DateRangePicker.js","components/datePicker/DatePicker.js","components/shares/Shares.js","components/shareholder/Shareholder.js","components/accordionCard/AccordionCard.js","components/balance/Balance.js","components/copyableField/CopyableField.js","components/transfer/Transfer.js","components/transfer/TransferToSelf.js","components/transfer/TransferToPerson.js","components/tanInput/TanInput.js","components/transfer/TransferToBusiness.js","components/myBusiness/MyBusiness.js","components/businessRegistration/BusinessRegistration.js","components/purposeRegistration/PurposeRegistration.js","components/shareholderRegistration/shareholderRegistration.js","components/userEditor/UserEditor.js","components/currencyContainer/CurrencyContainer.js","components/currencies/Currencies.js","components/currencyRegistration/CurrencyRegistration.js","components/contact/Contact.js","components/rating/Rating.js","components/status_404/Status_404.js","components/help/Help.js","components/helpMenuLevel2/HelpMenuLevel2.js","components/listGroupItem/ListGroupItem.js","components/alert/Alert.js","components/overlay/Overlay.js","components/alertContainer/AlertContainer.js","components/login/LogIn.js","components/logout/Logout.js","components/signup/SignUp.js","components/passwordReset/passwordReset.js","components/validateEmail/ValidateEmail.js","components/changePassword/ChangePassword.js","components/auth/Auth.js","components/footer/Footer.js","components/language-selector/LanguageSelector.js","components/mainMenu/MainMenu.js","components/idleTimer/IdleTimer.js","components/article/Article.js","components/breadcrumb/Breadcrumb.js","components/jobs/Jobs.js","components/leads/Leads.js","components/toasts/Toasts.js","components/underConstruction/UnderConstruction.js","components/notConnected/NotConnected.js","components/loading/Loading.js","Dispatcher.js","components/main/Routes.js","components/datePicker/DatePickerWrapper.js","utils/useInterval.js","utils/useEventListener.js","utils/requestHandler.js","utils/userErrorHandler.js","utils/userResponseHandler.js","utils/systemErrorHandler.js","utils/systemResponseHandler.js","../src lazy /^/.*$/ groupOptions: {} namespace object"],"names":["useStickyState","defaultValue","key","useState","stickyValue","window","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","socket","openSocket","connect","config","uri","ENDPOINT","secure","reconnect","sendData","data","debug","console","log","req","emit","startSession","session","endSession","useSocket","callback","responseData","setResponseData","on","useSystemSocket","instance","status","context","error","code","timeout","type","latency","reason","attemptNumber","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","defaultNS","keySeparator","interpolation","escapeValue","react","wait","withRef","bindI18n","bindStore","nsMode","dev","SITEMODE","location","hostname","useTimeout","delay","savedCallback","useRef","current","id","setTimeout","clearTimeout","param","queryString","search","URLSearchParams","get","getUrlParam","clear","root","document","getElementById","construction","ReactDOM","render","fallback","mode","args","props","Object","assign","namespace","barrels","now","Date","barrelGetters","serverResponseReceived","signedIn","userData","dailyAllowanceDispatched","accountNumber","cartID","cartContent","validateTokenEmail","passwordResetTokenValidated","validateTokenPasswordReset","connected","clearRefs","loggingOut","scrollPositionY","cartProcessingStatus","barrelSetters","setRequestTimedOut","setUpdateInterval","setDailyAllowanceDispatched","setRequest","setUserEditorFirstname","setUserEditorLastname","setUserEditorEmail","setUserEditorPassword","setCurrencyCode","setRedirectTo","setCurrencyName","setCurrencyRegion","setCurrencyNewRate","setBusinessRegistrationAddTitle","setBusinessRegistrationAddDescription","setPurposeRegistrationTitle","setPurposeRegistrationDescription","setPurposeRegistrationKeywords","setContactSubject","setContactMessage","setDateRangeStart","setDateRangeEnd","setSearch","setClearRefs","barrelFunctions","getIP","getCartPurposes","saveCartID","getAccountData","sendRequest","sendEmailValidationRequest","sendPasswordResetRequest","showMessage","getCart","barrelEventHandlers","onRedirect","onSessionStart","useTranslation","t","firstname","lastname","email","uid","pathname","setDate","getDate","fluid","xl","lg","className","style","md","padding","backgroundColor","paddingLeft","paddingRight","settings","pageBody","getBusinesses","exact","path","component","Balance","AccountRegistration","UserEditor","length","CurrencyContainer","MyBusiness","Transfer","Contact","Status_404","backgroundHeader","backgroundBody","border","align","maxWidthBody","header","request","language","userBirthYear","userBirthMonth","userBirthDay","userBirthDateError","userTimezone","setUserBirthYear","setUserBirthMonth","setUserBirthDay","setUserBirthDateError","setUserTimezone","getReviser","getWorkplace","userAgreementShow","setUserAgreementShow","privacyPolicyShow","setPrivacyPolicyShow","schema","yup","timezone","required","birthYear","birthMonth","birthDay","timezones_sorted","timezones","composeDate","year","month","day","newDate","dateString","match","datepart","split","parseInt","leapYear","isValidDate","yearNow","getFullYear","variant","Heading","i18nKey","show","path3","file","size","centered","title","footer","onHide","handleSubmit","handleChange","values","handleBlur","touched","errors","isValid","validateForm","setFieldValue","noValidate","onSubmit","Row","margin","Group","as","Col","controlId","Label","Control","custom","name","onChange","e","target","isInvalid","Array","from","keys","map","Feedback","monthName","toLocaleString","monthNumber","toString","padStart","dayNumber","element","Offset","Name","paddingBottom","color","href","onMouseDown","caption","validationSchema","birthDate","reviser","workplace","sendAccountRegistrationRequest","initialValues","defaults","navigation","undefined","body","headerPadding","bodyPadding","maxWidth","minWidthBody","cardTitleClass","headerContent","transparent","background","headerBorderBottom","onNavigationClick","Footer","Header","borderBottom","Title","defaultActiveKey","navigationdefaultActiveKey","display","justifyContent","alignItems","flexWrap","item","Item","Link","link","onClick","Body","textAlign","minWidth","React","Children","children","child","cloneElement","styles","SubmitButton","memo","classButton","visible","marginTop","setError","setInfo","requestExpired","block","disabled","whiteSpace","animation","role","aria-hidden","hidden","message","backdrop","aria-labelledby","closeButton","borderRadius","boxShadow","Brand","src","width","height","alt","maxHeight","overflowY","defaultFile","path1","path2","getFileNameFromURI","fileName","lazy","catch","getJSX","ErrorBoundary","state","hasError","errorInfo","this","Component","paddingBody","accordionView","setAccordionView","setResponseProps","getTransactions","getShares","toggleView","view","newView","eventkey","active","transactions","countTransactions","activePageTransactions","transactionsPerPage","findTransactions","showRequestStatus","format","formatDate","formatPerCent","cnt","marginBottom","advancedSearch","placeholder","captionAdvancedSearch","captionStartDate","captionEndDate","captionUpdate","transaction","keyTransactions","business_title","comment","conv_amount","created","sender_firstname","sender_lastname","recipient_firstname","recipient_lastname","purpose_id","purpose_title","recipient_id","roles","share","share_per_cent","sender_id","from_account","to_account","i_am_sender","i_am_recipient","t_from_account","t_to_account","roles_available","arrRoles","shares_available","float","sender","pill","countItems","itemsPerPage","number","Math","ceil","pages","getPages","items","push","Ellipsis","First","Prev","Next","Last","refSearch","createRef","tempRefSearch","optional","ref","autoComplete","Append","Text","cursor","dateRangeStart","dateRangeEnd","clearRequestStatus","dateStart","dateEnd","options","locale","showMonths","inline","shorthandCurrentMonth","allowInput","clickOpens","monthSelectorType","altInput","altFormat","dateFormat","maxDate","defaultDate","selectedDates","dateStr","shares","countShares","activePageShares","sharesPerPage","findShares","keyShares","owner_firstname","owner_lastname","shareholder_id","shares_created","shares_roles","shares_share","shareholder","purpose","rangeControl","sharePerCent","businessOwnerFirstname","businessOwnerLastname","businessTitle","purposeTitle","sharesCreated","purposeShareholders","setPurposeShareholders","userQuery","setUserQuery","delayedQuery","_","debounce","q","sendQuery","onClose","ps","sharesLabelId","fontSize","min","max","step","CustomToggle","eventKey","decoratedOnClick","useAccordionToggle","marginLeft","Toggle","Card","Collapse","setAccountType","userDataParsed","available","acc_curr","acc_cred","acc_save","copyToClipboard","refCopyableField","position","overflow","readOnly","queryCommandSupported","transferType","onTransferTypeChange","accountType","currencyAbbr","transferFromAccount","transferToAccount","transferAmount","setTransferFromAccount","setTransferToAccount","setTransferAmount","parseLocaleNumber","refAmount","tempRefAmount","fromAccount","toAccount","amount","matches","RegExp","Prepend","aria-describedby","Intl","NumberFormat","notation","minimumFractionDigits","useGrouping","transferToSelf","tanRequired","transferToUID","transferDescription","setTransferRequest","setTransferToUID","setTransferDescription","refPersonalID","refDescription","tempRefPersonalID","tempRefDescription","toPersonalID","rows","description","transferToPerson","tanInputTAN","setTanRequired","setTanInputTAN","refTAN","tempRef","tan","autoFocus","transferToPurpose","setTransferToPurpose","refPurposeID","tempRefPurposeID","purposeID","currency","transferToBusiness","userBusinesses","countBusinesses","businessesPerPage","activePageBusinesses","userBusinessesLoaded","activeBusiness","activeBusinessID","businessPurposes","countBusinessPurposes","businessPurposesPerPage","activePageBusinessPurposes","activeBusinesPurpose","activePurposeProperty","activePurposeData","setBusinessPurposes","setActiveBusiness","setActiveBusinesPurpose","setActivePurposeProperty","setActivePageBusinessPurposes","setActivePurposeData","getBusinessPurposes","getPurposeShareholders","findPurposes","menuItems","purposes","cntPurposes","countShareholders","business","keyBusiness","keyPurpose","business_id","action","TogglePurpose","keywords","stopPropagation","Pane","keyShareholder","bp","purpose_status","Check","label","checked","jsx","date","businessSince","businessID","ToggleBusiness","Container","sm","Content","category","subcategory","subcategory2","businessRegistrationAddTitle","businessRegistrationAddDescription","refBusinessTitle","refBusinessDescription","tempRefBusinessTitle","tempRefBusinessDescription","trim","businessDescription","requestInsert","requestUpdate","purposeRegistrationTitle","purposeRegistrationDescription","purposeRegistrationKeywords","onPurposeRegistration","refPurposeTitle","refPurposeDescription","refPurposeKeywords","tempRefPurposeTitle","tempRefPurposeDescription","tempRefPurposeKeywords","purposeDescription","purposeKeywords","RegisterPurpose","shareholderRoles","typeError","personalID","userEditorEditFirstname","userEditorFirstname","userEditorEditLastname","userEditorLastname","userEditorEditEmail","userEditorEmail","userEditorEditPassword","userEditorPassword","userEditorPasswordVisible","userEditorSubmitButtonVisible","setUserEditorEditFirstname","setUserEditorEditLastname","setUserEditorEditEmail","setUserEditorEditPassword","setUserEditorPasswordVisible","setUserEditorSubmitButtonVisible","refFirstName","refLastName","refEmail","refPassword","tempRefFirstName","tempRefLastName","tempRefEmail","tempRefPassword","togglePassword","yupObject","firstName","lastName","password","newEmail","validateEmail","sendUserRegistrationRequest","accordionViewCurrency","activePageCurrencies","setAccordionViewCurrency","getCurrencies","currencies","countCurrencies","currenciesPerPage","setCurrencyAbbr","setCurrencyRate","findCurrencies","formatExchangeRate","getObjectArrayElementIndex","onCurrencySelected","currency_id","rate","onPageSelect","responsive","striped","bordered","hover","keyCurrency","abbr","region","includes","aria-label","curr_abbr","curr_title","curr_region","curr_rate","currencyCode","currencyName","currencyRegion","currencyNewRate","refAbbr","refTitle","refRegion","refRate","tempRefAbbr","tempRefTitle","tempRefRegion","tempRefRate","contactSubject","contactMessage","refSubject","refMessage","tempRefSubject","tempRefMessage","subject","searchable","helpPath1","setHelpPath","helpPath2","info","onAlertClose","errorStrings","infoStrings","msgError","msg","msgInfo","dismissible","ip","logInEmail","logInPassword","setLoggingIn","setLogInEmail","setLogInPassword","getUri","sendUserLogInRequest","emailChanged","setLanguage","onLogOut","tempError","tempInfo","tempLanguage","tempEmailChanged","signUpFirstName","signUpLastName","signUpEmail","signUpPassword","setSignUpFirstName","setSignUpLastName","setSignUpEmail","setSignUpPassword","passwordVisible","setPasswordVisible","passwordResetEmail","setValidateTokenPasswordReset","setPasswordResetEmail","token","validationTokenEmail","validationTokenEmailResent","setValidateTokenEmail","passwordResetTokenEmail","cartProps","cartPurposes","setCartProcessingStatus","Cart","priceTotal","businessCreated","business_created","price","find","products","product","fontWeight","merchant","cart","cartid","collapseOnSelect","expand","aria-controls","changeLanguage","lng","selectLanguage","sessionTimeout","timestamp","stage2","stage3","onTick","onTimerReset","onTimeout","events","onSessionTimeout","seconds","setSeconds","modalMessageShow","setModalMessageShow","useInterval","useEventListener","currTime","timeFormatted","minute","second","modalMessage","placement","overlay","Article","helpPath3","refFeedbackSubmit","refFeedbackThanks","names","links","marginRight","index","getContainerClass","wrapperClass","appClass","innerClass","leadFile","paddingTop","isLocalhost","setDebug","setLoggingOut","loggingIn","pageLoading","setPageLoading","setServerResponseReceived","requestTimedOut","setInstance","uuidv4","setSession","setSettings","responseProps","setSessionTimeout","setConnected","reconnecting","setReconnecting","setIP","setSignedIn","setCartID","setCartContent","setCartProps","updateInterval","currencyRate","setCurrencies","setTransactions","setShares","setCountCurrencies","setCountTransactions","setCountShares","setActivePageCurrencies","setActivePageTransactions","setActivePageShares","setCurrenciesPerPage","setTransactionsPerPage","setSharesPerPage","setUserData","setUID","setAccountNumber","userSequence","setUserSequence","setUserBusinesses","setCountBusinesses","setBusinessesPerPage","setActivePageBusinesses","setUserBusinessesLoaded","setActiveBusinessID","setCartPurposes","setCountBusinessPurposes","setBusinessPurposesPerPage","searchTransactions","setSearchTransactions","searchPurposes","setSearchPurposes","searchShares","setSearchShares","redirectTo","lastInsertId","setLastInsertId","setEmailChanged","setPasswordResetTokenValidated","setPasswordResetTokenEmail","setValidationTokenEmail","setValidationTokenEmailResent","setTransferType","transferRequest","articleFeedbackSubmitted","setArticleFeedbackSubmitted","setScrollPositionY","setHelpPath1","setHelpPath2","setHelpPath3","accountPhotoPath","setAccountPhotoPath","processRequest","requestHandler","processUserResponse","userErrorHandler","userResponseHandler","hideMessage","getArrayObject","array","property","o","getRequestStatus","obj","ts","hour","isUTC","locales","diff","getTimezoneOffset","moment","add","toDate","DateTimeFormat","newPage","page","limit","selected","deleteObjectArrayElement","arr","filter","roundTo","n","digits","negative","multiplicator","pow","parseFloat","toFixed","round","sortObjectArray","sort","a","b","properties","indexOf","strLoading","strNotFound","finalStatus","retIntl","maximumFractionDigits","substr","getRedirect","to","fetch","method","headers","then","results","json","getScrollPosition","x","scrollX","y","scrollY","setScrollPosition","scroll","customer","pathLast","substring","lastIndexOf","getTransactionById","select","execCommand","blur","stringNumber","parts_local","formatToParts","group","decimal","forEach","i","replace","onSignUp","onTransferSuccess","onTransfer","onSessionEnd","onSessionReset","systemErrorHandler","systemResponseHandler","processSystemResponse","SignUp","Auth","Login","ValidateEmail","ChangePassword","Logout","Jobs","Help","PasswordReset","Summary","refDatePicker","fp","flatpickr","destroy","datePicker","open","setInterval","clearInterval","eventHandler","addEventListener","removeEventListener","requestFound","onRequest","dt","fullyear","getMonth","slice","initial","toUpperCase","icode","charCodeAt","scode","tcode","sequence","errorFound","onError","res","responseFound","onResponse","reqData","tempRP","saveResponseProps","content","queryCnt","insertId","tags","resent","affectedRows","currency_abbr","isNaN","currency_rate","count_businesses","count_purposes","splice","temp","count_currencies","count_transaction_positions","count_shares","webpackAsyncContext","__webpack_require__","Promise","resolve","Error","ids","all","module","exports"],"mappings":"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F,yBACAkvB,kBAEAjzB,YACAszB,cAAer1B,KAAKC,MAAMo1B,IAG1B9zB,WAEA8wB,kBAEA/nB,SAAUtK,KAAKC,MAAMqK,IACrBykB,MACAgH,kBACAxK,WAAYvrB,KAAKC,MAAMsrB,IACvB3T,aAAc5X,KAAKC,MAAM2X,IACzByF,OAAQrd,KAAKC,MAAMod,IACnBnG,iBACAiU,yBACAK,mBACA3T,qBACAyF,eACA8N,wBACAtT,0BACAyF,oBACAkO,qBACA1T,uBACAyF,iBACAxX,SAAUhG,KAAKC,MAAM+F,IAErBiyB,cACAC,gBACA1xB,aACAgvB,gBACAzvB,YACAE,4BAEAE,UACAC,YAAapG,KAAKC,MAAMmG,IACxB4qB,UAAWhxB,KAAKC,MAAM+wB,IACtBpqB,wBACAqa,gBACA+U,gBAEA9vB,iBACA8wB,gBACAhW,eACAxX,OACA4a,eAAgBpkB,KAAKC,MAAMmkB,IAC3BC,mBACAC,qBACAC,wBACAC,wBACAC,kBACAC,oBACAC,iBAAkB3kB,KAAKC,MAAM0kB,IAC7BsM,aAAcjxB,KAAKC,MAAMgxB,IACzBrM,yBACAC,2BACAC,8BACAC,wBACAC,yBAEAC,kBAAmBjlB,KAAKC,MAAMglB,IAC9BvG,oBAAqB1e,KAAKC,MAAMye,IAChCjY,aACAuoB,cACAC,iBACAa,mBACAC,kBACAC,eACAC,kBACAhU,kBACAC,gBACAuL,gCACAC,sCACAS,4BACAC,kCAIAC,+BACAc,2BACAC,uBACAC,0BACAC,sBACAC,uBACAC,mBACAC,0BACAC,sBACAC,6BACAC,iCACA4G,sBACAlN,eACA9e,UACAmzB,sBACAE,kBACAE,gBAEAvV,eACAmW,4BACAhyB,mBACAynB,aACAE,aACAsF,aAGAvtB,sBACAE,8BACAD,+BACAyqB,2BACAH,wBACAC,8BACAtB,gBACAmJ,gBAAiB14B,KAAKC,MAAMy4B,IAC5BxX,uBACAC,qBACAC,kBACAqB,iBACAoB,qBACAnB,uBACAkL,kBACAC,kBACAhiB,iBACAC,kBACAC,gBACAC,sBACAC,gBACA+gB,gBACAC,gBACAC,kBACAC,mBACAvhB,YACAkV,gBAEAmY,oBACA/2B,MAAOlC,KAAKC,MAAMiC,IAClBqsB,KAAMvuB,KAAKC,MAAMsuB,KAOb1nB,GAAgB,CACpB6tB,WACAC,gBACAzF,eAGA4F,iBACA7tB,aACA8tB,4BACAjuB,qBAEAmuB,eACA7d,oBAGA+d,cAEAG,qBAEAF,eACAM,SACA3uB,qBACAkvB,iBACAC,mBACAC,aACAhf,oBACAkU,4BACA+K,sBACAC,wBACAC,kBACAC,2BACAC,6BACAC,uBACAC,wBACAC,0BACAC,oBACArB,gBACAE,mBACAjG,eACAqH,eAEAlB,eACA3uB,+BAEA4uB,aACAC,kBACAC,gBACA5E,2BACAxF,mBACAC,mBAEApkB,iBACA4wB,mBACApB,oBACAE,mBACA/W,kBACA4W,UACAI,qBACAC,sBACAC,wBACAC,2BACAC,2BACAnS,qBACAoS,uBACArS,uBACAsS,mBACAC,4BACAC,8BACApS,iCACAF,2BACAC,4BAEAE,wBACA5G,0BACAtW,gBACA8mB,iBACAC,oBACAc,sBACAC,qBACAC,kBACAC,qBACAnoB,qBACAC,mBACAR,mCACAC,yCACAC,+BACAC,qCAIAC,kCACA8hB,8BACA3iB,0BACA4iB,6BACA3iB,yBACA4iB,0BACA3iB,sBACA4iB,6BACA3iB,yBACA4iB,gCACAC,oCACAwG,yBACAlN,kBACApb,aACAwvB,yBACAE,qBACAE,mBACApjB,YACAC,WAEAqkB,uBACApI,yBACAL,iCACA4H,kCACAC,8BACAC,2BACAC,iCACAJ,mBACAzV,sBACAtB,0BACAC,wBACAC,qBACAqB,oBACAkB,wBACAjB,0BACA7a,qBACAC,qBACAiE,oBACAC,qBACAC,mBACAC,yBACAC,mBACAhF,mBACAE,mBACAC,qBACAC,sBACA6b,kBACAqV,+BACAC,sBACAC,gBACAC,gBACAC,iBAaIrwB,GAAc,SAAC,GAA0B,IAAxBvH,EAAuB,EAAvBA,IAAuB,IAAlBJ,YAAkB,MAAX,KAAW,EAC5C,OAAIm4B,GAAe,CAAE/3B,MAAKJ,OAAMO,WAASiI,IAAK,MAAO9D,cAEnDqvB,GAA0B,IACnB,IAEP7zB,Q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ED,gCAAiC,CAChC,GACA,GAED,iCAAkC,CACjC,GACA,GAED,iDAAkD,CACjD,IACA,GAED,oDAAqD,CACpD,IACA,GAED,sCAAuC,CACtC,GACA,GAED,yCAA0C,CACzC,GACA,GAED,mCAAoC,CACnC,GACA,GAED,oCAAqC,CACpC,GACA,GAED,uDAAwD,CACvD,IACA,GAED,0DAA2D,CAC1D,IACA,GAED,yCAA0C,CACzC,GACA,GAED,4CAA6C,CAC5C,GACA,GAED,gDAAiD,CAChD,IACA,GAED,qDAAsD,CACrD,IACA,GAED,qDAAsD,CACrD,IACA,EACA,IAED,0DAA2D,CAC1D,IACA,EACA,IAED,qBAAsB,CACrB,GACA,GAED,sBAAuB,CACtB,GACA,GAED,2BAA4B,CAC3B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,2BAA4B,CAC3B,GACA,GAED,8BAA+B,CAC9B,GACA,GAED,8BAA+B,CAC9B,GACA,GAED,+BAAgC,CAC/B,GACA,GAED,6CAA8C,CAC7C,IACA,GAED,iDAAkD,CACjD,IACA,GAED,gDAAiD,CAChD,IACA,GAED,oCAAqC,CACpC,GACA,GAED,uCAAwC,CACvC,GACA,GAED,uBAAwB,CACvB,IACA,GAED,wBAAyB,CACxB,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,mCAAoC,CACnC,IACA,GAED,kCAAmC,CAClC,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,gCAAiC,CAChC,IACA,GAED,oBAAqB,CACpB,IACA,GAED,qBAAsB,CACrB,IACA,GAED,yBAA0B,CACzB,IACA,GAED,4BAA6B,CAC5B,IACA,GAED,0BAA2B,CAC1B,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,uBAAwB,CACvB,IACA,GAED,wBAAyB,CACxB,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,kCAAmC,CAClC,IACA,GAED,mCAAoC,CACnC,IACA,EACA,IAED,sCAAuC,CACtC,IACA,EACA,IAED,mCAAoC,CACnC,IACA,EACA,IAED,sCAAuC,CACtC,IACA,EACA,IAED,6BAA8B,CAC7B,IACA,GAED,gCAAiC,CAChC,IACA,GAED,0BAA2B,CAC1B,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,qCAAsC,CACrC,IACA,GAED,yCAA0C,CACzC,IACA,GAED,wCAAyC,CACxC,IACA,GAED,gCAAiC,CAChC,IACA,GAED,mCAAoC,CACnC,IACA,GAED,oCAAqC,CACpC,IACA,GAED,qCAAsC,CACrC,IACA,GAED,yDAA0D,CACzD,IACA,GAED,4DAA6D,CAC5D,IACA,GAED,0CAA2C,CAC1C,IACA,GAED,6CAA8C,CAC7C,IACA,GAED,oBAAqB,CACpB,GACA,GAED,qBAAsB,CACrB,GACA,GAED,yBAA0B,CACzB,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,4BAA6B,CAC5B,IACA,GAED,0BAA2B,CAC1B,GACA,GAED,6BAA8B,CAC7B,GACA,GAED,8BAA+B,CAC9B,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,6CAA8C,CAC7C,IACA,GAED,gDAAiD,CAChD,IACA,GAED,oCAAqC,CACpC,IACA,GAED,uCAAwC,CACvC,IACA,GAED,uBAAwB,CACvB,IACA,GAED,wBAAyB,CACxB,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,kCAAmC,CAClC,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,gCAAiC,CAChC,IACA,GAED,6BAA8B,CAC7B,GACA,GAED,8BAA+B,CAC9B,GACA,GAED,2CAA4C,CAC3C,IACA,GAED,8CAA+C,CAC9C,IACA,GAED,mCAAoC,CACnC,GACA,GAED,sCAAuC,CACtC,GACA,GAED,0BAA2B,CAC1B,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,qCAAsC,CACrC,IACA,GAED,wCAAyC,CACxC,IACA,GAED,gCAAiC,CAChC,IACA,GAED,mCAAoC,CACnC,IACA,GAED,iCAAkC,CACjC,IACA,GAED,kCAAmC,CAClC,IACA,GAED,mDAAoD,CACnD,IACA,GAED,sDAAuD,CACtD,IACA,GAED,uDAAwD,CACvD,IACA,EACA,IAED,0DAA2D,CAC1D,IACA,EACA,IAED,uCAAwC,CACvC,IACA,GAED,0CAA2C,CAC1C,IACA,GAED,oCAAqC,CACpC,IACA,GAED,qCAAsC,CACrC,IACA,GAED,yDAA0D,CACzD,IACA,GAED,4DAA6D,CAC5D,IACA,GAED,0CAA2C,CAC1C,IACA,GAED,6CAA8C,CAC7C,IACA,GAED,0BAA2B,CAC1B,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,qCAAsC,CACrC,IACA,GAED,yCAA0C,CACzC,IACA,GAED,wCAAyC,CACxC,IACA,GAED,4CAA6C,CAC5C,IACA,GAED,+CAAgD,CAC/C,IACA,GAED,gCAAiC,CAChC,IACA,GAED,mCAAoC,CACnC,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,gCAAiC,CAChC,IACA,GAED,+CAAgD,CAC/C,IACA,GAED,kDAAmD,CAClD,IACA,GAED,qCAAsC,CACrC,IACA,GAED,wCAAyC,CACxC,IACA,GAED,wBAAyB,CACxB,IACA,EACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,EACA,IAED,iCAAkC,CACjC,IACA,EACA,EACA,IAED,oCAAqC,CACpC,IACA,EACA,EACA,IAED,8BAA+B,CAC9B,IACA,EACA,EACA,IAED,iCAAkC,CACjC,IACA,EACA,EACA,IAED,6BAA8B,CAC7B,GACA,GAED,8BAA+B,CAC9B,GACA,GAED,2CAA4C,CAC3C,IACA,GAED,8CAA+C,CAC9C,IACA,GAED,mCAAoC,CACnC,GACA,GAED,sCAAuC,CACtC,GACA,GAED,0BAA2B,CAC1B,GACA,GAED,2BAA4B,CAC3B,GACA,GAED,qCAAsC,CACrC,IACA,GAED,wCAAyC,CACxC,IACA,GAED,gCAAiC,CAChC,GACA,GAED,mCAAoC,CACnC,GACA,GAED,sBAAuB,CACtB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,gCAAiC,CAChC,IACA,GAED,4BAA6B,CAC5B,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,oBAAqB,CACpB,IACA,EACA,IAED,qBAAsB,CACrB,IACA,EACA,IAED,yBAA0B,CACzB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,IAED,0BAA2B,CAC1B,IACA,EACA,IAED,6BAA8B,CAC7B,IACA,EACA,IAED,oBAAqB,CACpB,GACA,GAED,qBAAsB,CACrB,GACA,GAED,yBAA0B,CACzB,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,4BAA6B,CAC5B,IACA,GAED,0BAA2B,CAC1B,GACA,GAED,6BAA8B,CAC7B,GACA,GAED,8BAA+B,CAC9B,GACA,GAED,+BAAgC,CAC/B,GACA,GAED,6CAA8C,CAC7C,IACA,GAED,gDAAiD,CAChD,IACA,GAED,oCAAqC,CACpC,GACA,GAED,uCAAwC,CACvC,GACA,GAED,oBAAqB,CACpB,IACA,EACA,GAED,qBAAsB,CACrB,IACA,EACA,GAED,yBAA0B,CACzB,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,EACA,IAED,0BAA2B,CAC1B,IACA,EACA,GAED,6BAA8B,CAC7B,IACA,EACA,GAED,yBAA0B,CACzB,IACA,GAED,0BAA2B,CAC1B,IACA,GAED,mCAAoC,CACnC,IACA,GAED,sCAAuC,CACtC,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,kCAAmC,CAClC,IACA,GAED,oBAAqB,CACpB,IACA,GAED,qBAAsB,CACrB,IACA,GAED,yBAA0B,CACzB,IACA,GAED,4BAA6B,CAC5B,IACA,GAED,0BAA2B,CAC1B,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,iCAAkC,CACjC,GACA,GAED,kCAAmC,CAClC,GACA,GAED,kDAAmD,CAClD,IACA,GAED,qDAAsD,CACrD,IACA,GAED,uCAAwC,CACvC,GACA,GAED,0CAA2C,CAC1C,GACA,GAED,qBAAsB,CACrB,IACA,GAED,sBAAuB,CACtB,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,6BAA8B,CAC7B,GACA,GAED,8BAA+B,CAC9B,GACA,GAED,2CAA4C,CAC3C,IACA,GAED,8CAA+C,CAC9C,IACA,GAED,mCAAoC,CACnC,GACA,GAED,sCAAuC,CACtC,GACA,GAED,uBAAwB,CACvB,IACA,GAED,wBAAyB,CACxB,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,mCAAoC,CACnC,IACA,GAED,kCAAmC,CAClC,IACA,GAED,qCAAsC,CACrC,IACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,6BAA8B,CAC7B,IACA,GAED,gCAAiC,CAChC,IACA,GAED,mCAAoC,CACnC,IACA,EACA,IAED,yEAA0E,CACzE,IACA,EACA,IAED,4EAA6E,CAC5E,IACA,EACA,IAED,yCAA0C,CACzC,IACA,EACA,IAED,4CAA6C,CAC5C,IACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,0CAA2C,CAC1C,IACA,EACA,IAED,6CAA8C,CAC7C,IACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,8CAA+C,CAC9C,IACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,8CAA+C,CAC9C,IACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,8CAA+C,CAC9C,IACA,EACA,IAED,4CAA6C,CAC5C,IACA,EACA,IAED,+CAAgD,CAC/C,IACA,EACA,IAED,iDAAkD,CACjD,IACA,EACA,IAED,oDAAqD,CACpD,IACA,EACA,IAED,0CAA2C,CAC1C,IACA,EACA,IAED,6CAA8C,CAC7C,IACA,EACA,IAED,0CAA2C,CAC1C,IACA,EACA,GAED,6CAA8C,CAC7C,IACA,EACA,GAED,4CAA6C,CAC5C,IACA,EACA,IAED,+CAAgD,CAC/C,IACA,EACA,IAED,8CAA+C,CAC9C,IACA,EACA,GAED,iDAAkD,CACjD,IACA,EACA,GAED,iDAAkD,CACjD,IACA,EACA,IAED,oDAAqD,CACpD,IACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,8CAA+C,CAC9C,IACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,GAED,8CAA+C,CAC9C,IACA,EACA,GAED,2CAA4C,CAC3C,IACA,EACA,GAED,8CAA+C,CAC9C,IACA,EACA,GAED,yEAA0E,CACzE,IACA,EACA,IAED,4EAA6E,CAC5E,IACA,EACA,IAED,yCAA0C,CACzC,IACA,EACA,IAED,4CAA6C,CAC5C,IACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,0CAA2C,CAC1C,IACA,EACA,IAED,6CAA8C,CAC7C,IACA,EACA,IAED,4CAA6C,CAC5C,IACA,EACA,IAED,+CAAgD,CAC/C,IACA,EACA,IAED,0CAA2C,CAC1C,IACA,EACA,GAED,6CAA8C,CAC7C,IACA,EACA,GAED,0CAA2C,CAC1C,IACA,EACA,GAED,6CAA8C,CAC7C,IACA,EACA,GAED,8CAA+C,CAC9C,IACA,EACA,GAED,iDAAkD,CACjD,IACA,EACA,GAED,iDAAkD,CACjD,IACA,EACA,IAED,oDAAqD,CACpD,IACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,IAED,8CAA+C,CAC9C,IACA,EACA,IAED,2CAA4C,CAC3C,IACA,EACA,GAED,8CAA+C,CAC9C,IACA,EACA,GAED,2CAA4C,CAC3C,IACA,EACA,IAED,8CAA+C,CAC9C,IACA,EACA,IAED,qBAAsB,CACrB,IACA,GAED,sBAAuB,CACtB,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,sBAAuB,CACtB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,gCAAiC,CAChC,IACA,GAED,4BAA6B,CAC5B,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,oBAAqB,CACpB,IACA,GAED,qBAAsB,CACrB,IACA,GAED,yBAA0B,CACzB,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,4BAA6B,CAC5B,IACA,GAED,iCAAkC,CACjC,IACA,EACA,IAED,oCAAqC,CACpC,IACA,EACA,IAED,2BAA4B,CAC3B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,sCAAuC,CACtC,IACA,EACA,IAED,yCAA0C,CACzC,IACA,EACA,IAED,0BAA2B,CAC1B,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,wBAAyB,CACxB,IACA,GAED,yBAA0B,CACzB,IACA,GAED,iCAAkC,CACjC,IACA,GAED,oCAAqC,CACpC,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,iCAAkC,CACjC,IACA,GAED,4BAA6B,CAC5B,GACA,GAED,6BAA8B,CAC7B,GACA,GAED,yCAA0C,CACzC,IACA,GAED,4CAA6C,CAC5C,IACA,GAED,kCAAmC,CAClC,GACA,GAED,qCAAsC,CACrC,GACA,GAED,0BAA2B,CAC1B,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,qCAAsC,CACrC,IACA,GAED,wCAAyC,CACxC,IACA,GAED,yCAA0C,CACzC,IACA,EACA,IAED,4CAA6C,CAC5C,IACA,EACA,IAED,0CAA2C,CAC1C,IACA,EACA,IAED,6CAA8C,CAC7C,IACA,EACA,IAED,yCAA0C,CACzC,IACA,EACA,IAED,4CAA6C,CAC5C,IACA,EACA,IAED,gCAAiC,CAChC,IACA,GAED,mCAAoC,CACnC,IACA,GAED,0BAA2B,CAC1B,IACA,EACA,IAED,2BAA4B,CAC3B,IACA,EACA,IAED,qCAAsC,CACrC,IACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,gCAAiC,CAChC,IACA,EACA,IAED,mCAAoC,CACnC,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,yCAA0C,CACzC,IACA,GAED,4CAA6C,CAC5C,IACA,GAED,kCAAmC,CAClC,IACA,GAED,qCAAsC,CACrC,IACA,GAED,uBAAwB,CACvB,GACA,GAED,wBAAyB,CACxB,GACA,GAED,+BAAgC,CAC/B,IACA,GAED,mCAAoC,CACnC,IACA,GAED,kCAAmC,CAClC,IACA,GAED,6BAA8B,CAC7B,GACA,GAED,gCAAiC,CAChC,GACA,GAED,0BAA2B,CAC1B,GACA,GAED,2BAA4B,CAC3B,GACA,GAED,qCAAsC,CACrC,IACA,GAED,wCAAyC,CACxC,IACA,GAED,gCAAiC,CAChC,GACA,GAED,mCAAoC,CACnC,GACA,GAED,6BAA8B,CAC7B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,mCAAoC,CACnC,IACA,GAED,sCAAuC,CACtC,IACA,GAED,2CAA4C,CAC3C,IACA,GAED,8CAA+C,CAC9C,IACA,GAED,+BAAgC,CAC/B,IACA,EACA,IAED,gCAAiC,CAChC,IACA,EACA,IAED,+CAAgD,CAC/C,IACA,EACA,IAED,kDAAmD,CAClD,IACA,EACA,IAED,qCAAsC,CACrC,IACA,EACA,IAED,wCAAyC,CACxC,IACA,EACA,IAED,mCAAoC,CACnC,IACA,GAED,oCAAqC,CACpC,IACA,GAED,uDAAwD,CACvD,IACA,GAED,0DAA2D,CAC1D,IACA,GAED,yCAA0C,CACzC,IACA,GAED,4CAA6C,CAC5C,IACA,GAED,sBAAuB,CACtB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,iCAAkC,CACjC,IACA,GAED,gCAAiC,CAChC,IACA,GAED,4BAA6B,CAC5B,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,sBAAuB,CACtB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,6BAA8B,CAC7B,IACA,GAED,gCAAiC,CAChC,IACA,GAED,4BAA6B,CAC5B,GACA,GAED,+BAAgC,CAC/B,GACA,GAED,2BAA4B,CAC3B,GACA,GAED,4BAA6B,CAC5B,GACA,GAED,uCAAwC,CACvC,IACA,GAED,0CAA2C,CAC1C,IACA,GAED,iCAAkC,CACjC,GACA,GAED,oCAAqC,CACpC,GACA,GAED,uCAAwC,CACvC,IACA,GAED,wCAAyC,CACxC,IACA,GAED,6CAA8C,CAC7C,IACA,GAED,gDAAiD,CAChD,IACA,GAED,+DAAgE,CAC/D,IACA,GAED,kEAAmE,CAClE,IACA,GAED,sBAAuB,CACtB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,gCAAiC,CAChC,IACA,GAED,4BAA6B,CAC5B,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,sBAAuB,CACtB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,gCAAiC,CAChC,IACA,GAED,4BAA6B,CAC5B,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,0BAA2B,CAC1B,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,qCAAsC,CACrC,IACA,GAED,wCAAyC,CACxC,IACA,GAED,gCAAiC,CAChC,IACA,GAED,mCAAoC,CACnC,IACA,GAED,4BAA6B,CAC5B,GACA,GAED,6BAA8B,CAC7B,GACA,GAED,yCAA0C,CACzC,IACA,GAED,4CAA6C,CAC5C,IACA,GAED,kCAAmC,CAClC,GACA,GAED,qCAAsC,CACrC,GACA,GAED,uBAAwB,CACvB,IACA,GAED,wBAAyB,CACxB,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,kCAAmC,CAClC,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,gCAAiC,CAChC,IACA,GAED,wBAAyB,CACxB,GACA,GAED,yBAA0B,CACzB,GACA,GAED,iCAAkC,CACjC,IACA,GAED,oCAAqC,CACpC,IACA,GAED,8BAA+B,CAC9B,GACA,GAED,iCAAkC,CACjC,GACA,GAED,sBAAuB,CACtB,IACA,GAED,uBAAwB,CACvB,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,iCAAkC,CACjC,IACA,GAED,gCAAiC,CAChC,IACA,GAED,iCAAkC,CACjC,IACA,EACA,IAED,oCAAqC,CACpC,IACA,EACA,IAED,4BAA6B,CAC5B,IACA,GAED,+BAAgC,CAC/B,IACA,GAED,4BAA6B,CAC5B,IACA,GAED,6BAA8B,CAC7B,IACA,GAED,yCAA0C,CACzC,IACA,GAED,4CAA6C,CAC5C,IACA,GAED,kCAAmC,CAClC,IACA,GAED,qCAAsC,CACrC,IACA,GAED,wBAAyB,CACxB,GACA,GAED,yBAA0B,CACzB,GACA,GAED,iCAAkC,CACjC,IACA,GAED,oCAAqC,CACpC,IACA,GAED,2CAA4C,CAC3C,IACA,GAED,8CAA+C,CAC9C,IACA,GAED,yCAA0C,CACzC,IACA,GAED,4CAA6C,CAC5C,IACA,GAED,uCAAwC,CACvC,IACA,GAED,0CAA2C,CAC1C,IACA,GAED,8BAA+B,CAC9B,GACA,GAED,iCAAkC,CACjC,GACA,GAED,iCAAkC,CACjC,IACA,GAED,kCAAmC,CAClC,IACA,GAED,mDAAoD,CACnD,IACA,GAED,sDAAuD,CACtD,IACA,GAED,uCAAwC,CACvC,IACA,GAED,0CAA2C,CAC1C,IACA,GAED,0BAA2B,CAC1B,GACA,GAED,2BAA4B,CAC3B,GACA,GAED,qCAAsC,CACrC,IACA,GAED,yCAA0C,CACzC,IACA,GAED,wCAAyC,CACxC,IACA,GAED,gCAAiC,CAChC,GACA,GAED,mCAAoC,CACnC,GACA,GAED,6BAA8B,CAC7B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,2CAA4C,CAC3C,IACA,GAED,8CAA+C,CAC9C,IACA,GAED,mCAAoC,CACnC,IACA,GAED,sCAAuC,CACtC,IACA,GAED,UAAW,CACV,IACA,GAED,cAAe,CACd,IACA,GAED,aAAc,CACb,IACA,GAED,kBAAmB,CAClB,IACA,GAED,sBAAuB,CACtB,GACA,GAED,yBAA0B,CACzB,GACA,GAED,iBAAkB,CACjB,IACA,GAED,oBAAqB,CACpB,IACA,GAED,yBAA0B,CACzB,IACA,GAED,4BAA6B,CAC5B,IACA,GAED,kBAAmB,CAClB,GACA,GAED,qBAAsB,CACrB,GACA,GAED,gBAAiB,CAChB,EACA,GAED,mBAAoB,CACnB,EACA,GAED,6BAA8B,CAC7B,IACA,GAED,gCAAiC,CAChC,IACA,GAED,gCAAiC,CAChC,IACA,GAED,mCAAoC,CACnC,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,sBAAuB,CACtB,IACA,GAED,yBAA0B,CACzB,IACA,GAED,qBAAsB,CACrB,IACA,GAED,wBAAyB,CACxB,IACA,GAED,2BAA4B,CAC3B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,8BAA+B,CAC9B,IACA,GAED,iCAAkC,CACjC,IACA,IAGF,SAAS2xB,EAAoBlhC,GAC5B,IAAImhC,EAAoB3I,EAAEjpB,EAAKvP,GAC9B,OAAOohC,QAAQC,UAAU/F,MAAK,WAC7B,IAAIrsB,EAAI,IAAIqyB,MAAM,uBAAyBthC,EAAM,KAEjD,MADAiP,EAAElO,KAAO,mBACHkO,KAIR,IAAIsyB,EAAMhyB,EAAIvP,GAAM+C,EAAKw+B,EAAI,GAC7B,OAAOH,QAAQI,IAAID,EAAIrC,MAAM,GAAG3vB,IAAI4xB,EAAoBlyB,IAAIqsB,MAAK,WAChE,OAAO6F,EAAoBn5B,EAAEjF,EAAIw+B,EAAI,OAGvCL,EAAoB5xB,KAAO,WAC1B,OAAOnL,OAAOmL,KAAKC,IAEpB2xB,EAAoBn+B,GAAK,IACzB0+B,EAAOC,QAAUR,G","file":"static/js/main.c9c2ff72.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nexport const useStickyState = (defaultValue, key) => {\r\n  const [value, setValue] = useState(() => {\r\n    const stickyValue = window.localStorage.getItem(key);\r\n    // console.log(\"stickyValue:\", typeof stickyValue);\r\n\r\n    return stickyValue !== null &&\r\n      typeof stickyValue !== \"undefined\" &&\r\n      stickyValue !== \"undefined\"\r\n      ? JSON.parse(stickyValue)\r\n      : defaultValue;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n  return [value, setValue];\r\n};\r\n","export { default } from \"./Card\";\r\n","export { default } from \"./SubmitButton\";\r\n","export { default } from \"./Search\";\r\n","export { default } from \"./ListGroupItem\";\r\n","export { default } from \"./FileLoader\";\r\n","export { default } from \"./Pagination\";\r\n","import { useState, useEffect } from \"react\";\r\nimport config from \"./config\";\r\nimport openSocket from \"socket.io-client\";\r\n// import { useTimeout } from \"./useTimeout\";\r\n\r\nlet socket = openSocket.connect(config.uri.ENDPOINT, {\r\n  secure: true,\r\n  reconnect: true,\r\n});\r\n\r\n/**\r\n * Send request to the server\r\n * @param {*} param0\r\n */\r\nexport const sendData = (data, debug = false) => {\r\n  if (debug) console.log(`request: ${data.req}`, data);\r\n\r\n  // No data - do not send\r\n  // if (req.length === 0) return false;\r\n\r\n  // useTimeout(() => {\r\n  //   console.log(\"Socket timeout\");\r\n  // }, 3000);\r\n\r\n  socket.emit(`onDataReceived`, data);\r\n  return true;\r\n};\r\n\r\n// Start a session\r\nexport const startSession = (data, session, debug = false) => {\r\n  // console.log(\"startSession\");\r\n  if (debug) console.log(`request: start session`, data, session);\r\n\r\n  socket.emit(`start session`, {\r\n    data: data,\r\n    session: session,\r\n    req: \"start session\",\r\n  });\r\n};\r\n\r\n// End the session\r\nexport const endSession = (data, session, debug = false) => {\r\n  if (debug) console.log(`request: end session`, data, session);\r\n  socket.emit(`end session`, {\r\n    // char: data,\r\n    data: data,\r\n    // uid: uid,\r\n    session: session,\r\n    req: \"end session\",\r\n  });\r\n};\r\n\r\n// Custom hook: useSocket\r\nexport const useSocket = (callback) => {\r\n  const [responseData, setResponseData] = useState(null);\r\n\r\n  socket.on(`onDataReceived`, (data) => {\r\n    setResponseData(data);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (responseData === null) return;\r\n\r\n    callback(responseData);\r\n    // eslint-disable-next-line\r\n  }, [responseData]);\r\n};\r\n\r\nexport const useSystemSocket = (callback, instance) => {\r\n  useEffect(() => {\r\n    // socket.on(\"onDataReceived\", (data) => {\r\n    //   callback(data);\r\n    // });\r\n\r\n    /**\r\n     * System error listeners\r\n     */\r\n    socket.on(\"connect_error\", () => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_error\",\r\n          context: {},\r\n          error: { code: \"none\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"connect_timeout\", (timeout) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"connect_timeout\",\r\n          context: {},\r\n          error: { code: \"connect_timeout\", timeout },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_error\",\r\n          context: {},\r\n          error: { code: error.type, error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnect_failed\", () => {\r\n      // This should never occur\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"reconnect_failed\",\r\n          context: {},\r\n          error: { code: \"reconnect_failed\" },\r\n        },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"error\", (error) => {\r\n      callback(\r\n        {\r\n          status: \"error\",\r\n          req: \"error\",\r\n          context: {},\r\n          error: { code: \"error\", error },\r\n        },\r\n        true\r\n      );\r\n    });\r\n\r\n    /**\r\n     * System status listeners\r\n     */\r\n    socket.on(\"ping\", () => {\r\n      // callback({ data: \"ping\" }, true);\r\n    });\r\n    socket.on(\"pong\", (latency) => {\r\n      // callback({ data: \"pong\", latency }, true);\r\n    });\r\n\r\n    socket.on(\"disconnect\", (reason) => {\r\n      if (reason === \"io server disconnect\") {\r\n        // the disconnection was initiated by the server, you need to reconnect manually\r\n        socket.connect();\r\n      } else {\r\n        // else the socket will automatically try to reconnect\r\n      }\r\n      // Reasons:\r\n      // - \"transport close\": Server was stopped\r\n      callback({ req: \"disconnect\", status: \"success\", reason }, true);\r\n    });\r\n    socket.on(\"reconnect\", (attemptNumber) => {\r\n      // Successfully reconnected on attempt: attemptNumber\r\n      callback({ req: \"reconnect\", status: \"success\", attemptNumber }, true);\r\n    });\r\n    socket.on(\"reconnect_attempt\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnect attempt\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n    socket.on(\"reconnecting\", (attemptNumber) => {\r\n      callback(\r\n        { req: \"reconnecting\", status: \"continue\", attemptNumber },\r\n        true\r\n      );\r\n    });\r\n  }, [instance]);\r\n};\r\n","export { default } from \"./AccordionCard\";\r\n","export { default } from \"./ModalMessage\";\r\n","export { default } from \"./TanInput\";\r\n","export { default as Transfer } from \"./Transfer\";\r\nexport { default as TransferToSelf } from \"./TransferToSelf\";\r\nexport { default as TransferToPerson } from \"./TransferToPerson\";\r\nexport { default as TransferToBusiness } from \"./TransferToBusiness\";\r\n","export { default } from \"./LanguageSelector\";\r\n","export { default } from \"./ErrorBoundary\";\r\n","export { default } from \"./UserEditor\";\r\n","export { default } from \"./Overlay\";\r\n","export { default } from \"./Alert\";\r\n","export { default } from \"./Shareholder\";\r\n","export { default } from \"./CopyableField\";\r\n","export { default } from \"./Help\";\r\n","export { default } from \"./HelpMenuLevel2\";\r\n","export { default } from \"./AccountRegistration\";\r\n","export { default } from \"./AccountContainer\"; // TODO: Adjust file name\r\n","export { default } from \"./AlertContainer\";\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-xhr-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n// not like to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-xhr-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: \"en\",\r\n    debug: false,\r\n    // lng: \"lv\",\r\n    // ns: [\"LogIn\", \"SignUp\"],\r\n    defaultNS: \"Default\",\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    react: {\r\n      wait: false,\r\n      withRef: false,\r\n      bindI18n: \"languageChanged loaded\",\r\n      bindStore: \"added removed\",\r\n      nsMode: \"default\",\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","export { default } from \"./Loading\";\r\n","export { default } from \"./DatePicker\";\r\n","export { default } from \"./LogIn\";\r\n","const dev = {\r\n  uri: {\r\n    ENDPOINT: \"http://localhost:9000\",\r\n    SITEMODE: \"DEVELOPMENT\",\r\n  },\r\n};\r\n\r\nconst dev2 = {\r\n  uri: {\r\n    ENDPOINT: \"http://192.168.2.100:5000\",\r\n    SITEMODE: \"DEVELOPMENT2\",\r\n  },\r\n};\r\n\r\nconst staging = {\r\n  uri: {\r\n    ENDPOINT: \"https://dev.local-currency.com\",\r\n    SITEMODE: \"STAGING\",\r\n  },\r\n};\r\n\r\nconst prod = {\r\n  uri: {\r\n    ENDPOINT: \"https://local-currency.com\",\r\n    SITEMODE: \"PRODUCTION\",\r\n  },\r\n};\r\n\r\nconst hostname = window && window.location && window.location.hostname;\r\n\r\nlet config;\r\nswitch (hostname) {\r\n  case \"localhost\":\r\n    config = dev;\r\n    break;\r\n  case \"192.168.2.100\":\r\n    config = dev2;\r\n    break;\r\n  case \"dev.local-currency.com\":\r\n    config = staging;\r\n    break;\r\n  case \"local-currency.com\":\r\n    config = prod;\r\n    break;\r\n  default:\r\n    config = dev;\r\n    break;\r\n}\r\n\r\nexport default {\r\n  ...config,\r\n};\r\n","export { default } from \"./BusinessRegistration\";\r\n","export { default } from \"./PurposeRegistration\";\r\n","export { default } from \"./shareholderRegistration\";\r\n","export { default } from \"./Transactions\";\r\n","export { default } from \"./Shares\";\r\n","export { default } from \"./Currencies\";\r\n","export { default } from \"./CurrencyRegistration\";\r\n","export { default } from \"./UnderConstruction\";\r\n","export { default } from \"./NotConnected\";\r\n","export { default } from \"./Main\";\r\n","export { default } from \"./Summary\";\r\n","export { default } from \"./DateRangePicker\";\r\n","export { default } from \"./Balance\";\r\n","export { default } from \"./MyBusiness\";\r\n","export { default } from \"./CurrencyContainer\";\r\n","export { default } from \"./Contact\";\r\n","export { default } from \"./Rating\";\r\n","export { default } from \"./Status_404\"; // TODO: Adjust file name\r\n","export { default } from \"./Logout\";\r\n","export { default } from \"./SignUp\";\r\n","export { default } from \"./passwordReset\";\r\n","export { default } from \"./ValidateEmail\";\r\n","export { default } from \"./ChangePassword\";\r\n","export { default } from \"./Auth\";\r\n","export { default } from \"./Footer\";\r\n","export { default } from \"./MainMenu\";\r\n","export { default } from \"./IdleTimer\";\r\n","export { default } from \"./Article\";\r\n","export { default } from \"./Breadcrumb\";\r\n","export { default } from \"./Jobs\";\r\n","export { default } from \"./Leads\";\r\n","export { default } from \"./Toasts\";\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useTimeout = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setTimeout(tick, delay);\r\n      return () => clearTimeout(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","/**\r\n * System CSS\r\n */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * User CSS\r\n */\r\nimport \"./normalize.css\";\r\nimport \"./index.css\";\r\n\r\n/**\r\n * System imports\r\n */\r\nimport React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Dispatcher from \"./Dispatcher\";\r\nimport Loading from \"./components/loading\";\r\nimport ErrorBoundary from \"./components/errorBoundary\";\r\n\r\n/**\r\n * Retrieves an URL parameter\r\n */\r\nconst getUrlParam = (param) => {\r\n  const queryString = window.location.search;\r\n  const urlParams = new URLSearchParams(queryString);\r\n  return urlParams.get(param);\r\n};\r\n\r\n/**\r\n * Clear local storage (URL param ?reset)\r\n */\r\nif (getUrlParam(\"reset\") !== null) {\r\n  window.localStorage.clear();\r\n  console.log(\"Local storage cleared\");\r\n}\r\n\r\nconst Dummy = () => {\r\n  return <></>;\r\n};\r\n\r\n// <Dummy /> | <Loading />\r\n\r\n/**\r\n * Render (with suspense)\r\n * mode = default | construction\r\n */\r\nconst root = document.getElementById(\"root\");\r\nconst construction = document.getElementById(\"construction\");\r\nif (root) {\r\n  ReactDOM.render(\r\n    <Suspense fallback={<Loading />}>\r\n      <ErrorBoundary>\r\n        <Dispatcher mode={!construction ? \"\" : \"construction\"} />\r\n      </ErrorBoundary>\r\n    </Suspense>,\r\n    root\r\n  );\r\n}\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Main.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n// import { useScrollPosition } from \"../../utils/useScrollPosition\";\r\nimport Routes from \"./Routes\";\r\nimport Leads from \"../leads\";\r\nimport Toasts from \"../toasts\";\r\n\r\n/**\r\n * Component: Main\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const barrels = args;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const {\r\n    session,\r\n    serverResponseReceived,\r\n    signedIn,\r\n    userData,\r\n    dailyAllowanceDispatched,\r\n    accountNumber,\r\n    cartID,\r\n    cartContent,\r\n    validateTokenEmail,\r\n    passwordResetTokenValidated,\r\n    validateTokenPasswordReset,\r\n    connected,\r\n    // isExternalRequest,\r\n    clearRefs,\r\n    loggingOut,\r\n    scrollPositionY,\r\n    // hideOnScroll,\r\n    cartProcessingStatus,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRequestTimedOut,\r\n    setUpdateInterval,\r\n    setDailyAllowanceDispatched,\r\n    setRequest,\r\n    // setIsExternalRequest,\r\n    setUserEditorFirstname,\r\n    setUserEditorLastname,\r\n    setUserEditorEmail,\r\n    setUserEditorPassword,\r\n    setRedirectTo,\r\n\r\n    // Currency registration\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n\r\n    // Business registration\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n\r\n    // Purpose registration\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationKeywords,\r\n\r\n    // Contact\r\n    setContactSubject,\r\n    setContactMessage,\r\n\r\n    // Date range\r\n    setDateRangeStart,\r\n    setDateRangeEnd,\r\n\r\n    // Search\r\n    setSearch,\r\n\r\n    //\r\n    setClearRefs,\r\n\r\n    // setHideOnScroll,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // processUserResponse,\r\n    getIP,\r\n    saveCartID,\r\n    getCartPurposes,\r\n    // updateLastSeenUser,\r\n    getAccountData,\r\n    sendRequest,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    showMessage,\r\n    getCart,\r\n    // setScrollPosition,\r\n  } = props.barrelFunctions;\r\n  const {\r\n    onRedirect,\r\n    onSessionStart,\r\n    // onSessionEnd,\r\n  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  /** \r\n   * Effect hooks\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On mount / on unmount\r\n   */\r\n  useEffect(() => {\r\n    getIP();\r\n\r\n    return () => {\r\n      // on unmount\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * On session ID change\r\n   */\r\n  useEffect(() => {\r\n    if (session === null) return;\r\n\r\n    onSessionStart();\r\n\r\n    // eslint-disable-next-line\r\n  }, [session]);\r\n\r\n  /**\r\n   * On connected\r\n   */\r\n  useEffect(() => {\r\n    // eslint-disable-next-line\r\n  }, [connected]);\r\n\r\n  /**\r\n   * On request timeout\r\n   */\r\n  useTimeout(\r\n    () => {\r\n      setRequestTimedOut(true);\r\n      setRequest(null);\r\n      showMessage(\"REQUEST_EXPIRED\", \"info\");\r\n    },\r\n    serverResponseReceived === false ? 7000 : -1 // 7 sec till socket request timeout\r\n  );\r\n\r\n  /**\r\n   * Map user data to user editor vars\r\n   */\r\n  useEffect(() => {\r\n    if (userData === null) return;\r\n    setUserEditorFirstname(userData.firstname);\r\n    setUserEditorLastname(userData.lastname);\r\n    setUserEditorEmail(userData.email);\r\n    setUserEditorPassword(\"\");\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(userData)]);\r\n\r\n  /**\r\n   * On signed in status change\r\n   */\r\n  useEffect(() => {\r\n    if (!signedIn) return;\r\n\r\n    setUpdateInterval(-1);\r\n\r\n    // Dispatch daily allowance\r\n    if (accountNumber !== null && !dailyAllowanceDispatched) {\r\n      getAccountData();\r\n      sendRequest({\r\n        req: \"dispatch daily allowance\",\r\n        data: { uid: accountNumber },\r\n      });\r\n      setDailyAllowanceDispatched(true);\r\n    }\r\n\r\n    /**\r\n     * Handle external request\r\n     */\r\n    // let redirectTarget;\r\n    if (accountNumber !== null) {\r\n      if (cartID !== null) {\r\n        getCart();\r\n        onRedirect(\"/auth\");\r\n      }\r\n    } else {\r\n      if (window.location.pathname !== \"/sign-out\") {\r\n        if (\r\n          userData === null ||\r\n          userData.status !== 1 ||\r\n          typeof userData.status === \"undefined\"\r\n        ) {\r\n          showMessage(\"EMAIL_NOT_YET_VALIDATED\", \"info\");\r\n          onRedirect(\"/sign-out\");\r\n          return;\r\n        } else {\r\n          onRedirect(\"/account-registration\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [signedIn]);\r\n\r\n  /**\r\n   * On account number change\r\n   */\r\n  useEffect(() => {\r\n    // if (accountNumber === null) return;\r\n\r\n    getCart();\r\n\r\n    // eslint-disable-next-line\r\n  }, [accountNumber]);\r\n\r\n  /**\r\n   * On account number change\r\n   */\r\n  // useEffect(() => {\r\n  //   if (cartProcessingStatus === null) return;\r\n\r\n  //   console.log(\"cartProcessingStatus: \", cartProcessingStatus);\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [cartProcessingStatus]);\r\n\r\n  /**\r\n   * Clear refs\r\n   */\r\n  useEffect(() => {\r\n    if (clearRefs === false) return;\r\n\r\n    // Business registration\r\n    setBusinessRegistrationAddTitle(\"\");\r\n    setBusinessRegistrationAddDescription(\"\");\r\n\r\n    // Purpose registration\r\n    setPurposeRegistrationTitle(\"\");\r\n    setPurposeRegistrationDescription(\"\");\r\n    setPurposeRegistrationKeywords(\"\");\r\n\r\n    // Currency registration\r\n    setCurrencyCode(\"\");\r\n    setCurrencyName(\"\");\r\n    setCurrencyRegion(\"\");\r\n    setCurrencyNewRate(\"\");\r\n\r\n    // Contact\r\n    setContactSubject(\"\");\r\n    setContactMessage(\"\");\r\n\r\n    // Date range\r\n    setDateRangeStart(now.setDate(now.getDate() - 7));\r\n    setDateRangeEnd(\"today\");\r\n\r\n    // Search\r\n    setSearch(\"\");\r\n\r\n    setClearRefs(false);\r\n\r\n    // eslint-disable-next-line\r\n  }, [clearRefs]);\r\n\r\n  /**\r\n   * On cart content change\r\n   */\r\n  useEffect(() => {\r\n    if (!signedIn || cartContent === null) return;\r\n\r\n    getCartPurposes();\r\n\r\n    // eslint-disable-next-line\r\n  }, [JSON.stringify(cartContent)]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenEmail === null) return;\r\n\r\n    sendEmailValidationRequest(JSON.parse(validateTokenEmail));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenEmail]);\r\n\r\n  /**\r\n   * On email validation token\r\n   */\r\n  useEffect(() => {\r\n    if (passwordResetTokenValidated === null) return;\r\n\r\n    onRedirect(\"/password\");\r\n\r\n    // eslint-disable-next-line\r\n  }, [passwordResetTokenValidated]);\r\n\r\n  /**\r\n   * On password reset validation token\r\n   */\r\n  useEffect(() => {\r\n    if (validateTokenPasswordReset === null) return;\r\n\r\n    sendPasswordResetRequest(JSON.parse(validateTokenPasswordReset));\r\n\r\n    // eslint-disable-next-line\r\n  }, [validateTokenPasswordReset]);\r\n\r\n  const getJSX = () => {\r\n    return (\r\n      <>\r\n        <Container fluid>\r\n          <Row>\r\n            {/** Left column */}\r\n            <Col xl={4} lg={6} className=\"d-none d-lg-block\" style={{}}>\r\n              <Leads {...barrels} />\r\n            </Col>\r\n\r\n            {/** Middle column */}\r\n            <Col\r\n              lg={6}\r\n              md={12}\r\n              style={{ padding: 0, backgroundColor: \"Transparent\" }}\r\n            >\r\n              <Routes {...barrels} />\r\n            </Col>\r\n\r\n            {/** Right column */}\r\n            <Col\r\n              className=\"d-none d-xl-block\"\r\n              style={{ paddingLeft: 0, paddingRight: 0 }}\r\n            >\r\n              <Toasts {...barrels} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import _ from \"lodash\";\r\n// import { useTranslation } from \"react-i18next\";\r\n// import { Redirect } from \"react-router-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  // Redirect,\r\n} from \"react-router-dom\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Button,\r\n  // Breadcrumb,\r\n  // NavDropdown,\r\n  // Alert,\r\n} from \"react-bootstrap\";\r\n// import Octicon, { SignOut } from \"@primer/octicons-react\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../../settings.json\";\r\nimport AccountRegistration from \"../accountRegistration\";\r\n// import BusinessRegistration from \"../../businessRegistration\";\r\nimport Balance from \"../accountContainer\";\r\nimport { Transfer } from \"../transfer\";\r\nimport MyBusiness from \"../myBusiness\";\r\nimport UserEditor from \"../userEditor\";\r\nimport CurrencyContainer from \"../currencyContainer\";\r\n// import Login from \"../../login\";\r\nimport Contact from \"../contact\";\r\nimport Card from \"../card\";\r\nimport Status_404 from \"../status_404\";\r\nimport Help from \"../help\";\r\n// import LanguageSelector from \"../language-selector\";\r\n// import MainMenu from \"../mainMenu\";\r\n\r\n/**\r\n * Component: Summary\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"Summary\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { settings, accountNumber } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getBusinesses } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const { t } = useTranslation(props.namespace);\r\n\r\n  // const location = useLocation();\r\n\r\n  const pageBody = (\r\n    <Router>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/summary\"\r\n          component={() => {\r\n            return accountNumber !== null\r\n              ? Balance(args)\r\n              : AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/account-registration\"\r\n          component={() => {\r\n            return AccountRegistration(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/profile\"\r\n          component={() => {\r\n            return UserEditor({ ...args, mode: \"profile\" });\r\n          }}\r\n        />\r\n        {settings !== null &&\r\n          typeof settings[\"currencies\"] !== \"undefined\" &&\r\n          (settings[\"currencies\"] === null ||\r\n            settings[\"currencies\"].length === 0 ||\r\n            settings[\"currencies\"].length > 1) && (\r\n            <Route\r\n              exact\r\n              path=\"/currency\"\r\n              component={() => {\r\n                return CurrencyContainer({ ...args });\r\n              }}\r\n            />\r\n          )}\r\n\r\n        <Route\r\n          exact\r\n          path=\"/my-business\"\r\n          component={() => {\r\n            return MyBusiness(args);\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/balance\"\r\n          component={() => {\r\n            return Balance(args);\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/transfer\"\r\n          component={() => {\r\n            return Transfer(args);\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path=\"/feedback\"\r\n          component={() => {\r\n            return Contact(args);\r\n          }}\r\n        />\r\n\r\n        {/**\r\n         * Default route\r\n         */}\r\n        <Route\r\n          path=\"*\"\r\n          component={() => {\r\n            return Status_404(args);\r\n          }}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n\r\n      {/* Content */}\r\n      {/*<h3>{t(\"Summary\")}</h3>*/}\r\n\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <Card\r\n              backgroundHeader=\"Transparent\"\r\n              backgroundBody=\"Transparent\"\r\n              border=\"0\"\r\n              align=\"left\"\r\n              maxWidthBody=\"700px\"\r\n              header={false}\r\n            >\r\n              {pageBody}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, Alert, Col } from \"react-bootstrap\";\r\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n// import Dropzone from \"../dropzone\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport ModalMessage from \"../modalMessage\";\r\nimport timezones from \"./timezones.en.json\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    request: \"get user sequence\", // \"register account\",\r\n    namespace: \"AccountRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    signedIn,\r\n    accountNumber,\r\n    // accountPhotoPath,\r\n    userData,\r\n    language,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    debug,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n  } = props.barrelSetters;\r\n  const { getReviser, getWorkplace, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const [userAgreementShow, setUserAgreementShow] = useStickyState(\r\n    false,\r\n    \"userAgreementShow\"\r\n  );\r\n  const [privacyPolicyShow, setPrivacyPolicyShow] = useStickyState(\r\n    false,\r\n    \"privacyPolicyShow\"\r\n  );\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    // dropzoneHook: yup.string().required(t(\"Photo ID is required\")),\r\n    timezone: yup.string().required(t(\"Timezone is required\")),\r\n    birthYear: yup.number().required(t(\"Year is required\")),\r\n    birthMonth: yup.number().required(t(\"Month is required\")),\r\n    birthDay: yup.number().required(t(\"Day is required\")),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Send account registration request\r\n   * @param {object} data\r\n   */\r\n  const sendAccountRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.email = userData.email;\r\n\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    delete data.birthYear;\r\n    delete data.birthMonth;\r\n    delete data.birthDay;\r\n\r\n    const newDate = composeDate(userBirthYear, userBirthMonth, userBirthDay);\r\n    data.birthDate = newDate;\r\n\r\n    if (newDate !== \"\") {\r\n      if (sendAccountRegistrationRequest(data)) {\r\n        // Account registration request was submitted\r\n      }\r\n    }\r\n  };\r\n\r\n  const timezones_sorted = timezones;\r\n\r\n  /**\r\n   * Validates a date\r\n   * @param {string} dateString\r\n   */\r\n  const isValidDate = (dateString) => {\r\n    let dateformat = /^(0?[1-9]|1[0-2])[\\/](0?[1-9]|[1-2][0-9]|3[01])[\\/]\\d{4}$/;\r\n\r\n    // Match the date format through regular expression\r\n    if (dateString.match(dateformat)) {\r\n      let operator = dateString.split(\"/\");\r\n\r\n      // Extract the string into month, date and year\r\n      let datepart = [];\r\n      if (operator.length > 1) {\r\n        datepart = dateString.split(\"/\");\r\n      }\r\n      let month = parseInt(datepart[0]);\r\n      let day = parseInt(datepart[1]);\r\n      let year = parseInt(datepart[2]);\r\n\r\n      // Create list of days of a month\r\n      let ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n      if (month === 1 || month > 2) {\r\n        if (day > ListofDays[month - 1]) {\r\n          ///This check is for Confirming that the date is not out of its range\r\n          return false;\r\n        }\r\n      } else if (month === 2) {\r\n        let leapYear = false;\r\n        if ((!(year % 4) && year % 100) || !(year % 400)) {\r\n          leapYear = true;\r\n        }\r\n        if (leapYear === false && day >= 29) {\r\n          return false;\r\n        } else if (leapYear === true && day > 29) {\r\n          return false;\r\n        }\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Composes a date\r\n   * @param {string} year\r\n   * @param {string} month\r\n   * @param {string} day\r\n   */\r\n  const composeDate = (year, month, day) => {\r\n    const newDate = `${month}/${day}/${year}`;\r\n    if (isValidDate(newDate)) {\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        setUserBirthDateError(\"\");\r\n\r\n        return newDate;\r\n      } else {\r\n        setUserBirthDateError(\"\");\r\n        return \"\";\r\n      }\r\n    } else {\r\n      if (year !== \"\" && month !== \"\" && day !== \"\") {\r\n        setUserBirthDateError(t(\"Date must be valid\"));\r\n        return \"\";\r\n      } else {\r\n        setUserBirthDateError(\"\");\r\n        return \"\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const yearNow = new Date().getFullYear();\r\n\r\n  /**\r\n   * Form\r\n   * @param {*} param0\r\n   */\r\n  const AccountRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    setFieldValue,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Form.Row style={{ margin: \"0 0\" }}>\r\n        <Form.Group\r\n          as={Col}\r\n          controlId=\"formGridDateOfBirth\"\r\n          style={{ margin: \"0 0\" }}\r\n        >\r\n          <Form.Label>{t(\"Date of birth\")}</Form.Label>\r\n        </Form.Group>\r\n      </Form.Row>\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridYear\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthYear\"\r\n            value={values.birthYear}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthYear(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthYear && touched.birthYear}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Year\")}\r\n            </option>\r\n            {Array.from(Array(120).keys()).map((key) => {\r\n              let year = yearNow - key;\r\n\r\n              return (\r\n                <option key={key} value={year}>\r\n                  {year}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthYear}\r\n          </Form.Control.Feedback>\r\n          <div className=\"invalid-feedback-custom\">{userBirthDateError}</div>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridMonth\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthMonth\"\r\n            value={values.birthMonth}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthMonth(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthMonth && touched.birthMonth}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Month\")}\r\n            </option>\r\n            {Array.from(Array(12).keys()).map((key) => {\r\n              let date = new Date(`${key + 1}/1/1970`);\r\n              let monthName = date.toLocaleString(language, { month: \"long\" });\r\n              let monthNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={monthNumber}>\r\n                  {monthNumber} - {monthName}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthMonth}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Col} controlId=\"formGridDay\">\r\n          <Form.Control\r\n            custom\r\n            as=\"select\"\r\n            name=\"birthDay\"\r\n            value={values.birthDay}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setUserBirthDay(e.target.value);\r\n              setUserBirthDateError(\"\");\r\n            }}\r\n            isInvalid={!!errors.birthDay && touched.birthDay}\r\n          >\r\n            <option key=\"\" value=\"\">\r\n              {t(\"Day\")}\r\n            </option>\r\n            {Array.from(Array(31).keys()).map((key) => {\r\n              let dayNumber = (key + 1).toString().padStart(2, \"0\");\r\n              return (\r\n                <option key={key} value={dayNumber}>\r\n                  {dayNumber}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.birthDay}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form.Row>\r\n\r\n      <Form.Group controlId=\"validationFormikTimezone\">\r\n        <Form.Label>{t(\"Timezone\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          custom\r\n          name=\"timezone\"\r\n          value={values.timezone}\r\n          onChange={(e) => {\r\n            handleChange(e);\r\n            setUserTimezone(e.target.value);\r\n          }}\r\n          isInvalid={!!errors.timezone && touched.timezone}\r\n        >\r\n          <option value=\"\">{t(\"Choose...\")}</option>\r\n          {timezones_sorted.map((element, key) => (\r\n            <option\r\n              key={key}\r\n              value={`${(((element.Offset + 12) % 24) + 1)\r\n                .toString()\r\n                .padStart(2, \"0\")} - ${element.Name}`}\r\n            >\r\n              {element.Name}\r\n            </option>\r\n          ))}\r\n        </Form.Control>\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {errors.timezone}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n\r\n      <div style={{ paddingBottom: \"10px\" }}>\r\n        {t(\"Agree to terms and conditions\")}\r\n      </div>\r\n\r\n      <Trans i18nKey=\"AccountRegistration:The User Agreement and the Privacy Policy\">\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setUserAgreementShow(true)}>\r\n          User Agreement\r\n        </a>\r\n\r\n        <br />\r\n\r\n        <KeyboardArrowRight style={{ color: \"var(--dark)\" }} />\r\n        <a href=\"#\" onMouseDown={() => setPrivacyPolicyShow(true)}>\r\n          Privacy Policy\r\n        </a>\r\n      </Trans>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  if (signedIn === false)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"User not logged in\")}</Alert.Heading>\r\n          <p>\r\n            <Trans i18nKey=\"AccountRegistration:Please log in first\">\r\n              Please log in first.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  if (!debug && accountNumber !== null)\r\n    return (\r\n      <>\r\n        <Alert variant=\"info\">\r\n          <Alert.Heading>{t(\"Account successfully registered\")}</Alert.Heading>\r\n          <p>\r\n            <Trans\r\n              i18nKey=\"AccountRegistration:Account with your personal ID successfully registered\"\r\n              accountNumber={accountNumber}\r\n            >\r\n              Account with the personal ID\r\n              <strong>{{ accountNumber }}</strong>\r\n              successfully registered.\r\n            </Trans>\r\n          </p>\r\n        </Alert>\r\n      </>\r\n    );\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        show={userAgreementShow}\r\n        path3=\"tos\"\r\n        file=\"UserAgreement.js\"\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"User Agreement\")}\r\n        footer=\"\"\r\n        onHide={() => setUserAgreementShow(false)}\r\n        {...args}\r\n      />\r\n\r\n      <ModalMessage\r\n        show={privacyPolicyShow}\r\n        path3=\"tos\"\r\n        file=\"PrivacyPolicy.js\"\r\n        size=\"lg\"\r\n        centered={false}\r\n        title={t(\"Privacy Policy\")}\r\n        footer=\"\"\r\n        onHide={() => setPrivacyPolicyShow(false)}\r\n        {...args}\r\n      />\r\n\r\n      <Card title={t(\"Open account\")} border={0}>\r\n        <Formik\r\n          component={AccountRegistrationForm}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            // dropzoneHook: accountPhotoPath,\r\n            timezone: userTimezone,\r\n            birthYear: userBirthYear,\r\n            birthMonth: userBirthMonth,\r\n            birthDay: userBirthDay,\r\n          }}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","import \"./Card.css\";\r\nimport React, { cloneElement } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n// import { Container, Row, Col, Button } from \"react-bootstrap\";\r\n// import Button from \"react-bootstrap/Button\";\r\n\r\nexport default (args) => {\r\n  let defaults = {\r\n    title: \"Untitled\",\r\n    navigation: undefined,\r\n    footer: undefined,\r\n    header: true,\r\n    body: true,\r\n    headerPadding: \"20px\",\r\n    bodyPadding: \"20px\",\r\n    align: \"left\",\r\n    maxWidth: \"100%\",\r\n    minWidthBody: \"150px\",\r\n    maxWidthBody: \"500px\",\r\n    cardTitleClass: \"\",\r\n    headerContent: null,\r\n    transparent: false,\r\n    background: \"Transparent\",\r\n    backgroundHeader: \"var(--light)\",\r\n    backgroundBody: \"var(--light)\",\r\n    border: \"1px solid rgba(0,0,0,.125)\",\r\n    headerBorderBottom: \"1px solid rgba(0,0,0,.125)\",\r\n    onNavigationClick: () => {},\r\n  };\r\n  let props = Object.assign(defaults, args);\r\n\r\n  let key = 0;\r\n\r\n  let footer = props.footer ? <Card.Footer>{props.footer}</Card.Footer> : \"\";\r\n\r\n  return (\r\n    <Card\r\n      className=\"custom-card\"\r\n      style={{ background: props.background, border: props.border }}\r\n    >\r\n      {/* <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" /> */}\r\n      {props.header && (\r\n        <Card.Header\r\n          className=\"custom-card\"\r\n          style={{\r\n            background: props.backgroundHeader,\r\n            borderBottom: props.headerBorderBottom,\r\n            padding: props.headerPadding,\r\n          }}\r\n        >\r\n          {props.headerContent !== null ? (\r\n            props.headerContent\r\n          ) : (\r\n            <>\r\n              {props.title.length > 0 && (\r\n                <Card.Title className={props.cardTitleClass}>\r\n                  {props.title}\r\n                </Card.Title>\r\n              )}\r\n              <Nav\r\n                variant=\"tabs\"\r\n                defaultActiveKey={props.navigationdefaultActiveKey}\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  flexWrap: \"wrap\",\r\n                }}\r\n              >\r\n                {props.navigation &&\r\n                  props.navigation.map((item, key) => (\r\n                    <Nav.Item key={key}>\r\n                      <Nav.Link\r\n                        className=\"custom-card\"\r\n                        href={item.link}\r\n                        onClick={() => props.onNavigationClick(item.link)}\r\n                        style={{ color: \"var(--dark)\" }}\r\n                      >\r\n                        {item.name}\r\n                      </Nav.Link>\r\n                    </Nav.Item>\r\n                  ))}\r\n              </Nav>\r\n            </>\r\n          )}\r\n        </Card.Header>\r\n      )}\r\n\r\n      {props.body && (\r\n        <Card.Body\r\n          className=\"custom-card\"\r\n          style={{\r\n            background: props.backgroundBody,\r\n            textAlign: props.align,\r\n            maxWidth: props.maxWidth,\r\n            padding: props.bodyPadding,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              minWidth: props.minWidthBody,\r\n              maxWidth: props.maxWidthBody,\r\n              margin: \"auto\",\r\n            }}\r\n          >\r\n            {React.Children.map(args.children, (child) => {\r\n              if (typeof child !== \"object\") {\r\n                return child;\r\n              } else if (child === null) {\r\n                return;\r\n              } else {\r\n                key++;\r\n                return cloneElement(child, {\r\n                  styles: null,\r\n                  key: key,\r\n                });\r\n              }\r\n            })}\r\n          </div>\r\n        </Card.Body>\r\n      )}\r\n      {footer}\r\n    </Card>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport { Button, Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\n// export default (args) => {\r\nconst SubmitButton = React.memo((args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    caption: \"Submit\",\r\n    request: null,\r\n    namespace: \"Button\",\r\n    type: \"submit\",\r\n    classButton: \"\",\r\n    visible: true,\r\n    marginTop: 0,\r\n    timeout: 15000, // milliseconds\r\n    variant: \"primary\", // primary | secondary\r\n    onSubmit: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { request } = props.barrelGetters;\r\n  const { setError, setInfo } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const [requestExpired] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    setError(null);\r\n    setInfo(null);\r\n    // document.body.style.overflow = \"hidden\";\r\n    props.onSubmit();\r\n    // e.preventDefault();\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return !props.visible ? (\r\n      <></>\r\n    ) : (\r\n      <Button\r\n        type={props.type}\r\n        className={props.classButton}\r\n        onClick={onSubmit}\r\n        block\r\n        variant={props.variant === \"primary\" ? \"primary\" : \"outline-primary\"}\r\n        disabled={request === props.request && !requestExpired}\r\n        style={{\r\n          marginTop: props.marginTop + \"px\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n      >\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"grow\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={request !== props.request || requestExpired}\r\n        />\r\n        &nbsp;\r\n        {props.caption}\r\n        &nbsp;\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n});\r\n\r\nexport default SubmitButton;\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Modal, Navbar, Nav } from \"react-bootstrap\";\r\n// import ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport FileLoader from \"../fileLoader\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ModalMessage\",\r\n    centered: true,\r\n    message: \"\",\r\n    title: null,\r\n    footer: null,\r\n    // bodyStyle: { padding: \"1rem\" },\r\n    show: false,\r\n    onHide: () => {},\r\n    size: \"sm\",\r\n    path3: \"tos\",\r\n    file: null,\r\n    backdrop: true, // \"static\"\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Modal\r\n        show={props.show}\r\n        title={props.title}\r\n        footer={props.footer}\r\n        file={props.file}\r\n        onHide={props.onHide}\r\n        size={props.size}\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered={props.centered}\r\n        backdrop={props.backdrop}\r\n      >\r\n        {props.title !== null && (\r\n          <Modal.Header closeButton>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: \"5px\",\r\n                background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src=\"gfx/zlogo_light.png\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  alt=\"\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n              <Nav className=\"mr-auto\">\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                  {props.title}\r\n                </Modal.Title>\r\n              </Nav>\r\n            </Navbar>\r\n          </Modal.Header>\r\n        )}\r\n        <Modal.Body\r\n          style={{ maxHeight: \"calc(100vh - 210px)\", overflowY: \"auto\" }}\r\n        >\r\n          {props.message !== \"\" ? (\r\n            props.message\r\n          ) : (\r\n            <FileLoader\r\n              {...args}\r\n              path3={props.path3}\r\n              file={props.file}\r\n              defaultFile={props.file}\r\n            />\r\n          )}\r\n        </Modal.Body>\r\n        {props.footer !== null && (\r\n          <Modal.Footer>\r\n            <Button block onClick={props.onHide}>\r\n              {t(\"Close\")}\r\n            </Button>\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { lazy } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"FileLoader\",\r\n    path1: \"components\",\r\n    path2: \"locale\",\r\n    path3: \"topics\",\r\n    file: null,\r\n    defaultFile: \"common-questions.js\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getFileNameFromURI } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    let fileName = props.file !== null ? props.file : getFileNameFromURI();\r\n\r\n    let ExternalFile = null;\r\n\r\n    ExternalFile =\r\n      fileName !== null\r\n        ? lazy(() =>\r\n            import(\r\n              `../../${props.path1}/${props.path2}/${language}/${props.path3}/${fileName}`\r\n            ).catch(() => {\r\n              return import(\r\n                `../../${props.path1}/${props.path2}/${language}/${props.path3}/${props.defaultFile}`\r\n              );\r\n            })\r\n          )\r\n        : null;\r\n\r\n    return <></>;\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","import React from \"react\";\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    // logErrorToMyService(error, errorInfo);\r\n    console.log(\"Error boundary:\", error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      //   return <h1>Something went wrong.</h1>;\r\n      return <></>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Transactions from \"../transactions\";\r\nimport Shares from \"../shares\";\r\nimport AccordionCard from \"../accordionCard\";\r\nimport Balance from \"../balance\";\r\nimport CopyableField from \"../copyableField\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"AccountContainer\", paddingBody: \"20px 0 0 0\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber, accordionView } = props.barrelGetters;\r\n  const {\r\n    setRedirectTo,\r\n    setAccordionView,\r\n    setResponseProps,\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const { getAccountData, getTransactions, getShares } = props.barrelFunctions;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n   *\r\n   * @param {*} view\r\n   */\r\n  const toggleView = (view) => {\r\n    const newView = accordionView !== view ? view : null;\r\n\r\n    setResponseProps(null);\r\n    setAccordionView(newView);\r\n    setClearRefs(true);\r\n\r\n    if (newView !== null) {\r\n      switch (view) {\r\n        case \"balance\":\r\n          getAccountData();\r\n          break;\r\n\r\n        case \"transactions\":\r\n          getTransactions(1);\r\n          break;\r\n\r\n        case \"shares\":\r\n          getShares(1);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return (\r\n    <>\r\n      <Accordion defaultActiveKey={accordionView}>\r\n        {/**\r\n         * Account number\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Account number\")}\r\n          eventkey=\"accountNumber\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"accountNumber\")}\r\n        >\r\n          <CopyableField value={accountNumber} {...args} />\r\n        </AccordionCard>\r\n\r\n        {/**\r\n         * Balance\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Balance\")}\r\n          eventkey=\"balance\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"balance\")}\r\n        >\r\n          <Balance {...args} />\r\n        </AccordionCard>\r\n\r\n        {/**\r\n         * Transactions\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Transactions\")}\r\n          eventkey=\"transactions\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"transactions\")}\r\n        >\r\n          <Transactions {...args} />\r\n        </AccordionCard>\r\n\r\n        {/**\r\n         * Shares\r\n         */}\r\n        <AccordionCard\r\n          title={t(\"Shares\")}\r\n          eventkey=\"shares\"\r\n          active={accordionView}\r\n          paddingBody={props.paddingBody}\r\n          onClick={() => toggleView(\"shares\")}\r\n        >\r\n          <Shares {...args} />\r\n        </AccordionCard>\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { ListGroup, Badge } from \"react-bootstrap\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { ArrowRightAlt } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\nimport DateRangePicker from \"../dateRangePicker\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    request: \"get transactions\",\r\n    namespace: \"Transactions\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    transactions,\r\n    countTransactions,\r\n    activePageTransactions,\r\n    transactionsPerPage,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const {\r\n    getTransactions,\r\n    findTransactions,\r\n    showRequestStatus,\r\n    format,\r\n    formatDate,\r\n    formatPerCent,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageTransactions > 1 ? activePageTransactions - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageTransactions <\r\n          Math.ceil(countTransactions / transactionsPerPage)\r\n            ? activePageTransactions + 1\r\n            : Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countTransactions / transactionsPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getTransactions(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      header={false}\r\n      maxWidthBody=\"700px\"\r\n    >\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <Search\r\n          advancedSearch={false}\r\n          placeholder={t(\"Find transactions...\")}\r\n          captionAdvancedSearch={t(\"Advanced search\")}\r\n          onSubmit={findTransactions}\r\n          {...args}\r\n        />\r\n        <br />\r\n        <DateRangePicker\r\n          caption={t(\"Period of time\")}\r\n          captionStartDate={t(\"Start date\")}\r\n          captionEndDate={t(\"End date\")}\r\n          captionUpdate={t(\"Update\")}\r\n          {...args}\r\n        />\r\n      </div>\r\n      <ListGroup variant=\"flush\">\r\n        {transactions !== null &&\r\n          transactions.map((transaction, keyTransactions) => {\r\n            cnt++;\r\n\r\n            const {\r\n              // business_description,\r\n              // business_id,\r\n              // business_image,\r\n              // business_link,\r\n              // business_status,\r\n              business_title,\r\n              comment,\r\n              conv_amount,\r\n              created,\r\n              // currency,\r\n              // exchange_rate,\r\n              sender_firstname,\r\n              sender_lastname,\r\n              recipient_firstname,\r\n              recipient_lastname,\r\n              // purpose_description,\r\n              purpose_id,\r\n              // purpose_image,\r\n              // purpose_link,\r\n              // purpose_status,\r\n              purpose_title,\r\n              recipient_id,\r\n              roles,\r\n              share,\r\n              share_per_cent,\r\n              sender_id,\r\n              // sender_status,\r\n              // recipient_status,\r\n              from_account,\r\n              to_account,\r\n              type,\r\n            } = transaction;\r\n\r\n            const i_am_sender = sender_id === accountNumber;\r\n            const i_am_recipient = recipient_id === accountNumber;\r\n            const t_from_account = t(from_account);\r\n            const t_to_account = t(to_account);\r\n\r\n            const roles_available =\r\n              roles !== null && roles !== \"-\" && typeof roles !== \"undefined\";\r\n            const arrRoles = roles_available ? roles.split(\",\") : [];\r\n\r\n            const shares_available =\r\n              typeof share !== \"undefined\" && share !== null && share !== \"-\";\r\n\r\n            if (type === \"transfer U2S\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions}>\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n\r\n                  <Trans\r\n                    i18nKey=\"Transactions:fromAccountToAccount\"\r\n                    t_from_account={t_from_account}\r\n                    t_to_account={t_to_account}\r\n                  >\r\n                    {{ t_from_account }}{\" \"}\r\n                    <ArrowRightAlt style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                    {{ t_to_account }}\r\n                  </Trans>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions}>\r\n                  {i_am_recipient ? (\r\n                    <>\r\n                      {sender_firstname} {sender_lastname}\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {recipient_firstname} {recipient_lastname}\r\n                    </>\r\n                  )}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  {comment !== \"\" && <br />}\r\n                  {comment}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer V2U\") {\r\n              return (\r\n                <ListGroup.Item key={keyTransactions}>\r\n                  {t(\"Daily allowance\")}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n            } else if (type === \"transfer U2B\") {\r\n              const sender = !i_am_sender ? (\r\n                <>\r\n                  {sender_firstname} {sender_lastname}\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              );\r\n              return (\r\n                <ListGroup.Item key={keyTransactions}>\r\n                  {sender}\r\n                  <span style={{ float: \"right\" }}>\r\n                    {i_am_recipient ? \"\" : \"-\"}\r\n                    {format(conv_amount)}\r\n                  </span>\r\n                  {!i_am_sender && <br />}\r\n                  {purpose_id}\r\n                  {comment !== \"\" && comment !== null && (\r\n                    <>\r\n                      <br />\r\n                      {comment}\r\n                    </>\r\n                  )}\r\n                  <br />\r\n                  {business_title} &middot; {purpose_title}\r\n                  {roles_available && (\r\n                    <>\r\n                      <br />\r\n                      {arrRoles.map((role, key) => {\r\n                        return (\r\n                          <span key={key}>\r\n                            {\" \"}\r\n                            <Badge pill variant=\"secondary\">\r\n                              {role}\r\n                            </Badge>\r\n                          </span>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  )}{\" \"}\r\n                  {shares_available && (\r\n                    <>\r\n                      <br />\r\n                      {share} {t(\"shares\")} ({formatPerCent(share_per_cent)})\r\n                    </>\r\n                  )}\r\n                  <br />\r\n                  <small>{formatDate(created)}</small>\r\n                </ListGroup.Item>\r\n              );\r\n\r\n              // TODO: check if this works\r\n            } else {\r\n              console.log(\"Unknown transfer type:\", type);\r\n\r\n              return <></>;\r\n            }\r\n          })}\r\n      </ListGroup>\r\n\r\n      {showRequestStatus(\r\n        \"get transactions / SELECT transactions\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No transactions\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <br />\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countTransactions}\r\n        itemsPerPage={transactionsPerPage}\r\n        active={activePageTransactions}\r\n        onClick={onPageSelect}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { useTranslation } from \"react-i18next\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Pagination\",\r\n    size: \"md\",\r\n    countItems: 0,\r\n    itemsPerPage: 5,\r\n    active: 0, // active page\r\n    onClick: () => {},\r\n    align: \"center\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const pages = Math.ceil(props.countItems / props.itemsPerPage);\r\n\r\n  if (pages < 2) return <></>;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  const onClick = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = props.active > 1 ? props.active - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          props.active < Math.ceil(props.countItems / props.itemsPerPage)\r\n            ? props.active + 1\r\n            : Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(props.countItems / props.itemsPerPage);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // getBusinesses(number);\r\n    props.onClick(number);\r\n  };\r\n\r\n  const getPages = () => {\r\n    let items = [];\r\n    for (let number = 1; number <= pages; number++) {\r\n      if (\r\n        number === 1 ||\r\n        number === pages ||\r\n        (number >= props.active - 1 && number <= props.active + 1)\r\n      ) {\r\n        items.push(\r\n          <Pagination.Item\r\n            key={number}\r\n            active={number === props.active}\r\n            onClick={() => onClick(number)}\r\n          >\r\n            {number}\r\n          </Pagination.Item>\r\n        );\r\n      } else if (number === 2 || number === pages - 1) {\r\n        items.push(<Pagination.Ellipsis key={number} disabled />);\r\n      }\r\n    }\r\n    return items;\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const { align } = props;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: `${align}`,\r\n          // backgroundColor: \"red\",\r\n        }}\r\n      >\r\n        <span style={{ display: \"inline-block\" }}>\r\n          <Pagination size={props.size} style={{ padding: 0, margin: 0 }}>\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.First onClick={() => props.onClick(\"First\")} />\r\n                <Pagination.Prev onClick={() => props.onClick(\"Prev\")} />\r\n              </>\r\n            )}\r\n\r\n            {getPages()}\r\n\r\n            {pages > 5 && (\r\n              <>\r\n                <Pagination.Next onClick={() => props.onClick(\"Next\")} />\r\n                <Pagination.Last onClick={() => props.onClick(\"Last\")} />\r\n              </>\r\n            )}\r\n          </Pagination>\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"react-calendar/dist/Calendar.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Col, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search as SearchIcon, Replay as ReplayIcon } from \"@material-ui/icons\";\r\n// import Autosuggest from \"react-autosuggest\";\r\n// import Calendar from \"react-calendar\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n// import DatePicker from \"../datePicker\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Search\",\r\n    request: \"find currencies\",\r\n    advancedSearch: false,\r\n    placeholder: \"SEARCH...\",\r\n    captionAdvancedSearch: \"Advanced search\",\r\n    onSubmit: () => {},\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { search } = props.barrelGetters;\r\n  const { setSearch } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /** \r\n    * Hooks\r\n    ============================================================================ */\r\n  // const [suggestions, setSuggestions] = useStickyState([], \"suggestions\");\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  const refSearch = React.createRef();\r\n\r\n  /**\r\n    * Clear refs\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    const tempRefSearch = refSearch.current;\r\n    return () => {\r\n      if (tempRefSearch !== null && search !== tempRefSearch.value)\r\n        setSearch(tempRefSearch.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    search: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    // findCurrencies(data.search);\r\n    props.onSubmit(data.search);\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * Search\r\n         */}\r\n        <Form.Group style={{ padding: 0, margin: 0 }}>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={props.placeholder}\r\n              name=\"search\"\r\n              ref={refSearch}\r\n              value={values.search}\r\n              autoComplete=\"search\"\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.search && touched.search}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text\r\n                id=\"inputGroupAppend\"\r\n                onClick={() => onSubmit(values)}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <SearchIcon style={{ color: \"var(--dark)\" }} />\r\n              </InputGroup.Text>\r\n            </InputGroup.Append>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.search}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n          {props.advancedSearch && (\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <button\r\n                className=\"button-transparent\"\r\n                style={{ margin: \"0\", padding: \"0\" }}\r\n              >\r\n                <small className=\"text-muted\">\r\n                  {props.captionAdvancedSearch}\r\n                </small>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        search: search,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"react-calendar/dist/Calendar.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup, Col, Button } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search as SearchIcon, Replay as ReplayIcon } from \"@material-ui/icons\";\r\n// import Autosuggest from \"react-autosuggest\";\r\n// import Calendar from \"react-calendar\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n// import { useStickyState } from \"../../utils/state\";\r\nimport DatePicker from \"../datePicker\";\r\n// import SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DateRangePicker\",\r\n    request: \"find currencies\",\r\n    caption: \"Period of time\",\r\n    captionStartDate: \"Start date\",\r\n    captionEndDate: \"End date\",\r\n    captionUpdate: \"Update\",\r\n    onSubmit: () => {},\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { search, dateRangeStart, dateRangeEnd } = props.barrelGetters;\r\n  const { setSearch, setDateRangeStart, setDateRangeEnd } = props.barrelSetters;\r\n  const {\r\n    getTransactions,\r\n    formatDate,\r\n    clearRequestStatus,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /** \r\n     * Hooks\r\n     ============================================================================ */\r\n  // const [suggestions, setSuggestions] = useStickyState([], \"suggestions\");\r\n\r\n  /**\r\n     * Create refs\r\n     ============================================================================ */\r\n  const refSearch = React.createRef();\r\n\r\n  /**\r\n     * Clear refs\r\n     ============================================================================ */\r\n  useEffect(() => {\r\n    const tempRefSearch = refSearch.current;\r\n    return () => {\r\n      if (tempRefSearch !== null && search !== tempRefSearch.value)\r\n        setSearch(tempRefSearch.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    dateStart: yup.string().required(t(\"Date start is required\")),\r\n    dateEnd: yup.string().required(t(\"Date end is required\")),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const onSubmit = () => {\r\n    getTransactions(1);\r\n  };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const DateRangePickerForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * Caption: Period of time\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          <Form.Group\r\n            as={Col}\r\n            controlId=\"formGridPeriodOfTime\"\r\n            style={{ margin: \"0\", padding: \"0 0\" }}\r\n          >\r\n            <Form.Label>{props.caption}</Form.Label>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        {/**\r\n         * Date start / Date end\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          {/**\r\n           * Date start\r\n           */}\r\n          <Form.Group\r\n            as={Col}\r\n            style={{ margin: \"0\", padding: \"0\" }}\r\n            controlId=\"validationFormikDateStart\"\r\n          >\r\n            <DatePicker\r\n              name=\"dateStart\"\r\n              value={values.dateStart}\r\n              onChange={(data) => {\r\n                // console.log(data);\r\n                setDateRangeStart(data);\r\n              }}\r\n              isInvalid={!!errors.dateStart && touched.dateStart}\r\n              placeholder={props.captionStartDate}\r\n              {...args}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.dateStart}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          {/**\r\n           * Dash\r\n           */}\r\n          <span style={{ margin: \"0\", padding: \"0.4rem 0.5rem\" }}>-</span>\r\n\r\n          {/**\r\n           * Date end\r\n           */}\r\n          <Form.Group\r\n            as={Col}\r\n            style={{ padding: \"0 0\" }}\r\n            controlId=\"validationFormikDateEnd\"\r\n          >\r\n            <DatePicker\r\n              name=\"dateEnd\"\r\n              value={values.dateEnd}\r\n              onChange={(data) => {\r\n                // console.log(data);\r\n                setDateRangeEnd(data);\r\n              }}\r\n              isInvalid={!!errors.dateEnd && touched.dateEnd}\r\n              placeholder={props.captionEndDate}\r\n              {...args}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.dateEnd}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n        </Form.Row>\r\n\r\n        {/**\r\n         * Update\r\n         */}\r\n        <Form.Row style={{ margin: \"0\" }}>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onSubmit}\r\n            className=\"button-transparent\"\r\n            style={{ margin: \"-0.5rem 0 0 0\", padding: \"0\" }}\r\n          >\r\n            <ReplayIcon className=\"sm\" style={{ color: \"var(--dark)\" }} />\r\n            <span\r\n              style={{\r\n                margin: \"0 0.5rem\",\r\n              }}\r\n            >\r\n              {props.captionUpdate}\r\n            </span>\r\n          </button>\r\n        </Form.Row>\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n     * Formik return\r\n     ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={DateRangePickerForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        dateStart: dateRangeStart,\r\n        dateEnd: dateRangeEnd,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System CSS\r\n ============================================================================ */\r\n// import \"flatpickr/dist/themes/material_green.css\";\r\nimport \"./DatePicker.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\n// import { Form, InputGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import Flatpickr from \"react-flatpickr\";\r\n// eslint-disable-next-line\r\n// import { Latvian } from \"flatpickr/dist/l10n/lv.js\";\r\n// import { DateRange } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\nimport Flatpickr from \"./DatePickerWrapper\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DatePicker\",\r\n    request: \"get something\",\r\n    value: \"\",\r\n    onChange: () => {},\r\n    placeholder: \"Date\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const { language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  // const [placeholder, setPlaceholder] = useState(props.placeholder);\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  // const refFlatpickr = React.createRef();\r\n\r\n  // Flatpickr(myElem, {\r\n  //   locale: Latvian, // locale for this instance only\r\n  // });\r\n\r\n  // Flatpickr.localize(Latvian);\r\n  // Flatpickr.localize(Flatpickr.l10ns.lv);\r\n  // flatpickr(\"mySelector\");\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  // const schema = yup.object({\r\n  //   dateStart: yup.string().required(t(\"Start date is required\")),\r\n  // });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  // const onSubmit = (data) => {\r\n  //   console.log(data);\r\n  // };\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <Flatpickr\r\n      placeholder={props.placeholder}\r\n      value={props.value}\r\n      options={{\r\n        locale: language,\r\n        showMonths: 1,\r\n        inline: false,\r\n        shorthandCurrentMonth: false,\r\n        allowInput: true,\r\n        clickOpens: false,\r\n        monthSelectorType: \"static\",\r\n        altInput: true,\r\n        altFormat: t(\"Y-m-d\"),\r\n        dateFormat: \"Y-m-d\", // \"d.m.Y\",\r\n        // dateFormat: \"Y-m-d\",\r\n        // minDate: new Date().fp_incr(-7),\r\n        maxDate: \"today\",\r\n        // mode: \"range\",\r\n        defaultDate: props.value,\r\n        onChange: function (selectedDates, dateStr, instance) {\r\n          console.log(selectedDates, dateStr, instance);\r\n          props.onChange(dateStr);\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Form, InputGroup, Button, Table, ListGroup } from \"react-bootstrap\";\r\n// import { Formik } from \"formik\";\r\n// import * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n// import Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\nimport Card from \"../card\";\r\n// import SubmitButton from \"../submitButton\";\r\nimport Pagination from \"../pagination\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Search from \"../search\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    request: \"get shares\",\r\n    namespace: \"Shares\",\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    shares,\r\n    countShares,\r\n    activePageShares,\r\n    sharesPerPage,\r\n    // accountNumber,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  // const {  } = props.barrelSetters;\r\n  const {\r\n    getShares,\r\n    // getRequestStatus,\r\n    showRequestStatus,\r\n    findShares,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onPageSelect = (number) => {\r\n    console.log(\"on page select\", number);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageShares > 1 ? activePageShares - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageShares < Math.ceil(countShares / sharesPerPage)\r\n            ? activePageShares + 1\r\n            : Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countShares / sharesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getShares(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      header={false}\r\n      maxWidthBody=\"700px\"\r\n    >\r\n      <Search\r\n        advancedSearch={false}\r\n        placeholder={t(\"Find shares...\")}\r\n        captionAdvancedSearch={t(\"Advanced search\")}\r\n        onSubmit={findShares}\r\n        {...args}\r\n      />\r\n      <br />\r\n      {shares !== null &&\r\n        shares.map((share, keyShares) => {\r\n          cnt++;\r\n\r\n          const {\r\n            // business_description,\r\n            // business_id,\r\n            // business_image,\r\n            // business_link,\r\n            // business_status,\r\n            business_title,\r\n            owner_firstname,\r\n            owner_lastname,\r\n            // owner_status,\r\n            // owner_uid,\r\n            // purpose_description,\r\n            purpose_id,\r\n            // purpose_image,\r\n            // purpose_link,\r\n            // purpose_status,\r\n            purpose_title,\r\n            shareholder_id,\r\n            shares_created,\r\n            // shares_description,\r\n            share_per_cent,\r\n            shares_roles,\r\n            shares_share,\r\n            // shares_status,\r\n            // shares_title,\r\n          } = share;\r\n\r\n          const arrRoles = shares_roles !== null ? shares_roles.split(\",\") : [];\r\n          // const content = `${owner_firstname} ${owner_lastname} / ${formatDate(\r\n          //   shares_created\r\n          // )}`;\r\n\r\n          // console.log(\"keyShares:\", keyShares);\r\n\r\n          return (\r\n            <Shareholder\r\n              {...args}\r\n              key={keyShares}\r\n              id={keyShares}\r\n              shareholder={shareholder_id}\r\n              purpose={purpose_id}\r\n              firstname={userData.firstname}\r\n              lastname={userData.lastname}\r\n              share={shares_share}\r\n              roles={arrRoles}\r\n              closeButton={false}\r\n              rangeControl={false}\r\n              sharePerCent={share_per_cent}\r\n              businessOwnerFirstname={owner_firstname}\r\n              businessOwnerLastname={owner_lastname}\r\n              businessTitle={business_title}\r\n              purposeTitle={purpose_title}\r\n              sharesCreated={shares_created}\r\n            />\r\n          );\r\n        })}\r\n\r\n      {showRequestStatus(\r\n        \"get shares / SELECT shares\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No shares\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"md\"\r\n        countItems={countShares}\r\n        itemsPerPage={sharesPerPage}\r\n        active={activePageShares}\r\n        onClick={onPageSelect}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Toast, Badge } from \"react-bootstrap\";\r\nimport { Settings } from \"@material-ui/icons\";\r\nimport _ from \"lodash\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Shareholder\",\r\n    request: \"change share\",\r\n    purpose: null,\r\n    shareholder: null,\r\n    closeButton: true,\r\n    rangeControl: true,\r\n    sharePerCent: null,\r\n    businessTitle: null,\r\n    purposeTitle: null,\r\n    businessOwnerFirstname: null,\r\n    businessOwnerLastname: null,\r\n    sharesCreated: null,\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { purposeShareholders } = props.barrelGetters;\r\n  const { setPurposeShareholders } = props.barrelSetters;\r\n  const { sendRequest, formatPerCent, formatDate } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const [userQuery, setUserQuery] = useState(props.share);\r\n  const delayedQuery = useRef(_.debounce((q) => sendQuery(q), 2000)).current;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const onChange = (e) => {\r\n    setUserQuery(e.target.value);\r\n    delayedQuery(e.target.value);\r\n  };\r\n\r\n  const onClose = () => {\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    return sendRequest({ req: \"remove shareholder\", data });\r\n  };\r\n\r\n  const sendQuery = (delayedQuery) => {\r\n    const ps = purposeShareholders;\r\n    ps[props.id].share = delayedQuery;\r\n    setPurposeShareholders(JSON.stringify(ps));\r\n    let data = {};\r\n    data.purpose_id = props.purpose;\r\n    data.shareholder_id = props.shareholder;\r\n    data.share = delayedQuery;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    const sharesLabelId = `sharesLabel${props.key}`;\r\n    return (\r\n      <Toast key={props.key} onClose={onClose} style={{ minWidth: \"100%\" }}>\r\n        <Toast.Header closeButton={props.closeButton}>\r\n          <strong className=\"mr-auto\">\r\n            {props.firstname} {props.lastname}{\" \"}\r\n            <small>\r\n              <Settings\r\n                hidden={true}\r\n                fontSize=\"small\"\r\n                style={{ color: \"var(--dark)\" }}\r\n              />\r\n            </small>\r\n          </strong>\r\n          <small>\r\n            <span id={sharesLabelId}>{userQuery}</span> {t(\"shares\")}\r\n          </small>\r\n        </Toast.Header>\r\n        <Toast.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formRoles\">\r\n              <div>\r\n                {props.roles.map((role, key) => {\r\n                  return (\r\n                    <span key={key}>\r\n                      <Badge pill variant=\"secondary\">\r\n                        {role}\r\n                      </Badge>{\" \"}\r\n                    </span>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Form.Group>\r\n\r\n            {props.rangeControl && (\r\n              <Form.Group controlId=\"formBasicRange\">\r\n                <Form.Control\r\n                  type=\"range\"\r\n                  custom\r\n                  variant=\"light\"\r\n                  // value={share}\r\n                  defaultValue={userQuery}\r\n                  // value={userQuery}\r\n                  min={1}\r\n                  max={1000}\r\n                  step={1}\r\n                  // ref={this.input}\r\n                  onChange={onChange}\r\n                />\r\n              </Form.Group>\r\n            )}\r\n          </Form>\r\n          <span>\r\n            {props.sharePerCent !== null && formatPerCent(props.sharePerCent)}{\" \"}\r\n            {props.businessTitle !== null && props.businessTitle}{\" \"}\r\n            {props.businessTitle !== null && props.purposeTitle !== null && (\r\n              <> &middot; </>\r\n            )}\r\n            {props.purposeTitle !== null && props.purposeTitle}{\" \"}\r\n          </span>\r\n          {props.sharesCreated !== null && (\r\n            <>\r\n              <br />\r\n              {formatDate(props.sharesCreated, {\r\n                month: \"long\",\r\n                day: \"numeric\",\r\n                year: \"numeric\",\r\n              })}\r\n            </>\r\n          )}{\" \"}\r\n          {(props.businessOwnerFirstname !== null ||\r\n            props.businessOwnerLastname !== null) && <br />}\r\n          {props.businessOwnerFirstname !== null &&\r\n            props.businessOwnerFirstname}{\" \"}\r\n          {props.businessOwnerLastname !== null && props.businessOwnerLastname}{\" \"}\r\n        </Toast.Body>\r\n      </Toast>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { cloneElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\nimport { useAccordionToggle } from \"react-bootstrap/AccordionToggle\";\r\nimport { ChevronRight, ExpandMore } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"AccordionCard\",\r\n    header: true,\r\n    title: \"Untitled\",\r\n    eventkey: \"untitled\",\r\n    active: \"\",\r\n    paddingBody: \"0\",\r\n    onClick: () => {},\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const CustomToggle = ({ children, eventKey }) => {\r\n    // const currentEventKey = React.useContext(AccordionContext);\r\n\r\n    const decoratedOnClick = useAccordionToggle(eventKey, () => {\r\n      console.log(\"totally custom!\", eventKey);\r\n      props.onClick(eventKey);\r\n    });\r\n    // console.log(props.active);\r\n\r\n    const isCurrentEventKey = props.active === eventKey;\r\n\r\n    if (isCurrentEventKey) {\r\n      return (\r\n        <div onClick={decoratedOnClick}>\r\n          {children}\r\n          <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n            <ExpandMore style={{ color: \"var(--dark)\", fontSize: \"2rem\" }} />\r\n          </span>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div onClick={decoratedOnClick}>\r\n          {children}\r\n          <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n            <ChevronRight style={{ color: \"var(--dark)\", fontSize: \"2rem\" }} />\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    let key = 0;\r\n    return (\r\n      <Card style={{ border: 0, backgroundColor: \"Transparent\" }}>\r\n        {props.header && (\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey={props.eventkey}\r\n            style={{\r\n              backgroundColor: \"Transparent\",\r\n              padding: \"12px 2px 12px 2px\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"20px\",\r\n            }}\r\n          >\r\n            <CustomToggle eventKey={props.eventkey}>{props.title}</CustomToggle>\r\n          </Accordion.Toggle>\r\n        )}\r\n        <Accordion.Collapse eventKey={props.eventkey}>\r\n          <Card.Body style={{ padding: props.paddingBody }}>\r\n            {React.Children.map(args.children, (child) => {\r\n              if (typeof child !== \"object\") {\r\n                return child;\r\n              } else {\r\n                key++;\r\n                return cloneElement(child, {\r\n                  ...args,\r\n                  styles: null,\r\n                  key: key,\r\n                });\r\n              }\r\n            })}\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Badge } from \"react-bootstrap\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n  * Default export\r\n  ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Balance\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { userData } = props.barrelGetters;\r\n  const { setAccountType, setRedirectTo } = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const userDataParsed = userData;\r\n\r\n  const available =\r\n    userDataParsed !== null\r\n      ? format(\r\n          userDataParsed.acc_curr +\r\n            userDataParsed.acc_cred +\r\n            userDataParsed.acc_save\r\n        )\r\n      : null;\r\n  let acc_curr =\r\n    userDataParsed !== null ? format(userDataParsed.acc_curr) : null;\r\n  let acc_cred =\r\n    userDataParsed !== null ? format(userDataParsed.acc_cred) : null;\r\n  let acc_save =\r\n    userDataParsed !== null ? format(userDataParsed.acc_save) : null;\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n\r\n  /**\r\n   *\r\n   * @param {*} type\r\n   */\r\n  const onAccountTypeSelected = (type) => {\r\n    setAccountType(type);\r\n    setRedirectTo(\"/transfer\");\r\n  };\r\n\r\n  const getJSX = () => {\r\n    return (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        header={false}\r\n        maxWidthBody=\"700px\"\r\n      >\r\n        <Form noValidate>\r\n          <Form.Group>\r\n            <Form.Label>{t(\"Available\")}</Form.Label>\r\n\r\n            <Form.Text>\r\n              <div style={{ fontSize: \"3em\" }}>{available}</div>\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <div style={{}}>{t(\"Current account\")}</div>\r\n                <span className=\"\" onClick={() => {}}>\r\n                  <Badge variant=\"Light\">{acc_curr}</Badge>\r\n                </span>\r\n              </li>\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <div style={{}}>{t(\"Credit account\")}</div>\r\n\r\n                <span className=\"\" onClick={() => {}}>\r\n                  <Badge variant=\"Light\">{acc_cred}</Badge>\r\n                </span>\r\n              </li>\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                <div style={{}}>{t(\"Savings account\")}</div>\r\n                <span className=\"\" onClick={() => {}}>\r\n                  <Badge variant=\"Light\">{acc_save}</Badge>\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </Form.Group>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FileCopy as FileCopyIcon } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Component\", value: \"\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { copyToClipboard } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refCopyableField = useRef(null);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <>\r\n        <span\r\n          style={{\r\n            position: \"relative\",\r\n            display: \"block\",\r\n            overflow: \"auto\",\r\n            // wordBreak: \"break-all\",\r\n            // whiteSpace: \"nowrap\",\r\n          }}\r\n        >\r\n          <input\r\n            ref={refCopyableField}\r\n            className=\"no-focus\"\r\n            readOnly\r\n            style={{\r\n              border: 0,\r\n              width: \"10rem\",\r\n              background: \"Transparent\",\r\n            }}\r\n            type=\"text\"\r\n            defaultValue={props.value}\r\n          />\r\n\r\n          {document.queryCommandSupported(\"copy\") && (\r\n            <span style={{ float: \"right\", marginLeft: \"0.25rem\" }}>\r\n              <button\r\n                className=\"button-transparent\"\r\n                onClick={() => copyToClipboard(refCopyableField)}\r\n              >\r\n                <FileCopyIcon style={{ color: \"var(--dark)\" }} />\r\n              </button>\r\n            </span>\r\n          )}\r\n        </span>\r\n      </>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { TransferToSelf, TransferToPerson, TransferToBusiness } from \"./index\";\r\n\r\n/**\r\n * Component: Transfer\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber, transferType } = props.barrelGetters;\r\n  const { setRedirectTo } = props.barrelSetters;\r\n  const { format } = props.barrelFunctions;\r\n  const { onTransferTypeChange } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(\"Transfer\");\r\n\r\n  const data = props.data;\r\n  const type = transferType;\r\n  // const onTypeChange = args.onTypeChange;\r\n\r\n  // console.log(\"TRANSFER DATA TYPE:\", type);\r\n\r\n  // const [transferCard, setTransferCard] = useState(null);\r\n\r\n  const onNavigationClick = (id) => {\r\n    onTransferTypeChange(id);\r\n  };\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"U2S\"),\r\n      link: \"#u2s\",\r\n    },\r\n    {\r\n      name: t(\"U2U\"),\r\n      link: \"#u2u\",\r\n    },\r\n    {\r\n      name: t(\"U2B\"),\r\n      link: \"#u2b\",\r\n    },\r\n  ];\r\n\r\n  // console.log(\"TRANSFER DATA\", data);\r\n  // const title = t(\"Transfer to account\");\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  switch (type) {\r\n    case \"#u2u\": // User to user\r\n      // case \"/u2u\": // User to user\r\n      return (\r\n        <TransferToPerson\r\n          title={t(\"Transfer to account\")}\r\n          args={props}\r\n          navigation={navigation}\r\n          navigationdefaultActiveKey={type}\r\n          onNavigationClick={onNavigationClick}\r\n        />\r\n      );\r\n      break;\r\n    case \"#u2b\": // User to business\r\n      // case \"/u2b\": // User to business\r\n      return (\r\n        <TransferToBusiness\r\n          title={t(\"Transfer to account\")}\r\n          args={props}\r\n          navigation={navigation}\r\n          navigationdefaultActiveKey={type}\r\n          onNavigationClick={onNavigationClick}\r\n        />\r\n      );\r\n      break;\r\n    default:\r\n      // \"#u2s\"\r\n      return (\r\n        <TransferToSelf\r\n          title={t(\"Transfer to account\")}\r\n          args={props}\r\n          navigation={navigation}\r\n          navigationdefaultActiveKey={type}\r\n          onNavigationClick={onNavigationClick}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"transfer U2S\",\r\n    namespace: \"Transfer\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    accountType,\r\n    language,\r\n    currencyAbbr,\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userData = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      if (tempRefAmount !== null && transferAmount !== tempRefAmount.value)\r\n        setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toAccount: yup.string().required(t(\"To Account is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} Form data\r\n   */\r\n  const transferToSelf = (data) => {\r\n    // console.log(\"TRANSFER U2S DATA:\", data);\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n\r\n    sendRequest({ req: props.request, data: data });\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToSelf(data);\r\n  };\r\n\r\n  const TransferToSelfForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n      headerPadding=\"20px 20px 10px 20px\"\r\n      bodyPadding=\"20px 20px 10px 20px\"\r\n      border=\"0\"\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/**\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * To account\r\n         */}\r\n        <Form.Group controlId=\"validationToAccount\">\r\n          <Form.Label>{t(\"To account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"toAccount\"\r\n            value={values.toAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferToAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.toAccount && touched.toAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option value=\"acc_curr\" hidden={accountType === \"acc_curr\"}>\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option value=\"acc_cred\" hidden={accountType === \"acc_cred\"}>\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option value=\"acc_save\" hidden={accountType === \"acc_save\"}>\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.toAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setTransferAmount(e.target.value);\r\n              }}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"transfer U2S\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={TransferToSelfForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        fromAccount: transferFromAccount,\r\n        toAccount: transferToAccount,\r\n        amount: transferAmount,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport TanInput from \"../tanInput\";\r\n\r\n/**\r\n * Component: TransferToPerson\r\n */\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2U\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const [transferDescriptionTemp, setTransferDescriptionTemp] = useStickyState(\r\n  //   \"\",\r\n  //   \"transferDescriptionTemp\"\r\n  // );\r\n\r\n  const refPersonalID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPersonalID = refPersonalID.current;\r\n    const tempRefDescription = refDescription.current;\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      if (\r\n        tempRefPersonalID !== null &&\r\n        transferToUID !== tempRefPersonalID.value\r\n      )\r\n        setTransferToUID(tempRefPersonalID.value);\r\n\r\n      if (\r\n        tempRefDescription !== null &&\r\n        transferDescription !== tempRefDescription.value\r\n      )\r\n        setTransferDescription(tempRefDescription.value);\r\n\r\n      if (tempRefAmount !== null && transferAmount !== tempRefAmount.value)\r\n        setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    toPersonalID: yup\r\n      .string()\r\n      .required(t(\"Recipients Personal ID is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Personal ID Regex\")),\r\n        t(\"Wrong Personal ID format\")\r\n      ),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToPerson = (data) => {\r\n    // console.log(\"TRANSFER U2U DATA:\", data);\r\n    data.transferType = props.request;\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n    data = { email: data.email, language: data.language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  // return <>test</>;\r\n\r\n  const onSubmit = (data) => {\r\n    transferToPerson(data);\r\n  };\r\n\r\n  const TransferToPersonForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n      headerPadding=\"20px 20px 10px 20px\"\r\n      bodyPadding=\"20px 20px 10px 20px\"\r\n      border=\"0\"\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * From account\r\n         */}\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Recipients Personal ID\r\n         */}\r\n        <Form.Group controlId=\"validationFormikToPersonalID\">\r\n          <Form.Label>{t(\"To Personal ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={t(\"XXXXXX-XXXXX\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"toPersonalID\"\r\n              ref={refPersonalID}\r\n              value={values.toPersonalID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.toPersonalID && touched.toPersonalID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.toPersonalID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Transfer Description\r\n         */}\r\n        <Form.Group controlId=\"validationFormikDescription\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Amount\r\n         */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              // type=\"number\"\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Button: Next */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToPersonForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          toPersonalID: transferToUID,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\nimport ModalMessage from \"../modalMessage\";\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"TanInput\",\r\n    request: \"submit tan\",\r\n    show: false,\r\n    size: \"lg\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { tanRequired, userData, tanInputTAN } = props.barrelGetters;\r\n  const { setTanRequired, setTanInputTAN } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refTAN = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    const tempRef = refTAN.current;\r\n    return () => {\r\n      if (tempRef !== null && tanInputTAN !== tempRef.value)\r\n        setTanInputTAN(tempRef.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    tan: yup.string().required(t(\"TAN is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    setTanRequired(false);\r\n    data.email = userData.email;\r\n    setTanInputTAN(\"\");\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div>\r\n        {t(\"A transaction number has been sent to your email account.\")}\r\n      </div>\r\n      <br />\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFormikTAN\">\r\n          <Form.Label>{t(\"TAN\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"tan\"\r\n              autoFocus\r\n              ref={refTAN}\r\n              value={values.tan}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.tan && touched.tan}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.tan}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  const message = (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        tan: tanInputTAN,\r\n      }}\r\n    />\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <>\r\n      <ModalMessage\r\n        message={message}\r\n        show={tanRequired}\r\n        size={props.size}\r\n        centered={true}\r\n        onHide={() => setTanRequired(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport TanInput from \"../tanInput\";\r\n\r\nexport default ({\r\n  args,\r\n  title,\r\n  navigation,\r\n  navigationdefaultActiveKey,\r\n  onNavigationClick,\r\n}) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"transfer U2B\", namespace: \"Transfer\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"TRANSFER TO SELF DATA\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    // request,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    accountType,\r\n    currencyAbbr,\r\n    tanRequired,\r\n    transferFromAccount,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    transferAmount,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setTransferAmount,\r\n  } = props.barrelSetters;\r\n  const {\r\n    format,\r\n    parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const { onTransfer } = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeID = React.createRef();\r\n  const refDescription = React.createRef();\r\n  const refAmount = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPurposeID = refPurposeID.current;\r\n    const tempRefDescription = refDescription.current;\r\n    const tempRefAmount = refAmount.current;\r\n    return () => {\r\n      if (\r\n        tempRefPurposeID !== null &&\r\n        transferToPurpose !== tempRefPurposeID.value\r\n      )\r\n        setTransferToPurpose(tempRefPurposeID.value);\r\n\r\n      if (\r\n        tempRefDescription !== null &&\r\n        transferDescription !== tempRefDescription.value\r\n      )\r\n        setTransferDescription(tempRefDescription.value);\r\n\r\n      if (tempRefAmount !== null && transferAmount !== tempRefAmount.value)\r\n        setTransferAmount(tempRefAmount.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Destructuring\r\n   ============================================================================ */\r\n  // const { currency_abbr } = userData;\r\n\r\n  const schema = yup.object({\r\n    fromAccount: yup.string().required(t(\"From Account is required\")),\r\n    // businessTitle: yup\r\n    //   .string()\r\n    //   .required(t(\"Recipients Business ID is required\")),\r\n    purposeID: yup.string().required(t(\"Purpose ID is required\")),\r\n    amount: yup\r\n      .string()\r\n      .required(t(\"Amount is required\"))\r\n      .matches(new RegExp(t(\"Amount Regex\")), t(\"Wrong amount format\")),\r\n  });\r\n\r\n  let acc_curr = \"\";\r\n  let acc_cred = \"\";\r\n  let acc_save = \"\";\r\n  if (userData !== null) {\r\n    acc_curr = \" (\" + format(userData.acc_curr) + \")\";\r\n    acc_cred = \" (\" + format(userData.acc_cred) + \")\";\r\n    acc_save = \" (\" + format(userData.acc_save) + \")\";\r\n  }\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const transferToBusiness = (data) => {\r\n    data.transferType = props.request;\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n    data.currency = currencyAbbr;\r\n    data.amount = parseLocaleNumber(data.amount, language);\r\n    data.amount = new Intl.NumberFormat(\"en-US\", {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      useGrouping: false,\r\n    }).format(data.amount);\r\n    // data.amount = parseFloat(data.amount);\r\n    // data.amount = Number(data.amount.replace(/[^0-9.-]+/g, \"\"));\r\n\r\n    data.amount = [data.amount];\r\n    data.currency = [data.currency];\r\n    data.purposeID = [data.purposeID];\r\n    data.fromAccount = [data.fromAccount];\r\n\r\n    // console.log(\"data:\", data);\r\n    // return;\r\n\r\n    // const transfers = [data];\r\n\r\n    // setTransferRequest(\r\n    //   JSON.stringify({ transferType: props.request, transfers })\r\n    // );\r\n    setTransferRequest(JSON.stringify(data));\r\n\r\n    data = { email: data.email, language: data.language };\r\n\r\n    // console.log(\"data:\", data);\r\n    // return;\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n    // onTransfer({ req: props.request, data: data });\r\n\r\n    setTransferAmount(\"\");\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    transferToBusiness(data);\r\n  };\r\n\r\n  const TransferToBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      title={title}\r\n      navigation={navigation}\r\n      navigationdefaultActiveKey={navigationdefaultActiveKey}\r\n      onNavigationClick={onNavigationClick}\r\n      headerPadding=\"20px 20px 10px 20px\"\r\n      bodyPadding=\"20px 20px 10px 20px\"\r\n      border=\"0\"\r\n    >\r\n      {/* From account */}\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"validationFromAccount\">\r\n          <Form.Label>{t(\"From account\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            name=\"fromAccount\"\r\n            value={values.fromAccount}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n              setTransferFromAccount(e.target.value);\r\n            }}\r\n            isInvalid={!!errors.fromAccount && touched.fromAccount}\r\n          >\r\n            <option value=\"\">{t(\"Choose...\")}</option>\r\n            <option\r\n              value=\"acc_curr\"\r\n              hidden={accountType !== null && accountType !== \"acc_curr\"}\r\n            >\r\n              {t(\"Current account\")}\r\n              {acc_curr}\r\n            </option>\r\n            <option\r\n              value=\"acc_cred\"\r\n              hidden={accountType !== null && accountType !== \"acc_cred\"}\r\n            >\r\n              {t(\"Credit account\")}\r\n              {acc_cred}\r\n            </option>\r\n            <option\r\n              value=\"acc_save\"\r\n              hidden={accountType !== null && accountType !== \"acc_save\"}\r\n            >\r\n              {t(\"Savings account\")}\r\n              {acc_save}\r\n            </option>\r\n          </Form.Control>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.fromAccount}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/*\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Business ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"businessTitle\"\r\n              value={values.businessTitle}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.businessTitle}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n        */}\r\n\r\n        {/* To purpose */}\r\n        <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n          <Form.Label>{t(\"To Purpose ID\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"PXXXXXXXXXXXXXXXXXXXXXXX\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"purposeID\"\r\n              ref={refPurposeID}\r\n              value={values.purposeID}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.purposeID && touched.purposeID}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.purposeID}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Field: Description */}\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>{t(\"Description\")}</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"description\"\r\n            ref={refDescription}\r\n            value={values.description}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/* Amount */}\r\n        <Form.Group controlId=\"validationFormikAmount\">\r\n          <Form.Label>{t(\"Amount\")}</Form.Label>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroupPrepend\">\r\n                {currencyAbbr}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"string\" // do NOT change to number!!\r\n              placeholder={format(0, \"\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"amount\"\r\n              ref={refAmount}\r\n              value={values.amount}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.amount && touched.amount}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.amount}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n      <Formik\r\n        component={TransferToBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          fromAccount: transferFromAccount,\r\n          purposeID: transferToPurpose,\r\n          amount: transferAmount,\r\n          description: transferDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useRef } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Card,\r\n  Tab,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Add, Store, Edit, FileCopy as FileCopyIcon } from \"@material-ui/icons\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Dropzone from \"../dropzone\";\r\nimport BusinessRegistration from \"../businessRegistration\";\r\nimport PurposeRegistration from \"../purposeRegistration\";\r\nimport ShareholderRegistration from \"../shareholderRegistration\";\r\nimport Shareholder from \"../shareholder\";\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\nimport CopyableField from \"../copyableField\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"MyBusiness\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    userBusinesses,\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes,\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    purposeShareholders,\r\n    // purposeID,\r\n    activePurposeData,\r\n    // language,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setRedirectTo,\r\n    setResponseProps,\r\n    setBusinessPurposes,\r\n    setActiveBusiness,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    setActivePageBusinessPurposes,\r\n    setActivePurposeData,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    setPurposeRegistrationKeywords,\r\n    setClearRefs,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    sendRequest,\r\n    showRequestStatus,\r\n    formatDate,\r\n    copyToClipboard,\r\n    findPurposes,\r\n  } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module constants\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n  const refBusinessID = useRef(null);\r\n  const refPurposeID = useRef(null);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Toggle business (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const ToggleBusiness = ({ eventKey, businessID }) => {\r\n    if (activeBusiness === eventKey) {\r\n      setActiveBusiness(null);\r\n      setActivePageBusinessPurposes(null);\r\n    } else {\r\n      setResponseProps(null);\r\n      getBusinessPurposes(businessID, eventKey, 1);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Toggle purpose (Accordion card)\r\n   * @param {*} param0\r\n   */\r\n  const TogglePurpose = ({ eventKey, purposeID }) => {\r\n    setResponseProps(null);\r\n    getPurposeShareholders(purposeID, eventKey);\r\n  };\r\n\r\n  /**\r\n   * Create:\r\n   * - business menu\r\n   * - business purposes menu\r\n   */\r\n  let menuItems = [];\r\n  let purposes = [];\r\n  let cntBusinesses = 0;\r\n  let cntPurposes = 0;\r\n  let countShareholders = 0;\r\n  userBusinesses !== null &&\r\n    Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n      cntBusinesses++;\r\n      menuItems[keyBusiness] = [];\r\n      purposes[keyBusiness] = [];\r\n      businessPurposes !== null &&\r\n        Object.keys(businessPurposes).map((purpose, keyPurpose) => {\r\n          cntPurposes++;\r\n          if (\r\n            businessPurposes[purpose].business_id ===\r\n            userBusinesses[business].business_id\r\n          ) {\r\n            menuItems[keyBusiness][keyPurpose] = (\r\n              <ListGroup.Item\r\n                action\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n                style={{\r\n                  cursor: \"default\",\r\n                  // whiteSpace: \"nowrap\",\r\n                  overflow: \"auto\",\r\n                }}\r\n                onClick={() =>\r\n                  TogglePurpose({\r\n                    eventKey: keyPurpose,\r\n                    purposeID: businessPurposes[purpose].purpose_id,\r\n                  })\r\n                }\r\n              >\r\n                <span style={{ cursor: \"pointer\" }}>\r\n                  {businessPurposes[purpose].title}\r\n                </span>\r\n\r\n                <span style={{ paddingLeft: \"5px\", float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={(e) => {\r\n                      setPurposeRegistrationTitle(\r\n                        businessPurposes[purpose].title !== null\r\n                          ? businessPurposes[purpose].title\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationDescription(\r\n                        businessPurposes[purpose].description !== null\r\n                          ? businessPurposes[purpose].description\r\n                          : \"\"\r\n                      );\r\n                      setPurposeRegistrationKeywords(\r\n                        businessPurposes[purpose].keywords !== null\r\n                          ? businessPurposes[purpose].keywords\r\n                          : \"\"\r\n                      );\r\n\r\n                      setActivePurposeData(\r\n                        JSON.stringify(businessPurposes[purpose])\r\n                      );\r\n                      setActiveBusinesPurpose(\"addPurpose\");\r\n                      e.stopPropagation();\r\n                    }}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </ListGroup.Item>\r\n            );\r\n\r\n            purposes[keyBusiness][keyPurpose] = (\r\n              <Tab.Pane\r\n                key={businessPurposes[purpose].purpose_id}\r\n                eventKey={businessPurposes[purpose].purpose_id}\r\n              >\r\n                <Accordion\r\n                  defaultActiveKey={\r\n                    activePurposeProperty !== null\r\n                      ? activePurposeProperty\r\n                      : \"purpose_id\" // \"shareholders\"\r\n                  }\r\n                >\r\n                  {/* Purpose ID */}\r\n                  <Card\r\n                    style={{\r\n                      border: \"0\",\r\n                      borderRadius: \"0\",\r\n                    }}\r\n                  >\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"purpose_id\"\r\n                      onClick={() => setActivePurposeProperty(\"purpose_id\")}\r\n                    >\r\n                      {t(\"Purpose ID\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"purpose_id\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        <Card.Text>\r\n                          <input\r\n                            ref={refPurposeID}\r\n                            className=\"no-focus\"\r\n                            readOnly\r\n                            style={{\r\n                              border: 0,\r\n                              width: \"15rem\",\r\n                              background: \"Transparent\",\r\n                            }}\r\n                            type=\"text\"\r\n                            defaultValue={businessPurposes[purpose].purpose_id}\r\n                          />\r\n                          {document.queryCommandSupported(\"copy\") && (\r\n                            <span\r\n                              style={{ float: \"right\", marginLeft: \"0.25rem\" }}\r\n                            >\r\n                              <button\r\n                                className=\"button-transparent\"\r\n                                onClick={() => copyToClipboard(refPurposeID)}\r\n                              >\r\n                                <FileCopyIcon\r\n                                  style={{ color: \"var(--dark)\" }}\r\n                                />\r\n                              </button>\r\n                            </span>\r\n                          )}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose shareholders */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"default\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"shareholders\"\r\n                      onClick={() => setActivePurposeProperty(\"shareholders\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Shareholders\")}\r\n                      </span>\r\n                      <span style={{ float: \"right\" }}>\r\n                        <Add\r\n                          onClick={(e) => {\r\n                            setActivePurposeProperty(\"addShareholder\");\r\n                            e.stopPropagation();\r\n                          }}\r\n                          fontSize=\"small\"\r\n                          style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                        />\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    {/* Toggle: Add shareholder */}\r\n                    <Accordion.Collapse eventKey=\"addShareholder\">\r\n                      <Card.Body>\r\n                        <ShareholderRegistration\r\n                          {...args}\r\n                          purposeID={businessPurposes[purpose].purpose_id}\r\n                        />\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n\r\n                    {/* Toggle: Shareholders list */}\r\n                    <Accordion.Collapse eventKey=\"shareholders\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        {typeof purposeShareholders !== \"undefined\" &&\r\n                          purposeShareholders !== null &&\r\n                          Object.keys(purposeShareholders).map(\r\n                            (shareholder, keyShareholder) => {\r\n                              if (\r\n                                purposeShareholders[shareholder].purpose_id ===\r\n                                businessPurposes[purpose].purpose_id\r\n                              ) {\r\n                                const { purpose_id } = purposeShareholders[\r\n                                  shareholder\r\n                                ];\r\n                                const {\r\n                                  shareholder_id,\r\n                                  firstname,\r\n                                  lastname,\r\n                                  // email,\r\n                                  roles,\r\n                                  share,\r\n                                } = purposeShareholders[shareholder];\r\n\r\n                                countShareholders++;\r\n\r\n                                const arrRoles =\r\n                                  roles !== null ? roles.split(\",\") : [];\r\n\r\n                                return (\r\n                                  <Shareholder\r\n                                    {...args}\r\n                                    key={keyShareholder}\r\n                                    id={keyShareholder}\r\n                                    shareholder={shareholder_id}\r\n                                    purpose={purpose_id}\r\n                                    firstname={firstname}\r\n                                    lastname={lastname}\r\n                                    share={share}\r\n                                    roles={arrRoles}\r\n                                  />\r\n                                );\r\n                              } else {\r\n                                return \"\"; // TODO: check if this works\r\n                              }\r\n                            }\r\n                          )}\r\n\r\n                        {showRequestStatus(\r\n                          \"get purpose shareholders / SELECT shares\",\r\n                          countShareholders,\r\n                          t(\"Loading shareholders...\"),\r\n                          t(\"No shareholders\"),\r\n                          \"finished\"\r\n                        )}\r\n\r\n                        {/* End shareholders list */}\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose status */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"productStatus\"\r\n                      onClick={() => setActivePurposeProperty(\"productStatus\")}\r\n                    >\r\n                      {t(\"Purpose Status\")}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"productStatus\">\r\n                      <Card.Body\r\n                        style={{ background: \"var(--white)\" }}\r\n                        onClick={(e) => {\r\n                          // console.log(\"Click\", e);\r\n\r\n                          const bp = businessPurposes;\r\n                          bp[purpose].status =\r\n                            businessPurposes[purpose].status === 0 ? 1 : 0;\r\n                          setBusinessPurposes(JSON.stringify(bp));\r\n\r\n                          let data = {};\r\n                          data.purpose_id =\r\n                            businessPurposes[purpose].purpose_id;\r\n                          data.purpose_status =\r\n                            businessPurposes[purpose].status;\r\n                          return sendRequest({\r\n                            req: \"change purpose status\",\r\n                            data,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <Form>\r\n                          {typeof purposeShareholders === \"undefined\" ||\r\n                            (purposeShareholders === null && (\r\n                              <Form.Text>\r\n                                {t(\r\n                                  \"To publish, please add at least one shareholder\"\r\n                                )}\r\n                                <br />\r\n                                <br />\r\n                              </Form.Text>\r\n                            ))}\r\n\r\n                          {typeof purposeShareholders !== \"undefined\" &&\r\n                            purposeShareholders !== null && (\r\n                              <Form.Check\r\n                                type=\"switch\"\r\n                                custom\r\n                                disabled={\r\n                                  typeof purposeShareholders === \"undefined\" ||\r\n                                  purposeShareholders === null\r\n                                }\r\n                                label={t(\r\n                                  businessPurposes[purpose].status === 0\r\n                                    ? \"Not published\"\r\n                                    : \"Published\"\r\n                                )}\r\n                                checked={businessPurposes[purpose].status === 1}\r\n                                onChange={(e) => {\r\n                                  console.log(e);\r\n                                }}\r\n                              />\r\n                            )}\r\n                        </Form>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* Purpose title */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"default\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"title\"\r\n                      onClick={() => setActivePurposeProperty(\"title\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Title\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"title\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        <Card.Text>{businessPurposes[purpose].title}</Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Purpose description\r\n                   */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"default\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"description\"\r\n                      onClick={() => setActivePurposeProperty(\"description\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Description\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"description\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].description}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/*\r\n                   * Keywords\r\n                   */}\r\n                  <Card style={{ border: \"0\", borderRadius: \"0\" }}>\r\n                    <Accordion.Toggle\r\n                      as={Card.Header}\r\n                      style={{\r\n                        cursor: \"default\",\r\n                        backgroundColor: \"var(--light)\",\r\n                      }}\r\n                      eventKey=\"keywords\"\r\n                      onClick={() => setActivePurposeProperty(\"keywords\")}\r\n                    >\r\n                      <span style={{ cursor: \"pointer\" }}>\r\n                        {t(\"Purpose Keywords\")}\r\n                      </span>\r\n                    </Accordion.Toggle>\r\n\r\n                    <Accordion.Collapse eventKey=\"keywords\">\r\n                      <Card.Body style={{ background: \"var(--white)\" }}>\r\n                        <Card.Text>\r\n                          {businessPurposes[purpose].keywords}\r\n                        </Card.Text>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n\r\n                  {/* End of purpose properties */}\r\n                </Accordion>\r\n              </Tab.Pane>\r\n            );\r\n          }\r\n          countShareholders = 0;\r\n          return true;\r\n        });\r\n\r\n      return true;\r\n    });\r\n\r\n  const jsx = (\r\n    <>\r\n      <Accordion\r\n        defaultActiveKey={\r\n          activeBusiness !== null || !userBusinessesLoaded\r\n            ? activeBusiness\r\n            : \"myBusinesses\"\r\n        }\r\n      >\r\n        {/* Add business location top */}\r\n\r\n        {/**\r\n         * Card: Add business\r\n         */}\r\n        <Card style={{ background: \"Transparent\", border: \"0\" }}>\r\n          <Accordion.Toggle\r\n            as={Card.Header}\r\n            eventKey=\"addBusiness\"\r\n            style={{\r\n              background: \"Transparent\",\r\n              padding: \"0 0 20px 0\",\r\n            }}\r\n          >\r\n            <span\r\n              style={{ float: \"right\", cursor: \"pointer\" }}\r\n              onClick={() =>\r\n                setActiveBusiness(\r\n                  activeBusiness !== \"addBusiness\" ? \"addBusiness\" : null\r\n                )\r\n              }\r\n            >\r\n              {t(\"Add Business\")}\r\n              &nbsp;\r\n              <Add\r\n                style={{\r\n                  color: \"var(--dark)\",\r\n                  fontSize: \"1.2rem\",\r\n                  paddingBottom: \"0.2rem\",\r\n                }}\r\n              />\r\n            </span>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey=\"addBusiness\">\r\n            <Card.Body>\r\n              <BusinessRegistration {...args} />\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n\r\n        {/* List user businesses */}\r\n        {userBusinesses !== null &&\r\n          Object.keys(userBusinesses).map((business, keyBusiness) => {\r\n            const date = new Date(userBusinesses[business].created);\r\n            const businessSince = formatDate(date, {\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n              year: \"numeric\",\r\n            });\r\n\r\n            return (\r\n              <Card key={keyBusiness} style={{ borderRadius: \"0\" }}>\r\n                <Accordion.Toggle\r\n                  as={Card.Header}\r\n                  eventKey={keyBusiness}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    ToggleBusiness({\r\n                      eventKey: keyBusiness,\r\n                      businessID: userBusinesses[business].business_id,\r\n                    })\r\n                  }\r\n                >\r\n                  <Store style={{ color: \"var(--dark)\" }} />{\" \"}\r\n                  {userBusinesses[business].title}\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={keyBusiness}>\r\n                  <Card.Body>\r\n                    <Tab.Container\r\n                      id=\"left-tabs-example\"\r\n                      defaultActiveKey={\r\n                        activeBusinesPurpose !== null\r\n                          ? activeBusinesPurpose\r\n                          : \"aboutBusiness\"\r\n                      }\r\n                    >\r\n                      {/**\r\n                       * Row: Search\r\n                       */}\r\n                      <Row style={{ marginBottom: \"1.2rem\" }}>\r\n                        <Col>\r\n                          <Search\r\n                            advancedSearch={false}\r\n                            placeholder={t(\"Find purposes...\")}\r\n                            captionAdvancedSearch={t(\"Advanced search\")}\r\n                            onSubmit={findPurposes}\r\n                            {...args}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n\r\n                      {/**\r\n                       * Row: Purposes\r\n                       */}\r\n                      <Row>\r\n                        {/**\r\n                         * Layout: Left side - Menu\r\n                         */}\r\n                        <Col sm={5}>\r\n                          <ListGroup variant=\"flush\">\r\n                            {/* Menu item: About business */}\r\n                            <ListGroup.Item\r\n                              action\r\n                              eventKey=\"aboutBusiness\"\r\n                              style={{ cursor: \"default\" }}\r\n                              onClick={(e) => {\r\n                                setActivePurposeData(null);\r\n                                setActiveBusinesPurpose(null);\r\n                                e.stopPropagation();\r\n                              }}\r\n                            >\r\n                              <span\r\n                                style={{\r\n                                  whiteSpace: \"nowrap\",\r\n                                  cursor: \"pointer\",\r\n                                }}\r\n                              >\r\n                                {t(\"Purposes\")}\r\n                              </span>\r\n                              <span style={{ float: \"right\" }}>\r\n                                <Add\r\n                                  onClick={(e) => {\r\n                                    setClearRefs(true);\r\n                                    setActivePurposeData(null);\r\n                                    setActiveBusinesPurpose(\"addPurpose\");\r\n                                    e.stopPropagation();\r\n                                  }}\r\n                                  fontSize=\"small\"\r\n                                  style={{\r\n                                    color: \"var(--dark)\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                />\r\n                              </span>\r\n                            </ListGroup.Item>\r\n\r\n                            {/* Menu items: Registered purposes */}\r\n                            {menuItems[keyBusiness]}\r\n\r\n                            {/* old add purpose */}\r\n                          </ListGroup>\r\n                          {countBusinessPurposes !== null && (\r\n                            <>\r\n                              <br />\r\n                              <Pagination\r\n                                {...args}\r\n                                size=\"sm\"\r\n                                countItems={countBusinessPurposes}\r\n                                itemsPerPage={businessPurposesPerPage}\r\n                                active={activePageBusinessPurposes}\r\n                                onClick={(number) =>\r\n                                  getBusinessPurposes(\r\n                                    activeBusinessID,\r\n                                    0,\r\n                                    number\r\n                                  )\r\n                                }\r\n                              />\r\n                            </>\r\n                          )}\r\n\r\n                          {showRequestStatus(\r\n                            \"get business purposes / SELECT purposes\",\r\n                            cntPurposes,\r\n                            t(\"Loading purposes...\"),\r\n                            t(\"No purposes\"),\r\n                            \"finished\"\r\n                          )}\r\n                        </Col>\r\n\r\n                        {/**\r\n                         * Layout: Right side - Content\r\n                         */}\r\n                        <Col sm={7}>\r\n                          <Tab.Content>\r\n                            <Tab.Pane eventKey=\"aboutBusiness\">\r\n                              <Accordion defaultActiveKey=\"businessID\">\r\n                                {/* Business ID */}\r\n                                <Card\r\n                                  style={{\r\n                                    border: \"0\",\r\n                                    borderRadius: \"0\",\r\n                                    // backgroundColor: \"red\",\r\n                                  }}\r\n                                >\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessID\"\r\n                                  >\r\n                                    {t(\"Business ID\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessID\">\r\n                                    <Card\r\n                                      border=\"light\"\r\n                                      style={{ borderRadius: \"0\" }}\r\n                                    >\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          <CopyableField\r\n                                            value={\r\n                                              userBusinesses[business]\r\n                                                .business_id\r\n                                            }\r\n                                            {...args}\r\n                                          />\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business description */}\r\n                                <Card\r\n                                  style={{\r\n                                    border: \"0\",\r\n                                    borderRadius: \"0\",\r\n                                    // backgroundColor: \"red\",\r\n                                  }}\r\n                                >\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessDescription\"\r\n                                  >\r\n                                    {t(\"Business Description\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessDescription\">\r\n                                    <Card\r\n                                      border=\"light\"\r\n                                      style={{ borderRadius: \"0\" }}\r\n                                    >\r\n                                      <Card.Body>\r\n                                        <Card.Text>\r\n                                          {userBusinesses[business]\r\n                                            .description !== \"\" ? (\r\n                                            userBusinesses[business].description\r\n                                          ) : (\r\n                                            <span className=\"text-center text-muted\">\r\n                                              {t(\"No description\")}\r\n                                            </span>\r\n                                          )}\r\n                                        </Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n\r\n                                {/* Business Founded */}\r\n                                <Card\r\n                                  style={{\r\n                                    border: \"0\",\r\n                                    borderRadius: \"0\",\r\n                                    // backgroundColor: \"red\",\r\n                                  }}\r\n                                >\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    eventKey=\"businessCreationDate\"\r\n                                  >\r\n                                    {t(\"Business Created\")}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"businessCreationDate\">\r\n                                    <Card\r\n                                      border=\"light\"\r\n                                      style={{ borderRadius: \"0\" }}\r\n                                    >\r\n                                      <Card.Body>\r\n                                        <Card.Text>{businessSince}</Card.Text>\r\n                                      </Card.Body>\r\n                                    </Card>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n\r\n                            {/* Start Business purposes */}\r\n                            {purposes[keyBusiness]}\r\n                            {/* End Business purposes */}\r\n\r\n                            {/*\r\n                             * Add new purpose / update existing purpose\r\n                             */}\r\n                            <Tab.Pane eventKey=\"addPurpose\">\r\n                              <Accordion defaultActiveKey=\"newPurpose\">\r\n                                <Card\r\n                                  style={{ border: \"0\", borderRadius: \"0\" }}\r\n                                >\r\n                                  <Accordion.Toggle\r\n                                    as={Card.Header}\r\n                                    eventKey=\"newPurpose\"\r\n                                    style={{ cursor: \"default\" }}\r\n                                  >\r\n                                    {t(\r\n                                      activePurposeData === null\r\n                                        ? \"New Purpose\"\r\n                                        : \"Edit Purpose\"\r\n                                    )}\r\n                                  </Accordion.Toggle>\r\n                                  <Accordion.Collapse eventKey=\"newPurpose\">\r\n                                    <Card.Body>\r\n                                      <PurposeRegistration\r\n                                        {...args}\r\n                                        businessID={\r\n                                          userBusinesses[business].business_id\r\n                                        }\r\n                                        id={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.id\r\n                                            : null\r\n                                        }\r\n                                        purposeID={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.purpose_id\r\n                                            : null\r\n                                        }\r\n                                        title={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.title\r\n                                            : \"\"\r\n                                        }\r\n                                        description={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.description\r\n                                            : \"\"\r\n                                        }\r\n                                        category={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.category\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory\r\n                                            : \"\"\r\n                                        }\r\n                                        subcategory2={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.subcategory2\r\n                                            : \"\"\r\n                                        }\r\n                                        keywords={\r\n                                          activePurposeData !== null\r\n                                            ? activePurposeData.keywords\r\n                                            : \"\"\r\n                                        }\r\n                                      />\r\n                                    </Card.Body>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              </Accordion>\r\n                            </Tab.Pane>\r\n                          </Tab.Content>\r\n                        </Col>\r\n                      </Row>\r\n                    </Tab.Container>\r\n                    {/* pagination prev */}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            );\r\n            // console.log(\"BUSINESS:\", userBusinesses[business]);\r\n          })}\r\n\r\n        {/* Add business location bottom */}\r\n      </Accordion>\r\n      {userBusinesses !== null && (\r\n        <>\r\n          <br />\r\n\r\n          <Pagination\r\n            {...args}\r\n            size=\"md\"\r\n            countItems={countBusinesses}\r\n            itemsPerPage={businessesPerPage}\r\n            active={activePageBusinesses}\r\n            onClick={(number) => getBusinesses(number)}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{jsx}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n// import { useStickyState } from \"../../utils/state\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"BusinessRegistration\",\r\n    request: \"register business\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n  } = props.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    sendRequest,\r\n    getReviser,\r\n    getWorkplace,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refBusinessTitle = React.createRef();\r\n  const refBusinessDescription = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefBusinessTitle = refBusinessTitle.current;\r\n    const tempRefBusinessDescription = refBusinessDescription.current;\r\n    return () => {\r\n      if (\r\n        tempRefBusinessTitle !== null &&\r\n        businessRegistrationAddTitle !== tempRefBusinessTitle.value\r\n      )\r\n        setBusinessRegistrationAddTitle(tempRefBusinessTitle.value);\r\n\r\n      if (\r\n        tempRefBusinessDescription !== null &&\r\n        businessRegistrationAddDescription !== tempRefBusinessDescription.value\r\n      )\r\n        setBusinessRegistrationAddDescription(tempRefBusinessDescription.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // const [addOwnerAsShareholder, setAddOwnerAsShareholder] = useStickyState(\r\n  //   false,\r\n  //   \"addOwnerAsShareholder\"\r\n  // );\r\n\r\n  const schema = yup.object({\r\n    businessTitle: yup\r\n      .string()\r\n      .required(t(\"Business title is a required field\"))\r\n      .min(3, t(\"Business title too short\"))\r\n      .max(70, t(\"Business title too long\"))\r\n      .trim(),\r\n    businessDescription: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * On business registration\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n\r\n    // console.log(\"REGISTER BUSINESS DATA:\", data);\r\n\r\n    // onBusinessRegistration({ req: \"register business\", data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterBusinessForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Business Title (Business ID) */}\r\n      <Form.Group controlId=\"validationFormikDestinationAccountID\">\r\n        <Form.Label>{t(\"Business Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"businessTitle\"\r\n            ref={refBusinessTitle}\r\n            value={values.businessTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.businessTitle && touched.businessTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.businessTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/* Business Description */}\r\n      <Form.Group controlId=\"businessDescription\">\r\n        <Form.Label>{t(\"Business Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"businessDescription\"\r\n          ref={refBusinessDescription}\r\n          value={values.businessDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={RegisterBusinessForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          businessTitle: businessRegistrationAddTitle,\r\n          businessDescription: businessRegistrationAddDescription,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"PurposeRegistration\",\r\n    requestInsert: \"register purpose\",\r\n    requestUpdate: \"update purpose property\",\r\n    businessID: null,\r\n    purposeID: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    category: \"\",\r\n    subcategory: \"\",\r\n    subcategory2: \"\",\r\n    keywords: \"\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"PURPOSE REGISTRATION PROPS:\", props);\r\n\r\n  const barrels = props;\r\n  const { businessID, purposeID, id } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    accountNumber,\r\n    language,\r\n    // businessPurposes,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    // purposeRegistrationCategory,\r\n    // purposeRegistrationSubcategory,\r\n    // purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    // setBusinessPurposes,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n  } = barrels.barrelSetters;\r\n  const { getReviser, getWorkplace } = barrels.barrelFunctions;\r\n  const { onPurposeRegistration } = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refPurposeTitle = React.createRef();\r\n  const refPurposeDescription = React.createRef();\r\n  // const refPurposeCategory = React.createRef();\r\n  // const refPurposeSubcategory = React.createRef();\r\n  // const refPurposeSubcategory2 = React.createRef();\r\n  const refPurposeKeywords = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefPurposeTitle = refPurposeTitle.current;\r\n    const tempRefPurposeDescription = refPurposeDescription.current;\r\n    const tempRefPurposeKeywords = refPurposeKeywords.current;\r\n    return () => {\r\n      if (\r\n        tempRefPurposeTitle !== null &&\r\n        purposeRegistrationTitle !== tempRefPurposeTitle.value\r\n      )\r\n        setPurposeRegistrationTitle(tempRefPurposeTitle.value);\r\n\r\n      if (\r\n        tempRefPurposeDescription !== null &&\r\n        purposeRegistrationDescription !== tempRefPurposeDescription.value\r\n      )\r\n        setPurposeRegistrationDescription(tempRefPurposeDescription.value);\r\n\r\n      if (\r\n        tempRefPurposeKeywords !== null &&\r\n        purposeRegistrationKeywords !== tempRefPurposeKeywords.value\r\n      )\r\n        setPurposeRegistrationKeywords(tempRefPurposeKeywords.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const schema = yup.object({\r\n    purposeTitle: yup\r\n      .string()\r\n      .required(t(\"Purpose title is a required field\"))\r\n      .min(3, t(\"Purpose title too short\"))\r\n      .max(70, t(\"Purpose title too long\"))\r\n      .trim(),\r\n    purposeDescription: yup.string().optional(),\r\n    // purposeCategory: yup\r\n    //   .string()\r\n    //   .required(t(\"Purpose category is a required field\"))\r\n    //   .max(70, t(\"Purpose category too long\"))\r\n    //   .trim(),\r\n    // purposeSubcategory: yup.string().optional(),\r\n    // purposeSubcategory2: yup.string().optional(),\r\n    purposeKeywords: yup.string().optional(),\r\n  });\r\n\r\n  /**\r\n   * Transfer to self\r\n   * @param {object} data\r\n   */\r\n  const RegisterPurpose = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.businessID = businessID;\r\n    data.id = id;\r\n    data.purposeID = purposeID;\r\n    data.uid = accountNumber;\r\n    data.language = language;\r\n\r\n    // console.log(\"REGISTER PURPOSE DATA:\", data);\r\n\r\n    onPurposeRegistration({\r\n      req: props.purposeID === null ? props.requestInsert : props.requestUpdate,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    RegisterPurpose(data);\r\n  };\r\n\r\n  const RegisterPurposeForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/*\r\n       * Purpose Title (Purpose ID)\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeID\">\r\n        <Form.Label>{t(\"Purpose Title\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            name=\"purposeTitle\"\r\n            ref={refPurposeTitle}\r\n            value={values.purposeTitle}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeTitle && touched.purposeTitle}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeTitle}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Purpose Description\r\n       */}\r\n      <Form.Group controlId=\"purposeDescription\">\r\n        <Form.Label>{t(\"Purpose Description\")}</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows=\"3\"\r\n          name=\"purposeDescription\"\r\n          ref={refPurposeDescription}\r\n          value={values.purposeDescription}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Keywords\r\n       */}\r\n      <Form.Group controlId=\"validationFormikPurposeKeywords\">\r\n        <Form.Label>{t(\"Purpose Keywords\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            name=\"purposeKeywords\"\r\n            ref={refPurposeKeywords}\r\n            value={values.purposeKeywords}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.purposeKeywords && touched.purposeKeywords}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.purposeKeywords}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      {/*\r\n       * Submit button\r\n       */}\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(props.purposeID === null ? \"Submit\" : \"Save\")}\r\n        request={\r\n          props.purposeID === null ? props.requestInsert : props.requestUpdate\r\n        }\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterPurposeForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        purposeTitle: purposeRegistrationTitle,\r\n        purposeDescription: purposeRegistrationDescription,\r\n        // purposeCategory: purposeRegistrationCategory,\r\n        // purposeSubcategory: purposeRegistrationSubcategory,\r\n        // purposeSubcategory2: purposeRegistrationSubcategory2,\r\n        purposeKeywords: purposeRegistrationKeywords,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Toast } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    request: \"register shareholder\",\r\n    namespace: \"ShareholderRegistration\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  const barrels = props;\r\n  const { purposeID } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { accountNumber } = barrels.barrelGetters;\r\n  // const {} = barrels.barrelSetters;\r\n  const {\r\n    // format,\r\n    // parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n  } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  // const userDataParsed = JSON.parse(userData);\r\n  // const userDataParsed = userData;\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const thisRef = createRef();\r\n\r\n  const schema = yup.object({\r\n    // personalID: yup\r\n    //   .string()\r\n    //   .required(t(\"Personal ID is required\"))\r\n    //   .matches(\r\n    //     new RegExp(t(\"Personal ID Regex\")),\r\n    //     t(\"Wrong Personal ID format\")\r\n    //   ),\r\n    shareholderRoles: yup.string().optional(),\r\n    shares: yup\r\n      .number()\r\n      .typeError(t(\"Shares must be a number\"))\r\n      .required(t(\"Shares is required\"))\r\n      .min(1, t(\"Shares too few\"))\r\n      .max(1000, t(\"Shares too many\")),\r\n  });\r\n\r\n  /**\r\n   * Send shareholder registration request\r\n   * @param {object} data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.uid = accountNumber;\r\n    data.purposeID = purposeID;\r\n\r\n    // console.log(\"REGISTER SHAREHOLDER DATA:\", data);\r\n\r\n    // onShareholderRegistration({ req: props.request, data: data });\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  const RegisterShareholderForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* id=\"shareholderRegistrationForm\" */}\r\n      <Toast style={{ minWidth: \"100%\" }}>\r\n        {/*\r\n        <Toast.Header closeButton={false}>\r\n          <strong className=\"mr-auto\">{t(\"Add Shareholder\")}</strong>\r\n        </Toast.Header>\r\n        */}\r\n        <Toast.Body>\r\n          <Form.Group controlId=\"validationFormikShareholderPersonalID\">\r\n            <Form.Label>{t(\"Shareholder Personal ID\")}</Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">ID</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder={t(\"XXXXXX-XXXXX\")}\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                name=\"personalID\"\r\n                value={values.personalID}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.personalID && touched.personalID}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.personalID}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n          {/* Shareholder Roles */}\r\n          <Form.Group controlId=\"validationFormikShareholderRoles\">\r\n            <Form.Label>{t(\"Shareholder Roles\")}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"shareholderRoles\"\r\n              value={values.shareholderRoles}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.shareholderRoles && touched.shareholderRoles}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.shareholderRoles}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          {/* Shares */}\r\n          <Form.Group controlId=\"validationFormikShares\">\r\n            <Form.Label>{t(\"Shares\")}</Form.Label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              min={1}\r\n              max={1000}\r\n              step={1}\r\n              placeholder=\"\"\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"shares\"\r\n              value={values.shares}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.shares && touched.shares}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.shares}\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Toast.Body>\r\n      </Toast>\r\n    </Form>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={RegisterShareholderForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        personalID: \"\",\r\n        shares: 1,\r\n        shareholderRoles: \"\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import \"./UserEditor.css\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup, Form, InputGroup } from \"react-bootstrap\";\r\nimport {\r\n  Visibility,\r\n  VisibilityOff,\r\n  Close,\r\n  Edit,\r\n  // Done,\r\n} from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {\r\n    namespace: \"UserEditor\",\r\n    request: \"update user\",\r\n    mode: \"label\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"USER EDITOR PROPS:\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    userData,\r\n    accountNumber,\r\n    // currencies,\r\n    // currencyAbbr,\r\n    // language,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getReviser, getWorkplace } = props.barrelFunctions;\r\n  // const {  } = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefFirstName = refFirstName.current;\r\n    const tempRefLastName = refLastName.current;\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (\r\n        tempRefFirstName !== null &&\r\n        userEditorFirstname !== tempRefFirstName.value\r\n      )\r\n        setUserEditorFirstname(tempRefFirstName.value);\r\n\r\n      if (\r\n        tempRefLastName !== null &&\r\n        userEditorLastname !== tempRefLastName.value\r\n      )\r\n        setUserEditorLastname(tempRefLastName.value);\r\n\r\n      if (tempRefEmail !== null && userEditorEmail !== tempRefEmail.value)\r\n        setUserEditorEmail(tempRefEmail.value);\r\n\r\n      if (\r\n        tempRefPassword !== null &&\r\n        userEditorPassword !== tempRefPassword.value\r\n      )\r\n        setUserEditorPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      userEditorEditFirstname ||\r\n      userEditorEditLastname ||\r\n      userEditorEditEmail ||\r\n      userEditorEditPassword\r\n    ) {\r\n      setUserEditorSubmitButtonVisible(true);\r\n    } else {\r\n      setUserEditorSubmitButtonVisible(false);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [\r\n    userEditorEditFirstname,\r\n    userEditorEditLastname,\r\n    userEditorEditEmail,\r\n    userEditorEditPassword,\r\n  ]);\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n\r\n  const togglePassword = () => {\r\n    setUserEditorPasswordVisible(!userEditorPasswordVisible);\r\n  };\r\n\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    // data.reviser = getReviser();\r\n    // data.workplace = getWorkplace();\r\n    // data.language = language;\r\n    // data.email = userData.email;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    data.personalID = accountNumber;\r\n    if (!userEditorEditFirstname) data.firstName = null;\r\n    if (!userEditorEditLastname) data.lastName = null;\r\n    if (!userEditorEditEmail) data.email = userData.email;\r\n    if (!userEditorEditPassword) data.password = null;\r\n\r\n    if (data.email !== userData.email) {\r\n      data.newEmail = data.email;\r\n      data.email = userData.email;\r\n      data.validateEmail = true;\r\n    }\r\n\r\n    // console.log(\"onSubmit:\", data);\r\n\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  const yupObject = {\r\n    firstName: userEditorEditFirstname\r\n      ? yup.string().required(t(\"First name is required\"))\r\n      : yup.string().optional(),\r\n    lastName: userEditorEditLastname\r\n      ? yup.string().required(t(\"Last name is required\"))\r\n      : yup.string().optional(),\r\n    email: userEditorEditEmail\r\n      ? yup\r\n          .string()\r\n          .email(t(\"Invalid email address\"))\r\n          .required(t(\"Email is required\"))\r\n      : yup.string().optional(),\r\n    password: userEditorEditPassword\r\n      ? yup\r\n          .string()\r\n          .required(t(\"No password provided\"))\r\n          .min(8, t(\"Password is too short\"))\r\n          // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n          .matches(\r\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n            t(\"Password is too weak\")\r\n          )\r\n      : yup.string().optional(),\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object(yupObject);\r\n\r\n  /**\r\n   * Data consistency tests\r\n   */\r\n  if (userData === null) return <></>;\r\n\r\n  /**\r\n   * Destructuring\r\n   */\r\n  const { mode } = props;\r\n  const {\r\n    firstname,\r\n    lastname,\r\n    email,\r\n    // language,\r\n    // currency_name,\r\n    // currency_abbr,\r\n  } = userData;\r\n  // const currency = `${currency_name} (${currency_abbr})`;\r\n\r\n  const UserEditorForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      <Card title={t(\"Profile\")} border={0} maxWidthBody=\"700px\">\r\n        {/* First name */}\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"First name\")}</Form.Label>\r\n            {!userEditorEditFirstname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditFirstname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{firstname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditFirstname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditFirstname && (\r\n              <Form.Group controlId=\"validationFormikFirstName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter first name\")}\r\n                    name=\"firstName\"\r\n                    ref={refFirstName}\r\n                    value={values.firstName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.firstName && touched.firstName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.firstName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Last name */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Last name\")}</Form.Label>\r\n            {!userEditorEditLastname ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditLastname(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n                <br />\r\n                <small>{lastname}</small>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditLastname(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditLastname && (\r\n              <Form.Group controlId=\"validationFormikLastName\">\r\n                <InputGroup>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder={t(\"Enter last name\")}\r\n                    name=\"lastName\"\r\n                    ref={refLastName}\r\n                    value={values.lastName}\r\n                    onChange={handleChange}\r\n                    isInvalid={!!errors.lastName && touched.lastName}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.lastName}\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            )}\r\n          </ListGroup.Item>\r\n\r\n          {/* Email */}\r\n          {accountNumber !== null && (\r\n            <ListGroup.Item as=\"div\" action>\r\n              <Form.Label>{t(\"Email address\")}</Form.Label>\r\n              {!userEditorEditEmail ? (\r\n                <>\r\n                  <span style={{ float: \"right\" }}>\r\n                    <Edit\r\n                      onClick={() => setUserEditorEditEmail(true)}\r\n                      fontSize=\"small\"\r\n                      style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                    />\r\n                  </span>\r\n                  <br />\r\n                  <small>{email}</small>\r\n                </>\r\n              ) : (\r\n                <span style={{ float: \"right\" }}>\r\n                  <Close\r\n                    onClick={() => setUserEditorEditEmail(false)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              )}\r\n\r\n              {userEditorEditEmail && (\r\n                <Form.Group controlId=\"validationFormikEmail\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      placeholder={t(\"Enter email\")}\r\n                      name=\"email\"\r\n                      value={values.email}\r\n                      ref={refEmail}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.email && touched.email}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.email}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              )}\r\n            </ListGroup.Item>\r\n          )}\r\n\r\n          {/* Password */}\r\n          <ListGroup.Item as=\"div\" action>\r\n            <Form.Label>{t(\"Password\")}</Form.Label>\r\n            {!userEditorEditPassword ? (\r\n              <>\r\n                <span style={{ float: \"right\" }}>\r\n                  <Edit\r\n                    onClick={() => setUserEditorEditPassword(true)}\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                  />\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <span style={{ float: \"right\" }}>\r\n                <Close\r\n                  onClick={() => setUserEditorEditPassword(false)}\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n            )}\r\n\r\n            {userEditorEditPassword && (\r\n              <>\r\n                {/* New password */}\r\n                <Form.Group controlId=\"validationFormikPassword\">\r\n                  <InputGroup>\r\n                    <Form.Control\r\n                      type={userEditorPasswordVisible ? \"text\" : \"password\"}\r\n                      placeholder={t(\"Enter new password\")}\r\n                      name=\"password\"\r\n                      ref={refPassword}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      isInvalid={!!errors.password && touched.password}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <InputGroup.Text\r\n                        id=\"inputGroupAppend\"\r\n                        onClick={togglePassword}\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        {userEditorPasswordVisible ? (\r\n                          <VisibilityOff\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        ) : (\r\n                          <Visibility\r\n                            fontSize=\"small\"\r\n                            style={{ color: \"var(--dark)\", cursor: \"pointer\" }}\r\n                          />\r\n                        )}\r\n                      </InputGroup.Text>\r\n                    </InputGroup.Append>\r\n\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.password}\r\n                    </Form.Control.Feedback>\r\n                  </InputGroup>\r\n                </Form.Group>\r\n              </>\r\n            )}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n\r\n        <Form.Group controlId=\"validationSubmitButton\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            visible={userEditorSubmitButtonVisible}\r\n            marginTop={20}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n      </Card>\r\n    </Form>\r\n  );\r\n\r\n  const jsx =\r\n    mode === \"label\" ? (\r\n      <span style={{ whiteSpace: \"nowrap\" }}>\r\n        {firstname} {lastname}\r\n      </span>\r\n    ) : (\r\n      <Formik\r\n        component={UserEditorForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          firstName: userEditorFirstname,\r\n          lastName: userEditorLastname,\r\n          email: userEditorEmail,\r\n          password: userEditorPassword,\r\n        }}\r\n      />\r\n    );\r\n\r\n  return <>{jsx}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Accordion, Card } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import settings from \"../../settings.json\";\r\n// import Card from \"../card\";\r\nimport Currencies from \"../currencies\";\r\nimport CurrencyRegistration from \"../currencyRegistration\";\r\nimport AccordionCard from \"../accordionCard\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"CurrencyContainer\", paddingBody: \"20px 0 0 0\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    accordionViewCurrency,\r\n    activePageCurrencies,\r\n    accountNumber,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setAccordionViewCurrency,\r\n    setRedirectTo,\r\n    setResponseProps,\r\n  } = props.barrelSetters;\r\n  const { getCurrencies } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const ToggleCurrencies = () => {\r\n    if (accordionViewCurrency !== \"currencies\") {\r\n      setResponseProps(null);\r\n      setAccordionViewCurrency(\"currencies\");\r\n      getCurrencies(activePageCurrencies);\r\n    } else {\r\n      setAccordionViewCurrency(null);\r\n    }\r\n  };\r\n\r\n  const ToggleCurrencyRegistration = () => {\r\n    setAccordionViewCurrency(\r\n      accordionViewCurrency !== \"currencyRegistration\"\r\n        ? \"currencyRegistration\"\r\n        : null\r\n    );\r\n  };\r\n\r\n  if (accountNumber === null) setRedirectTo(\"/sign-out\");\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  if (\r\n    typeof settings[\"currencies\"] !== \"undefined\" &&\r\n    settings[\"currencies\"] !== null &&\r\n    settings[\"currencies\"].length < 2\r\n  ) {\r\n    return <></>; // currency creation is disabled\r\n  } else {\r\n    return (\r\n      <>\r\n        <Accordion defaultActiveKey={accordionViewCurrency}>\r\n          {/**\r\n           * Currencies\r\n           */}\r\n          <AccordionCard\r\n            title={t(\"Currencies\")}\r\n            eventkey=\"currencies\"\r\n            active={accordionViewCurrency}\r\n            paddingBody={props.paddingBody}\r\n            onClick={ToggleCurrencies}\r\n          >\r\n            <Currencies {...args} />\r\n          </AccordionCard>\r\n\r\n          {/**\r\n           * Currency registration\r\n           */}\r\n          {typeof settings[\"currencyCreationAllowed\"] !== \"undefined\" &&\r\n            settings[\"currencyCreationAllowed\"] && (\r\n              <AccordionCard\r\n                title={t(\"Currency Registration\")}\r\n                eventkey=\"currencyRegistration\"\r\n                active={accordionViewCurrency}\r\n                paddingBody={props.paddingBody}\r\n                onClick={ToggleCurrencyRegistration}\r\n              >\r\n                <CurrencyRegistration {...args} />\r\n              </AccordionCard>\r\n            )}\r\n        </Accordion>\r\n      </>\r\n    );\r\n  }\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Pagination from \"../pagination\";\r\nimport Search from \"../search\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    request: \"get currencies\", // \"register currency\",\r\n    namespace: \"Currencies\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencies,\r\n    settings,\r\n    countCurrencies,\r\n    activePageCurrencies,\r\n    currenciesPerPage,\r\n    currencyAbbr,\r\n    userData,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyAbbr,\r\n    setResponseProps,\r\n    setCurrencyRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    showRequestStatus,\r\n    getCurrencies,\r\n    findCurrencies,\r\n    formatExchangeRate,\r\n    getObjectArrayElementIndex,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Request status\r\n    ============================================================================ */\r\n  // const requestStatus = getRequestStatus(props.request);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  const onCurrencySelected = (e) => {\r\n    setCurrencyAbbr(e.target.id);\r\n    sendRequest({\r\n      req: \"register user currency\",\r\n      data: { email: userData.email, currency_id: e.target.id },\r\n    });\r\n\r\n    // Fetch the selected currency rate\r\n    const id = getObjectArrayElementIndex(currencies, \"abbr\", e.target.id);\r\n    setCurrencyRate(currencies[id].rate);\r\n  };\r\n\r\n  const onPageSelect = (number) => {\r\n    // console.log(\"on page select\", number);\r\n    setResponseProps(null);\r\n    switch (number) {\r\n      case \"First\":\r\n        number = 1;\r\n        break;\r\n      case \"Prev\":\r\n        number = activePageCurrencies > 1 ? activePageCurrencies - 1 : 1;\r\n        break;\r\n      case \"Next\":\r\n        number =\r\n          activePageCurrencies < Math.ceil(countCurrencies / currenciesPerPage)\r\n            ? activePageCurrencies + 1\r\n            : Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      case \"Last\":\r\n        number = Math.ceil(countCurrencies / currenciesPerPage);\r\n        break;\r\n      default:\r\n        // number = number;\r\n        break;\r\n    }\r\n    getCurrencies(number);\r\n  };\r\n\r\n  let cnt = 0;\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrenciesForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <Search\r\n          placeholder={t(\"Find currency...\")}\r\n          onSubmit={findCurrencies}\r\n          {...args}\r\n        />\r\n      </div>\r\n      <Table responsive striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Currency\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Abbr\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Region\")}</th>\r\n            <th style={{ textAlign: \"center\" }}>{t(\"Rate\")}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currencies !== null &&\r\n            currencies.map((currency, keyCurrency) => {\r\n              cnt++;\r\n              // console.log(\"CURRENCY\", currency);\r\n\r\n              const { name, abbr, rate, region } = currency;\r\n\r\n              if (\r\n                typeof settings[\"currencies\"] === \"undefined\" ||\r\n                settings[\"currencies\"] === null ||\r\n                settings[\"currencies\"].length === 0 ||\r\n                settings[\"currencies\"].includes(abbr)\r\n              ) {\r\n                // valid currency - continue\r\n              } else {\r\n                return \"\"; // invalid currency\r\n              }\r\n\r\n              return (\r\n                <tr key={keyCurrency}>\r\n                  <td style={{ textAlign: \"left\", paddingLeft: \"1rem\" }}>\r\n                    <Form.Check\r\n                      id={abbr}\r\n                      type=\"radio\"\r\n                      checked={currencyAbbr === abbr}\r\n                      aria-label=\"option 1\"\r\n                      label={name}\r\n                      custom\r\n                      inline\r\n                      onChange={onCurrencySelected}\r\n                      name=\"selected-currency\"\r\n                    />\r\n                  </td>\r\n                  <td style={{ textAlign: \"center\" }}>{abbr}</td>\r\n                  <td style={{ textAlign: \"left\" }}>{region}</td>\r\n                  <td style={{ textAlign: \"right\" }}>\r\n                    {formatExchangeRate(rate)}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {showRequestStatus(\r\n        \"get currencies / SELECT currencies\",\r\n        cnt,\r\n        t(\"Loading...\"),\r\n        t(\"No currencies\"),\r\n        \"finished\"\r\n      )}\r\n\r\n      <Pagination\r\n        {...args}\r\n        size=\"sm\"\r\n        countItems={countCurrencies}\r\n        itemsPerPage={currenciesPerPage}\r\n        active={activePageCurrencies}\r\n        onClick={onPageSelect}\r\n      />\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  // onSubmit={onSubmit}\r\n  return (\r\n    <Formik\r\n      component={CurrenciesForm}\r\n      initialValues={{\r\n        curr_abbr: \"\",\r\n        curr_title: \"\",\r\n        curr_region: \"\",\r\n        curr_rate: 1.0,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\n// import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import BootstrapTable from \"react-bootstrap-table-next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n// import Pagination from \"../pagination\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"CurrencyRegistration\",\r\n    request: \"register currency\",\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    formatExchangeRate,\r\n    // getCurrencies,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([\"CurrencyRegistration\"]);\r\n\r\n  const refAbbr = React.createRef();\r\n  const refTitle = React.createRef();\r\n  const refRegion = React.createRef();\r\n  const refRate = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefAbbr = refAbbr.current;\r\n    const tempRefTitle = refTitle.current;\r\n    const tempRefRegion = refRegion.current;\r\n    const tempRefRate = refRate.current;\r\n    return () => {\r\n      if (tempRefAbbr !== null && currencyCode !== tempRefAbbr.value)\r\n        setCurrencyCode(tempRefAbbr.value);\r\n\r\n      if (tempRefTitle !== null && currencyName !== tempRefTitle.value)\r\n        setCurrencyName(tempRefTitle.value);\r\n\r\n      if (tempRefRegion !== null && currencyRegion !== tempRefRegion.value)\r\n        setCurrencyRegion(tempRefRegion.value);\r\n\r\n      if (tempRefRate !== null && currencyNewRate !== tempRefRate.value)\r\n        setCurrencyNewRate(tempRefRate.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n   * Yup schema\r\n   ============================================================================ */\r\n  const schema = yup.object({\r\n    curr_abbr: yup\r\n      .string()\r\n      .required(t(\"Currency abbreviation is required\"))\r\n      .min(3, t(\"Currency abbreviation is too short\"))\r\n      .max(5, t(\"Currency abbreviation is too long\")),\r\n    curr_title: yup\r\n      .string()\r\n      .required(t(\"Currency name is required\"))\r\n      .min(3, t(\"Currency name is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency name is too long\")), // must be at most 70 characters\r\n    curr_region: yup\r\n      .string()\r\n      .required(t(\"Currency region is required\"))\r\n      .min(3, t(\"Currency region is too short\")) // must be at least 3 characters\r\n      .max(70, t(\"Currency region is too long\")), // must be at most 70 characters\r\n    curr_rate: yup\r\n      .string()\r\n      .required(t(\"Exchange rate is required\"))\r\n      .matches(\r\n        new RegExp(t(\"Exchange Rate Regex\")),\r\n        t(\"Wrong exchange rate format\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  // const indication = () => {\r\n  //   return \"THE TABLE IS EMPTY\";\r\n  // };\r\n\r\n  /**\r\n   * Form\r\n   ============================================================================ */\r\n  const CurrencyRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <>\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/* Currency abbreviation */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Abbreviation\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_abbr\"\r\n              ref={refAbbr}\r\n              value={values.curr_abbr}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_abbr && touched.curr_abbr}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_abbr}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency name */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Currency Name\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_title\"\r\n              ref={refTitle}\r\n              value={values.curr_title}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_title && touched.curr_title}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_title}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Currency region */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Currency Region\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={\"\"}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_region\"\r\n              ref={refRegion}\r\n              value={values.curr_region}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_region && touched.curr_region}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_region}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Initial exchange rate */}\r\n        <Form.Group>\r\n          <Form.Label>{t(\"Initial Exchange Rate\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={formatExchangeRate(1)}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"curr_rate\"\r\n              value={values.curr_rate}\r\n              ref={refRate}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.curr_rate && touched.curr_rate}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.curr_rate}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/* Submit button */}\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </>\r\n  );\r\n\r\n  /**\r\n   * Formik return\r\n   ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={CurrencyRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        curr_abbr: currencyCode,\r\n        curr_title: currencyName,\r\n        curr_region: currencyRegion,\r\n        curr_rate: currencyNewRate,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\nimport Rating from \"../rating\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Contact\", request: \"send message\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    language,\r\n    accountNumber,\r\n    contactSubject,\r\n    contactMessage,\r\n  } = props.barrelGetters;\r\n  const { setContactSubject, setContactMessage } = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  const refSubject = React.createRef();\r\n  const refMessage = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefSubject = refSubject.current;\r\n    const tempRefMessage = refMessage.current;\r\n    return () => {\r\n      // console.log(\"ON UNMOUNT:\", tempRefSubject.value);\r\n      if (tempRefSubject !== null && contactSubject !== tempRefSubject.value)\r\n        setContactSubject(tempRefSubject.value);\r\n\r\n      if (tempRefMessage !== null && contactMessage !== tempRefMessage.value)\r\n        setContactMessage(tempRefMessage.value);\r\n      // console.log(\"CONTACT UNMOUNTS\");\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /** \r\n    * Yup schema\r\n    ============================================================================ */\r\n  const schema = yup.object({\r\n    subject: yup.string().required(t(\"Subject is required\")),\r\n  });\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.sender = accountNumber;\r\n    data.language = language;\r\n    sendRequest({ req: props.request, data: data });\r\n  };\r\n\r\n  // const navigation = [\r\n  //   {\r\n  //     name: t(\"U2S\"),\r\n  //     link: \"#u2s\",\r\n  //   },\r\n  // ];\r\n\r\n  /**\r\n    * Form\r\n    ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card header={false} border={0} maxWidthBody=\"700px\">\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        {/*\r\n         * Rating\r\n         */}\r\n        <div style={{ marginBottom: \"10px\" }}>\r\n          <Trans i18nKey=\"Rating:Thank you for your feedback\">\r\n            Thank you for your feedback! How helpful was our site?*\r\n          </Trans>\r\n        </div>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <Rating {...args} />\r\n        </div>\r\n\r\n        {/*\r\n         * Subject\r\n         */}\r\n        <Form.Group controlId=\"validationFormikSubject\">\r\n          <Form.Label>{t(\"Subject\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type=\"string\"\r\n              placeholder={t(\"Enter message subject\")}\r\n              aria-describedby=\"inputGroupPrepend\"\r\n              name=\"subject\"\r\n              ref={refSubject}\r\n              value={values.subject}\r\n              onChange={(e) => {\r\n                handleChange(e);\r\n                // setContactSubject(e.target.value);\r\n              }}\r\n              isInvalid={!!errors.subject && touched.subject}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.subject}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/*\r\n         * Message\r\n         */}\r\n        <Form.Group controlId=\"validationFormikMessage\">\r\n          <Form.Label>{t(\"Message\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter message\")}\r\n            name=\"message\"\r\n            value={values.message}\r\n            ref={refMessage}\r\n            onChange={handleChange}\r\n            as=\"textarea\"\r\n            rows=\"10\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request={props.request}\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  /**\r\n    * Formik return\r\n    ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        subject: contactSubject,\r\n        message: contactMessage,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Rating.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Rating\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Container\r\n        fluid\r\n        style={{\r\n          fontSize: \"0.9rem\",\r\n          textAlign: \"center\",\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n      >\r\n        <Row>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating1\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating2\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating3\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating4\"\r\n            />\r\n          </Col>\r\n          <Col style={{ padding: \"0\" }}>\r\n            <Form.Check\r\n              custom\r\n              inline\r\n              type=\"radio\"\r\n              label=\"\"\r\n              name=\"rating\"\r\n              id=\"rating5\"\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginTop: \"-0.3rem\" }}>\r\n          <Col style={{ padding: \"0\" }}>{t(\"1\")}</Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"2\")}</Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"3\")}</Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"4\")}</Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"5\")}</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col style={{ padding: \"0\" }}>{t(\"Not helpful\")}</Col>\r\n          <Col style={{ padding: \"0\" }}></Col>\r\n          <Col style={{ padding: \"0\" }}></Col>\r\n          <Col style={{ padding: \"0\" }}></Col>\r\n          <Col style={{ padding: \"0\" }}>{t(\"Very helpful\")}</Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"HttpResponseStatusCodes\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return <Card title={t(\"404 Not found\")} border={0}></Card>;\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * User CSS\r\n ============================================================================ */\r\nimport \"./Help.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\nimport Search from \"../search\";\r\nimport HelpMenuLevel2 from \"../helpMenuLevel2\";\r\n// import ErrorBoundary from \"../errorBoundary\";\r\nimport FileLoader from \"../fileLoader\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Help\", searchable: false };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { language, helpPath1 } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { setHelpPath } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"Personal Help\"),\r\n      link: \"#personal\",\r\n    },\r\n    {\r\n      name: t(\"Business Help\"),\r\n      link: \"#business\",\r\n    },\r\n    {\r\n      name: t(\"Technical Help\"),\r\n      link: \"#technical\",\r\n    },\r\n  ];\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  const getJSX = () => {\r\n    const onHelpPath1Click = (link) => {\r\n      setHelpPath(1, link);\r\n    };\r\n\r\n    return (\r\n      <Card\r\n        title={t(\"Help center\")}\r\n        navigation={navigation}\r\n        headerPadding=\"20px 20px 10px 20px\"\r\n        bodyPadding=\"20px 20px 10px 20px\"\r\n        border={0}\r\n        maxWidthBody=\"100%\"\r\n        navigationdefaultActiveKey={helpPath1}\r\n        onNavigationClick={onHelpPath1Click}\r\n      >\r\n        <Container fluid>\r\n          {/**\r\n           * Search\r\n           */}\r\n          {props.searchable && (\r\n            <Row>\r\n              <Col>\r\n                <div className=\"header-text\">\r\n                  <h1>{t(\"How can we help?\")}</h1>\r\n                </div>\r\n                <div style={{ textAlign: \"center\", margin: \"0 0 35px 0\" }}>\r\n                  <div\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      width: \"100%\",\r\n                      maxWidth: \"600px\",\r\n                    }}\r\n                  >\r\n                    <Search\r\n                      {...args}\r\n                      placeholder={t(\"Ask a question or search by keyword\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n\r\n          <Row>\r\n            <Col xl={4} style={{}}>\r\n              <HelpMenuLevel2 {...args} />\r\n            </Col>\r\n            <Col xl={8} style={{}}>\r\n              <FileLoader\r\n                {...args}\r\n                path3=\"topics\"\r\n                defaultFile=\"common-questions.js\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n// import Card from \"../card\";\r\nimport ListGroupItem from \"../listGroupItem\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"HelpMenuLevel2\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { helpPath1, helpPath2 } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { setHelpPath } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // console.log(t(\"Common Questions\"));\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    switch (helpPath1) {\r\n      case \"#business\":\r\n        return (\r\n          <ListGroup variant=\"flush\" defaultActiveKey={helpPath2}>\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Common Questions\")}\r\n              key=\"common-questions\"\r\n              href=\"/help/topic/common-questions\"\r\n              onClick={() => setHelpPath(2, \"common-questions\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Merchant Services\")}\r\n              key=\"merchant-services\"\r\n              href=\"/help/topic/merchant-services\"\r\n              onClick={() => setHelpPath(2, \"merchant-services\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"My Account\")}\r\n              key=\"my-account\"\r\n              href=\"/help/topic/my-account\"\r\n              onClick={() => setHelpPath(2, \"my-account\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Local Currency Basics\")}\r\n              key=\"local-currency-basics\"\r\n              href=\"/help/topic/local-currency-basics\"\r\n              onClick={() => setHelpPath(2, \"local-currency-basics\")}\r\n            />\r\n          </ListGroup>\r\n        );\r\n        break;\r\n\r\n      case \"#technical\":\r\n        return (\r\n          <ListGroup variant=\"flush\" defaultActiveKey={helpPath2}>\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Common Questions\")}\r\n              key=\"common-questions\"\r\n              href=\"/help/topic/common-questions\"\r\n              onClick={() => setHelpPath(2, \"common-questions\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"APIs\")}\r\n              key=\"apis\"\r\n              href=\"/help/topic/apis\"\r\n              onClick={() => setHelpPath(2, \"apis\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Shopping Carts\")}\r\n              key=\"shopping-carts\"\r\n              href=\"/help/topic/shopping-carts\"\r\n              onClick={() => setHelpPath(2, \"shopping-carts\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Products\")}\r\n              key=\"products\"\r\n              href=\"/help/topic/products\"\r\n              onClick={() => setHelpPath(2, \"products\")}\r\n            />\r\n          </ListGroup>\r\n        );\r\n        break;\r\n\r\n      default:\r\n        // #personal\r\n        return (\r\n          <ListGroup variant=\"flush\" defaultActiveKey={helpPath2}>\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Common Questions\")}\r\n              key=\"common-questions\"\r\n              href=\"/help/topic/common-questions\"\r\n              onClick={() => setHelpPath(2, \"common-questions\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"My Account\")}\r\n              key=\"my-account\"\r\n              href=\"/help/topic/my-account\"\r\n              onClick={() => setHelpPath(2, \"my-account\")}\r\n            />\r\n            <ListGroupItem\r\n              {...args}\r\n              caption={t(\"Local Currency Basics\")}\r\n              key=\"local-currency-basics\"\r\n              href=\"/help/topic/local-currency-basics\"\r\n              onClick={() => setHelpPath(2, \"local-currency-basics\")}\r\n            />\r\n          </ListGroup>\r\n        );\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ListGroupItem\",\r\n    caption: \"Untitled\",\r\n    key: \"untitled\",\r\n    href: \"#\",\r\n    onClick: () => {},\r\n  };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"props:\", props);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <ListGroup.Item\r\n        action\r\n        key={props.key}\r\n        eventKey={props.key}\r\n        style={{ cursor: \"default\", overflow: \"hidden\" }}\r\n        href={props.href}\r\n        onClick={props.onClick}\r\n      >\r\n        {props.caption}\r\n      </ListGroup.Item>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\n// import { Alert } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Overlay from \"../overlay\";\r\nimport AlertContainer from \"../alertContainer\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args.data);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onAlertClose: onClose } = props.barrelEventHandlers;\r\n\r\n  // let t;\r\n  const errorStrings = useTranslation(\"Errors\").t;\r\n  const infoStrings = useTranslation(\"Infos\").t;\r\n\r\n  if (error !== null && info !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <>\r\n        <AlertContainer visible={true}>\r\n          {msgError !== \"\" && msgError !== null && (\r\n            <Overlay\r\n              visible={true}\r\n              variant=\"danger\"\r\n              onClose={() => onClose(\"error\")}\r\n              dismissible={error.dismissible}\r\n            >\r\n              {msgError}\r\n            </Overlay>\r\n          )}\r\n\r\n          {msgInfo !== \"\" && msgInfo !== null && (\r\n            <Overlay\r\n              visible={true}\r\n              variant=\"info\"\r\n              onClose={() => onClose(\"info\")}\r\n              dismissible={info.dismissible}\r\n            >\r\n              {msgInfo}\r\n            </Overlay>\r\n          )}\r\n        </AlertContainer>\r\n      </>\r\n    );\r\n  } else if (error !== null) {\r\n    const msgError = errorStrings(error.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        {msgError !== \"\" && msgError !== null && (\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"danger\"\r\n            onClose={() => onClose(\"error\")}\r\n            dismissible={error.dismissible}\r\n          >\r\n            {msgError}\r\n          </Overlay>\r\n        )}\r\n      </AlertContainer>\r\n    );\r\n  } else if (info !== null) {\r\n    const msgInfo = infoStrings(info.msg);\r\n\r\n    return (\r\n      <AlertContainer visible={true}>\r\n        {msgInfo !== \"\" && msgInfo !== null && (\r\n          <Overlay\r\n            visible={true}\r\n            variant=\"info\"\r\n            onClose={() => onClose(\"info\")}\r\n            dismissible={info.dismissible}\r\n          >\r\n            {msgInfo}\r\n          </Overlay>\r\n        )}\r\n      </AlertContainer>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Overlay.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { cloneElement } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport { useTimeout } from \"../../utils/useTimeout\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"Overlay\",\r\n    visible: false,\r\n    variant: \"info\",\r\n    dismissible: false,\r\n    onClose: () => {},\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"dismissible:\", props.dismissible);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  useTimeout(\r\n    () => {\r\n      props.onClose();\r\n    },\r\n    !props.dismissible ? 5000 : -1 // millisec till overlay closes, -1 never\r\n  );\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      let className = \"custom-overlay\";\r\n\r\n      /**\r\n       * Implement property: dismissible\r\n       */\r\n      if (props.dismissible) {\r\n        className += \" alert-dismissible\";\r\n      }\r\n\r\n      /**\r\n       * Implement property: variant\r\n       */\r\n      switch (props.variant) {\r\n        case \"danger\":\r\n          className += \" alert-danger\";\r\n          break;\r\n\r\n        default:\r\n          className += \" alert-info\";\r\n          break;\r\n      }\r\n      let key = 0;\r\n      return (\r\n        <div className={className}>\r\n          {props.dismissible && (\r\n            <button type=\"button\" className=\"close\" onMouseDown={props.onClose}>\r\n              <span aria-hidden=\"true\">×</span>\r\n              <span className=\"sr-only\">Close alert</span>\r\n            </button>\r\n          )}\r\n          {React.Children.map(args.children, (child) => {\r\n            if (typeof child !== \"object\") {\r\n              return child;\r\n            } else {\r\n              key++;\r\n              return cloneElement(child, {\r\n                ...args,\r\n                styles: null,\r\n                key: key,\r\n              });\r\n            }\r\n          })}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./AlertContainer.css\";\r\n\r\n/**\r\n  * System imports\r\n  ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = { namespace: \"AlertContainer\", visible: false };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  // const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const getJSX = () => {\r\n    if (props.visible) {\r\n      return (\r\n        <div className=\"alert-container\">\r\n          {React.Children.map(args.children, (child) => child)}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  };\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, Container, Row, Col } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { namespace: \"LogIn\", request: \"sign in user\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { ip, logInEmail, logInPassword } = props.barrelGetters;\r\n  const {\r\n    setLoggingIn,\r\n    setUpdateInterval,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n  } = props.barrelSetters;\r\n  const {\r\n    getReviser,\r\n    getWorkplace,\r\n    sendRequest,\r\n    getUri,\r\n  } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (tempRefEmail !== null && logInEmail !== tempRefEmail.value)\r\n        setLogInEmail(tempRefEmail.value);\r\n\r\n      if (tempRefPassword !== null && logInPassword !== tempRefPassword.value)\r\n        setLogInPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup.string().required(t(\"No password provided\")),\r\n  });\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserLogInRequest = (data) => {\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.ip = ip;\r\n    data.uri = getUri();\r\n    sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    setUpdateInterval(-1);\r\n    setLoggingIn(true);\r\n    sendUserLogInRequest(data);\r\n  };\r\n\r\n  const UserLogInForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      align=\"left\"\r\n      // maxWidth=\"500px\"\r\n      header={false}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <h3>{t(\"Sign In\")}</h3>\r\n\r\n        {/**\r\n         * Email\r\n         */}\r\n        <Form.Group controlId=\"validationFormikEmail\">\r\n          <Form.Label>{t(\"Email address\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            // autoFocus\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Password\r\n         */}\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <Form.Label>{t(\"Password\")}</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            ref={refPassword}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Submit button\r\n         */}\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace=\"LogIn\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <Container fluid=\"md\">\r\n          <Row>\r\n            {/**\r\n             * Register\r\n             */}\r\n            <Col>\r\n              <p className=\"other-options text-left\">\r\n                <Trans i18nKey=\"LogIn:Not yet registered\">\r\n                  Not yet <a href=\"/sign-up\">registered?</a>\r\n                </Trans>\r\n              </p>\r\n            </Col>\r\n\r\n            {/**\r\n             * Forgot password\r\n             */}\r\n            <Col>\r\n              <p className=\"other-options text-right\">\r\n                <Trans i18nKey=\"LogIn:Forgot password\">\r\n                  Forgot <a href=\"/reset\">password?</a>\r\n                </Trans>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        component={UserLogInForm}\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        initialValues={{\r\n          email: logInEmail,\r\n          password: logInPassword,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(\"Logout\");\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const { error, info, language, emailChanged } = props.barrelGetters;\r\n  const {\r\n    setLanguage,\r\n    setRedirectTo,\r\n    // setEmailChanged,\r\n    // setLoggingOut,\r\n    setInfo,\r\n    setError,\r\n  } = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  const { onLogOut, onRedirect } = props.barrelEventHandlers;\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Save vars\r\n     */\r\n    const tempError = error;\r\n    const tempInfo = info;\r\n    const tempLanguage = language;\r\n    const tempEmailChanged = emailChanged;\r\n\r\n    /**\r\n     * Log out\r\n     */\r\n    onLogOut();\r\n\r\n    /**\r\n     * Restore vars\r\n     */\r\n    setLanguage(tempLanguage);\r\n\r\n    if (tempEmailChanged) {\r\n      onRedirect(\"/validate-email\");\r\n    }\r\n\r\n    if (tempError !== null) {\r\n      setError(JSON.stringify(tempError));\r\n    } else {\r\n      setError(null);\r\n    }\r\n\r\n    if (tempInfo !== null) {\r\n      setInfo(JSON.stringify(tempInfo));\r\n    } else {\r\n      setInfo(null);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, []); // JSON.stringify(error), JSON.stringify(info) - logOut\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        <h4>{t(\"See you soon\")}</h4>\r\n        <hr />\r\n\r\n        <Trans i18nKey=\"Logout:Security note\">\r\n          <strong>Security note:</strong> For security reasons, it is\r\n          recommended that you close the browser completely at the end of your\r\n          visit to the Local Currency website (i.e. all browser windows or\r\n          browser tabs) and then open it again if necessary to visit other\r\n          websites. This note applies in particular if you do not use your Local\r\n          Currency website at home, but on a public device or a device that is\r\n          accessible to other people - for example in an internet cafe, in a\r\n          hotel or at work.\r\n        </Trans>\r\n\r\n        <br />\r\n        <br />\r\n\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Sign in\")}\r\n          request=\"get started\"\r\n          namespace=\"LogIn\"\r\n          onSubmit={() => setRedirectTo(\"/\")}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Formik } from \"formik\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   */\r\n  let defaults = { request: \"register user\", namespace: \"SignUp\" };\r\n\r\n  /**\r\n   * Properties\r\n   */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   */\r\n  const {\r\n    language,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n  } = props.barrelGetters;\r\n  const {\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n  } = props.barrelSetters;\r\n  const { getReviser, getWorkplace, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n   * Custom hooks\r\n   */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  /**\r\n   * Create refs\r\n   */\r\n  const refFirstName = React.createRef();\r\n  const refLastName = React.createRef();\r\n  const refEmail = React.createRef();\r\n  const refPassword = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const tempRefFirstName = refFirstName.current;\r\n    const tempRefLastName = refLastName.current;\r\n    const tempRefEmail = refEmail.current;\r\n    const tempRefPassword = refPassword.current;\r\n    return () => {\r\n      if (\r\n        tempRefFirstName !== null &&\r\n        signUpFirstName !== tempRefFirstName.value\r\n      )\r\n        setSignUpFirstName(tempRefFirstName.value);\r\n\r\n      if (tempRefLastName !== null && signUpLastName !== tempRefLastName.value)\r\n        setSignUpLastName(tempRefLastName.value);\r\n\r\n      if (tempRefEmail !== null && signUpEmail !== tempRefEmail.value)\r\n        setSignUpEmail(tempRefEmail.value);\r\n\r\n      if (tempRefPassword !== null && signUpPassword !== tempRefPassword.value)\r\n        setSignUpPassword(tempRefPassword.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    firstName: yup.string().required(t(\"First name is required\")),\r\n    lastName: yup.string().required(t(\"Last name is required\")),\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n   * Functions\r\n   */\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /**\r\n   * Send user registration request\r\n   * @param {object} data\r\n   */\r\n  const sendUserRegistrationRequest = (data) => {\r\n    if (data === null) return false;\r\n    data.reviser = getReviser();\r\n    data.workplace = getWorkplace();\r\n    data.language = language;\r\n    data.validateEmail = true;\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    // const recaptchaValue = refReCAPTCHA.current.getValue();\r\n    // this.props.onSubmit(recaptchaValue);\r\n    if (sendUserRegistrationRequest(data)) {\r\n      // User registration request was submitted\r\n    }\r\n  };\r\n\r\n  // const onChange = (data) => {\r\n  //   console.log(\"onChange:\", data);\r\n  // };\r\n\r\n  const UserRegistrationForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      align=\"left\"\r\n      // maxWidth=\"500px\"\r\n      header={false}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <h3>{t(\"Sign Up\")}</h3>\r\n\r\n        {/**\r\n         * First name\r\n         */}\r\n        <Form.Group controlId=\"validationFormikFirstName\">\r\n          <Form.Label>{t(\"First name\")}</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter first name\")}\r\n            name=\"firstName\"\r\n            ref={refFirstName}\r\n            // autoFocus\r\n            value={values.firstName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.firstName && touched.firstName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.firstName}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Last name\r\n         */}\r\n        <Form.Group controlId=\"validationFormikLastName\">\r\n          <Form.Label>{t(\"Last name\")}</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder={t(\"Enter last name\")}\r\n            name=\"lastName\"\r\n            ref={refLastName}\r\n            value={values.lastName}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.lastName && touched.lastName}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.lastName}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Email\r\n         */}\r\n        <Form.Group controlId=\"validationFormikEmail\">\r\n          <Form.Label>{t(\"Email address\")}</Form.Label>\r\n          <Form.Control\r\n            placeholder={t(\"Enter email\")}\r\n            name=\"email\"\r\n            value={values.email}\r\n            ref={refEmail}\r\n            onChange={handleChange}\r\n            isInvalid={!!errors.email && touched.email}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.email}\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Password\r\n         */}\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <Form.Label>{t(\"Password\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type={passwordVisible ? \"text\" : \"password\"}\r\n              placeholder={t(\"Enter password\")}\r\n              name=\"password\"\r\n              ref={refPassword}\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.password && touched.password}\r\n            />\r\n            <InputGroup.Append>\r\n              <InputGroup.Text\r\n                id=\"inputGroupAppend\"\r\n                onClick={togglePassword}\r\n                style={{\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                {passwordVisible ? (\r\n                  <VisibilityOff\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\" }}\r\n                  />\r\n                ) : (\r\n                  <Visibility\r\n                    fontSize=\"small\"\r\n                    style={{ color: \"var(--dark)\" }}\r\n                  />\r\n                )}\r\n              </InputGroup.Text>\r\n            </InputGroup.Append>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.password}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Submit button\r\n         */}\r\n        <Form.Group controlId=\"validationSubmitButton\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n\r\n        {/**\r\n         * Login link\r\n         */}\r\n        <p className=\"other-options text-right\">\r\n          <Trans i18nKey=\"SignUp:Already registered\">\r\n            Already registered <a href=\"/sign-in\">sign in?</a>\r\n          </Trans>\r\n        </p>\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      component={UserRegistrationForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        firstName: signUpFirstName,\r\n        lastName: signUpLastName,\r\n        email: signUpEmail,\r\n        password: signUpPassword,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, InputGroup, Spinner } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n  * Default export\r\n  ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ResetPassword\", request: \"reset password\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { language, passwordResetEmail } = props.barrelGetters;\r\n  const {\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetEmail,\r\n  } = props.barrelSetters;\r\n  const { sendRequest, getUrlParam } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  const refEmail = React.createRef();\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n\r\n  useEffect(() => {\r\n    const tempRefEmail = refEmail.current;\r\n    return () => {\r\n      if (tempRefEmail !== null && passwordResetEmail !== tempRefEmail.value)\r\n        setPasswordResetEmail(tempRefEmail.value);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenPasswordReset(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  /**\r\n    * Event listeners\r\n    ============================================================================ */\r\n\r\n  /**\r\n   * Event listener: On Form Submit\r\n   * @param {object} data Form data\r\n   */\r\n  const onSubmit = (data) => {\r\n    // console.log(data);\r\n    data.language = language;\r\n    sendRequest({\r\n      req: props.request,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Yup schema\r\n   */\r\n  const schema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email(t(\"Invalid email address\"))\r\n      .required(t(\"Email is required\")),\r\n  });\r\n\r\n  const passwordResetForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Card\r\n      backgroundHeader=\"Transparent\"\r\n      backgroundBody=\"Transparent\"\r\n      border=\"0\"\r\n      align=\"left\"\r\n      // maxWidth=\"500px\"\r\n      header={false}\r\n    >\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <h3>{t(\"Reset password\")}</h3>\r\n\r\n        {/* Email */}\r\n        <Form.Group controlId=\"validationFormikEmail\">\r\n          <Form.Label>{t(\"Email address\")}</Form.Label>\r\n          <InputGroup>\r\n            <Form.Control\r\n              placeholder={t(\"Enter email\")}\r\n              name=\"email\"\r\n              ref={refEmail}\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              // onBlur={handleChange}\r\n              isInvalid={!!errors.email && touched.email}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {errors.email}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"validationFormikPassword\">\r\n          <SubmitButton\r\n            {...args}\r\n            caption={t(\"Submit\")}\r\n            request={props.request}\r\n            namespace={props.namespace}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  // return (\r\n  //   <Formik\r\n  //     component={passwordResetForm}\r\n  //     validationSchema={schema}\r\n  //     onSubmit={onSubmit}\r\n  //     initialValues={{\r\n  //       email: \"\",\r\n  //     }}\r\n  //   />\r\n  // );\r\n\r\n  return token === null ? (\r\n    <Formik\r\n      component={passwordResetForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        email: passwordResetEmail,\r\n      }}\r\n    />\r\n  ) : (\r\n    <div className=\"text-center\">\r\n      <Spinner\r\n        as=\"span\"\r\n        animation=\"border\"\r\n        size=\"sm\"\r\n        role=\"status\"\r\n        aria-hidden=\"true\"\r\n        hidden={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"ValidateEmail\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    // validateTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    language,\r\n  } = props.barrelGetters;\r\n  const { setValidateTokenEmail } = props.barrelSetters;\r\n  const { getUrlParam, sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Hooks\r\n    ============================================================================ */\r\n\r\n  // setToken(getUrlParam(\"token\"));\r\n  // setEmail(getUrlParam(\"email\"));\r\n\r\n  const token = getUrlParam(\"token\");\r\n  const email = getUrlParam(\"email\");\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    if (token === null || email === null) return;\r\n\r\n    setValidateTokenEmail(\r\n      JSON.stringify({\r\n        token,\r\n        email,\r\n      })\r\n    );\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = (data) => {\r\n    sendRequest({\r\n      req: \"resend validate email token\",\r\n      data: {\r\n        token: validationTokenEmail.token,\r\n        email: validationTokenEmail.email,\r\n        language,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    // const queryString = window.location.search;\r\n    // const urlParams = new URLSearchParams(queryString);\r\n\r\n    return token === null ? (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        <h4>{t(\"A verification link has been sent to your email account.\")}</h4>\r\n        <hr />\r\n        <p>\r\n          {t(\r\n            \"Please click on the link that has just been sent to your email account\"\r\n          )}\r\n        </p>\r\n        {validationTokenEmailResent < 5 && (\r\n          <>\r\n            <br />\r\n            <h5>{t(\"Didn't receive email?\")}</h5>\r\n\r\n            <SubmitButton\r\n              {...args}\r\n              caption={t(\"Submit\")}\r\n              visible={true}\r\n              marginTop={20}\r\n              request={\"resend validate email token\"}\r\n              namespace={props.namespace}\r\n              onSubmit={handleSubmit}\r\n            />\r\n          </>\r\n        )}\r\n      </Card>\r\n    ) : (\r\n      <div className=\"text-center\">\r\n        <Spinner\r\n          as=\"span\"\r\n          animation=\"border\"\r\n          size=\"sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n          hidden={false}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\nimport SubmitButton from \"../submitButton\";\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"ChangePassword\",\r\n    request: \"change password\",\r\n    email: null,\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  const {\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([\r\n    passwordResetTokenValidated === true ? \"SignUp\" : \"ChangePassword\",\r\n  ]); // adjust namespace\r\n\r\n  /**\r\n   * Hooks\r\n   */\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    data.email = passwordResetTokenEmail;\r\n    // console.log(data);\r\n    return sendRequest({ req: props.request, data });\r\n  };\r\n\r\n  const togglePassword = () => {\r\n    setPasswordVisible(!passwordVisible);\r\n  };\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    password: yup\r\n      .string()\r\n      .required(t(\"No password provided\"))\r\n      .min(8, t(\"Password is too short\"))\r\n      // .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\r\n      .matches(\r\n        /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#_?&])[A-Za-z\\d@$!%*#_?&]{8,}$/,\r\n        t(\"Password is too weak\")\r\n      ),\r\n  });\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ChangePasswordForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <Form noValidate onSubmit={handleSubmit}>\r\n      {/* Password */}\r\n      <Form.Group controlId=\"validationFormikPassword\">\r\n        <Form.Label>{t(\"New password\")}</Form.Label>\r\n        <InputGroup>\r\n          <Form.Control\r\n            type={passwordVisible ? \"text\" : \"password\"}\r\n            placeholder={t(\"Enter password\")}\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            // onBlur={handleChange}\r\n            isInvalid={!!errors.password && touched.password}\r\n          />\r\n          <InputGroup.Append>\r\n            <InputGroup.Text\r\n              id=\"inputGroupAppend\"\r\n              onClick={togglePassword}\r\n              style={{\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              {passwordVisible ? (\r\n                <VisibilityOff\r\n                  fontSize=\"small\"\r\n                  style={{ color: \"var(--dark)\" }}\r\n                />\r\n              ) : (\r\n                <Visibility fontSize=\"small\" style={{ color: \"var(--dark)\" }} />\r\n              )}\r\n            </InputGroup.Text>\r\n          </InputGroup.Append>\r\n\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            {errors.password}\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n\r\n      <SubmitButton\r\n        {...args}\r\n        caption={t(\"Submit\")}\r\n        request={props.request}\r\n        namespace={props.namespace}\r\n      />\r\n    </Form>\r\n  );\r\n\r\n  /**\r\n     * Return\r\n     ============================================================================ */\r\n  if (passwordResetTokenValidated === true) {\r\n    // if (true) {\r\n    return (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        <Formik\r\n          component={ChangePasswordForm}\r\n          validationSchema={schema}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            password: \"\",\r\n          }}\r\n        />\r\n      </Card>\r\n    );\r\n  } else {\r\n    return (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        // maxWidth=\"500px\"\r\n        header={false}\r\n      >\r\n        {t(\"Awaiting validation\")}\r\n      </Card>\r\n    );\r\n  }\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport TanInput from \"../tanInput\";\r\nimport { useEffect } from \"react\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Checkout\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    // externalRequest,\r\n    // accountNumber,\r\n    cartProps,\r\n    cartContent,\r\n    cartPurposes,\r\n    tanRequired,\r\n    userData,\r\n    language,\r\n    accountNumber,\r\n    currencyAbbr,\r\n    cartID,\r\n    cartProcessingStatus,\r\n  } = props.barrelGetters;\r\n  const { setTransferRequest, setCartProcessingStatus } = props.barrelSetters;\r\n  const { format, sendRequest, formatDate } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const schema = yup.object({});\r\n\r\n  const getCartPurposes = () => {\r\n    if (cartContent === null) return false;\r\n\r\n    let priceTotal = 0;\r\n    let priceReal = 0;\r\n\r\n    let purposeID = [];\r\n    let amount = [];\r\n    let currency = [];\r\n    let fromAccount = [];\r\n\r\n    cartContent.map((element) => {\r\n      priceTotal += element.price * element.amount;\r\n      let product_found = \"N\";\r\n\r\n      if (cartPurposes !== null) {\r\n        let product = cartPurposes.find(\r\n          (products) => products.purpose_id === element.product\r\n        );\r\n\r\n        if (typeof product !== \"undefined\") {\r\n          product_found = \"Y\";\r\n          priceReal += element.price * element.amount;\r\n        }\r\n        // console.log(\"product:\", product);\r\n      }\r\n\r\n      /**\r\n       * In current implementation if product could be added to the cart,\r\n       * then subsequential deactivation is ignored.\r\n       */\r\n      purposeID.push(element.product);\r\n      amount.push(element.price * element.amount);\r\n      currency.push(currencyAbbr);\r\n      fromAccount.push(\"acc_curr\");\r\n    });\r\n\r\n    return { purposeID, amount, currency, fromAccount };\r\n  };\r\n\r\n  const Cart = () => {\r\n    if (cartProps === null) return <></>;\r\n\r\n    let priceTotal = 0; // Price of active AND inactive purposes\r\n    let priceReal = 0; // Price of active purposes\r\n\r\n    const businessCreated = formatDate(cartProps.business_created, {\r\n      month: \"numeric\",\r\n      year: \"numeric\",\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {cartContent !== null &&\r\n          cartContent.map((element, key) => {\r\n            priceTotal += element.price * element.amount;\r\n            let product_found = \"N\";\r\n\r\n            if (cartPurposes !== null) {\r\n              let product = cartPurposes.find(\r\n                (products) => products.purpose_id === element.product\r\n              );\r\n\r\n              if (typeof product !== \"undefined\") {\r\n                product_found = \"Y\";\r\n                priceReal += element.price * element.amount;\r\n              }\r\n              // console.log(\"product:\", product);\r\n            }\r\n\r\n            //   if (typeof product !== \"undefined\") {\r\n            //     product_found = product.title;\r\n            //   }\r\n            // }\r\n\r\n            return (\r\n              <div key={key}>\r\n                {false && (\r\n                  <>\r\n                    <div>product: {element.product}</div>\r\n                    <div>price: {element.price}</div>\r\n                    <div>amount: {element.amount}</div>\r\n                    <div>found: {product_found}</div>\r\n                    <br />\r\n                  </>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n\r\n        <div style={{ fontWeight: \"bold\" }}>{t(\"Merchant\")}</div>\r\n        <div style={{}}>{cartProps.merchant}</div>\r\n        <div style={{}}>{cartProps.business_title}</div>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <Trans\r\n            i18nKey=\"Checkout:Business created\"\r\n            businessCreated={businessCreated}\r\n          >\r\n            Since {{ businessCreated }}\r\n          </Trans>\r\n        </div>\r\n\r\n        <div style={{ fontWeight: \"bold\" }}>{t(\"Amount\")}</div>\r\n        <div style={{ fontSize: \"1.5rem\" }}>{format(priceTotal)}</div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    setCartProcessingStatus(null);\r\n\r\n    data.transferType = \"transfer U2B\";\r\n    data.uid = accountNumber;\r\n    data.email = userData.email;\r\n    data.language = language;\r\n\r\n    const { amount, currency, purposeID, fromAccount } = getCartPurposes();\r\n\r\n    data.amount = amount;\r\n    data.currency = currency;\r\n    data.purposeID = purposeID;\r\n    data.fromAccount = fromAccount;\r\n\r\n    data.cart = cartProps.cartid;\r\n    data.merchant = cartProps.merchant;\r\n\r\n    setTransferRequest(JSON.stringify(data));\r\n\r\n    data = { email: userData.email, language };\r\n\r\n    sendRequest({ req: \"get tan\", data: data });\r\n\r\n    // setTransferAmount(\"\");\r\n  };\r\n\r\n  const CheckoutForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    errors,\r\n  }) => (\r\n    <Card title={t(\"Checkout\")} border=\"0\">\r\n      {/* From account */}\r\n      <Form noValidate onSubmit={handleSubmit}>\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <Cart />\r\n        </div>\r\n        {/* Submit button */}\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Submit\")}\r\n          request=\"get tan\"\r\n          namespace={props.namespace}\r\n        />\r\n      </Form>\r\n    </Card>\r\n  );\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  // return <>{getJSX()}</>;\r\n\r\n  return (\r\n    <>\r\n      {cartProcessingStatus === null ? (\r\n        <>\r\n          <TanInput show={tanRequired} size=\"sm\" {...args} />\r\n          <Formik\r\n            component={CheckoutForm}\r\n            validationSchema={schema}\r\n            onSubmit={onSubmit}\r\n            initialValues={{}}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {cartProcessingStatus === true\r\n            ? \"Transfer successful\"\r\n            : \"Transfer error\"}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col, Navbar, Nav } from \"react-bootstrap\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Card from \"../card\";\r\nimport LanguageSelector from \"../language-selector\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Footer\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { signedIn } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Card\r\n        title=\"\"\r\n        header={true}\r\n        border={0}\r\n        maxWidthBody=\"100%\"\r\n        headerPadding=\"10px\"\r\n        bodyPadding=\"10px 20px\"\r\n      >\r\n        {window.location.pathname !== \"/auth\" ? (\r\n          /**\r\n           * Full footer\r\n           */\r\n          <Container\r\n            fluid\r\n            style={{\r\n              paddingRight: \"0\",\r\n              paddingLeft: \"0\",\r\n            }}\r\n          >\r\n            {/*\r\n             * Top Footer\r\n             */}\r\n            <Row style={{ padding: 0 }}>\r\n              <Col style={{ padding: 0 }}>\r\n                <Navbar\r\n                  collapseOnSelect\r\n                  expand=\"sm\"\r\n                  style={{\r\n                    borderRadius: \"5px\",\r\n                    backgroundColor: \"var(--light)\", // e8f6f3\r\n                    boxShadow: \"none\",\r\n                    padding: \"0 .5rem\",\r\n                  }}\r\n                >\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"help\" href=\"/help\">\r\n                      {t(\"Help\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n                  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    {signedIn &&\r\n                      window.location.pathname !== \"/contact\" &&\r\n                      window.location.pathname !== \"/account-registration\" && (\r\n                        <Nav>\r\n                          <Nav.Link eventKey=\"contact\" href=\"/contact\">\r\n                            {t(\"Contact\")}\r\n                          </Nav.Link>\r\n                        </Nav>\r\n                      )}\r\n\r\n                    <Nav className=\"mr-auto\">\r\n                      <Nav.Link eventKey=\"about\" href=\"/security\">\r\n                        {t(\"Security\")}\r\n                      </Nav.Link>\r\n                    </Nav>\r\n\r\n                    <Nav>\r\n                      <Nav.Item>\r\n                        <LanguageSelector {...args} />\r\n                      </Nav.Item>\r\n                    </Nav>\r\n                  </Navbar.Collapse>\r\n                </Navbar>\r\n              </Col>\r\n            </Row>\r\n\r\n            {/*\r\n             * Bottom Footer\r\n             */}\r\n            <Row\r\n              className=\"d-none d-sm-block\"\r\n              style={{ padding: 0, fontSize: \"0.86rem\" }}\r\n            >\r\n              <Col style={{ padding: 0 }}>\r\n                <Navbar\r\n                  collapseOnSelect\r\n                  expand=\"sm\"\r\n                  style={{\r\n                    borderRadius: \"5px\",\r\n                    backgroundColor: \"var(--light)\", // e8f6f3\r\n                    boxShadow: \"none\",\r\n                    padding: \"0 .5rem\",\r\n                  }}\r\n                >\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/about\">\r\n                      {t(\"About\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/newsroom\">\r\n                      {t(\"Newsroom\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/jobs\">\r\n                      {t(\"Jobs\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav className=\"mr-auto\">\r\n                    <Nav.Link eventKey=\"about\" href=\"/sitemap\">\r\n                      {t(\"Sitemap\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Item style={{}}>\r\n                      &copy;&nbsp;{now.getFullYear()}\r\n                    </Nav.Item>\r\n                  </Nav>\r\n\r\n                  <Nav>\r\n                    <Nav.Link eventKey=\"about\" href=\"/feedback\">\r\n                      {t(\"Feedback\")}\r\n                    </Nav.Link>\r\n                  </Nav>\r\n                </Navbar>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        ) : (\r\n          /**\r\n           * Minimal footer\r\n           */\r\n          <Container\r\n            fluid\r\n            style={{\r\n              paddingRight: \"0\",\r\n              paddingLeft: \"0\",\r\n            }}\r\n          >\r\n            {/*\r\n             * Top Footer\r\n             */}\r\n            <Row style={{ padding: 0 }}>\r\n              <Col style={{ padding: 0 }}>\r\n                <Nav className=\"justify-content-center\">\r\n                  <Nav.Item>\r\n                    <LanguageSelector {...args} />\r\n                  </Nav.Item>\r\n                </Nav>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        )}\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","// import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18n from \"../../translations/i18n\";\r\n// import { withNamespaces } from \"react-i18next\";\r\nimport { Form, Badge } from \"react-bootstrap\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"LanguageSelector\",\r\n    backgroundColor: \"var(--dark)\",\r\n    color: \"var(--light)\",\r\n  };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { userData, signedIn } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { sendRequest } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  const { t } = useTranslation(props.namespace);\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n  };\r\n  const languages = [\r\n    { id: 1, language: \"Latviešu\", code: \"lv\" },\r\n    { id: 2, language: \"English\", code: \"en\" },\r\n  ];\r\n  const handleLanguageSelect = (e) => {\r\n    changeLanguage(e.target.value);\r\n  };\r\n  const selectLanguage = (language) => {\r\n    changeLanguage(language);\r\n\r\n    if (userData !== null && signedIn) {\r\n      sendRequest({\r\n        req: \"register user language\",\r\n        data: { email: userData.email, language },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (1) {\r\n    return (\r\n      <span style={{ paddingLeft: \"0.5rem\", paddingRight: \"0.5rem\" }}>\r\n        <Badge\r\n          pill\r\n          style={{\r\n            cursor: \"pointer\",\r\n            backgroundColor: props.backgroundColor,\r\n            color: props.color,\r\n            marginBottom: \"0.3rem\",\r\n          }}\r\n          onClick={() => {\r\n            selectLanguage(\"en\");\r\n          }}\r\n        >\r\n          en\r\n        </Badge>{\" \"}\r\n        <Badge\r\n          pill\r\n          style={{\r\n            cursor: \"pointer\",\r\n            backgroundColor: props.backgroundColor,\r\n            color: props.color,\r\n            marginBottom: \"0.3rem\",\r\n          }}\r\n          onClick={() => {\r\n            selectLanguage(\"lv\");\r\n          }}\r\n        >\r\n          lv\r\n        </Badge>\r\n      </span>\r\n    );\r\n  } else {\r\n    return (\r\n      <Form.Control\r\n        as=\"select\"\r\n        id=\"languageSelector\"\r\n        onChange={handleLanguageSelect}\r\n        custom\r\n      >\r\n        <option key=\"0\" value={props.language}>\r\n          {t(\"Language\")}\r\n        </option>\r\n        {languages.map((el) => (\r\n          <option key={el.id} value={el.code}>\r\n            {el.language}\r\n          </option>\r\n        ))}\r\n      </Form.Control>\r\n    );\r\n  }\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  // Button,\r\n  // Breadcrumb,\r\n  // NavDropdown,\r\n  // Alert,\r\n} from \"react-bootstrap\";\r\nimport { PowerSettingsNew, AccountCircle } from \"@material-ui/icons\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\n// import Card from \"../card\";\r\nimport UserEditor from \"../userEditor\";\r\nimport IdleTimer from \"../idleTimer\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"MainMenu\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const {\r\n    settings,\r\n    sessionTimeout,\r\n    accountNumber,\r\n    signedIn,\r\n  } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getBusinesses } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Container\r\n        fluid\r\n        style={{\r\n          paddingRight: \"0\",\r\n          paddingLeft: \"0\",\r\n        }}\r\n      >\r\n        <Row>\r\n          {/*\r\n           * User Menu\r\n           */}\r\n          <Col>\r\n            <Navbar\r\n              // className=\"card-header\"\r\n              // className=\"navbar-trans\"\r\n              // bg=\"light\"\r\n              // variant=\"light\"\r\n              style={{\r\n                borderRadius: 0,\r\n                // background: \"transparent !important\",\r\n                // color: \"#f7f7f7\",\r\n                backgroundColor: \"var(--light)\", // e8f6f3\r\n                boxShadow: \"none\",\r\n                // whiteSpace: \"nowrap\",\r\n              }}\r\n            >\r\n              {/**\r\n               * Brand\r\n               */}\r\n              <Navbar.Brand href=\"/\">\r\n                <img\r\n                  src={\r\n                    settings !== null && typeof settings[\"logo\"] !== \"undefined\"\r\n                      ? settings[\"logo\"]\r\n                      : \"/gfx/zlogo_light.png\"\r\n                  }\r\n                  alt=\"\"\r\n                  width=\"auto\"\r\n                  height=\"30\"\r\n                  className=\"d-inline-block align-top\"\r\n                />\r\n              </Navbar.Brand>\r\n\r\n              {/**\r\n               * User editor\r\n               */}\r\n              <Nav className=\"mr-auto\">\r\n                {signedIn ? (\r\n                  <>\r\n                    {window.location.pathname !== \"/auth\" ? (\r\n                      <Nav.Link eventKey=\"profile\" href=\"/profile\">\r\n                        <UserEditor {...args} />\r\n                      </Nav.Link>\r\n                    ) : (\r\n                      <Nav.Item>\r\n                        <UserEditor {...args} />\r\n                      </Nav.Item>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {false ? (\r\n                      <Nav.Item>\r\n                        <strong>{t(\"Local Currency\")}</strong>\r\n                      </Nav.Item>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Nav>\r\n\r\n              {/**\r\n               * Register\r\n               */}\r\n              {!signedIn && window.location.pathname !== \"/sign-up\" && (\r\n                <Nav>\r\n                  <Nav.Link eventKey=\"sign-out\" href=\"/sign-up\">\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      <span>\r\n                        <AccountCircle\r\n                          style={{\r\n                            fontSize: \"1.2rem\",\r\n                            paddingBottom: \"0.2rem\",\r\n                            color: \"var(--dark)\",\r\n                          }}\r\n                        />\r\n                      </span>\r\n\r\n                      <span className=\"d-none d-sm-inline\">\r\n                        &nbsp;\r\n                        {t(\"Register\")}\r\n                      </span>\r\n                    </span>\r\n                  </Nav.Link>\r\n                </Nav>\r\n              )}\r\n\r\n              {/**\r\n               * Sign in\r\n               */}\r\n              {!signedIn && window.location.pathname !== \"/sign-in\" && (\r\n                <Nav>\r\n                  <Nav.Link eventKey=\"sign-out\" href=\"/sign-in\">\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      <span>\r\n                        <PowerSettingsNew\r\n                          style={{\r\n                            fontSize: \"1.2rem\",\r\n                            paddingBottom: \"0.2rem\",\r\n                            color: \"var(--dark)\",\r\n                          }}\r\n                        />\r\n                      </span>\r\n\r\n                      <span className=\"d-none d-sm-inline\">\r\n                        &nbsp;\r\n                        {t(\"Sign in\")}\r\n                      </span>\r\n                    </span>\r\n                  </Nav.Link>\r\n                </Nav>\r\n              )}\r\n\r\n              {/**\r\n               * Sign out\r\n               */}\r\n              {signedIn && (\r\n                <Nav>\r\n                  <Nav.Link eventKey=\"sign-out\" href=\"/sign-out\">\r\n                    <span style={{ whiteSpace: \"nowrap\" }}>\r\n                      <span>\r\n                        <PowerSettingsNew\r\n                          style={{\r\n                            fontSize: \"1.2rem\",\r\n                            paddingBottom: \"0.2rem\",\r\n                            color: \"var(--dark)\",\r\n                          }}\r\n                        />\r\n                      </span>\r\n\r\n                      <span className=\"d-none d-sm-inline\">\r\n                        &nbsp;\r\n                        {t(\"Sign out\")}\r\n                      </span>\r\n                    </span>\r\n                  </Nav.Link>\r\n                </Nav>\r\n              )}\r\n\r\n              {/**\r\n               * Idle timer\r\n               */}\r\n              {signedIn && (\r\n                <Nav>\r\n                  <Nav.Item>\r\n                    <IdleTimer timeout={sessionTimeout} {...args} />\r\n                  </Nav.Item>\r\n                </Nav>\r\n              )}\r\n            </Navbar>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/*\r\n         * Account Menu\r\n         */}\r\n        {signedIn && window.location.pathname !== \"/auth\" && (\r\n          <Row>\r\n            <Col>\r\n              <Navbar\r\n                collapseOnSelect\r\n                expand=\"sm\"\r\n                // className=\"card-header\"\r\n                // className=\"navbar-trans\"\r\n                // bg=\"dark\"\r\n                variant=\"dark\"\r\n                style={{\r\n                  borderRadius: 0,\r\n                  background: \"transparent !important\",\r\n                  backgroundColor: \"var(--dark)\",\r\n                  boxShadow: \"none\",\r\n                }}\r\n              >\r\n                <Nav>\r\n                  <Nav.Link\r\n                    className=\"nav-link-2\"\r\n                    eventKey=\"balance\"\r\n                    href=\"/balance\"\r\n                    style={{\r\n                      fontWeight:\r\n                        window.location.pathname === \"/balance\"\r\n                          ? \"bold\"\r\n                          : \"normal\",\r\n                    }}\r\n                  >\r\n                    {t(\"Balance\")}\r\n                  </Nav.Link>\r\n                </Nav>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                  <Nav className=\"mr-auto\">\r\n                    {accountNumber !== null && (\r\n                      <>\r\n                        <Nav.Link\r\n                          className=\"nav-link-2\"\r\n                          eventKey=\"transfer\"\r\n                          href=\"/transfer\"\r\n                          style={{\r\n                            fontWeight:\r\n                              window.location.pathname === \"/transfer\"\r\n                                ? \"bold\"\r\n                                : \"normal\",\r\n                          }}\r\n                        >\r\n                          {t(\"Transfer\")}\r\n                        </Nav.Link>\r\n                        <Nav.Link\r\n                          className=\"nav-link-2\"\r\n                          eventKey=\"my-business\"\r\n                          href=\"#\"\r\n                          onClick={() => getBusinesses(1)}\r\n                          style={{\r\n                            fontWeight:\r\n                              window.location.pathname === \"/my-business\"\r\n                                ? \"bold\"\r\n                                : \"normal\",\r\n                          }}\r\n                        >\r\n                          {t(\"Business\")}\r\n                        </Nav.Link>\r\n\r\n                        {/**\r\n                         * Currency\r\n                         */}\r\n                        {settings !== null &&\r\n                          typeof settings[\"currencies\"] !== \"undefined\" &&\r\n                          (settings[\"currencies\"] === null ||\r\n                            settings[\"currencies\"].length === 0 ||\r\n                            settings[\"currencies\"].length > 1) && (\r\n                            <Nav.Link\r\n                              className=\"nav-link-2\"\r\n                              eventKey=\"currency\"\r\n                              href=\"/currency\"\r\n                              style={{\r\n                                fontWeight:\r\n                                  window.location.pathname === \"/currency\"\r\n                                    ? \"bold\"\r\n                                    : \"normal\",\r\n                              }}\r\n                            >\r\n                              {t(\"Currency\")}\r\n                            </Nav.Link>\r\n                          )}\r\n                      </>\r\n                    )}\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n              </Navbar>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  /**\r\n    * Return\r\n    ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTranslation, Trans } from \"react-i18next\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { AvTimer } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n\r\n//  let time = new Date().toLocaleString();\r\nimport { useInterval } from \"../../utils/useInterval\";\r\nimport { useEventListener } from \"../../utils/useEventListener\";\r\n\r\nimport ModalMessage from \"../modalMessage\";\r\nimport SubmitButton from \"../submitButton\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Constants\r\n     ============================================================================ */\r\n  const minute = 60; // seconds, for testing purposes > 60\r\n\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"IdleTimer\",\r\n    timeout: 5 * minute,\r\n    timestamp: null,\r\n    stage2: 60, // show seconds (vs minutes) in stage 2\r\n    stage3: 20, // show modal message on stage 3\r\n    onTick: () => {},\r\n    onTimerReset: () => {},\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { formatDate } = props.barrelFunctions;\r\n  const { onSessionTimeout } = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation(props.namespace);\r\n\r\n  const [seconds, setSeconds] = useState(props.timeout);\r\n  const [modalMessageShow, setModalMessageShow] = React.useState(false);\r\n\r\n  useInterval(() => {\r\n    // Your custom logic here\r\n\r\n    setSeconds(seconds - 1);\r\n    props.onTick(seconds);\r\n  }, 1000);\r\n\r\n  useEventListener(() => {\r\n    setSeconds(props.timeout);\r\n    props.onTimerReset();\r\n  }, [\"mousedown\", \"click\", \"scroll\", \"keypress\"]); // \"click\",\r\n\r\n  useEffect(() => {\r\n    if (seconds === props.timeout) setModalMessageShow(false);\r\n    if (seconds === props.stage3) setModalMessageShow(true);\r\n    if (seconds === 0) onSessionTimeout();\r\n\r\n    // eslint-disable-next-line\r\n  }, [seconds]);\r\n\r\n  // useEffect(() => {\r\n  //   setSeconds(props.timeout);\r\n  //   props.onTimerReset();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [session]);\r\n\r\n  const getJSX = () => {\r\n    let currTime;\r\n    if (seconds > props.stage2) currTime = Math.ceil(seconds / minute);\r\n    else currTime = seconds;\r\n\r\n    const timeFormatted = formatDate(new Date(1970, 1, 1, 0, 0, currTime), {\r\n      minute: \"numeric\",\r\n      second: \"numeric\",\r\n    });\r\n\r\n    const onSessionContinue = () => {\r\n      // console.log(\"onSessionContinue\");\r\n      setSeconds(props.timeout);\r\n      setModalMessageShow(false);\r\n    };\r\n\r\n    const modalMessage = (\r\n      <>\r\n        <Trans\r\n          i18nKey=\"IdleTimer:Automatic logout\"\r\n          timeFormatted={timeFormatted}\r\n        >\r\n          <div className=\"text-center\">Automatic logout in</div>\r\n          <div\r\n            className=\"text-center\"\r\n            style={{ fontSize: \"4em\", fontWeight: \"bold\", color: \"#A93226\" }}\r\n          >\r\n            {{ timeFormatted }}\r\n          </div>\r\n          <div className=\"text-center\">\r\n            Do you want to continue the session?\r\n          </div>\r\n        </Trans>\r\n        <br />\r\n        <SubmitButton\r\n          {...args}\r\n          caption={t(\"Continue now\")}\r\n          request=\"continue session\"\r\n          onSubmit={onSessionContinue}\r\n          namespace={props.namespace}\r\n        />\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <ModalMessage\r\n          show={modalMessageShow}\r\n          message={modalMessage}\r\n          onHide={() => setModalMessageShow(false)}\r\n        />\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip>\r\n              {seconds > props.stage2 ? (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Minutes to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  minutes.\r\n                </Trans>\r\n              ) : (\r\n                <Trans\r\n                  i18nKey=\"IdleTimer:Seconds to automatical log out\"\r\n                  currTime={currTime}\r\n                >\r\n                  You will be automatically logged out in {{ currTime }}{\" \"}\r\n                  seconds.\r\n                </Trans>\r\n              )}\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <div style={{ whiteSpace: \"nowrap\", cursor: \"default\" }}>\r\n            <AvTimer\r\n              style={{\r\n                fontSize: \"1.2rem\",\r\n                paddingBottom: \"0.2rem\",\r\n                color: \"var(--dark)\",\r\n              }}\r\n            />\r\n            &nbsp;\r\n            {seconds > props.stage2 ? (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:minutes\" currTime={currTime}>\r\n                    {{ currTime }} minutes\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:min\" currTime={currTime}>\r\n                    {{ currTime }} min\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"d-none d-sm-inline text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:seconds\" currTime={currTime}>\r\n                    {{ currTime }} seconds\r\n                  </Trans>\r\n                </span>\r\n                <span className=\"d-inline d-sm-none text-muted\">\r\n                  <Trans i18nKey=\"IdleTimer:sec\" currTime={currTime}>\r\n                    <span>{{ currTime }}</span> sec\r\n                  </Trans>\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </OverlayTrigger>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * User CSS\r\n ============================================================================ */\r\nimport \"./Article.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\nimport Breadcrumb from \"../breadcrumb\";\r\nimport SubmitButton from \"../submitButton\";\r\nimport Search from \"../search\";\r\nimport HelpMenuLevel2 from \"../helpMenuLevel2\";\r\nimport FileLoader from \"../fileLoader\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nconst Article = (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Article\", searchable: false };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { helpPath1, helpPath2, helpPath3 } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const refFeedbackSubmit = React.createRef();\r\n  const refFeedbackThanks = React.createRef();\r\n\r\n  const navigation = [\r\n    {\r\n      name: t(\"Help Articles\"),\r\n      link: \"#helpArticles\",\r\n    },\r\n    {\r\n      name: t(\"Community Posts\"),\r\n      link: \"#communityPosts\",\r\n    },\r\n  ];\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    const topicPath = \"/help/topic\";\r\n\r\n    return (\r\n      <Card title={t(\"Help center\")} border={0} maxWidthBody=\"100%\">\r\n        <Container fluid>\r\n          {/**\r\n           * Search\r\n           */}\r\n          {props.searchable && (\r\n            <Row>\r\n              <Col>\r\n                <div className=\"header-text\">\r\n                  <h1>{t(\"How can we help?\")}</h1>\r\n                </div>\r\n                <div style={{ textAlign: \"center\", margin: \"0 0 35px 0\" }}>\r\n                  <div\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      width: \"100%\",\r\n                      maxWidth: \"600px\",\r\n                    }}\r\n                  >\r\n                    <Search\r\n                      {...args}\r\n                      placeholder={t(\"Ask a question or search by keyword\")}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n\r\n          {/**\r\n           * Help categories\r\n           */}\r\n          <Row>\r\n            <Col xl={4} style={{}}>\r\n              <HelpMenuLevel2 {...args} />\r\n            </Col>\r\n            <Col xl={8} style={{}}>\r\n              <Breadcrumb\r\n                names={[t(helpPath1), t(helpPath2), t(helpPath3)]}\r\n                links={[\r\n                  `${topicPath}/${helpPath1}`,\r\n                  `${topicPath}/${helpPath2}`,\r\n                  `${topicPath}/${helpPath2}#${helpPath3}`,\r\n                ]}\r\n              />\r\n\r\n              <FileLoader\r\n                {...args}\r\n                path3=\"articles\"\r\n                defaultFile=\"i-forgot-my-password-how-do-i-reset-it.js\"\r\n              />\r\n\r\n              {/**\r\n               * Did this help?\r\n               */}\r\n              <hr />\r\n\r\n              <div ref={refFeedbackSubmit} style={{ display: \"block\" }}>\r\n                <p className=\"feedback-heading\">{t(\"Did this help?\")}</p>\r\n                <div\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    maxWidth: \"50px\",\r\n                    marginRight: \"10px\",\r\n                  }}\r\n                >\r\n                  <SubmitButton\r\n                    {...args}\r\n                    caption={t(\"Yes\")}\r\n                    request=\"did this help\"\r\n                    namespace={props.namespace}\r\n                    classButton=\"feedback-button\"\r\n                    type=\"button\"\r\n                    onSubmit={() => {\r\n                      refFeedbackSubmit.current.style.display = \"none\";\r\n                      refFeedbackThanks.current.style.display = \"block\";\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div style={{ display: \"inline-block\", maxWidth: \"50px\" }}>\r\n                  <SubmitButton\r\n                    {...args}\r\n                    caption={t(\"No\")}\r\n                    request=\"did this help\"\r\n                    namespace={props.namespace}\r\n                    classButton=\"feedback-button\"\r\n                    type=\"button\"\r\n                    onSubmit={() => {\r\n                      refFeedbackSubmit.current.style.display = \"none\";\r\n                      refFeedbackThanks.current.style.display = \"block\";\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div ref={refFeedbackThanks} style={{ display: \"none\" }}>\r\n                <p className=\"feedback-heading\">\r\n                  {t(\"Thank you for your feedback.\")}\r\n                </p>\r\n              </div>\r\n\r\n              {/**\r\n               * Related Topics\r\n               */}\r\n              <Card\r\n                title={t(\"Related topics\")}\r\n                navigation={navigation}\r\n                headerPadding=\"20px 0 10px 0\"\r\n                bodyPadding=\"20px 0 10px 0\"\r\n                border={0}\r\n                maxWidthBody=\"100%\"\r\n                cardTitleClass=\"related-topics-heading\"\r\n              >\r\n                <p>\r\n                  <a href=\"/help/article/i-forgot-my-password\">\r\n                    I forgot my password. How do I reset it?\r\n                  </a>\r\n                </p>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n\r\nexport default Article;\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Breadcrumb.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Breadcrumb\", names: \"\", links: \"\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  // const arrItems = props.items.split(\"|\");\r\n  // const arrItems = props.items;\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    let key = 0;\r\n    return (\r\n      <Breadcrumb style={{}}>\r\n        {props.names.map((name, index) => {\r\n          key++;\r\n          return name !== \"\" ? (\r\n            <Breadcrumb.Item key={key} href={props.links[index]}>\r\n              {name}\r\n            </Breadcrumb.Item>\r\n          ) : (\r\n            \"\"\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\nimport Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n ============================================================================ */\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = { namespace: \"Component\" }; // TODO: adjust namespace\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Functions\r\n   ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <Card\r\n        backgroundHeader=\"Transparent\"\r\n        backgroundBody=\"Transparent\"\r\n        border=\"0\"\r\n        align=\"left\"\r\n        maxWidth=\"700px\"\r\n        header={false}\r\n      >\r\n        test\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Leads.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect, lazy } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n    * User imports\r\n    ============================================================================ */\r\nimport Alert from \"../alert\";\r\nimport LanguageSelector from \"../language-selector\";\r\nimport FileLoader from \"../fileLoader\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n      * Default Properties\r\n      ============================================================================ */\r\n  let defaults = { namespace: \"Leads\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const { signedIn, language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n      * Destructured vars\r\n      ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n  // const appClass = \"App\";\r\n\r\n  /**\r\n      * Functions\r\n      ============================================================================ */\r\n  const getJSX = () => {\r\n    let leadFile;\r\n    switch (window.location.pathname) {\r\n      case \"/\":\r\n      case \"/sign-in\":\r\n        leadFile = \"LeadHome.js\";\r\n        break;\r\n\r\n      case \"/sign-up\":\r\n        leadFile = \"LeadSignUp.js\";\r\n        break;\r\n\r\n      case \"/auth\":\r\n        leadFile = \"LeadAuth.js\";\r\n        break;\r\n\r\n      case \"/transfer\":\r\n        leadFile = \"Transfer.js\";\r\n        break;\r\n\r\n      // case \"/transfer/u2s\":\r\n      //   leadFile = \"TransferU2S.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2u\":\r\n      //   leadFile = \"TransferU2U.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2b\":\r\n      //   leadFile = \"TransferU2B.js\";\r\n      //   break;\r\n\r\n      default:\r\n        leadFile = \"_LeadDefault.js\";\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className={appClass} style={{ padding: \"0 0% 0 0%\" }}>\r\n        {/**\r\n         * Wrapper for the main window\r\n         */}\r\n        <div className={wrapperClass} style={{}}>\r\n          {/**\r\n           * Top margin of the main window (only for >= sm)\r\n           */}\r\n          <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n\r\n          {/**\r\n           * The main window\r\n           */}\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              background: \"Transparent\",\r\n              boxShadow: \"none\",\r\n              padding: \"0 15px\",\r\n            }}\r\n          >\r\n            <FileLoader\r\n              {...args}\r\n              path3=\"leads\"\r\n              file={leadFile}\r\n              defaultFile=\"LeadLogIn.js\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n      * Return\r\n      ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Toasts.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect, lazy } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport ErrorBoundary from \"../errorBoundary\";\r\n\r\n/**\r\n    * User imports\r\n    ============================================================================ */\r\nimport Alert from \"../alert\";\r\nimport LanguageSelector from \"../language-selector\";\r\nimport FileLoader from \"../fileLoader\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n      * Default Properties\r\n      ============================================================================ */\r\n  let defaults = { namespace: \"Toasts\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n      * Barrels\r\n      ============================================================================ */\r\n  const { signedIn, language } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n      * Destructured vars\r\n      ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n  // const appClass = \"App\";\r\n\r\n  /**\r\n      * Functions\r\n      ============================================================================ */\r\n  const getJSX = () => {\r\n    let fileName;\r\n    switch (window.location.pathname) {\r\n      case \"/\":\r\n      case \"/sign-in\":\r\n        fileName = \"ToastHome.js\";\r\n        break;\r\n\r\n      case \"/sign-up\":\r\n        fileName = \"ToastSignUp.js\";\r\n        break;\r\n\r\n      case \"/auth\":\r\n        fileName = \"ToastAuth.js\";\r\n        break;\r\n\r\n      // case \"/transfer\":\r\n      //   fileName = \"Transfer.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2s\":\r\n      //   fileName = \"TransferU2S.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2u\":\r\n      //   fileName = \"TransferU2U.js\";\r\n      //   break;\r\n\r\n      // case \"/transfer/u2b\":\r\n      //   fileName = \"TransferU2B.js\";\r\n      //   break;\r\n\r\n      default:\r\n        fileName = \"_ToastDefault.js\";\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={appClass}\r\n        style={{\r\n          padding: \"0 0% 0 0%\",\r\n        }}\r\n      >\r\n        {/**\r\n         * Wrapper for the main window\r\n         */}\r\n        <div className={wrapperClass} style={{}}>\r\n          {/** overflowY: \"auto\", maxHeight: \"100vh\" */}\r\n          {/**\r\n           * Top margin of the main window (only for >= sm)\r\n           */}\r\n          <div className=\"d-none d-md-block\" style={{ height: \"1rem\" }}></div>\r\n          {/**\r\n           * The main window\r\n           */}\r\n          <div\r\n            className=\"\"\r\n            style={{\r\n              background: \"Transparent\",\r\n              boxShadow: \"none\",\r\n              padding: \"0 15px\",\r\n            }}\r\n          >\r\n            <FileLoader\r\n              {...args}\r\n              file={fileName}\r\n              path3=\"toasts\"\r\n              defaultFile=\"_ToastDefault.js\"\r\n            />\r\n\r\n            {/**\r\n             * Footer\r\n             */}\r\n            {false && (\r\n              <div className=\"text-center\">\r\n                <span style={{}}>\r\n                  <LanguageSelector {...args} />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n      * Return\r\n      ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Build } from \"@material-ui/icons\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"UnderConstruction\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          {/** Left column */}\r\n          <Col xl={4} lg={6} className=\"d-none d-lg-block\" style={{}}></Col>\r\n\r\n          {/** Middle column */}\r\n          <Col\r\n            lg={6}\r\n            md={12}\r\n            style={{ padding: \"40px 0 0 0\", backgroundColor: \"Transparent\" }}\r\n          >\r\n            <center>\r\n              <h3>\r\n                <Build style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n                <br />\r\n                <br />\r\n                {t(\"We are constructing\")}\r\n                <br />\r\n                <br />\r\n              </h3>\r\n            </center>\r\n          </Col>\r\n\r\n          {/** Right column */}\r\n          <Col\r\n            className=\"d-none d-xl-block\"\r\n            style={{ paddingLeft: 0, paddingRight: 0 }}\r\n          ></Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { PowerOff } from \"@material-ui/icons\";\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"NotConnected\" };\r\n\r\n  /**\r\n      * Properties\r\n      ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n    * Destructured vars\r\n    ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  return (\r\n    <>\r\n      <h3>\r\n        <PowerOff style={{ color: \"var(--dark)\", fontSize: \"3rem\" }} />\r\n        <br />\r\n        <br />\r\n        {t(\"Not connected\")}\r\n        <br />\r\n        <br />\r\n      </h3>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * CSS\r\n ============================================================================ */\r\nimport \"./Loading.css\";\r\n\r\n/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\n/**\r\n * User imports\r\n ============================================================================ */\r\n\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Loading\" };\r\n\r\n  /**\r\n        * Properties\r\n        ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  //   const barrels = DispatcherSkeleton();\r\n\r\n  //\r\n  return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          {/** Left column */}\r\n          <Col xl={4} lg={6} className=\"d-none d-lg-block\" style={{}}>\r\n            {/** Left column */}\r\n          </Col>\r\n\r\n          {/** Middle column */}\r\n          <Col\r\n            lg={6}\r\n            md={12}\r\n            style={{\r\n              padding: 0,\r\n              backgroundColor: \"Transparent\",\r\n              textAlign: \"center\",\r\n              paddingTop: \"3rem\",\r\n            }}\r\n          >\r\n            <div className=\"lds-ellipsis\">\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n              <div></div>\r\n            </div>\r\n          </Col>\r\n\r\n          {/** Right column */}\r\n          <Col\r\n            className=\"d-none d-xl-block\"\r\n            style={{ paddingLeft: 0, paddingRight: 0 }}\r\n          >\r\n            {/** Right column */}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","/**\r\n * System imports\r\n */\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport moment from \"moment\";\r\nimport {\r\n  // BrowserRouter as Router,\r\n  // Switch,\r\n  // Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\n/**\r\n * User imports\r\n */\r\nimport i18n from \"./translations/i18n\";\r\nimport config from \"./utils/config\";\r\nimport { useStickyState } from \"./utils/state\";\r\nimport Main from \"./components/main\";\r\nimport UnderConstruction from \"./components/underConstruction\";\r\nimport NotConnected from \"./components/notConnected\";\r\n\r\nimport {\r\n  useSocket,\r\n  useSystemSocket,\r\n  sendData,\r\n  startSession,\r\n  endSession,\r\n} from \"./utils/sockets\";\r\n// import { useInterval } from \"./utils/useInterval\";\r\n// import { useTimeout } from \"./utils/useTimeout\";\r\nimport requestHandler from \"./utils/requestHandler\";\r\nimport userErrorHandler from \"./utils/userErrorHandler\";\r\nimport userResponseHandler from \"./utils/userResponseHandler\";\r\nimport systemErrorHandler from \"./utils/systemErrorHandler\";\r\nimport systemResponseHandler from \"./utils/systemResponseHandler\";\r\nimport Loading from \"./components/loading\";\r\n\r\n/**\r\n * Component: Dispatcher\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Dispatcher\" };\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Destructured vars\r\n   ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]);\r\n\r\n  /**\r\n   * Module vars\r\n   ============================================================================ */\r\n  const now = new Date();\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const isLocalhost =\r\n    window.location.hostname === \"localhost\" ||\r\n    window.location.hostname === \"127.0.0.1\";\r\n\r\n  /** \r\n   * Hooks\r\n   ============================================================================ */\r\n  const [debug, setDebug] = useState(\r\n    isLocalhost || config.uri.SITEMODE === \"STAGING\"\r\n  );\r\n  const [loggingOut, setLoggingOut] = useState(false);\r\n  const [loggingIn, setLoggingIn] = useState(false);\r\n  const [pageLoading, setPageLoading] = useState(true);\r\n  const [request, setRequest] = useStickyState(null, \"request\");\r\n  const [serverResponseReceived, setServerResponseReceived] = useStickyState(\r\n    null,\r\n    \"serverResponseReceived\"\r\n  );\r\n  const [requestTimedOut, setRequestTimedOut] = useStickyState(\r\n    false,\r\n    \"requestTimedOut\"\r\n  );\r\n  const [instance, setInstance] = useState(Date.now());\r\n  const [session, setSession] = useStickyState(uuidv4(), \"session\");\r\n  const [settings, setSettings] = useStickyState(null, \"settings\");\r\n  const [responseProps, setResponseProps] = useStickyState(\r\n    null,\r\n    \"responseProps\"\r\n  );\r\n  const [sessionTimeout, setSessionTimeout] = useStickyState(\r\n    (!debug ? 5 : 120) * 60, // 30 | 5 * 60\r\n    \"sessionTimeout\"\r\n  );\r\n  const [connected, setConnected] = useStickyState(false, \"connected\");\r\n  const [reconnecting, setReconnecting] = useStickyState(false, \"reconnecting\");\r\n  const [ip, setIP] = useStickyState(\"\", \"ip\");\r\n  const [signedIn, setSignedIn] = useStickyState(false, \"signedIn\");\r\n  const [\r\n    dailyAllowanceDispatched,\r\n    setDailyAllowanceDispatched,\r\n  ] = useStickyState(false, \"dailyAllowanceDispatched\");\r\n  // const [isExternalRequest, setIsExternalRequest] = useStickyState(\r\n  //   false,\r\n  //   \"isExternalRequest\"\r\n  // );\r\n  const [cartID, setCartID] = useStickyState(null, \"cartID\");\r\n  const [cartContent, setCartContent] = useStickyState(null, \"cartContent\");\r\n  const [cartProps, setCartProps] = useStickyState(null, \"cartProps\");\r\n  const [cartProcessingStatus, setCartProcessingStatus] = useStickyState(\r\n    null,\r\n    \"cartProcessingStatus\"\r\n  );\r\n  const [updateInterval, setUpdateInterval] = useStickyState(\r\n    -1,\r\n    \"updateInterval\"\r\n  );\r\n  const [currencyAbbr, setCurrencyAbbr] = useStickyState(\"Z\", \"currencyAbbr\");\r\n  const [currencyRate, setCurrencyRate] = useStickyState(1.0, \"currencyRate\");\r\n  const [currencies, setCurrencies] = useStickyState(null, \"currencies\");\r\n  const [transactions, setTransactions] = useStickyState(null, \"transactions\");\r\n  const [shares, setShares] = useStickyState(null, \"shares\");\r\n  const [accordionView, setAccordionView] = useStickyState(\r\n    \"balance\",\r\n    \"accordionView\"\r\n  );\r\n  const [accordionViewCurrency, setAccordionViewCurrency] = useStickyState(\r\n    null,\r\n    \"accordionViewCurrency\"\r\n  );\r\n  const [countCurrencies, setCountCurrencies] = useStickyState(\r\n    null,\r\n    \"countCurrencies\"\r\n  );\r\n  const [countTransactions, setCountTransactions] = useStickyState(\r\n    null,\r\n    \"countTransactions\"\r\n  );\r\n  const [countShares, setCountShares] = useStickyState(null, \"countShares\");\r\n  const [activePageCurrencies, setActivePageCurrencies] = useStickyState(\r\n    1,\r\n    \"activePageCurrencies\"\r\n  );\r\n  const [activePageTransactions, setActivePageTransactions] = useStickyState(\r\n    1,\r\n    \"activePageTransactions\"\r\n  );\r\n  const [activePageShares, setActivePageShares] = useStickyState(\r\n    1,\r\n    \"activePageShares\"\r\n  );\r\n  const [currenciesPerPage, setCurrenciesPerPage] = useStickyState(\r\n    5,\r\n    \"currenciesPerPage\"\r\n  );\r\n  const [transactionsPerPage, setTransactionsPerPage] = useStickyState(\r\n    5,\r\n    \"transactionsPerPage\"\r\n  );\r\n  const [sharesPerPage, setSharesPerPage] = useStickyState(5, \"sharesPerPage\");\r\n  const [userData, setUserData] = useStickyState(null, \"userData\");\r\n  const [uid, setUID] = useStickyState(null, \"uid\");\r\n  const [accountNumber, setAccountNumber] = useStickyState(\r\n    null,\r\n    \"accountNumber\"\r\n  );\r\n  const [userSequence, setUserSequence] = useStickyState(null, \"userSequence\");\r\n  const [accountType, setAccountType] = useStickyState(null, \"accountType\");\r\n  const [userBusinesses, setUserBusinesses] = useStickyState(\r\n    null,\r\n    \"userBusinesses\"\r\n  );\r\n  const [countBusinesses, setCountBusinesses] = useStickyState(\r\n    null,\r\n    \"countBusinesses\"\r\n  );\r\n  const [businessesPerPage, setBusinessesPerPage] = useStickyState(\r\n    1,\r\n    \"businessesPerPage\"\r\n  );\r\n  const [activePageBusinesses, setActivePageBusinesses] = useStickyState(\r\n    1,\r\n    \"activePageBusinesses\"\r\n  );\r\n  const [userBusinessesLoaded, setUserBusinessesLoaded] = useStickyState(\r\n    false,\r\n    \"userBusinessesLoaded\"\r\n  );\r\n  const [activeBusiness, setActiveBusiness] = useStickyState(\r\n    null,\r\n    \"activeBusiness\"\r\n  );\r\n  const [activeBusinessID, setActiveBusinessID] = useStickyState(\r\n    null,\r\n    \"activeBusinessID\"\r\n  );\r\n\r\n  const [businessPurposes, setBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"businessPurposes\"\r\n  );\r\n\r\n  const [cartPurposes, setCartPurposes] = useStickyState(null, \"cartPurposes\");\r\n\r\n  const [countBusinessPurposes, setCountBusinessPurposes] = useStickyState(\r\n    null,\r\n    \"countBusinessPurposes\"\r\n  );\r\n  const [businessPurposesPerPage, setBusinessPurposesPerPage] = useStickyState(\r\n    5,\r\n    \"businessPurposesPerPage\"\r\n  );\r\n  const [\r\n    activePageBusinessPurposes,\r\n    setActivePageBusinessPurposes,\r\n  ] = useStickyState(1, \"activePageBusinessPurposes\");\r\n\r\n  const [activeBusinesPurpose, setActiveBusinesPurpose] = useStickyState(\r\n    null,\r\n    \"activeBusinesPurpose\"\r\n  );\r\n\r\n  const [activePurposeData, setActivePurposeData] = useStickyState(\r\n    null,\r\n    \"activePurposeData\"\r\n  );\r\n\r\n  const [activePurposeProperty, setActivePurposeProperty] = useStickyState(\r\n    null,\r\n    \"activePurposeProperty\"\r\n  );\r\n\r\n  const [purposeShareholders, setPurposeShareholders] = useStickyState(\r\n    null,\r\n    \"purposeShareholders\"\r\n  );\r\n\r\n  const [clearRefs, setClearRefs] = useStickyState(false, \"clearRefs\");\r\n\r\n  /**\r\n   * Log in\r\n   */\r\n  const [logInEmail, setLogInEmail] = useStickyState(\"\", \"logInEmail\");\r\n  const [logInPassword, setLogInPassword] = useStickyState(\"\", \"logInPassword\");\r\n\r\n  /**\r\n   * Sign Up\r\n   */\r\n  const [signUpFirstName, setSignUpFirstName] = useStickyState(\r\n    \"\",\r\n    \"signUpFirstName\"\r\n  );\r\n  const [signUpLastName, setSignUpLastName] = useStickyState(\r\n    \"\",\r\n    \"signUpLastName\"\r\n  );\r\n  const [signUpEmail, setSignUpEmail] = useStickyState(\"\", \"signUpEmail\");\r\n  const [signUpPassword, setSignUpPassword] = useStickyState(\r\n    \"\",\r\n    \"signUpPassword\"\r\n  );\r\n\r\n  /**\r\n   * Transactions\r\n   */\r\n  const [dateRangeStart, setDateRangeStart] = useStickyState(\r\n    now.setDate(now.getDate() - 7), // new Date().fp_incr(-7),\r\n    \"dateRangeStart\"\r\n  );\r\n  const [dateRangeEnd, setDateRangeEnd] = useStickyState(\r\n    \"today\",\r\n    \"dateRangeEnd\"\r\n  );\r\n\r\n  /**\r\n   * Business registration\r\n   */\r\n  const [\r\n    businessRegistrationAddTitle,\r\n    setBusinessRegistrationAddTitle,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddTitle\");\r\n  const [\r\n    businessRegistrationAddDescription,\r\n    setBusinessRegistrationAddDescription,\r\n  ] = useStickyState(\"\", \"businessRegistrationAddDescription\");\r\n\r\n  /**\r\n   * Purpose registration\r\n   */\r\n  const [\r\n    purposeRegistrationTitle,\r\n    setPurposeRegistrationTitle,\r\n  ] = useStickyState(\"\", \"purposeRegistrationTitle\");\r\n  const [\r\n    purposeRegistrationDescription,\r\n    setPurposeRegistrationDescription,\r\n  ] = useStickyState(\"\", \"purposeRegistrationDescription\");\r\n  const [\r\n    purposeRegistrationKeywords,\r\n    setPurposeRegistrationKeywords,\r\n  ] = useStickyState(\"\", \"purposeRegistrationKeywords\");\r\n\r\n  /**\r\n   * User editor\r\n   */\r\n  const [userEditorEditFirstname, setUserEditorEditFirstname] = useStickyState(\r\n    false,\r\n    \"userEditorEditFirstname\"\r\n  );\r\n  const [userEditorFirstname, setUserEditorFirstname] = useStickyState(\r\n    \"\",\r\n    \"userEditorFirstname\"\r\n  );\r\n  const [userEditorEditLastname, setUserEditorEditLastname] = useStickyState(\r\n    false,\r\n    \"userEditorEditLastname\"\r\n  );\r\n  const [userEditorLastname, setUserEditorLastname] = useStickyState(\r\n    \"\",\r\n    \"userEditorLastname\"\r\n  );\r\n  const [userEditorEditEmail, setUserEditorEditEmail] = useStickyState(\r\n    false,\r\n    \"userEditorEditEmail\"\r\n  );\r\n  const [userEditorEmail, setUserEditorEmail] = useStickyState(\r\n    \"\",\r\n    \"userEditorEmail\"\r\n  );\r\n  const [userEditorEditPassword, setUserEditorEditPassword] = useStickyState(\r\n    false,\r\n    \"userEditorEditPassword\"\r\n  );\r\n  const [userEditorPassword, setUserEditorPassword] = useStickyState(\r\n    \"\",\r\n    \"userEditorPassword\"\r\n  );\r\n  const [\r\n    userEditorPasswordVisible,\r\n    setUserEditorPasswordVisible,\r\n  ] = useStickyState(false, \"userEditorPasswordVisible\");\r\n  const [\r\n    userEditorSubmitButtonVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n  ] = useStickyState(false, \"userEditorSubmitButtonVisible\");\r\n\r\n  /**\r\n   * Password reset\r\n   */\r\n  const [passwordResetEmail, setPasswordResetEmail] = useStickyState(\r\n    \"\",\r\n    \"passwordResetEmail\"\r\n  );\r\n\r\n  /**\r\n   * TAN input\r\n   */\r\n  const [tanInputTAN, setTanInputTAN] = useStickyState(\"\", \"tanInputTAN\");\r\n\r\n  /**\r\n   * Search\r\n   */\r\n  const [search, setSearch] = useStickyState(\"\", \"search\");\r\n  const [searchTransactions, setSearchTransactions] = useStickyState(\r\n    \"\",\r\n    \"searchTransactions\"\r\n  );\r\n  const [searchPurposes, setSearchPurposes] = useStickyState(\r\n    \"\",\r\n    \"searchPurposes\"\r\n  );\r\n  const [searchShares, setSearchShares] = useStickyState(\"\", \"searchShares\");\r\n\r\n  /**\r\n   * Misc\r\n   */\r\n\r\n  // const [businessLoaded, setBusinessLoaded] = useState(null);\r\n  // const [redirect, setRedirect] = useState(false);\r\n  const [redirectTo, setRedirectTo] = useState(null);\r\n  const [lastInsertId, setLastInsertId] = useState(null);\r\n  // const [responseData, setResponseData] = useState(null);\r\n\r\n  const [validateTokenEmail, setValidateTokenEmail] = useState(null);\r\n  const [validateTokenPasswordReset, setValidateTokenPasswordReset] = useState(\r\n    null\r\n  );\r\n\r\n  /**\r\n   * User changed the email address; must log out and show the validation dialog\r\n   */\r\n  const [emailChanged, setEmailChanged] = useStickyState(false, \"emailChanged\"); //\r\n\r\n  const [\r\n    passwordResetTokenValidated,\r\n    setPasswordResetTokenValidated,\r\n  ] = useState(null);\r\n  const [passwordResetTokenEmail, setPasswordResetTokenEmail] = useState(null);\r\n\r\n  // const [tmrConnected] = useState(null);\r\n  const [validationTokenEmail, setValidationTokenEmail] = useStickyState(\r\n    null,\r\n    \"validationTokenEmail\"\r\n  ); //\r\n  const [\r\n    validationTokenEmailResent,\r\n    setValidationTokenEmailResent,\r\n  ] = useStickyState(0, \"validationTokenEmailResent\"); //\r\n  const [language, setLanguage] = useStickyState(\r\n    i18n.options.fallbackLng[0],\r\n    \"language\"\r\n  ); //\r\n  const [transferType, setTransferType] = useStickyState(\r\n    \"#u2s\",\r\n    \"transferType\"\r\n  );\r\n  const [transferRequest, setTransferRequest] = useStickyState(\r\n    null,\r\n    \"transferRequest\"\r\n  );\r\n  const [transferFromAccount, setTransferFromAccount] = useStickyState(\r\n    \"\",\r\n    \"transferFromAccount\"\r\n  );\r\n  const [transferToAccount, setTransferToAccount] = useStickyState(\r\n    \"\",\r\n    \"transferToAccount\"\r\n  );\r\n  const [transferAmount, setTransferAmount] = useStickyState(\r\n    \"\",\r\n    \"transferAmount\"\r\n  );\r\n  const [transferToUID, setTransferToUID] = useStickyState(\"\", \"transferToUID\");\r\n  const [transferToPurpose, setTransferToPurpose] = useStickyState(\r\n    \"\",\r\n    \"transferToPurpose\"\r\n  );\r\n  const [transferDescription, setTransferDescription] = useStickyState(\r\n    \"\",\r\n    \"transferDescription\"\r\n  );\r\n  const [contactSubject, setContactSubject] = useStickyState(\r\n    \"\",\r\n    \"contactSubject\"\r\n  );\r\n  const [contactMessage, setContactMessage] = useStickyState(\r\n    \"\",\r\n    \"contactMessage\"\r\n  );\r\n  const [userBirthYear, setUserBirthYear] = useStickyState(\"\", \"userBirthYear\");\r\n  const [userBirthMonth, setUserBirthMonth] = useStickyState(\r\n    \"\",\r\n    \"userBirthMonth\"\r\n  );\r\n  const [userBirthDay, setUserBirthDay] = useStickyState(\"\", \"userBirthDay\");\r\n  const [userBirthDateError, setUserBirthDateError] = useState(\r\n    \"\",\r\n    \"userBirthDateError\"\r\n  );\r\n  const [userTimezone, setUserTimezone] = useStickyState(\"\", \"userTimezone\");\r\n\r\n  const [currencyCode, setCurrencyCode] = useStickyState(\"\", \"currencyCode\");\r\n  const [currencyName, setCurrencyName] = useStickyState(\"\", \"currencyName\");\r\n  const [currencyRegion, setCurrencyRegion] = useStickyState(\r\n    \"\",\r\n    \"currencyRegion\"\r\n  );\r\n  const [currencyNewRate, setCurrencyNewRate] = useStickyState(\r\n    1.0,\r\n    \"currencyNewRate\"\r\n  );\r\n\r\n  /**\r\n   * Help topics and articles\r\n   */\r\n  const [\r\n    articleFeedbackSubmitted,\r\n    setArticleFeedbackSubmitted,\r\n  ] = useStickyState(false, \"articleFeedbackSubmitted\");\r\n  const [scrollPositionY, setScrollPositionY] = useStickyState(\r\n    0,\r\n    \"scrollPositionY\"\r\n  );\r\n  const [helpPath1, setHelpPath1] = useStickyState(\"#personal\", \"helpPath1\");\r\n  const [helpPath2, setHelpPath2] = useStickyState(\r\n    \"common-questions\",\r\n    \"helpPath2\"\r\n  );\r\n  const [helpPath3, setHelpPath3] = useStickyState(\"\", \"helpPath3\");\r\n\r\n  // const [hideOnScroll, setHideOnScroll] = useStickyState(true, \"hideOnScroll\");\r\n\r\n  const [tanRequired, setTanRequired] = useStickyState(false, \"tanRequired\");\r\n  // const [transferSuccess, setTransferSuccess] = useStickyState(\r\n  //   false,\r\n  //   \"transferSuccess\"\r\n  // );\r\n  const [accountPhotoPath, setAccountPhotoPath] = useState(\"\");\r\n  const [error, setError] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  const [info, setInfo] = useState(null); // DO NOT CHANGE TO useStickyState !!\r\n  // const [alertVisible, setAlertVisible] = useState(false);\r\n\r\n  // const gotEvent = useEventListener();\r\n  // console.log(gotEvent);\r\n\r\n  /**\r\n   * Barrel: Getters\r\n   */\r\n  const barrelGetters = {\r\n    debug,\r\n    // instance,\r\n    loggingOut,\r\n    loggingIn,\r\n    // timestamp,\r\n    // startTimestamp,\r\n    pageLoading,\r\n    request,\r\n    serverResponseReceived,\r\n    requestTimedOut,\r\n    // requestTS,\r\n    instance,\r\n    responseProps: JSON.parse(responseProps),\r\n    // deleteResponseProp,\r\n    // lastRequest,\r\n    session,\r\n    // secureSession,\r\n    sessionTimeout,\r\n    // sessionTimeoutApplied,\r\n    settings: JSON.parse(settings),\r\n    ip,\r\n    updateInterval,\r\n    currencies: JSON.parse(currencies),\r\n    transactions: JSON.parse(transactions),\r\n    shares: JSON.parse(shares),\r\n    accordionView,\r\n    accordionViewCurrency,\r\n    countCurrencies,\r\n    countTransactions,\r\n    countShares,\r\n    activePageCurrencies,\r\n    activePageTransactions,\r\n    activePageShares,\r\n    currenciesPerPage,\r\n    transactionsPerPage,\r\n    sharesPerPage,\r\n    userData: JSON.parse(userData),\r\n    // redirect,\r\n    redirectTo,\r\n    lastInsertId,\r\n    connected,\r\n    reconnecting,\r\n    signedIn,\r\n    dailyAllowanceDispatched,\r\n    // isExternalRequest,\r\n    cartID,\r\n    cartContent: JSON.parse(cartContent),\r\n    cartProps: JSON.parse(cartProps),\r\n    cartProcessingStatus,\r\n    currencyAbbr,\r\n    currencyRate,\r\n    // currencyStatus,\r\n    accountNumber,\r\n    userSequence,\r\n    accountType,\r\n    uid,\r\n    userBusinesses: JSON.parse(userBusinesses),\r\n    countBusinesses,\r\n    businessesPerPage,\r\n    activePageBusinesses,\r\n    userBusinessesLoaded,\r\n    activeBusiness,\r\n    activeBusinessID,\r\n    businessPurposes: JSON.parse(businessPurposes),\r\n    cartPurposes: JSON.parse(cartPurposes),\r\n    countBusinessPurposes,\r\n    businessPurposesPerPage,\r\n    activePageBusinessPurposes,\r\n    activeBusinesPurpose,\r\n    activePurposeProperty,\r\n    // purposeID,\r\n    activePurposeData: JSON.parse(activePurposeData),\r\n    purposeShareholders: JSON.parse(purposeShareholders),\r\n    clearRefs,\r\n    logInEmail,\r\n    logInPassword,\r\n    signUpFirstName,\r\n    signUpLastName,\r\n    signUpEmail,\r\n    signUpPassword,\r\n    dateRangeStart,\r\n    dateRangeEnd,\r\n    businessRegistrationAddTitle,\r\n    businessRegistrationAddDescription,\r\n    purposeRegistrationTitle,\r\n    purposeRegistrationDescription,\r\n    // purposeRegistrationCategory,\r\n    // purposeRegistrationSubcategory,\r\n    // purposeRegistrationSubcategory2,\r\n    purposeRegistrationKeywords,\r\n    userEditorEditFirstname,\r\n    userEditorFirstname,\r\n    userEditorEditLastname,\r\n    userEditorLastname,\r\n    userEditorEditEmail,\r\n    userEditorEmail,\r\n    userEditorEditPassword,\r\n    userEditorPassword,\r\n    userEditorPasswordVisible,\r\n    userEditorSubmitButtonVisible,\r\n    passwordResetEmail,\r\n    tanInputTAN,\r\n    search,\r\n    searchTransactions,\r\n    searchPurposes,\r\n    searchShares,\r\n    // businessLoaded,\r\n    tanRequired,\r\n    articleFeedbackSubmitted,\r\n    scrollPositionY,\r\n    helpPath1,\r\n    helpPath2,\r\n    helpPath3,\r\n    // hideOnScroll,\r\n    // tmrConnected,\r\n    validateTokenEmail,\r\n    validateTokenPasswordReset,\r\n    passwordResetTokenValidated,\r\n    passwordResetTokenEmail,\r\n    validationTokenEmail,\r\n    validationTokenEmailResent,\r\n    emailChanged,\r\n    transferRequest: JSON.parse(transferRequest),\r\n    transferFromAccount,\r\n    transferToAccount,\r\n    transferAmount,\r\n    transferToUID,\r\n    transferToPurpose,\r\n    transferDescription,\r\n    contactSubject,\r\n    contactMessage,\r\n    userBirthYear,\r\n    userBirthMonth,\r\n    userBirthDay,\r\n    userBirthDateError,\r\n    userTimezone,\r\n    currencyCode,\r\n    currencyName,\r\n    currencyRegion,\r\n    currencyNewRate,\r\n    language,\r\n    transferType,\r\n    // transferSuccess,\r\n    accountPhotoPath,\r\n    error: JSON.parse(error),\r\n    info: JSON.parse(info),\r\n    // alertVisible,\r\n  };\r\n\r\n  /**\r\n   * Barrel: Setters\r\n   */\r\n  const barrelSetters = {\r\n    setDebug,\r\n    setLoggingOut,\r\n    setLoggingIn,\r\n    // setTimestamp,\r\n    // setStartTimestamp,\r\n    setPageLoading,\r\n    setRequest,\r\n    setServerResponseReceived,\r\n    setRequestTimedOut,\r\n    // setRequestTS,\r\n    setInstance,\r\n    setResponseProps,\r\n    // setDeleteResponseProp,\r\n    // setLastRequest,\r\n    setSession,\r\n    // setSecureSession,\r\n    setSessionTimeout,\r\n    // setSessionTimeoutApplied,\r\n    setSettings,\r\n    setIP,\r\n    setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setAccordionView,\r\n    setAccordionViewCurrency,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setActivePageCurrencies,\r\n    setActivePageTransactions,\r\n    setActivePageShares,\r\n    setCurrenciesPerPage,\r\n    setTransactionsPerPage,\r\n    setSharesPerPage,\r\n    setConnected,\r\n    setReconnecting,\r\n    setLanguage,\r\n    setUserData,\r\n    // sendRequest,\r\n    setSignedIn,\r\n    setDailyAllowanceDispatched,\r\n    // setIsExternalRequest,\r\n    setCartID,\r\n    setCartContent,\r\n    setCartProps,\r\n    setCartProcessingStatus,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setAccountType,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setBusinessesPerPage,\r\n    setActivePageBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setActiveBusiness,\r\n    setActiveBusinessID,\r\n    setBusinessPurposes,\r\n    setCartPurposes,\r\n    setCountBusinessPurposes,\r\n    setBusinessPurposesPerPage,\r\n    setActivePageBusinessPurposes,\r\n    setActiveBusinesPurpose,\r\n    setActivePurposeProperty,\r\n    // setPurposeID,\r\n    setActivePurposeData,\r\n    setPurposeShareholders,\r\n    setClearRefs,\r\n    setLogInEmail,\r\n    setLogInPassword,\r\n    setSignUpFirstName,\r\n    setSignUpLastName,\r\n    setSignUpEmail,\r\n    setSignUpPassword,\r\n    setDateRangeStart,\r\n    setDateRangeEnd,\r\n    setBusinessRegistrationAddTitle,\r\n    setBusinessRegistrationAddDescription,\r\n    setPurposeRegistrationTitle,\r\n    setPurposeRegistrationDescription,\r\n    // setPurposeRegistrationCategory,\r\n    // setPurposeRegistrationSubcategory,\r\n    // setPurposeRegistrationSubcategory2,\r\n    setPurposeRegistrationKeywords,\r\n    setUserEditorEditFirstname,\r\n    setUserEditorFirstname,\r\n    setUserEditorEditLastname,\r\n    setUserEditorLastname,\r\n    setUserEditorEditEmail,\r\n    setUserEditorEmail,\r\n    setUserEditorEditPassword,\r\n    setUserEditorPassword,\r\n    setUserEditorPasswordVisible,\r\n    setUserEditorSubmitButtonVisible,\r\n    setPasswordResetEmail,\r\n    setTanInputTAN,\r\n    setSearch,\r\n    setSearchTransactions,\r\n    setSearchPurposes,\r\n    setSearchShares,\r\n    setError,\r\n    setInfo,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setValidateTokenEmail,\r\n    setValidateTokenPasswordReset,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setEmailChanged,\r\n    setTransferRequest,\r\n    setTransferFromAccount,\r\n    setTransferToAccount,\r\n    setTransferAmount,\r\n    setTransferToUID,\r\n    setTransferToPurpose,\r\n    setTransferDescription,\r\n    setContactSubject,\r\n    setContactMessage,\r\n    setUserBirthYear,\r\n    setUserBirthMonth,\r\n    setUserBirthDay,\r\n    setUserBirthDateError,\r\n    setUserTimezone,\r\n    setCurrencyCode,\r\n    setCurrencyName,\r\n    setCurrencyRegion,\r\n    setCurrencyNewRate,\r\n    setTanRequired,\r\n    setArticleFeedbackSubmitted,\r\n    setScrollPositionY,\r\n    setHelpPath1,\r\n    setHelpPath2,\r\n    setHelpPath3,\r\n    // setHideOnScroll,\r\n  };\r\n\r\n  /** \r\n   * Functions\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * Sends requests to the server\r\n   * @param {string} request Request name\r\n   * @param {object} data Request data\r\n   */\r\n  const sendRequest = ({ req, data = null }) => {\r\n    if (processRequest({ req, data, session, uid: \"STA\", barrels })) {\r\n      // request processed successfully\r\n      setServerResponseReceived(false);\r\n      return true;\r\n    } else {\r\n      console.log(\"THIS SHOULD NEVER BE REACHED\");\r\n      return sendData({ req, uid: \"STA\", session, data }, debug);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Processes user request\r\n   * @param {*} param0\r\n   */\r\n  const processRequest = ({ req, data, session, uid, barrels }) => {\r\n    data.instance = instance;\r\n\r\n    // if (req !== \"update last seen user\") {\r\n    setRequest(req);\r\n    // }\r\n\r\n    return requestHandler({\r\n      req,\r\n      data,\r\n      session,\r\n      uid,\r\n      barrels,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Processes server response\r\n   *\r\n   * Chooses a handler depending on response status:\r\n   * Error or other (success | continue | finished | pending etc.)\r\n   *\r\n   * @param {*} param0\r\n   */\r\n  const processUserResponse = ({ args, barrels }) => {\r\n    return args.status === \"error\"\r\n      ? userErrorHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        })\r\n      : userResponseHandler({\r\n          args: args,\r\n          uid: uid,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  const processSystemResponse = ({ args, barrels }) => {\r\n    // console.log(\"SYSTEM RESPONSE DATA:\", args);\r\n    return args.status === \"error\"\r\n      ? systemErrorHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        })\r\n      : systemResponseHandler({\r\n          args: args,\r\n          barrels: barrels,\r\n        });\r\n  };\r\n\r\n  /**\r\n   * Shows a messgae (error or info)\r\n   *\r\n   * @param {string} msg, Messgae text\r\n   * @param {string} type, Message type (\"error\" | \"info\")\r\n   */\r\n  const showMessage = (msg, type = \"error\", dismissible = true) => {\r\n    type === \"error\"\r\n      ? setError(JSON.stringify({ msg, dismissible }))\r\n      : setInfo(JSON.stringify({ msg, dismissible }));\r\n  };\r\n\r\n  /**\r\n   * Hides the message\r\n   */\r\n  const hideMessage = (type = null) => {\r\n    if (type === \"error\") {\r\n      setError(null);\r\n    } else if (type === \"info\") {\r\n      setInfo(null);\r\n    } else {\r\n      setError(null);\r\n      setInfo(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the object-element of an array\r\n   * @param {object array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const getArrayObject = (array, property, value) => {\r\n    if (array === null) return null;\r\n    return array.find((o) => o[property] === value);\r\n  };\r\n\r\n  /**\r\n   * Returns the current processing status of the request\r\n   * @param {string} req\r\n   */\r\n  const getRequestStatus = (req) => {\r\n    const obj = getArrayObject(barrelGetters.responseProps, \"res\", req);\r\n    if (obj === null) return \"undefined\";\r\n    return typeof obj !== \"undefined\" ? obj.status : \"undefined\";\r\n  };\r\n\r\n  /**\r\n   * Clears the current processing status of the request\r\n   * @param {string} req\r\n   */\r\n  const clearRequestStatus = (req) => {\r\n    deleteObjectArrayElement(barrelGetters.responseProps, \"res\", req);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {*} status\r\n   * @param {*} cnt\r\n   * @param {*} strLoading\r\n   * @param {*} strNotFound\r\n   */\r\n  const showRequestStatus = (\r\n    req,\r\n    cnt,\r\n    strLoading,\r\n    strNotFound,\r\n    finalStatus = \"success\"\r\n  ) => {\r\n    const status = getRequestStatus(req);\r\n    if (status === \"undefined\") return \"\";\r\n\r\n    if (status === \"undefined\" || status !== finalStatus) {\r\n      return <p className=\"text-center text-muted\">{strLoading}</p>;\r\n    } else if (status === finalStatus && cnt === 0) {\r\n      return <p className=\"text-center text-muted\">{strNotFound}</p>;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Changes the website language\r\n   */\r\n  const changeLanguage = (lng) => {\r\n    i18n.changeLanguage(lng);\r\n    setLanguage(lng);\r\n  };\r\n\r\n  const roundTo = (n, digits) => {\r\n    let negative = false;\r\n    if (digits === undefined) {\r\n      digits = 0;\r\n    }\r\n    if (n < 0) {\r\n      negative = true;\r\n      n = n * -1;\r\n    }\r\n    const multiplicator = Math.pow(10, digits);\r\n    n = parseFloat((n * multiplicator).toFixed(11));\r\n    n = (Math.round(n) / multiplicator).toFixed(2);\r\n    if (negative) {\r\n      n = (n * -1).toFixed(2);\r\n    }\r\n    return n;\r\n  };\r\n\r\n  /**\r\n   * Format number\r\n   * @param {number} number\r\n   */\r\n  const format = (number, currency = currencyAbbr, useGrouping = true) => {\r\n    const retIntl = new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n      useGrouping: useGrouping,\r\n    }).format(number * currencyRate);\r\n\r\n    if (parseFloat(number) !== 0 && number.toString().substr(0, 4) === \"0.00\")\r\n      return t(\"micro amount\");\r\n\r\n    return retIntl + \" \" + currency;\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   * @param {number} number\r\n   */\r\n  const formatPerCent = (number) => {\r\n    return (\r\n      new Intl.NumberFormat(language, {\r\n        notation: \"standard\",\r\n        minimumFractionDigits: 0,\r\n        maximumFractionDigits: 2,\r\n      }).format(number) + \"%\"\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Format per cent\r\n   *\r\n   * @param {number} number\r\n   */\r\n  const formatExchangeRate = (number) => {\r\n    return new Intl.NumberFormat(language, {\r\n      notation: \"standard\",\r\n      minimumFractionDigits: 5,\r\n      maximumFractionDigits: 5,\r\n    }).format(number);\r\n  };\r\n\r\n  /**\r\n   * Parses a number according to a locale\r\n   *\r\n   * @param {string} stringNumber\r\n   * @param {string} locale\r\n   */\r\n  const parseLocaleNumber = (stringNumber, locale) => {\r\n    let num = 123456.789,\r\n      fmt_local = new Intl.NumberFormat(locale, {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n      }),\r\n      parts_local = fmt_local.formatToParts(num),\r\n      group = \"\",\r\n      decimal = \"\",\r\n      currency = \"\";\r\n\r\n    // separators\r\n    parts_local.forEach(function (i) {\r\n      switch (i.type) {\r\n        case \"group\":\r\n          group = i.value;\r\n          break;\r\n        case \"decimal\":\r\n          decimal = i.value;\r\n          break;\r\n        case \"currency\":\r\n          currency = i.value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    return parseFloat(\r\n      stringNumber\r\n        .replace(new RegExp(\"\\\\\" + group, \"g\"), \"\")\r\n        .replace(new RegExp(\"\\\\\" + decimal), \".\")\r\n        .replace(new RegExp(\"\\\\\" + currency, \"g\"), \"\")\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Formates a date\r\n   *\r\n   * @param {date} ts A timestamp.\r\n   * @param {object} options The date options.\r\n   * @param {boolean} isUTC\r\n   * @param {string} locales e.g. \"lv\"\r\n   * @param {string} format e.g. \"YYYY-MM-DD HH:mm:ss\"\r\n   */\r\n  const formatDate = (\r\n    ts,\r\n    options = {\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n      hour: \"numeric\",\r\n      minute: \"numeric\",\r\n    },\r\n    isUTC = true,\r\n    locales = language,\r\n    format = null\r\n  ) => {\r\n    let date = new Date(ts);\r\n    if (isUTC) {\r\n      const diff = date.getTimezoneOffset();\r\n      date = moment(date).add(-diff, \"m\").toDate();\r\n    }\r\n    return format === null\r\n      ? new Intl.DateTimeFormat(locales, options).format(date)\r\n      : moment(date).format(format);\r\n  };\r\n\r\n  /**\r\n   * Retrieves an URL parameter\r\n   */\r\n  const getUrlParam = (param) => {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    return urlParams.get(param);\r\n  };\r\n\r\n  /**\r\n   * Returns the file name from URI path\r\n   */\r\n  const getFileNameFromURI = () => {\r\n    const path = window.location.pathname;\r\n    const pathLast = path.substring(path.lastIndexOf(\"/\") + 1);\r\n    return `${pathLast}.js`;\r\n  };\r\n\r\n  const sendEmailValidationRequest = ({ token, email }) => {\r\n    sendRequest({\r\n      req: \"validate email token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Sends the password reset request\r\n   *\r\n   * @param {string} token The password reset token\r\n   * @param {string} email User's email\r\n   */\r\n  const sendPasswordResetRequest = ({ token, email }) => {\r\n    setPasswordResetTokenEmail(email);\r\n    sendRequest({\r\n      req: \"validate password reset token\",\r\n      data: { token, email },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets client URI\r\n   */\r\n  const getUri = () => {\r\n    return `${window.location.hostname}`;\r\n  };\r\n\r\n  /**\r\n   * Gets client IP\r\n   */\r\n  const getIP = () => {\r\n    if (debug) return;\r\n    fetch(`${config.uri.ENDPOINT}/ip`, {\r\n      method: \"post\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((results) => results.json())\r\n      .then((data) => {\r\n        setIP(typeof data.ip === \"string\" ? data.ip : \"\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  /**\r\n   * Gets the scroll position\r\n   */\r\n  const getScrollPosition = () => {\r\n    return { x: window.scrollX, y: window.scrollY };\r\n  };\r\n\r\n  /**\r\n   * Sets the help path\r\n   * @param {integer} id\r\n   * @param {string} name\r\n   */\r\n  const setHelpPath = (id, name) => {\r\n    if (id === 1) {\r\n      setHelpPath1(name);\r\n      setHelpPath2(\"\");\r\n      setHelpPath3(\"\");\r\n    } else if (id === 2) {\r\n      setHelpPath2(name);\r\n      setHelpPath3(\"\");\r\n    } else {\r\n      setHelpPath3(name);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sets the scroll position\r\n   */\r\n  const setScrollPosition = (x, y) => {\r\n    console.log(\"setScrollPosition:\", x, y);\r\n    // window.scrollTo(x, y);\r\n    window.scroll(x, y);\r\n  };\r\n\r\n  /**\r\n   * Saves the cart request\r\n   */\r\n  const saveCartID = () => {\r\n    const cart = getUrlParam(\"cart\");\r\n\r\n    if (cart !== null) {\r\n      setCartID(cart);\r\n      // if (!signedIn) setIsExternalRequest(true);\r\n      // } else {\r\n      //   setCartID(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets the cart from DB\r\n   */\r\n  const getCart = () => {\r\n    // if (typeof externalRequest.cart === \"undefined\" || accountNumber === null)\r\n    //   return;\r\n\r\n    if (!signedIn || accountNumber === null) {\r\n      saveCartID();\r\n      return;\r\n    }\r\n\r\n    // const cartFromUrl = getUrlParam(\"cart\");\r\n\r\n    // saveCartID();\r\n\r\n    let cart = cartID !== null ? cartID : getUrlParam(\"cart\");\r\n    if (cart === null) return;\r\n\r\n    const data = {\r\n      customer: accountNumber,\r\n      cart,\r\n    };\r\n\r\n    sendRequest({ req: \"get cart\", data: data });\r\n\r\n    setCartID(null);\r\n  };\r\n\r\n  /**\r\n   * Gets cart purposses\r\n   */\r\n  const getCartPurposes = () => {\r\n    if (cartContent === null) return;\r\n\r\n    let cartPurposes = [];\r\n\r\n    barrelGetters.cartContent.map((element) =>\r\n      cartPurposes.push(element.product)\r\n    );\r\n\r\n    setCartPurposes(null);\r\n\r\n    sendRequest({\r\n      req: \"get cart purposes\",\r\n      data: {\r\n        purposes: JSON.stringify(cartPurposes),\r\n        language: language,\r\n        page: 1,\r\n        limit: 5,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the currencies\r\n   *\r\n   * @param {*} newPage\r\n   */\r\n  const getCurrencies = (newPage) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: {\r\n        uid: accountNumber,\r\n        search: null,\r\n        page: newPage,\r\n        limit: currenciesPerPage,\r\n      },\r\n    });\r\n    setActivePageCurrencies(newPage);\r\n  };\r\n\r\n  /**\r\n   * Finds currencies\r\n   *\r\n   * @param {string} search The search sring.\r\n   */\r\n  const findCurrencies = (search) => {\r\n    setCurrencies(null);\r\n    sendRequest({\r\n      req: \"get currencies\",\r\n      data: {\r\n        uid: accountNumber,\r\n        search,\r\n        page: 1,\r\n        limit: currenciesPerPage,\r\n      },\r\n    });\r\n    setActivePageCurrencies(1);\r\n  };\r\n\r\n  /**\r\n   * Gets user transactions\r\n   *\r\n   * @param {integer} newPage\r\n   */\r\n  const getTransactions = (newPage, search = null) => {\r\n    setTransactions(null);\r\n\r\n    let dateStart = dateRangeStart;\r\n    let dateEnd = dateRangeEnd;\r\n    if (dateEnd === \"today\") {\r\n      const now = new Date();\r\n      dateEnd = now.setDate(now.getDate());\r\n    }\r\n    dateStart = formatDate(dateStart, null, true, null, \"YYYY-MM-DD\");\r\n    dateEnd = formatDate(dateEnd, null, true, null, \"YYYY-MM-DD\");\r\n\r\n    sendRequest({\r\n      req: \"get transactions\",\r\n      data: {\r\n        page: newPage,\r\n        limit: transactionsPerPage,\r\n        uid: accountNumber,\r\n        language,\r\n        dateStart,\r\n        dateEnd,\r\n        search: search !== null ? search : searchTransactions,\r\n      },\r\n    });\r\n    setActivePageTransactions(newPage);\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {ref} ref\r\n   */\r\n  const copyToClipboard = (ref) => {\r\n    ref.current.select();\r\n    document.execCommand(\"copy\");\r\n    ref.current.blur();\r\n    showMessage(\"COPIED_TO_CLIPBOARD\", \"info\", false);\r\n  };\r\n\r\n  /**\r\n   * Finds transactions\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findTransactions = (search) => {\r\n    setSearchTransactions(search);\r\n    getTransactions(1, search);\r\n  };\r\n\r\n  /**\r\n   * Finds transactions\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findPurposes = (search) => {\r\n    setSearchPurposes(search);\r\n    setResponseProps(null);\r\n    getBusinessPurposes(activeBusinessID, activeBusiness, 1, search);\r\n  };\r\n\r\n  /**\r\n   * Gets user shares\r\n   *\r\n   * @param {*} newPage\r\n   */\r\n  const getShares = (newPage, search = null) => {\r\n    setShares(null);\r\n    sendRequest({\r\n      req: \"get shares\",\r\n      data: {\r\n        page: newPage,\r\n        limit: sharesPerPage,\r\n        uid: accountNumber,\r\n        language: language,\r\n        search: search !== null ? search : searchShares,\r\n      },\r\n    });\r\n    setActivePageShares(newPage);\r\n  };\r\n\r\n  /**\r\n   * Finds shares\r\n   *\r\n   * @param {string} search The search string.\r\n   */\r\n  const findShares = (search) => {\r\n    setSearchShares(search);\r\n    getShares(1, search);\r\n  };\r\n\r\n  /**\r\n   * Gets user businesses\r\n   *\r\n   * @param {integer} newPage\r\n   */\r\n  const getBusinesses = (newPage = 1) => {\r\n    setUserBusinesses(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(1);\r\n    setActiveBusinessID(null);\r\n    sendRequest({\r\n      req: \"get user businesses\",\r\n      data: { uid: accountNumber, page: newPage, limit: businessesPerPage },\r\n    });\r\n    setActivePageBusinesses(newPage);\r\n  };\r\n\r\n  /**\r\n   * Gets the business purposes\r\n   *\r\n   * @param {*} business_id\r\n   * @param {*} selected\r\n   * @param {*} newPage\r\n   */\r\n  const getBusinessPurposes = (\r\n    business_id,\r\n    selected = null,\r\n    newPage = 1,\r\n    search = null\r\n  ) => {\r\n    // console.log(\"BUSINESS PURPOSES FOR ID \" + business_id, businessPurposes);\r\n\r\n    if (selected !== null) {\r\n      setActiveBusiness(selected);\r\n      setActiveBusinesPurpose(null);\r\n      setActivePurposeProperty(null);\r\n    }\r\n    setBusinessPurposes(null);\r\n    setCountBusinessPurposes(null);\r\n    setActivePageBusinessPurposes(newPage);\r\n    setActiveBusinessID(business_id);\r\n    return sendRequest({\r\n      req: \"get business purposes\",\r\n      data: {\r\n        business_id: business_id,\r\n        language: language,\r\n        search: search !== null ? search : searchPurposes,\r\n        page: newPage,\r\n        limit: businessPurposesPerPage,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Gets the purpose shareholders\r\n   *\r\n   * @param {*} purpose_id\r\n   * @param {*} selected\r\n   */\r\n  const getPurposeShareholders = (purpose_id, selected = null) => {\r\n    if (selected !== null) {\r\n      setActiveBusinesPurpose(purpose_id);\r\n    }\r\n    setPurposeShareholders(null);\r\n    return sendRequest({\r\n      req: \"get purpose shareholders\",\r\n      data: { purpose_id: purpose_id },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get account data\r\n   */\r\n  const getAccountData = () => {\r\n    if (accountNumber === null) return;\r\n    sendRequest({\r\n      req: \"get account data\",\r\n      data: {\r\n        uid: accountNumber,\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get transaction by id\r\n   *\r\n   * @param {integer} id The primary key\r\n   */\r\n  const getTransactionById = (id) => {\r\n    sendRequest({\r\n      req: \"get transaction by id\",\r\n      data: { id: id, language: language },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get conatainer class\r\n   *\r\n   * Returns object cantaining the classes for layout container appearance.\r\n   *\r\n   * @param {boolean} signedIn, True if user has signed in, otherwise false.\r\n   */\r\n  // const getContainerClass = (signedIn) => {\r\n  //   return {\r\n  //     wrapperClass: signedIn\r\n  //       ? \"auth-wrapper auth-wrapper-summary\"\r\n  //       : \"auth-wrapper\",\r\n  //     innerClass: signedIn\r\n  //       ? \"auth-inner auth-inner-summary\"\r\n  //       : \"auth-inner autoWidth\",\r\n  //   };\r\n  // };\r\n  const getContainerClass = (signedIn) => {\r\n    return {\r\n      wrapperClass: \"auth-wrapper auth-wrapper-summary\",\r\n      innerClass: \"auth-inner auth-inner-summary\",\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Get redirect\r\n   *\r\n   * Returns router redirect component.\r\n   */\r\n  const getRedirect = () => {\r\n    return redirectTo === null ? \"\" : <Redirect push to={redirectTo} />;\r\n  };\r\n\r\n  /**\r\n   * Sorts an object array by value of the property\r\n   *\r\n   * @param {array} array The array\r\n   * @param {string} property The property name\r\n   */\r\n  const sortObjectArray = (array, property) => {\r\n    return array.sort((a, b) =>\r\n      a[property] > b[property] ? 1 : b[property] > a[property] ? -1 : 0\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Returns an array index of the object\r\n   * containing the property with the certain value.\r\n   *\r\n   * @param {array} array The array\r\n   * @param {string} property The property name\r\n   * @param {any} value The property value\r\n   */\r\n  const getObjectArrayElementIndex = (array, property, value) => {\r\n    if (array === null) return -1;\r\n    return array\r\n      .map((properties) => {\r\n        return properties[property];\r\n      })\r\n      .indexOf(value);\r\n  };\r\n\r\n  /**\r\n   * Deletes an object array element\r\n   *\r\n   * @param {array} array\r\n   * @param {string} property\r\n   * @param {any} value\r\n   */\r\n  const deleteObjectArrayElement = (arr, property, value) => {\r\n    return arr.filter((obj) => {\r\n      return obj[property] !== value;\r\n    });\r\n  };\r\n\r\n  const getReviser = () => {\r\n    return \"STA\";\r\n  };\r\n\r\n  const getWorkplace = () => {\r\n    return \"LAPSTA\";\r\n  };\r\n\r\n  const barrelFunctions = {\r\n    sendRequest,\r\n    processUserResponse,\r\n    showMessage,\r\n    hideMessage,\r\n    changeLanguage,\r\n    roundTo,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    getArrayObject,\r\n    getRequestStatus,\r\n    clearRequestStatus,\r\n    showRequestStatus,\r\n    format,\r\n    formatPerCent,\r\n    formatExchangeRate,\r\n    getContainerClass,\r\n    formatDate,\r\n    sendEmailValidationRequest,\r\n    sendPasswordResetRequest,\r\n    getRedirect,\r\n    getUri,\r\n    getIP,\r\n    getScrollPosition,\r\n    setScrollPosition,\r\n    setHelpPath,\r\n    saveCartID,\r\n    getCart,\r\n    getCartPurposes,\r\n    getUrlParam,\r\n    getFileNameFromURI,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinesses,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    getCurrencies,\r\n    findCurrencies,\r\n    getTransactions,\r\n    copyToClipboard,\r\n    findTransactions,\r\n    findPurposes,\r\n    getShares,\r\n    findShares,\r\n    parseLocaleNumber,\r\n    getReviser,\r\n    getWorkplace,\r\n  };\r\n\r\n  /** \r\n   * Event handlers\r\n   ============================================================================ */\r\n\r\n  /**\r\n   * On language change\r\n   */\r\n  i18n.on(\"languageChanged\", function (lng) {\r\n    const languages = [\"en\", \"lv\"];\r\n    if (languages.indexOf(lng) < 0) lng = \"en\";\r\n    // if (lng === \"en-US\") lng = \"en\";\r\n    setLanguage(lng);\r\n  });\r\n\r\n  /**\r\n   * On redirect\r\n   * @param {string} to Redirect path (e.g. \"/sign-in\")\r\n   */\r\n  const onRedirect = (to) => {\r\n    setRedirectTo(to);\r\n  };\r\n\r\n  const onSessionStart = () => {\r\n    // start new session\r\n    let data = {};\r\n    data.request = \"hello\";\r\n    data.instance = instance;\r\n    startSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionEnd = () => {\r\n    // end current session\r\n    sendRequest({ req: \"end session\", data: {} });\r\n\r\n    let data = {};\r\n    data.request = \"bye\";\r\n    data.instance = instance;\r\n    endSession(data, session, debug);\r\n    setServerResponseReceived(false);\r\n  };\r\n\r\n  const onSessionReset = () => {\r\n    setSession(uuidv4());\r\n  };\r\n\r\n  /**\r\n   * On signup\r\n   * @param {object} data Signup data\r\n   */\r\n  const onSignUp = (data) => {\r\n    return sendRequest({ req: \"register user\", data });\r\n  };\r\n\r\n  const onSessionTimeout = () => {\r\n    // console.log(\"Session timed out...\");\r\n    setLoggingOut(true);\r\n    setRedirectTo(\"/sign-out\");\r\n  };\r\n\r\n  /**\r\n   * On transfer type change\r\n   * @param {string} id The transfer type id (\"U2S\", \"U2U\", \"U2B\" etc.)\r\n   */\r\n  const onTransferTypeChange = (id) => {\r\n    console.log(\"setTransferType: \", id);\r\n    setTransferType(id);\r\n  };\r\n\r\n  const onTransferSuccess = () => {\r\n    // console.log(\"ON TRANSFER SUCCESS\", barrels);\r\n  };\r\n\r\n  /**\r\n   * On transfer\r\n   * @param {object} data Transfer data\r\n   */\r\n  const onTransfer = (data) => {\r\n    // console.log(\"ON TRANSFER (data):\", data);\r\n    // sendRequest({ req: \"register account\", data: data });\r\n    sendRequest(data);\r\n  };\r\n\r\n  const onPurposeRegistration = (data) => {\r\n    sendRequest(data);\r\n  };\r\n\r\n  const onLogOut = () => {\r\n    window.localStorage.clear();\r\n    setSignedIn(false);\r\n    // onSessionEnd(); // DO NOT ACTIVATE THIS HERE - EXECUTING MULTIPLE TIMES\r\n    // setSession(uuidv4()); // DO NOT SET SESSION HERE - INFINITE LOOP!!\r\n  };\r\n\r\n  const onAlertClose = (type = null) => {\r\n    hideMessage(type);\r\n  };\r\n\r\n  /**\r\n   * Barrel: Event handlers\r\n   */\r\n  const barrelEventHandlers = {\r\n    onRedirect,\r\n    onSignUp,\r\n    onSessionTimeout,\r\n    onTransferTypeChange,\r\n    onTransferSuccess,\r\n    onTransfer,\r\n    onSessionStart,\r\n    onSessionEnd,\r\n    onSessionReset,\r\n    onPurposeRegistration,\r\n    onLogOut,\r\n    onAlertClose,\r\n  };\r\n\r\n  /**\r\n   * Barrel of barrels\r\n   */\r\n  const barrels = {\r\n    barrelGetters,\r\n    barrelSetters,\r\n    barrelFunctions,\r\n    barrelEventHandlers,\r\n  };\r\n\r\n  /** \r\n   * Custom hooks\r\n   ============================================================================ */\r\n\r\n  useSocket((data) => {\r\n    setServerResponseReceived(true);\r\n    setRequestTimedOut(false);\r\n    processUserResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  });\r\n\r\n  useSystemSocket((data) => {\r\n    processSystemResponse({\r\n      args: data,\r\n      barrels: barrels,\r\n    });\r\n  }, instance);\r\n\r\n  /** \r\n   * Return\r\n   ============================================================================ */\r\n\r\n  if (props.mode === \"construction\") {\r\n    return <UnderConstruction {...barrels} />;\r\n    // } else if (props.mode === \"loading\") {\r\n    //   return <Loading {...barrels} />;\r\n  } else {\r\n    if (!reconnecting || debug) {\r\n      return <Main {...barrels} />;\r\n    } else {\r\n      return <NotConnected {...barrels} />;\r\n    }\r\n  }\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\n/**\r\n  * User imports\r\n  ============================================================================ */\r\nimport Summary from \"../summary\";\r\nimport Alert from \"../alert\";\r\nimport Login from \"../login\";\r\nimport Logout from \"../logout\";\r\nimport SignUp from \"../signup\";\r\nimport PasswordReset from \"../passwordReset\";\r\nimport ValidateEmail from \"../validateEmail\";\r\nimport ChangePassword from \"../changePassword\";\r\nimport Auth from \"../auth\";\r\nimport Footer from \"../footer\";\r\nimport MainMenu from \"../mainMenu\";\r\nimport Help from \"../help\";\r\nimport Article from \"../article\";\r\nimport Jobs from \"../jobs\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n    * Default Properties\r\n    ============================================================================ */\r\n  let defaults = { namespace: \"Main\" };\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { signedIn } = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  const { getRedirect, getContainerClass } = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n   * Module constats\r\n   ============================================================================ */\r\n  const { wrapperClass, innerClass } = getContainerClass(signedIn);\r\n  const appClass = signedIn ? \"App\" : \"App bg\";\r\n\r\n  /**\r\n    * Functions\r\n    ============================================================================ */\r\n  const getJSX = () => {\r\n    return (\r\n      <>\r\n        <Router>\r\n          {getRedirect()}\r\n\r\n          <div className={appClass} style={{}}>\r\n            {/**\r\n             * The alert\r\n             */}\r\n            <Alert data={args} />\r\n\r\n            {/**\r\n             * Wrapper for the main window\r\n             */}\r\n            <div className={wrapperClass} style={{}}>\r\n              {/**\r\n               * The main window\r\n               */}\r\n              <div\r\n                className={innerClass}\r\n                style={{\r\n                  backgroundColor: \"Transparent\",\r\n                }}\r\n              >\r\n                <MainMenu {...args} />\r\n\r\n                {(window.location.pathname === \"/sign-in\" ||\r\n                  window.location.pathname === \"/sign-out\" ||\r\n                  (window.location.pathname === \"/\" && !signedIn)) && (\r\n                  <Image\r\n                    className=\"d-none d-md-block\"\r\n                    src=\"gfx/raised_hands.png\"\r\n                    fluid\r\n                  />\r\n                )}\r\n\r\n                {/**\r\n                 * Routes\r\n                 */}\r\n                <Switch>\r\n                  {/**\r\n                   * Route: Sign up\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/sign-up\"\r\n                    component={() => {\r\n                      return SignUp(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Sign up\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/auth\"\r\n                    component={() => (signedIn ? Auth(args) : Login(args))}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Validate mail\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/validate-email\"\r\n                    component={() => {\r\n                      return ValidateEmail(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Change password\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/password\"\r\n                    component={() => {\r\n                      return ChangePassword(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Sign out\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/sign-out\"\r\n                    component={() => {\r\n                      return Logout(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Topic\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/jobs\"\r\n                    component={() => {\r\n                      return Jobs(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Topic\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/help\"\r\n                    component={() => {\r\n                      return Help(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Topic\r\n                   */}\r\n                  <Route\r\n                    path=\"/help/topic\"\r\n                    component={() => {\r\n                      return Help(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Help Article\r\n                   */}\r\n                  <Route\r\n                    path=\"/help/article\"\r\n                    component={() => {\r\n                      return Article(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Route: Password reset\r\n                   */}\r\n                  <Route\r\n                    exact\r\n                    path=\"/reset\"\r\n                    component={() => {\r\n                      return PasswordReset(args);\r\n                    }}\r\n                  />\r\n\r\n                  {/**\r\n                   * Default route\r\n                   */}\r\n                  <Route\r\n                    path=\"*\"\r\n                    component={() => {\r\n                      return signedIn ? Summary(args) : Login(args);\r\n                    }}\r\n                  />\r\n                </Switch>\r\n                <Footer {...args} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Return\r\n   ============================================================================ */\r\n  return <>{getJSX()}</>;\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport React, { useEffect } from \"react\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport flatpickr from \"flatpickr\";\r\n// import { Latvian } from \"flatpickr/dist/l10n/lv.js\";\r\nimport * as language from \"flatpickr/dist/l10n\"; // DO NOT REMOVE !!!\r\nimport { DateRange } from \"@material-ui/icons\";\r\n\r\n/**\r\n   * User imports\r\n   ============================================================================ */\r\n// import SubmitButton from \"../submitButton\";\r\n// import Card from \"../card\";\r\n\r\n/**\r\n * Default export\r\n */\r\nexport default (args) => {\r\n  /**\r\n     * Default Properties\r\n     ============================================================================ */\r\n  let defaults = {\r\n    namespace: \"DatePickerWrapper\",\r\n    request: \"get something\",\r\n    value: \"\",\r\n    placeholder: \"Date\",\r\n  }; // TODO: Adjust this\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n     * Barrels\r\n     ============================================================================ */\r\n  // const {} = props.barrelGetters;\r\n  // const {} = props.barrelSetters;\r\n  // const {} = props.barrelFunctions;\r\n  // const {} = props.barrelEventHandlers;\r\n\r\n  /**\r\n     * Destructured vars\r\n     ============================================================================ */\r\n  const { t } = useTranslation([props.namespace]); // adjust namespace\r\n\r\n  /**\r\n    * Create refs\r\n    ============================================================================ */\r\n  const refDatePicker = React.createRef();\r\n\r\n  /**\r\n    * States\r\n    ============================================================================ */\r\n  // const [isOpen, setIsOpen] = useState(false);\r\n\r\n  /**\r\n    * Module vars\r\n    ============================================================================ */\r\n  let fp = null; // flatPicker instance\r\n\r\n  /**\r\n    * Effects\r\n    ============================================================================ */\r\n  useEffect(() => {\r\n    fp = flatpickr(refDatePicker.current, props.options);\r\n\r\n    return () => {\r\n      // on unmount\r\n      fp.destroy();\r\n      fp = null;\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (fp === null) return;\r\n\r\n  //   console.log(\"isOpen:\", isOpen);\r\n\r\n  //   // isOpen ? fp.open() : fp.close();\r\n\r\n  //   // eslint-disable-next-line\r\n  // }, [isOpen]);\r\n\r\n  // useEffect(() => {\r\n  //   if (fp !== null) return;\r\n\r\n  //   fp = flatpickr(refDatePicker.current, props.options);\r\n\r\n  //   // eslint-disable-next-line\r\n  // });\r\n\r\n  /** \r\n     * Yup schema\r\n     ============================================================================ */\r\n  const schema = yup.object({\r\n    datePicker: yup.string().required(t(\"Date is required\")),\r\n  });\r\n\r\n  /**\r\n     * Functions\r\n     ============================================================================ */\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  /**\r\n     * Form\r\n     ============================================================================ */\r\n  const ComponentForm = ({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    touched,\r\n    isValid,\r\n    validateForm,\r\n    errors,\r\n  }) => (\r\n    <InputGroup>\r\n      <Form.Control\r\n        type=\"string\"\r\n        placeholder={props.placeholder}\r\n        aria-describedby=\"inputGroupPrepend\"\r\n        ref={refDatePicker}\r\n        name=\"datePicker\"\r\n        autoComplete=\"off\"\r\n        value={values.datePicker}\r\n        onChange={handleChange}\r\n        isInvalid={!!errors.datePicker && touched.datePicker}\r\n      />\r\n      <InputGroup.Append>\r\n        <InputGroup.Text\r\n          onClick={() => {\r\n            // console.log(\"click\");\r\n            if (fp !== null) fp.open();\r\n\r\n            // setIsOpen(!isOpen);\r\n          }}\r\n          style={{\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <DateRange style={{ color: \"var(--dark)\" }} />\r\n        </InputGroup.Text>\r\n      </InputGroup.Append>\r\n      <Form.Control.Feedback type=\"invalid\">\r\n        {errors.datePicker}\r\n      </Form.Control.Feedback>\r\n    </InputGroup>\r\n  );\r\n\r\n  /**\r\n     * Formik return\r\n     ============================================================================ */\r\n  return (\r\n    <Formik\r\n      component={ComponentForm}\r\n      validationSchema={schema}\r\n      onSubmit={onSubmit}\r\n      initialValues={{\r\n        datePicker: props.value,\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (delay > 0) savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","/**\r\n * System imports\r\n ============================================================================ */\r\nimport { useEffect } from \"react\";\r\n\r\nexport const useEventListener = (callback, events) => {\r\n  let defaults = {\r\n    namespace: \"EventListener\",\r\n\r\n    onTimeout: () => {},\r\n\r\n    events: [\"load\", \"mousemove\", \"mousedown\", \"click\", \"scroll\", \"keypress\"],\r\n  };\r\n\r\n  /**\r\n     * Properties\r\n     ============================================================================ */\r\n  const props = Object.assign(defaults, { events: events });\r\n\r\n  useEffect(() => {\r\n    const eventHandler = (e) => {\r\n      callback(e);\r\n    };\r\n\r\n    for (let i in props.events) {\r\n      window.addEventListener(props.events[i], eventHandler);\r\n    }\r\n\r\n    return () => {\r\n      for (let i in props.events) {\r\n        window.removeEventListener(props.events[i], eventHandler);\r\n      }\r\n    };\r\n    // eslint-disable-next-line\r\n  }, []);\r\n};\r\n","import { sendData } from \"../utils/sockets\";\r\n\r\nexport default (args) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n  const { req, data, session, uid, barrels } = props;\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, userData, userSequence } = barrels.barrelGetters;\r\n  const {\r\n    setUserData,\r\n    setUID,\r\n    // setAccountNumber,\r\n    // setRequest,\r\n    // setUserBusinesses,\r\n  } = barrels.barrelSetters;\r\n  // const {} = barrels.barrelFunctions;\r\n  //   const {} = barrels.barrelEventHandlers;\r\n\r\n  let requestFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onRequest = (req, callback) => {\r\n    if (requestFound) return;\r\n    if (req === props.req || req === \"default\") {\r\n      callback();\r\n      requestFound = true;\r\n    }\r\n  };\r\n\r\n  /** \r\n   * Request handlers\r\n  ============================================================================ */\r\n\r\n  onRequest(\"sign in user\", () => {\r\n    setUserData(JSON.stringify(data));\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"get user sequence\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"register account\", () => {\r\n    const dt = new Date(data.birthDate);\r\n    const fullyear = dt.getFullYear().toString();\r\n    const year = fullyear.slice(-2);\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n    const birthDate = `${day}${month}${year}`;\r\n    const timezone = data.timezone.slice(0, 2);\r\n    const initial = userData.lastname.slice(0, 1).toUpperCase();\r\n    const icode = initial.charCodeAt(0).toString().padStart(5, \"0\");\r\n\r\n    data.scode = `${timezone}${birthDate}${initial}`;\r\n    data.tcode = `${timezone}${birthDate}${icode}`;\r\n    data.timezone = data.timezone.slice(5);\r\n    data.sequence = userSequence.toString().padStart(5, \"0\");\r\n    data.birthDate = `${fullyear}-${month}-${day}`;\r\n\r\n    setUID(data.personalID);\r\n    sendData({ req, data, uid, session }, debug);\r\n  });\r\n\r\n  onRequest(\"default\", () => {\r\n    sendData({ req, data, uid, session }, debug);\r\n\r\n    return true;\r\n  });\r\n\r\n  // onRequest(\"unknown\", () => {\r\n  //   showMessage(`UNKNOWN REQUEST ${req}`, \"info\");\r\n\r\n  //   return true;\r\n  // });\r\n\r\n  return requestFound;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug, cartContent } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setUID,\r\n    setAccountNumber,\r\n    setRedirectTo,\r\n    setCartProcessingStatus,\r\n  } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  const { onRedirect } = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug) console.log(`ERROR: ${req}`, error, context, props, barrels);\r\n  // const { showMessage } = barrels.barrelFunctions;\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n    // console.log(res, status);\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onError([\"*\", \"INVALID_SESSION\"], () => {\r\n    showMessage(\"SESSION_TIMED_OUT\", \"info\", false);\r\n    setRedirectTo(\"/sign-out\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer errors\r\n   */\r\n  onError([\"transfer U2S\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer U2B\", \"NO_ROWS_CHANGED\"], () => {\r\n    if (cartContent !== null) {\r\n      setCartProcessingStatus(false);\r\n    } else {\r\n      showMessage(\"INVALID_TRANSFER\", \"error\");\r\n    }\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"INVALID_USER_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // user selected the same language again - just ignore\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate email token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"validate password reset token\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"TOKEN_VALIDATION_FAILED\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"reset password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // showMessage(\"REQUEST_ALREADY_SENT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user language\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same language again - that's ok\r\n    return true;\r\n  });\r\n\r\n  onError([\"update user\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User selected the same password again - that's ok\r\n    return true;\r\n  });\r\n\r\n  // onError([\"update last seen user\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Same last seen time was submitted (shouldn't be possible) - ignore for now\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"sign in user\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"change password\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"SAME_PASSWORD_RESET\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"submit tan\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User reset password to the actual password\r\n    showMessage(\"INVALID_TAN\", \"error\", false);\r\n    return true;\r\n  });\r\n\r\n  onError([\"get cart\", \"NO_ROWS_CHANGED\"], () => {\r\n    // User accessed the same cart again - it's fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"transfer V2U\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Allowance already dispatched today - totally fine\r\n    return true;\r\n  });\r\n\r\n  onError([\"register user currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    // The same currency was selected again - no problem\r\n    return true;\r\n  });\r\n\r\n  onError([\"end session\", \"NO_ROWS_CHANGED\"], () => {\r\n    // Session updated to the same data ??\r\n    return true;\r\n  });\r\n\r\n  onError([\"register currency\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_CURRENCY_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"update purpose property\", \"NO_ROWS_CHANGED\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"register purpose\", \"ER_DUP_ENTRY\"], () => {\r\n    showMessage(\"DUPLICATE_PURPOSE_PROPERTY\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  // onError([\"get user sequence\", \"NO_ROWS_CHANGED\"], () => {\r\n  //   // Session updated to the same data ??\r\n  //   return true;\r\n  // });\r\n\r\n  onError([\"register account\", \"ER_DUP_ENTRY\"], () => {\r\n    setUID(null);\r\n    setAccountNumber(null);\r\n    showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError(\r\n    [\"register account\", \"ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO\"],\r\n    () => {\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"DUPLICATE_ACCOUNT_REGISTRATION\", \"error\");\r\n      return true;\r\n    }\r\n  );\r\n\r\n  onError([\"register shareholder\", \"ER_NO_REFERENCED_ROW_2\"], () => {\r\n    showMessage(\"USER_NOT_FOUND\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"reset password\", \"ER_NO_REFERENCED_ROW_2\"], () => {\r\n    // Reset password email not found - might be an attack - imitate the behavior as if the link was sent\r\n    onRedirect(\"/password\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"*\", \"ER_CANT_CREATE_THREAD\"], () => {\r\n    showMessage(\"NO_RESPONSE_FROM_SERVER\", \"error\");\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  // console.log(\"RESPONSE HANDLER: \", props, barrels);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const {\r\n    debug,\r\n    // requestTS,\r\n    // session,\r\n    // sessionTimeout,\r\n    // settings,\r\n    // loggingIn,\r\n    // isExternalRequest,\r\n    signedIn,\r\n    instance,\r\n    responseProps,\r\n    currencies,\r\n    transactions,\r\n    transferRequest,\r\n    shares,\r\n    // transactionsPerPage,\r\n    // sharesPerPage,\r\n    userData,\r\n    accountNumber,\r\n    language,\r\n    // uid,\r\n    userBusinesses,\r\n    cartPurposes,\r\n    businessPurposes,\r\n    purposeShareholders,\r\n    activeBusinesPurpose,\r\n    lastInsertId,\r\n    cartContent,\r\n  } = barrels.barrelGetters;\r\n  const {\r\n    setRequest,\r\n    setSession,\r\n    // setSessionTimeoutApplied,\r\n    setResponseProps,\r\n    setSettings,\r\n    setLoggingIn,\r\n    // setUpdateInterval,\r\n    setCurrencies,\r\n    setTransactions,\r\n    setShares,\r\n    setCountCurrencies,\r\n    setCountTransactions,\r\n    setCountShares,\r\n    setConnected,\r\n    // setLanguage,\r\n    setUserData,\r\n    setSignedIn,\r\n    // setIsExternalRequest,\r\n    setCartContent,\r\n    setCartProps,\r\n    setCurrencyAbbr,\r\n    setCurrencyRate,\r\n    // setCurrencyStatus,\r\n    // setTransferSuccess,\r\n    setRedirectTo,\r\n    setLastInsertId,\r\n    setAccountNumber,\r\n    setUserSequence,\r\n    setUID,\r\n    setUserBusinesses,\r\n    setCountBusinesses,\r\n    setUserBusinessesLoaded,\r\n    setCartPurposes,\r\n    setBusinessPurposes,\r\n    setCountBusinessPurposes,\r\n    setPurposeShareholders,\r\n    // setBusinessLoaded,\r\n    setAccountPhotoPath,\r\n    setPasswordResetTokenValidated,\r\n    setPasswordResetTokenEmail,\r\n    setValidateTokenEmail,\r\n    setValidationTokenEmail,\r\n    setValidationTokenEmailResent,\r\n    setActivePurposeData,\r\n    setTanRequired,\r\n    // setRedirect,\r\n    setClearRefs,\r\n    setEmailChanged,\r\n    setCartProcessingStatus,\r\n    setActiveBusiness,\r\n  } = barrels.barrelSetters;\r\n  const {\r\n    sendRequest,\r\n    // processUserResponse,\r\n    // getBusinesses,\r\n    getAccountData,\r\n    getTransactionById,\r\n    getBusinessPurposes,\r\n    getPurposeShareholders,\r\n    showMessage,\r\n    changeLanguage,\r\n    sortObjectArray,\r\n    getObjectArrayElementIndex,\r\n    deleteObjectArrayElement,\r\n    // endSession,\r\n    // updateLastSeenUser,\r\n    // showTanInput,\r\n    // updateTimestamp,\r\n    // hideMessage,\r\n  } = barrels.barrelFunctions;\r\n  const {\r\n    // onTransferSuccess,\r\n    onRedirect,\r\n    // onSessionTimeout,\r\n    onSessionEnd,\r\n    // onLogOut,\r\n  } = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug) console.log(`response: ${req} (${props.status})`, props, barrels);\r\n\r\n  /**\r\n   * Save response properties\r\n   * @param {string} req\r\n   * @param {string} name\r\n   * @param {string} status\r\n   */\r\n  const saveResponseProps = ({ req, name, status }) => {\r\n    const res = typeof name !== \"undefined\" ? `${req} / ${name}` : req;\r\n    if (responseProps === null) {\r\n      setResponseProps(JSON.stringify([{ res, status }]));\r\n    } else {\r\n      const tempRP = deleteObjectArrayElement(responseProps, \"res\", res);\r\n      setResponseProps(JSON.stringify([...tempRP, { res, status }]));\r\n    }\r\n  };\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (instance === props.reqData.instance &&\r\n        res === \"*\" &&\r\n        status === props.status &&\r\n        name === props.name) ||\r\n      (instance === props.reqData.instance &&\r\n        res === props.req &&\r\n        status === props.status) ||\r\n      (instance === props.reqData.instance && res === \"unknown\")\r\n    ) {\r\n      saveResponseProps({ req, name: props.name, status: props.status });\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n    if (typeof props.token !== \"undefined\") {\r\n      console.log(\"Renewing session...\");\r\n\r\n      onSessionEnd();\r\n      setSession(props.token);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Start session (success)\r\n   */\r\n  onResponse([\"start session\", \"success\"], () => {\r\n    if (signedIn) {\r\n      sendRequest({ req: \"validate session\", data: {} });\r\n    }\r\n    setConnected(true);\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * End session (success)\r\n   */\r\n  onResponse([\"end session\", \"success\"], () => {\r\n    // console.log(\"ON END SESSION\");\r\n\r\n    setConnected(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM users\") {\r\n      setUserSequence(props.results.sequence);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get user sequence\", \"success\"], () => {\r\n    // register user\r\n    sendRequest({ req: \"register account\", data: props.reqData });\r\n  });\r\n\r\n  onResponse([\"get tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n    setTanRequired(true);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"get cart\", \"continue\"], () => {\r\n    if (props.name === \"SELECT carts\") {\r\n      setCartContent(props.results.content);\r\n      delete props.results.content;\r\n      setCartProps(JSON.stringify(props.results));\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"pending\"], () => {\r\n    // setTanRequired(false);\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"finished\"], () => {\r\n    if (props.name === \"UPDATE tans\") {\r\n      if (props.queryCnt > 0) {\r\n        // setTanRequired(true);\r\n        return false;\r\n      } else {\r\n        // setTanRequired(false);\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"submit tan\", \"success\"], () => {\r\n    // register user\r\n    // sendRequest({ req: \"register account\", data: props.reqData });\r\n    // Show the TAN input dialog\r\n\r\n    sendRequest({ req: transferRequest.transferType, data: transferRequest });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (pending)\r\n   */\r\n  onResponse([\"register user\", \"pending\"], () => {\r\n    // Might show some user feedback\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register user\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO users\") {\r\n      if (props.results.insertId > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    } else if (props.name === \"INSERT INTO validation_tokens\") {\r\n      // const { token, email } = props.tags;\r\n      // setValidateTokenEmail(\r\n      //   JSON.stringify({\r\n      //     token,\r\n      //     email,\r\n      //   })\r\n      // );\r\n      setValidationTokenEmail({\r\n        token: props.tags.token,\r\n        email: props.tags.email,\r\n      });\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user (success)\r\n   */\r\n  onResponse([\"register user\", \"success\"], () => {\r\n    // console.log(\"REGISTER USER PROPS:\", props);\r\n    const noEmailValidation = false;\r\n\r\n    if (noEmailValidation) {\r\n      setSignedIn(true);\r\n      setSession(props.email); // TODO: Might restore\r\n      onRedirect(\"/account-registration\");\r\n      sendRequest({ req: \"get user\", data: { email: props.email } }); // to not require a log in\r\n      return false;\r\n    } else {\r\n      onRedirect(\"/validate-email\");\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"continue\"], () => {\r\n    if (props.name === \"SELECT validation_tokens\") {\r\n      setValidationTokenEmailResent(props.results.resent);\r\n      return false;\r\n    }\r\n  });\r\n\r\n  onResponse([\"resend validate email token\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"continue\"], () => {\r\n    if (props.name === \"UPDATE validation tokens\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        // onRedirect(\"/sign-in\");\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (props.name === \"UPDATE users\") {\r\n      if (props.results.affectedRows > 0) {\r\n        // setLastInsertId(props.results.insertId);\r\n        onRedirect(\"/sign-in\");\r\n        return true;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"validate email token\", \"success\"], () => {\r\n    showMessage(\"EMAIL_VALIDATION_SUCCESS\", \"info\", false);\r\n    setValidateTokenEmail(null); // email validation token not needed any more + prevent the unnecessary resend\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"validate password reset token\", \"continue\"], () => {\r\n  //   if (props.name === \"UPDATE validation tokens\") {\r\n  //     if (props.results.affectedRows > 0) {\r\n  //       // onRedirect(\"/password\");\r\n  //       setPasswordResetTokenValidated(true);\r\n  //       return true;\r\n  //     } else {\r\n  //       // No row was inserted - an error was returned\r\n  //       return true;\r\n  //     }\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"validate password reset token\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(true);\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get URI settings (continue)\r\n   */\r\n  onResponse([\"get uri settings\", \"continue\"], () => {\r\n    if (props.name === \"SELECT FROM uri_settings\") {\r\n      const results = JSON.parse(props.results.settings);\r\n\r\n      // console.log(\"results.settings\", results);\r\n\r\n      setSettings(JSON.stringify(results));\r\n\r\n      // Force single currency\r\n      if (\r\n        typeof results[\"currency\"] !== \"undefined\" &&\r\n        results[\"currency\"] !== null\r\n      ) {\r\n        const abbr = results[\"currency\"];\r\n        // setCurrencyAbbr(abbr);\r\n        sendRequest({\r\n          req: \"register user currency\",\r\n          data: { email: userData.email, currency_id: abbr },\r\n        });\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register user currency (success)\r\n   */\r\n  onResponse([\"register user currency\", \"success\"], () => {\r\n    setCurrencyAbbr(props.reqData.currency_id);\r\n    // return false;\r\n  });\r\n\r\n  /**\r\n   * Sign in user (continue)\r\n   */\r\n  onResponse([\"sign in user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      /**\r\n       * Validated user\r\n       */\r\n      if (props.results.status === 1) {\r\n        // email validated\r\n        setUserData(JSON.stringify(props.results));\r\n        setAccountNumber(props.results.uid);\r\n        // setSession(props.results.email); // TODO: Might restore\r\n        setCurrencyAbbr(props.results.currency_abbr);\r\n        setCurrencyRate(\r\n          isNaN(props.results.currency_rate) ? 1 : props.results.currency_rate\r\n        );\r\n\r\n        changeLanguage(props.results.language);\r\n\r\n        return false;\r\n\r\n        /**\r\n         * Not yet validated user\r\n         */\r\n      } else if (props.results.status === 0) {\r\n        // setAccountNumber(props.results.uid);\r\n        setUserData(JSON.stringify(props.results));\r\n        changeLanguage(props.results.language);\r\n        onRedirect(\"/validate-email\");\r\n        return true;\r\n\r\n        /**\r\n         * Suspended user\r\n         */\r\n      } else if (props.results.status === 2) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_SUSPENDED\", \"error\");\r\n        return true;\r\n\r\n        /**\r\n         * Deleted user\r\n         */\r\n      } else if (props.results.status === 3) {\r\n        setRedirectTo(\"/sign-out\");\r\n        showMessage(\"ACCOUNT_DELETED\", \"error\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Sign in user (finished)\r\n   */\r\n  onResponse([\"sign in user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt > 0) {\r\n        return false;\r\n      } else {\r\n        showMessage(\"INVALID_SIGN_IN\", \"error\");\r\n        // setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"sign in user\", \"success\"], () => {\r\n    setSignedIn(true);\r\n    setLoggingIn(false);\r\n    onSessionEnd();\r\n    setSession(props.token);\r\n    setRedirectTo(\"/balance\");\r\n\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Update user (continue)\r\n  //  */\r\n  // onResponse([\"update user\", \"continue\"], () => {\r\n  //   if (props.name === \"INSERT INTO validation_tokens\") {\r\n  //     onRedirect(\"/validate-email\");\r\n  //     return false;\r\n  //   }\r\n  //   return true;\r\n  // });\r\n\r\n  /**\r\n   * Update user (success)\r\n   */\r\n  onResponse([\"update user\", \"success\"], () => {\r\n    if (\r\n      typeof props.reqData.newEmail !== \"undefined\" &&\r\n      props.reqData.newEmail !== null\r\n    ) {\r\n      setEmailChanged(true);\r\n      onRedirect(\"/sign-out\");\r\n      // onRedirect(\"/validate-email\");\r\n      return true;\r\n    } else {\r\n      sendRequest({ req: \"get user\", data: { email: userData.email } });\r\n      return false;\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Get user (continue)\r\n   */\r\n  onResponse([\"get user\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUserData(JSON.stringify(props.results));\r\n      setUID(props.results.uid);\r\n      setAccountNumber(props.results.uid);\r\n      if (accountNumber === null && props.results.uid !== null) {\r\n        setRedirectTo(\"/summary\");\r\n      }\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user (finished)\r\n   */\r\n  onResponse([\"get user\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 1) {\r\n        // exactly one user found - all is good\r\n        return false;\r\n      } else if (props.queryCnt === 0) {\r\n        // Something wrong with (accessing) the user data\r\n        // Probable causes:\r\n        // - user was deleted from the DB\r\n        // - user status was set to >= 2\r\n        // - multiple users with the same email address, most improbable (db constraint)\r\n        // - user changed the email address or password\r\n        setRedirectTo(\"/sign-out\");\r\n        // showMessage(\"INVALID_DATA\", \"error\");\r\n        return true;\r\n      }\r\n      return true;\r\n    }\r\n    // if (props.rowNum === 1) {\r\n    //   return true;\r\n    // } else {\r\n    //   // Something wrong with (accessing) the user data\r\n    //   // Probable causes:\r\n    //   // - user was deleted from the DB\r\n    //   // - user status was set to >= 2\r\n    //   // - multiple users with the same email address, most improbable (db constraint)\r\n    //   // - user changed the email address or password\r\n    //   // onLogOut();\r\n    //   setRedirectTo(\"/sign-out\");\r\n    //   // showMessage(\"INVALID_DATA\", \"error\");\r\n    //   return true;\r\n    // }\r\n  });\r\n\r\n  onResponse([\"get user\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (continue)\r\n   */\r\n  onResponse([\"get user businesses\", \"continue\"], () => {\r\n    if (props.name === \"SELECT businesses\") {\r\n      const business = props.results;\r\n      const { business_id } = business;\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([business]));\r\n        getBusinessPurposes(business_id, 0, 1);\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, business]));\r\n      }\r\n    } else if (props.name === \"COUNT businesses\") {\r\n      setCountBusinesses(props.results.count_businesses);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get user businesses (finished)\r\n   */\r\n  onResponse([\"get user businesses\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    setUserBusinessesLoaded(true);\r\n    setRedirectTo(\"/my-business\");\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get user businesses\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (continue)\r\n   */\r\n  onResponse([\"get cart purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (cartPurposes === null) {\r\n        setCartPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setCartPurposes(JSON.stringify([...cartPurposes, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      // setCartPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get cart purposes (success)\r\n   */\r\n  onResponse([\"get cart purposes\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (continue)\r\n   */\r\n  onResponse([\"get business purposes\", \"continue\"], () => {\r\n    if (props.name === \"SELECT purposes\") {\r\n      if (businessPurposes === null) {\r\n        setBusinessPurposes(JSON.stringify([props.results]));\r\n      } else {\r\n        setBusinessPurposes(\r\n          JSON.stringify([...businessPurposes, props.results])\r\n        );\r\n      }\r\n    } else if (props.name === \"COUNT purposes\") {\r\n      setCountBusinessPurposes(props.results.count_purposes);\r\n    }\r\n\r\n    // getPurposeShareholders(props.results.purpose_id);\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business purposes (finished)\r\n   */\r\n  onResponse([\"get business purposes\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (continue)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"continue\"], () => {\r\n    if (props.name === \"SELECT shares\") {\r\n      if (purposeShareholders === null) {\r\n        setPurposeShareholders(JSON.stringify([props.results]));\r\n      } else {\r\n        setPurposeShareholders(\r\n          JSON.stringify([...purposeShareholders, props.results])\r\n        );\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose shareholders (finished)\r\n   */\r\n  onResponse([\"get purpose shareholders\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get user business by id (continue)\r\n   */\r\n  // onResponse([\"get business by id\", \"continue\"], () => {\r\n  //   if (userBusinesses === null) {\r\n  //     setUserBusinesses(JSON.stringify([props.results]));\r\n  //   } else {\r\n  //     setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  onResponse([\"get business by id\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.name === \"SELECT businesses\") {\r\n      if (userBusinesses === null) {\r\n        setUserBusinesses(JSON.stringify([props.results]));\r\n      } else {\r\n        setUserBusinesses(JSON.stringify([...userBusinesses, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get business by id (finished)\r\n   */\r\n  onResponse([\"get business by id\", \"finished\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n\r\n    if (props.queryCnt > 0) {\r\n      // getting business was successful - query returned results\r\n      return false;\r\n    } else {\r\n      console.log(\"Error getting business by id\");\r\n\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"get business by id\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (continue)\r\n   */\r\n  onResponse([\"get purpose by id\", \"continue\"], () => {\r\n    /**\r\n     * Replace the purpose if it is already there\r\n     */\r\n    const index = getObjectArrayElementIndex(\r\n      businessPurposes,\r\n      \"purpose_id\",\r\n      props.results.purpose_id\r\n    );\r\n    if (index > -1) {\r\n      businessPurposes.splice(index, 1);\r\n      let temp = [...businessPurposes, props.results];\r\n      temp = sortObjectArray(temp, \"title\");\r\n      setBusinessPurposes(JSON.stringify(temp));\r\n      setActivePurposeData(JSON.stringify(props.results));\r\n\r\n      /**\r\n       * ... otherwise add the purpose\r\n       */\r\n    } else {\r\n      if (props.name === \"SELECT purposes\") {\r\n        if (businessPurposes === null) {\r\n          setBusinessPurposes(JSON.stringify([props.results]));\r\n        } else {\r\n          setBusinessPurposes(\r\n            JSON.stringify([...businessPurposes, props.results])\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (finished)\r\n   */\r\n  onResponse([\"get purpose by id\", \"finished\"], () => {\r\n    if (props.queryCnt < 1) {\r\n      // Something went wrong\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get purpose by id (success)\r\n   */\r\n  onResponse([\"get purpose by id\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (continue)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"continue\"], () => {\r\n    if (purposeShareholders === null) {\r\n      setPurposeShareholders(JSON.stringify([props.results]));\r\n    } else {\r\n      setPurposeShareholders(\r\n        JSON.stringify([...purposeShareholders, props.results])\r\n      );\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shareholder by id (finished)\r\n   */\r\n  onResponse([\"get shareholder by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Upload file (ready)\r\n   */\r\n  onResponse([\"upload file\", \"continue\"], () => {\r\n    // console.log(\"UPLOAD FILE =========== \");\r\n\r\n    // if (props.name === \"SELECT 1\") {\r\n    // setAccountPhotoPath(props + \"?r=\" + Math.random());\r\n    setAccountPhotoPath(Date.now()); // ok\r\n    return false;\r\n    // }\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"finished\"], () => {\r\n    if (props.name === \"SELECT 1\") {\r\n      if (props.queryCnt === 0) {\r\n        // something went wrong\r\n        // setAccountPhotoPath(\"ok\");\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"upload file\", \"success\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"continue\"], () => {\r\n    if (props.results.affectedRows < 1) {\r\n      // error registering account\r\n      setUID(null);\r\n      setAccountNumber(null);\r\n      showMessage(\"INVALID_DATA\", \"error\");\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Register account (success)\r\n   */\r\n  onResponse([\"register account\", \"success\"], () => {\r\n    // getAccountData();\r\n    sendRequest({ req: \"get user\", data: { email: props.email } });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (continue)\r\n   */\r\n  onResponse([\"get account data\", \"continue\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      setUID(props.results.uid);\r\n      setUserData(JSON.stringify(props.results));\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get account data (finished)\r\n   */\r\n  onResponse([\"get account data\", \"finished\"], () => {\r\n    if (props.name === \"SELECT users\") {\r\n      if (props.queryCnt === 0) {\r\n        // Account not reachable\r\n        // - user session timed out\r\n        showMessage(\"SESSION_TIMED_OUT\", \"info\", false);\r\n        setRedirectTo(\"/sign-out\");\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"get account data\", \"success\"], () => {\r\n    if (userData === null) return true;\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2S\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (continue)\r\n   */\r\n  onResponse([\"transfer U2S\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2S (success)\r\n   */\r\n  onResponse([\"transfer U2S\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2U\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (continue)\r\n   */\r\n  onResponse([\"transfer U2U\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2U (success)\r\n   */\r\n  onResponse([\"transfer U2U\", \"success\"], () => {\r\n    showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n    getTransactionById(lastInsertId);\r\n    setTanRequired(false);\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (pending)\r\n   ============================================================================================*/\r\n  onResponse([\"transfer U2B\", \"pending\"], () => {\r\n    // might show some pending state feedback\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (continue)\r\n   */\r\n  onResponse([\"transfer U2B\", \"continue\"], () => {\r\n    if (props.name === \"INSERT INTO transactions\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Transfer U2B (success)\r\n   */\r\n  onResponse([\"transfer U2B\", \"success\"], () => {\r\n    setTanRequired(false);\r\n\r\n    // If not an external request\r\n    if (cartContent === null) {\r\n      showMessage(\"TRANSFER_SUCCESS\", \"info\", false);\r\n      getTransactionById(lastInsertId);\r\n\r\n      return false;\r\n    } else {\r\n      setCartProcessingStatus(true);\r\n      return true;\r\n    }\r\n\r\n    // If an external request\r\n  });\r\n\r\n  /**\r\n   * Register business\r\n   ============================================================================================*/\r\n  onResponse([\"register business\", \"continue\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    if (props.name === \"INSERT INTO businesses\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        // No row was inserted - an error was returned\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register business\", \"success\"], () => {\r\n    // if (instance !== props.reqData.instance) return true;\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    // <ModalConfirm\r\n    //   title=\"Add Shareholders\"\r\n    //   message=\"Do you want to add yourself as a shareholder?\"\r\n    // />;\r\n\r\n    setClearRefs(true);\r\n\r\n    setActiveBusiness(null);\r\n\r\n    showMessage(\"REGISTER_BUSINESS_SUCCESS\", \"info\", false);\r\n\r\n    sendRequest({\r\n      req: \"get business by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    // getBusinesses();\r\n    return false;\r\n    // return true;\r\n  });\r\n\r\n  onResponse([\"register currency\", \"continue\"], () => {\r\n    // console.log(\"RESPONSE register business:\", props);\r\n\r\n    if (props.results.insertId > 0) {\r\n      setLastInsertId(props.results.insertId);\r\n\r\n      return false;\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register currency\", \"success\"], () => {\r\n    showMessage(\"REGISTER_CURRENCY_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get currency by id\",\r\n      data: { id: lastInsertId },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (continue)\r\n   */\r\n  onResponse([\"get currencies\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT currencies\") {\r\n      setCountCurrencies(props.results.count_currencies);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currencies (finished)\r\n   */\r\n  onResponse([\"get currencies\", \"finished\"], () => {\r\n    // setRedirectTo(\"/currency\");\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Find currencies (continue)\r\n  //  */\r\n  // onResponse([\"find currencies\", \"continue\"], () => {\r\n  //   // console.log(\"PROPS NAME:\", props.name);\r\n\r\n  //   if (props.name === \"SELECT currencies\") {\r\n  //     if (currencies === null) {\r\n  //       setCurrencies(JSON.stringify([props.results]));\r\n  //     } else {\r\n  //       setCurrencies(JSON.stringify([...currencies, props.results]));\r\n  //     }\r\n  //   } else if (props.name === \"COUNT currencies\") {\r\n  //     setCountCurrencies(props.results.count_currencies);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get currency by id (continue)\r\n   */\r\n  onResponse([\"get currency by id\", \"continue\"], () => {\r\n    if (props.name === \"SELECT currencies\") {\r\n      if (currencies === null) {\r\n        setCurrencies(JSON.stringify([props.results]));\r\n      } else {\r\n        setCurrencies(JSON.stringify([...currencies, props.results]));\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get currency by id\", \"finished\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transactions (continue)\r\n   */\r\n  onResponse([\"get transactions\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT transactions\") {\r\n      if (transactions === null) {\r\n        setTransactions(JSON.stringify([props.results]));\r\n      } else {\r\n        setTransactions(JSON.stringify([...transactions, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT transactions\") {\r\n      setCountTransactions(props.results.count_transaction_positions);\r\n      // } else if (props.name === \"VALIDATE SESSION\") {\r\n      //   if (typeof props.token !== \"undefined\") {\r\n      //     console.log(\"RESET SESSION\");\r\n      //     onSessionEnd();\r\n      //     // setSession(props.newToken);\r\n      //     setSession(props.token);\r\n      //   }\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get transactions (finished)\r\n   */\r\n  onResponse([\"get transactions\", \"finished\"], () => {\r\n    setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  // /**\r\n  //  * Find transactions (continue)\r\n  //  */\r\n  // onResponse([\"find transactions\", \"continue\"], () => {\r\n  //   // console.log(\"PROPS NAME:\", props.name);\r\n\r\n  //   if (props.name === \"SELECT transactions\") {\r\n  //     if (transactions === null) {\r\n  //       setTransactions(JSON.stringify([props.results]));\r\n  //     } else {\r\n  //       setTransactions(JSON.stringify([...transactions, props.results]));\r\n  //     }\r\n  //   } else if (props.name === \"COUNT transactions\") {\r\n  //     setCountTransactions(props.results.count_transaction_positions);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Get shares (continue)\r\n   */\r\n  onResponse([\"get shares\", \"continue\"], () => {\r\n    // console.log(\"PROPS NAME:\", props.name);\r\n\r\n    if (props.name === \"SELECT shares\") {\r\n      if (shares === null) {\r\n        setShares(JSON.stringify([props.results]));\r\n      } else {\r\n        setShares(JSON.stringify([...shares, props.results]));\r\n      }\r\n    } else if (props.name === \"COUNT shares\") {\r\n      setCountShares(props.results.count_shares);\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get shares (finished)\r\n   */\r\n  onResponse([\"get shares\", \"finished\"], () => {\r\n    // setRedirectTo(\"/balance\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Get transaction by id (continue)\r\n   */\r\n  onResponse([\"get transaction by id\", \"continue\"], () => {\r\n    if (transactions === null) {\r\n      setTransactions(JSON.stringify([props.results]));\r\n    } else {\r\n      setTransactions(JSON.stringify([...transactions, props.results]));\r\n    }\r\n\r\n    return false;\r\n  });\r\n\r\n  /**\r\n   * Get currency by id (finished)\r\n   */\r\n  onResponse([\"get transaction by id\", \"finished\"], () => {\r\n    getAccountData();\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"send message\", \"success\"], () => {\r\n    setClearRefs(true);\r\n    showMessage(\"SEND_MESSAGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"continue\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get purpose by id\",\r\n    //   data: { id: props.results.insertId },\r\n    // });\r\n    if (props.name === \"INSERT INTO purposes\") {\r\n      if (props.results.insertId > 0) {\r\n        setLastInsertId(props.results.insertId);\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  onResponse([\"register purpose\", \"success\"], () => {\r\n    showMessage(\"REGISTER_PURPOSE_SUCCESS\", \"info\", false);\r\n\r\n    setClearRefs(true);\r\n\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: lastInsertId, language: language },\r\n    });\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"update purpose property\", \"success\"], () => {\r\n    showMessage(\"UPDATE_PURPOSE_SUCCESS\", \"info\", false);\r\n    sendRequest({\r\n      req: \"get purpose by id\",\r\n      data: { id: props.reqData.id, language: language },\r\n    });\r\n    // getBusinessPurposes(props.reqData.business_id, 0, 1);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"continue\"], () => {\r\n    if (props.results.insertId > 0) {\r\n      // showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\");\r\n\r\n      // return sendRequest({\r\n      //   req: \"get shareholder by id\",\r\n      //   data: { id: props.results.insertId },\r\n      // });\r\n      setLastInsertId(props.results.insertId);\r\n    } else {\r\n      // No row was inserted - an error was returned\r\n      return true;\r\n    }\r\n  });\r\n\r\n  onResponse([\"register shareholder\", \"success\"], () => {\r\n    showMessage(\"REGISTER_SHAREHOLDER_SUCCESS\", \"info\", false);\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"change share\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    // getPurposeShareholders(activeBusinesPurpose);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"remove shareholder\", \"success\"], () => {\r\n    // sendRequest({\r\n    //   req: \"get shareholder by id\",\r\n    //   data: { id: lastInsertId },\r\n    // });\r\n\r\n    getPurposeShareholders(activeBusinesPurpose);\r\n    return false;\r\n  });\r\n\r\n  onResponse([\"reset password\", \"success\"], () => {\r\n    setPasswordResetTokenValidated(false);\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"change password\", \"success\"], () => {\r\n    // TOTO: If NO_ROWS_CHANGE - probably the currently saved password was submitted\r\n    setPasswordResetTokenValidated(null);\r\n    setPasswordResetTokenEmail(null);\r\n    onRedirect(\"/sign-in\");\r\n    showMessage(\"PASSWORD_CHANGE_SUCCESS\", \"info\", false);\r\n    return true;\r\n  });\r\n\r\n  // onResponse([\"unknown\"], () => {\r\n  //   if (\r\n  //     status === \"pending\" ||\r\n  //     status === \"continue\" ||\r\n  //     status === \"finished\" ||\r\n  //     status === \"success\"\r\n  //   ) {\r\n  //     return false;\r\n  //   } else {\r\n  //     showMessage(`${req}: ${status}`, \"info\");\r\n  //     return true;\r\n  //   }\r\n  // });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","// import { useTranslation } from \"react-i18next\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n    * Properties\r\n    ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n    * Barrels\r\n    ============================================================================ */\r\n  const { debug, error: msgError } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  //   const { t } = useTranslation(\"Errors\");\r\n  const { req, error, context } = props;\r\n  if (debug)\r\n    console.log(`SYSTEM ERROR: ${req}`, error, context, props, barrels);\r\n\r\n  let errorFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onError = (data, callback) => {\r\n    if (errorFound) return;\r\n    const [res, status] = data;\r\n\r\n    if (\r\n      (res === req && status === error.code) ||\r\n      (res === \"*\" && status === error.code) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      callback();\r\n      setRequest(null);\r\n      errorFound = true;\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onError([\"*\", \"INVALID_SESSION\"], () => {\r\n  //   showMessage(\"SESSION_TIMED_OUT\", \"info\");\r\n  //   setRedirectTo(\"/sign-out\");\r\n  //   return true;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_error\", \"none\"], () => {\r\n    if (msgError !== \"SERVER_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"connect_timeout\", \"connect_timeout\"], () => {\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect error\r\n   */\r\n  onError([\"reconnect_error\", \"TransportError\"], () => {\r\n    if (msgError !== \"SERVER_STILL_UNAVAILABLE\") {\r\n      // showMessage(\"SERVER_STILL_UNAVAILABLE\", \"error\");\r\n      setReconnecting(true);\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  onError([\"unknown\"], () => {\r\n    showMessage(error.code, \"error\");\r\n    return true;\r\n  });\r\n\r\n  return false;\r\n};\r\n","// import settings from \"../settings.json\";\r\n\r\nexport default ({ args, barrels }) => {\r\n  /**\r\n   * Default Properties\r\n   ============================================================================ */\r\n  let defaults = {};\r\n\r\n  /**\r\n   * Properties\r\n   ============================================================================ */\r\n  const props = Object.assign(defaults, args);\r\n\r\n  /**\r\n   * Barrels\r\n   ============================================================================ */\r\n  const { debug, info: msgInfo } = barrels.barrelGetters;\r\n  const { setRequest, setReconnecting } = barrels.barrelSetters;\r\n  const { showMessage, hideMessage } = barrels.barrelFunctions;\r\n  // const {} = barrels.barrelEventHandlers;\r\n\r\n  /**\r\n   * Hooks\r\n   ============================================================================ */\r\n  const { req } = props; // req, status\r\n\r\n  /**\r\n   * Log response\r\n   */\r\n  if (debug)\r\n    console.log(`system response: ${req} (${props.status})`, props, barrels);\r\n\r\n  let responseFound = false;\r\n\r\n  /** \r\n   * Request event dispatcher\r\n   ============================================================================ */\r\n  const onResponse = (data, callback) => {\r\n    if (responseFound) return;\r\n    const [res, status, name = null] = data;\r\n\r\n    if (\r\n      (res === \"*\" && status === props.status) ||\r\n      (res === props.req && status === props.status) ||\r\n      res === \"unknown\"\r\n    ) {\r\n      if (callback()) {\r\n        setRequest(null);\r\n      }\r\n      if (name === null) responseFound = true;\r\n      // return true;\r\n    }\r\n    // return false;\r\n  };\r\n\r\n  /** \r\n   * Response handlers\r\n  ============================================================================ */\r\n\r\n  // onResponse([\"*\", \"continue\", \"VALIDATE SESSION\"], () => {\r\n  //   if (typeof props.token !== \"undefined\") {\r\n  //     console.log(\"Renewing session...\");\r\n\r\n  //     onSessionEnd();\r\n  //     setSession(props.token);\r\n  //   }\r\n\r\n  //   return false;\r\n  // });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect attempt\", \"continue\"], () => {\r\n    // if (msgInfo !== \"RECONNECT_ATTEMPT\")\r\n    //   showMessage(\"RECONNECT_ATTEMPT\", \"info\");\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnecting\", \"continue\"], () => {\r\n    if (msgInfo !== \"RECONNECTING\") {\r\n      setReconnecting(true);\r\n      showMessage(\"RECONNECTING\", \"info\");\r\n    }\r\n    return true;\r\n  });\r\n\r\n  /**\r\n   * Reconnect attempt (continue)\r\n   */\r\n  onResponse([\"reconnect\", \"success\"], () => {\r\n    setReconnecting(false);\r\n    hideMessage();\r\n    // hideMessage(\"error\");\r\n    // hideMessage(\"info\");\r\n    return true;\r\n  });\r\n\r\n  onResponse([\"unknown\"], () => {\r\n    return false;\r\n  });\r\n\r\n  return responseFound;\r\n};\r\n","var map = {\n\t\"./\": [\n\t\t181,\n\t\t9\n\t],\n\t\"./Dispatcher\": [\n\t\t245,\n\t\t9\n\t],\n\t\"./Dispatcher.js\": [\n\t\t245,\n\t\t9\n\t],\n\t\"./components/_templates\": [\n\t\t287,\n\t\t9,\n\t\t11\n\t],\n\t\"./components/_templates/\": [\n\t\t287,\n\t\t9,\n\t\t11\n\t],\n\t\"./components/_templates/Component\": [\n\t\t374,\n\t\t9,\n\t\t44\n\t],\n\t\"./components/_templates/Component.js\": [\n\t\t374,\n\t\t9,\n\t\t44\n\t],\n\t\"./components/_templates/Container\": [\n\t\t411,\n\t\t9,\n\t\t45\n\t],\n\t\"./components/_templates/Container.js\": [\n\t\t411,\n\t\t9,\n\t\t45\n\t],\n\t\"./components/_templates/FormComponent\": [\n\t\t412,\n\t\t9,\n\t\t46\n\t],\n\t\"./components/_templates/FormComponent.js\": [\n\t\t412,\n\t\t9,\n\t\t46\n\t],\n\t\"./components/_templates/index\": [\n\t\t287,\n\t\t9,\n\t\t11\n\t],\n\t\"./components/_templates/index.js\": [\n\t\t287,\n\t\t9,\n\t\t11\n\t],\n\t\"./components/accordionCard\": [\n\t\t49,\n\t\t9\n\t],\n\t\"./components/accordionCard/\": [\n\t\t49,\n\t\t9\n\t],\n\t\"./components/accordionCard/AccordionCard\": [\n\t\t199,\n\t\t9\n\t],\n\t\"./components/accordionCard/AccordionCard.js\": [\n\t\t199,\n\t\t9\n\t],\n\t\"./components/accordionCard/index\": [\n\t\t49,\n\t\t9\n\t],\n\t\"./components/accordionCard/index.js\": [\n\t\t49,\n\t\t9\n\t],\n\t\"./components/accountContainer\": [\n\t\t89,\n\t\t9\n\t],\n\t\"./components/accountContainer/\": [\n\t\t89,\n\t\t9\n\t],\n\t\"./components/accountContainer/AccountContainer\": [\n\t\t191,\n\t\t9\n\t],\n\t\"./components/accountContainer/AccountContainer.js\": [\n\t\t191,\n\t\t9\n\t],\n\t\"./components/accountContainer/index\": [\n\t\t89,\n\t\t9\n\t],\n\t\"./components/accountContainer/index.js\": [\n\t\t89,\n\t\t9\n\t],\n\t\"./components/accountRegistration\": [\n\t\t88,\n\t\t9\n\t],\n\t\"./components/accountRegistration/\": [\n\t\t88,\n\t\t9\n\t],\n\t\"./components/accountRegistration/AccountRegistration\": [\n\t\t184,\n\t\t9\n\t],\n\t\"./components/accountRegistration/AccountRegistration.js\": [\n\t\t184,\n\t\t9\n\t],\n\t\"./components/accountRegistration/index\": [\n\t\t88,\n\t\t9\n\t],\n\t\"./components/accountRegistration/index.js\": [\n\t\t88,\n\t\t9\n\t],\n\t\"./components/accountRegistration/timezones.en\": [\n\t\t247,\n\t\t3\n\t],\n\t\"./components/accountRegistration/timezones.en.json\": [\n\t\t247,\n\t\t3\n\t],\n\t\"./components/accountRegistration/timezones_pure.en\": [\n\t\t413,\n\t\t3,\n\t\t58\n\t],\n\t\"./components/accountRegistration/timezones_pure.en.json\": [\n\t\t413,\n\t\t3,\n\t\t58\n\t],\n\t\"./components/alert\": [\n\t\t82,\n\t\t9\n\t],\n\t\"./components/alert/\": [\n\t\t82,\n\t\t9\n\t],\n\t\"./components/alert/Alert\": [\n\t\t221,\n\t\t9\n\t],\n\t\"./components/alert/Alert.js\": [\n\t\t221,\n\t\t9\n\t],\n\t\"./components/alert/index\": [\n\t\t82,\n\t\t9\n\t],\n\t\"./components/alert/index.js\": [\n\t\t82,\n\t\t9\n\t],\n\t\"./components/alertContainer\": [\n\t\t90,\n\t\t9\n\t],\n\t\"./components/alertContainer/\": [\n\t\t90,\n\t\t9\n\t],\n\t\"./components/alertContainer/AlertContainer\": [\n\t\t223,\n\t\t9\n\t],\n\t\"./components/alertContainer/AlertContainer.css\": [\n\t\t328,\n\t\t7\n\t],\n\t\"./components/alertContainer/AlertContainer.js\": [\n\t\t223,\n\t\t9\n\t],\n\t\"./components/alertContainer/index\": [\n\t\t90,\n\t\t9\n\t],\n\t\"./components/alertContainer/index.js\": [\n\t\t90,\n\t\t9\n\t],\n\t\"./components/article\": [\n\t\t143,\n\t\t9\n\t],\n\t\"./components/article/\": [\n\t\t143,\n\t\t9\n\t],\n\t\"./components/article/Article\": [\n\t\t235,\n\t\t9\n\t],\n\t\"./components/article/Article.css\": [\n\t\t329,\n\t\t7\n\t],\n\t\"./components/article/Article.js\": [\n\t\t235,\n\t\t9\n\t],\n\t\"./components/article/index\": [\n\t\t143,\n\t\t9\n\t],\n\t\"./components/article/index.js\": [\n\t\t143,\n\t\t9\n\t],\n\t\"./components/auth\": [\n\t\t139,\n\t\t9\n\t],\n\t\"./components/auth/\": [\n\t\t139,\n\t\t9\n\t],\n\t\"./components/auth/Auth\": [\n\t\t230,\n\t\t9\n\t],\n\t\"./components/auth/Auth.js\": [\n\t\t230,\n\t\t9\n\t],\n\t\"./components/auth/index\": [\n\t\t139,\n\t\t9\n\t],\n\t\"./components/auth/index.js\": [\n\t\t139,\n\t\t9\n\t],\n\t\"./components/balance\": [\n\t\t128,\n\t\t9\n\t],\n\t\"./components/balance/\": [\n\t\t128,\n\t\t9\n\t],\n\t\"./components/balance/Balance\": [\n\t\t200,\n\t\t9\n\t],\n\t\"./components/balance/Balance.js\": [\n\t\t200,\n\t\t9\n\t],\n\t\"./components/balance/Balance_BAK\": [\n\t\t414,\n\t\t9,\n\t\t39\n\t],\n\t\"./components/balance/Balance_BAK.js\": [\n\t\t414,\n\t\t9,\n\t\t39\n\t],\n\t\"./components/balance/Balance_NEW\": [\n\t\t415,\n\t\t9,\n\t\t40\n\t],\n\t\"./components/balance/Balance_NEW.js\": [\n\t\t415,\n\t\t9,\n\t\t40\n\t],\n\t\"./components/balance/index\": [\n\t\t128,\n\t\t9\n\t],\n\t\"./components/balance/index.js\": [\n\t\t128,\n\t\t9\n\t],\n\t\"./components/breadcrumb\": [\n\t\t144,\n\t\t9\n\t],\n\t\"./components/breadcrumb/\": [\n\t\t144,\n\t\t9\n\t],\n\t\"./components/breadcrumb/Breadcrumb\": [\n\t\t236,\n\t\t9\n\t],\n\t\"./components/breadcrumb/Breadcrumb.css\": [\n\t\t330,\n\t\t7\n\t],\n\t\"./components/breadcrumb/Breadcrumb.js\": [\n\t\t236,\n\t\t9\n\t],\n\t\"./components/breadcrumb/index\": [\n\t\t144,\n\t\t9\n\t],\n\t\"./components/breadcrumb/index.js\": [\n\t\t144,\n\t\t9\n\t],\n\t\"./components/businessRegistration\": [\n\t\t115,\n\t\t9\n\t],\n\t\"./components/businessRegistration/\": [\n\t\t115,\n\t\t9\n\t],\n\t\"./components/businessRegistration/BusinessRegistration\": [\n\t\t208,\n\t\t9\n\t],\n\t\"./components/businessRegistration/BusinessRegistration.js\": [\n\t\t208,\n\t\t9\n\t],\n\t\"./components/businessRegistration/index\": [\n\t\t115,\n\t\t9\n\t],\n\t\"./components/businessRegistration/index.js\": [\n\t\t115,\n\t\t9\n\t],\n\t\"./components/card\": [\n\t\t13,\n\t\t9\n\t],\n\t\"./components/card/\": [\n\t\t13,\n\t\t9\n\t],\n\t\"./components/card/Card\": [\n\t\t185,\n\t\t9\n\t],\n\t\"./components/card/Card.css\": [\n\t\t320,\n\t\t7\n\t],\n\t\"./components/card/Card.js\": [\n\t\t185,\n\t\t9\n\t],\n\t\"./components/card/index\": [\n\t\t13,\n\t\t9\n\t],\n\t\"./components/card/index.js\": [\n\t\t13,\n\t\t9\n\t],\n\t\"./components/changePassword\": [\n\t\t138,\n\t\t9\n\t],\n\t\"./components/changePassword/\": [\n\t\t138,\n\t\t9\n\t],\n\t\"./components/changePassword/ChangePassword\": [\n\t\t229,\n\t\t9\n\t],\n\t\"./components/changePassword/ChangePassword.js\": [\n\t\t229,\n\t\t9\n\t],\n\t\"./components/changePassword/index\": [\n\t\t138,\n\t\t9\n\t],\n\t\"./components/changePassword/index.js\": [\n\t\t138,\n\t\t9\n\t],\n\t\"./components/contact\": [\n\t\t131,\n\t\t9\n\t],\n\t\"./components/contact/\": [\n\t\t131,\n\t\t9\n\t],\n\t\"./components/contact/Contact\": [\n\t\t215,\n\t\t9\n\t],\n\t\"./components/contact/Contact.js\": [\n\t\t215,\n\t\t9\n\t],\n\t\"./components/contact/index\": [\n\t\t131,\n\t\t9\n\t],\n\t\"./components/contact/index.js\": [\n\t\t131,\n\t\t9\n\t],\n\t\"./components/copyableField\": [\n\t\t84,\n\t\t9\n\t],\n\t\"./components/copyableField/\": [\n\t\t84,\n\t\t9\n\t],\n\t\"./components/copyableField/CopyableField\": [\n\t\t201,\n\t\t9\n\t],\n\t\"./components/copyableField/CopyableField.js\": [\n\t\t201,\n\t\t9\n\t],\n\t\"./components/copyableField/index\": [\n\t\t84,\n\t\t9\n\t],\n\t\"./components/copyableField/index.js\": [\n\t\t84,\n\t\t9\n\t],\n\t\"./components/currencies\": [\n\t\t120,\n\t\t9\n\t],\n\t\"./components/currencies/\": [\n\t\t120,\n\t\t9\n\t],\n\t\"./components/currencies/Currencies\": [\n\t\t213,\n\t\t9\n\t],\n\t\"./components/currencies/Currencies.js\": [\n\t\t213,\n\t\t9\n\t],\n\t\"./components/currencies/index\": [\n\t\t120,\n\t\t9\n\t],\n\t\"./components/currencies/index.js\": [\n\t\t120,\n\t\t9\n\t],\n\t\"./components/currencyContainer\": [\n\t\t130,\n\t\t9\n\t],\n\t\"./components/currencyContainer/\": [\n\t\t130,\n\t\t9\n\t],\n\t\"./components/currencyContainer/CurrencyContainer\": [\n\t\t212,\n\t\t9\n\t],\n\t\"./components/currencyContainer/CurrencyContainer.js\": [\n\t\t212,\n\t\t9\n\t],\n\t\"./components/currencyContainer/CurrencyContainer_BAK\": [\n\t\t416,\n\t\t9,\n\t\t47\n\t],\n\t\"./components/currencyContainer/CurrencyContainer_BAK.js\": [\n\t\t416,\n\t\t9,\n\t\t47\n\t],\n\t\"./components/currencyContainer/index\": [\n\t\t130,\n\t\t9\n\t],\n\t\"./components/currencyContainer/index.js\": [\n\t\t130,\n\t\t9\n\t],\n\t\"./components/currencyRegistration\": [\n\t\t121,\n\t\t9\n\t],\n\t\"./components/currencyRegistration/\": [\n\t\t121,\n\t\t9\n\t],\n\t\"./components/currencyRegistration/CurrencyRegistration\": [\n\t\t214,\n\t\t9\n\t],\n\t\"./components/currencyRegistration/CurrencyRegistration.js\": [\n\t\t214,\n\t\t9\n\t],\n\t\"./components/currencyRegistration/index\": [\n\t\t121,\n\t\t9\n\t],\n\t\"./components/currencyRegistration/index.js\": [\n\t\t121,\n\t\t9\n\t],\n\t\"./components/datePicker\": [\n\t\t104,\n\t\t9\n\t],\n\t\"./components/datePicker/\": [\n\t\t104,\n\t\t9\n\t],\n\t\"./components/datePicker/DatePicker\": [\n\t\t196,\n\t\t9\n\t],\n\t\"./components/datePicker/DatePicker.css\": [\n\t\t323,\n\t\t7\n\t],\n\t\"./components/datePicker/DatePicker.js\": [\n\t\t196,\n\t\t9\n\t],\n\t\"./components/datePicker/DatePickerWrapper\": [\n\t\t248,\n\t\t9\n\t],\n\t\"./components/datePicker/DatePickerWrapper.js\": [\n\t\t248,\n\t\t9\n\t],\n\t\"./components/datePicker/index\": [\n\t\t104,\n\t\t9\n\t],\n\t\"./components/datePicker/index.js\": [\n\t\t104,\n\t\t9\n\t],\n\t\"./components/dateRangePicker\": [\n\t\t127,\n\t\t9\n\t],\n\t\"./components/dateRangePicker/\": [\n\t\t127,\n\t\t9\n\t],\n\t\"./components/dateRangePicker/DateRangePicker\": [\n\t\t195,\n\t\t9\n\t],\n\t\"./components/dateRangePicker/DateRangePicker.js\": [\n\t\t195,\n\t\t9\n\t],\n\t\"./components/dateRangePicker/index\": [\n\t\t127,\n\t\t9\n\t],\n\t\"./components/dateRangePicker/index.js\": [\n\t\t127,\n\t\t9\n\t],\n\t\"./components/dropzone\": [\n\t\t288,\n\t\t9,\n\t\t0,\n\t\t12\n\t],\n\t\"./components/dropzone/\": [\n\t\t288,\n\t\t9,\n\t\t0,\n\t\t12\n\t],\n\t\"./components/dropzone/Dropzone\": [\n\t\t375,\n\t\t9,\n\t\t0,\n\t\t48\n\t],\n\t\"./components/dropzone/Dropzone.js\": [\n\t\t375,\n\t\t9,\n\t\t0,\n\t\t48\n\t],\n\t\"./components/dropzone/index\": [\n\t\t288,\n\t\t9,\n\t\t0,\n\t\t12\n\t],\n\t\"./components/dropzone/index.js\": [\n\t\t288,\n\t\t9,\n\t\t0,\n\t\t12\n\t],\n\t\"./components/errorBoundary\": [\n\t\t72,\n\t\t9\n\t],\n\t\"./components/errorBoundary/\": [\n\t\t72,\n\t\t9\n\t],\n\t\"./components/errorBoundary/ErrorBoundary\": [\n\t\t190,\n\t\t9\n\t],\n\t\"./components/errorBoundary/ErrorBoundary.js\": [\n\t\t190,\n\t\t9\n\t],\n\t\"./components/errorBoundary/index\": [\n\t\t72,\n\t\t9\n\t],\n\t\"./components/errorBoundary/index.js\": [\n\t\t72,\n\t\t9\n\t],\n\t\"./components/fileLoader\": [\n\t\t42,\n\t\t9\n\t],\n\t\"./components/fileLoader/\": [\n\t\t42,\n\t\t9\n\t],\n\t\"./components/fileLoader/FileLoader\": [\n\t\t189,\n\t\t9\n\t],\n\t\"./components/fileLoader/FileLoader.js\": [\n\t\t189,\n\t\t9\n\t],\n\t\"./components/fileLoader/index\": [\n\t\t42,\n\t\t9\n\t],\n\t\"./components/fileLoader/index.js\": [\n\t\t42,\n\t\t9\n\t],\n\t\"./components/footer\": [\n\t\t140,\n\t\t9\n\t],\n\t\"./components/footer/\": [\n\t\t140,\n\t\t9\n\t],\n\t\"./components/footer/Footer\": [\n\t\t231,\n\t\t9\n\t],\n\t\"./components/footer/Footer.js\": [\n\t\t231,\n\t\t9\n\t],\n\t\"./components/footer/index\": [\n\t\t140,\n\t\t9\n\t],\n\t\"./components/footer/index.js\": [\n\t\t140,\n\t\t9\n\t],\n\t\"./components/form\": [\n\t\t289,\n\t\t9,\n\t\t13\n\t],\n\t\"./components/form/\": [\n\t\t289,\n\t\t9,\n\t\t13\n\t],\n\t\"./components/form/Form\": [\n\t\t376,\n\t\t9,\n\t\t49\n\t],\n\t\"./components/form/Form.js\": [\n\t\t376,\n\t\t9,\n\t\t49\n\t],\n\t\"./components/form/index\": [\n\t\t289,\n\t\t9,\n\t\t13\n\t],\n\t\"./components/form/index.js\": [\n\t\t289,\n\t\t9,\n\t\t13\n\t],\n\t\"./components/help\": [\n\t\t86,\n\t\t9\n\t],\n\t\"./components/help/\": [\n\t\t86,\n\t\t9\n\t],\n\t\"./components/help/Help\": [\n\t\t218,\n\t\t9\n\t],\n\t\"./components/help/Help.css\": [\n\t\t326,\n\t\t7\n\t],\n\t\"./components/help/Help.js\": [\n\t\t218,\n\t\t9\n\t],\n\t\"./components/help/index\": [\n\t\t86,\n\t\t9\n\t],\n\t\"./components/help/index.js\": [\n\t\t86,\n\t\t9\n\t],\n\t\"./components/helpMenuLevel2\": [\n\t\t87,\n\t\t9\n\t],\n\t\"./components/helpMenuLevel2/\": [\n\t\t87,\n\t\t9\n\t],\n\t\"./components/helpMenuLevel2/HelpMenuLevel2\": [\n\t\t219,\n\t\t9\n\t],\n\t\"./components/helpMenuLevel2/HelpMenuLevel2.js\": [\n\t\t219,\n\t\t9\n\t],\n\t\"./components/helpMenuLevel2/index\": [\n\t\t87,\n\t\t9\n\t],\n\t\"./components/helpMenuLevel2/index.js\": [\n\t\t87,\n\t\t9\n\t],\n\t\"./components/icon\": [\n\t\t286,\n\t\t9,\n\t\t6\n\t],\n\t\"./components/icon/\": [\n\t\t286,\n\t\t9,\n\t\t6\n\t],\n\t\"./components/icon/Icon\": [\n\t\t373,\n\t\t9,\n\t\t42\n\t],\n\t\"./components/icon/Icon.js\": [\n\t\t373,\n\t\t9,\n\t\t42\n\t],\n\t\"./components/icon/index\": [\n\t\t286,\n\t\t9,\n\t\t6\n\t],\n\t\"./components/icon/index.js\": [\n\t\t286,\n\t\t9,\n\t\t6\n\t],\n\t\"./components/idleTimer\": [\n\t\t142,\n\t\t9\n\t],\n\t\"./components/idleTimer/\": [\n\t\t142,\n\t\t9\n\t],\n\t\"./components/idleTimer/IdleTimer\": [\n\t\t234,\n\t\t9\n\t],\n\t\"./components/idleTimer/IdleTimer.js\": [\n\t\t234,\n\t\t9\n\t],\n\t\"./components/idleTimer/index\": [\n\t\t142,\n\t\t9\n\t],\n\t\"./components/idleTimer/index.js\": [\n\t\t142,\n\t\t9\n\t],\n\t\"./components/jobs\": [\n\t\t145,\n\t\t9\n\t],\n\t\"./components/jobs/\": [\n\t\t145,\n\t\t9\n\t],\n\t\"./components/jobs/Jobs\": [\n\t\t237,\n\t\t9\n\t],\n\t\"./components/jobs/Jobs.js\": [\n\t\t237,\n\t\t9\n\t],\n\t\"./components/jobs/index\": [\n\t\t145,\n\t\t9\n\t],\n\t\"./components/jobs/index.js\": [\n\t\t145,\n\t\t9\n\t],\n\t\"./components/language-selector\": [\n\t\t71,\n\t\t9\n\t],\n\t\"./components/language-selector/\": [\n\t\t71,\n\t\t9\n\t],\n\t\"./components/language-selector/LanguageSelector\": [\n\t\t232,\n\t\t9\n\t],\n\t\"./components/language-selector/LanguageSelector.js\": [\n\t\t232,\n\t\t9\n\t],\n\t\"./components/language-selector/index\": [\n\t\t71,\n\t\t9\n\t],\n\t\"./components/language-selector/index.js\": [\n\t\t71,\n\t\t9\n\t],\n\t\"./components/leads\": [\n\t\t146,\n\t\t9\n\t],\n\t\"./components/leads/\": [\n\t\t146,\n\t\t9\n\t],\n\t\"./components/leads/Leads\": [\n\t\t238,\n\t\t9\n\t],\n\t\"./components/leads/Leads.css\": [\n\t\t332,\n\t\t7\n\t],\n\t\"./components/leads/Leads.js\": [\n\t\t238,\n\t\t9\n\t],\n\t\"./components/leads/index\": [\n\t\t146,\n\t\t9\n\t],\n\t\"./components/leads/index.js\": [\n\t\t146,\n\t\t9\n\t],\n\t\"./components/listGroupItem\": [\n\t\t38,\n\t\t9\n\t],\n\t\"./components/listGroupItem/\": [\n\t\t38,\n\t\t9\n\t],\n\t\"./components/listGroupItem/ListGroupItem\": [\n\t\t220,\n\t\t9\n\t],\n\t\"./components/listGroupItem/ListGroupItem.js\": [\n\t\t220,\n\t\t9\n\t],\n\t\"./components/listGroupItem/index\": [\n\t\t38,\n\t\t9\n\t],\n\t\"./components/listGroupItem/index.js\": [\n\t\t38,\n\t\t9\n\t],\n\t\"./components/loading\": [\n\t\t103,\n\t\t9\n\t],\n\t\"./components/loading/\": [\n\t\t103,\n\t\t9\n\t],\n\t\"./components/loading/Loading\": [\n\t\t244,\n\t\t9\n\t],\n\t\"./components/loading/Loading.css\": [\n\t\t315,\n\t\t7\n\t],\n\t\"./components/loading/Loading.js\": [\n\t\t244,\n\t\t9\n\t],\n\t\"./components/loading/Loading_empty\": [\n\t\t417,\n\t\t9,\n\t\t50\n\t],\n\t\"./components/loading/Loading_empty.js\": [\n\t\t417,\n\t\t9,\n\t\t50\n\t],\n\t\"./components/loading/index\": [\n\t\t103,\n\t\t9\n\t],\n\t\"./components/loading/index.js\": [\n\t\t103,\n\t\t9\n\t],\n\t\"./components/locale/document.css\": [\n\t\t495,\n\t\t7,\n\t\t43\n\t],\n\t\"./components/locale/en/articles/i-forgot-my-password-how-do-i-reset-it\": [\n\t\t381,\n\t\t9,\n\t\t14\n\t],\n\t\"./components/locale/en/articles/i-forgot-my-password-how-do-i-reset-it.js\": [\n\t\t381,\n\t\t9,\n\t\t14\n\t],\n\t\"./components/locale/en/articles/readme\": [\n\t\t382,\n\t\t9,\n\t\t15\n\t],\n\t\"./components/locale/en/articles/readme.js\": [\n\t\t382,\n\t\t9,\n\t\t15\n\t],\n\t\"./components/locale/en/leads/LeadAuth\": [\n\t\t383,\n\t\t9,\n\t\t16\n\t],\n\t\"./components/locale/en/leads/LeadAuth.js\": [\n\t\t383,\n\t\t9,\n\t\t16\n\t],\n\t\"./components/locale/en/leads/LeadHome\": [\n\t\t384,\n\t\t9,\n\t\t17\n\t],\n\t\"./components/locale/en/leads/LeadHome.js\": [\n\t\t384,\n\t\t9,\n\t\t17\n\t],\n\t\"./components/locale/en/leads/LeadSignUp\": [\n\t\t385,\n\t\t9,\n\t\t18\n\t],\n\t\"./components/locale/en/leads/LeadSignUp.js\": [\n\t\t385,\n\t\t9,\n\t\t18\n\t],\n\t\"./components/locale/en/leads/Transfer\": [\n\t\t386,\n\t\t9,\n\t\t19\n\t],\n\t\"./components/locale/en/leads/Transfer.js\": [\n\t\t386,\n\t\t9,\n\t\t19\n\t],\n\t\"./components/locale/en/leads/TransferU2B\": [\n\t\t387,\n\t\t9,\n\t\t36\n\t],\n\t\"./components/locale/en/leads/TransferU2B.js\": [\n\t\t387,\n\t\t9,\n\t\t36\n\t],\n\t\"./components/locale/en/leads/TransferU2S\": [\n\t\t388,\n\t\t9,\n\t\t20\n\t],\n\t\"./components/locale/en/leads/TransferU2S.js\": [\n\t\t388,\n\t\t9,\n\t\t20\n\t],\n\t\"./components/locale/en/leads/TransferU2U\": [\n\t\t389,\n\t\t9,\n\t\t21\n\t],\n\t\"./components/locale/en/leads/TransferU2U.js\": [\n\t\t389,\n\t\t9,\n\t\t21\n\t],\n\t\"./components/locale/en/leads/_LeadDefault\": [\n\t\t390,\n\t\t9,\n\t\t22\n\t],\n\t\"./components/locale/en/leads/_LeadDefault.js\": [\n\t\t390,\n\t\t9,\n\t\t22\n\t],\n\t\"./components/locale/en/leads/_LeadTemplateHelp\": [\n\t\t391,\n\t\t9,\n\t\t23\n\t],\n\t\"./components/locale/en/leads/_LeadTemplateHelp.js\": [\n\t\t391,\n\t\t9,\n\t\t23\n\t],\n\t\"./components/locale/en/toasts/ToastAuth\": [\n\t\t392,\n\t\t9,\n\t\t24\n\t],\n\t\"./components/locale/en/toasts/ToastAuth.js\": [\n\t\t392,\n\t\t9,\n\t\t24\n\t],\n\t\"./components/locale/en/toasts/ToastHome\": [\n\t\t393,\n\t\t9,\n\t\t3\n\t],\n\t\"./components/locale/en/toasts/ToastHome.js\": [\n\t\t393,\n\t\t9,\n\t\t3\n\t],\n\t\"./components/locale/en/toasts/ToastSignUp\": [\n\t\t394,\n\t\t9,\n\t\t25\n\t],\n\t\"./components/locale/en/toasts/ToastSignUp.js\": [\n\t\t394,\n\t\t9,\n\t\t25\n\t],\n\t\"./components/locale/en/toasts/_ToastDefault\": [\n\t\t377,\n\t\t9,\n\t\t2\n\t],\n\t\"./components/locale/en/toasts/_ToastDefault.js\": [\n\t\t377,\n\t\t9,\n\t\t2\n\t],\n\t\"./components/locale/en/topics/common-questions\": [\n\t\t395,\n\t\t9,\n\t\t26\n\t],\n\t\"./components/locale/en/topics/common-questions.js\": [\n\t\t395,\n\t\t9,\n\t\t26\n\t],\n\t\"./components/locale/en/topics/my-account\": [\n\t\t396,\n\t\t9,\n\t\t37\n\t],\n\t\"./components/locale/en/topics/my-account.js\": [\n\t\t396,\n\t\t9,\n\t\t37\n\t],\n\t\"./components/locale/en/tos/PrivacyPolicy\": [\n\t\t397,\n\t\t9,\n\t\t7\n\t],\n\t\"./components/locale/en/tos/PrivacyPolicy.js\": [\n\t\t397,\n\t\t9,\n\t\t7\n\t],\n\t\"./components/locale/en/tos/UserAgreement\": [\n\t\t398,\n\t\t9,\n\t\t8\n\t],\n\t\"./components/locale/en/tos/UserAgreement.js\": [\n\t\t398,\n\t\t9,\n\t\t8\n\t],\n\t\"./components/locale/lv/articles/i-forgot-my-password-how-do-i-reset-it\": [\n\t\t399,\n\t\t9,\n\t\t27\n\t],\n\t\"./components/locale/lv/articles/i-forgot-my-password-how-do-i-reset-it.js\": [\n\t\t399,\n\t\t9,\n\t\t27\n\t],\n\t\"./components/locale/lv/articles/readme\": [\n\t\t400,\n\t\t9,\n\t\t28\n\t],\n\t\"./components/locale/lv/articles/readme.js\": [\n\t\t400,\n\t\t9,\n\t\t28\n\t],\n\t\"./components/locale/lv/leads/LeadAuth\": [\n\t\t401,\n\t\t9,\n\t\t29\n\t],\n\t\"./components/locale/lv/leads/LeadAuth.js\": [\n\t\t401,\n\t\t9,\n\t\t29\n\t],\n\t\"./components/locale/lv/leads/LeadHome\": [\n\t\t402,\n\t\t9,\n\t\t30\n\t],\n\t\"./components/locale/lv/leads/LeadHome.js\": [\n\t\t402,\n\t\t9,\n\t\t30\n\t],\n\t\"./components/locale/lv/leads/LeadSignUp\": [\n\t\t403,\n\t\t9,\n\t\t31\n\t],\n\t\"./components/locale/lv/leads/LeadSignUp.js\": [\n\t\t403,\n\t\t9,\n\t\t31\n\t],\n\t\"./components/locale/lv/leads/_LeadDefault\": [\n\t\t404,\n\t\t9,\n\t\t32\n\t],\n\t\"./components/locale/lv/leads/_LeadDefault.js\": [\n\t\t404,\n\t\t9,\n\t\t32\n\t],\n\t\"./components/locale/lv/toasts/ToastAuth\": [\n\t\t405,\n\t\t9,\n\t\t5\n\t],\n\t\"./components/locale/lv/toasts/ToastAuth.js\": [\n\t\t405,\n\t\t9,\n\t\t5\n\t],\n\t\"./components/locale/lv/toasts/ToastHome\": [\n\t\t406,\n\t\t9,\n\t\t4\n\t],\n\t\"./components/locale/lv/toasts/ToastHome.js\": [\n\t\t406,\n\t\t9,\n\t\t4\n\t],\n\t\"./components/locale/lv/toasts/_ToastDefault\": [\n\t\t378,\n\t\t9,\n\t\t1\n\t],\n\t\"./components/locale/lv/toasts/_ToastDefault.js\": [\n\t\t378,\n\t\t9,\n\t\t1\n\t],\n\t\"./components/locale/lv/topics/common-questions\": [\n\t\t407,\n\t\t9,\n\t\t33\n\t],\n\t\"./components/locale/lv/topics/common-questions.js\": [\n\t\t407,\n\t\t9,\n\t\t33\n\t],\n\t\"./components/locale/lv/topics/my-account\": [\n\t\t408,\n\t\t9,\n\t\t38\n\t],\n\t\"./components/locale/lv/topics/my-account.js\": [\n\t\t408,\n\t\t9,\n\t\t38\n\t],\n\t\"./components/locale/lv/tos/PrivacyPolicy\": [\n\t\t409,\n\t\t9,\n\t\t9\n\t],\n\t\"./components/locale/lv/tos/PrivacyPolicy.js\": [\n\t\t409,\n\t\t9,\n\t\t9\n\t],\n\t\"./components/locale/lv/tos/UserAgreement\": [\n\t\t410,\n\t\t9,\n\t\t10\n\t],\n\t\"./components/locale/lv/tos/UserAgreement.js\": [\n\t\t410,\n\t\t9,\n\t\t10\n\t],\n\t\"./components/login\": [\n\t\t105,\n\t\t9\n\t],\n\t\"./components/login/\": [\n\t\t105,\n\t\t9\n\t],\n\t\"./components/login/LogIn\": [\n\t\t224,\n\t\t9\n\t],\n\t\"./components/login/LogIn.js\": [\n\t\t224,\n\t\t9\n\t],\n\t\"./components/login/index\": [\n\t\t105,\n\t\t9\n\t],\n\t\"./components/login/index.js\": [\n\t\t105,\n\t\t9\n\t],\n\t\"./components/logout\": [\n\t\t134,\n\t\t9\n\t],\n\t\"./components/logout/\": [\n\t\t134,\n\t\t9\n\t],\n\t\"./components/logout/Logout\": [\n\t\t225,\n\t\t9\n\t],\n\t\"./components/logout/Logout.js\": [\n\t\t225,\n\t\t9\n\t],\n\t\"./components/logout/index\": [\n\t\t134,\n\t\t9\n\t],\n\t\"./components/logout/index.js\": [\n\t\t134,\n\t\t9\n\t],\n\t\"./components/main\": [\n\t\t125,\n\t\t9\n\t],\n\t\"./components/main/\": [\n\t\t125,\n\t\t9\n\t],\n\t\"./components/main/Main\": [\n\t\t182,\n\t\t9\n\t],\n\t\"./components/main/Main.css\": [\n\t\t312,\n\t\t7\n\t],\n\t\"./components/main/Main.js\": [\n\t\t182,\n\t\t9\n\t],\n\t\"./components/main/NotConnected\": [\n\t\t418,\n\t\t9,\n\t\t51\n\t],\n\t\"./components/main/NotConnected.js\": [\n\t\t418,\n\t\t9,\n\t\t51\n\t],\n\t\"./components/main/Routes\": [\n\t\t246,\n\t\t9\n\t],\n\t\"./components/main/Routes.js\": [\n\t\t246,\n\t\t9\n\t],\n\t\"./components/main/UnderConstruction\": [\n\t\t419,\n\t\t9,\n\t\t52\n\t],\n\t\"./components/main/UnderConstruction.js\": [\n\t\t419,\n\t\t9,\n\t\t52\n\t],\n\t\"./components/main/index\": [\n\t\t125,\n\t\t9\n\t],\n\t\"./components/main/index.js\": [\n\t\t125,\n\t\t9\n\t],\n\t\"./components/mainMenu\": [\n\t\t141,\n\t\t9\n\t],\n\t\"./components/mainMenu/\": [\n\t\t141,\n\t\t9\n\t],\n\t\"./components/mainMenu/MainMenu\": [\n\t\t233,\n\t\t9\n\t],\n\t\"./components/mainMenu/MainMenu.js\": [\n\t\t233,\n\t\t9\n\t],\n\t\"./components/mainMenu/index\": [\n\t\t141,\n\t\t9\n\t],\n\t\"./components/mainMenu/index.js\": [\n\t\t141,\n\t\t9\n\t],\n\t\"./components/modalMessage\": [\n\t\t59,\n\t\t9\n\t],\n\t\"./components/modalMessage/\": [\n\t\t59,\n\t\t9\n\t],\n\t\"./components/modalMessage/ModalMessage\": [\n\t\t188,\n\t\t9\n\t],\n\t\"./components/modalMessage/ModalMessage.js\": [\n\t\t188,\n\t\t9\n\t],\n\t\"./components/modalMessage/index\": [\n\t\t59,\n\t\t9\n\t],\n\t\"./components/modalMessage/index.js\": [\n\t\t59,\n\t\t9\n\t],\n\t\"./components/myBusiness\": [\n\t\t129,\n\t\t9\n\t],\n\t\"./components/myBusiness/\": [\n\t\t129,\n\t\t9\n\t],\n\t\"./components/myBusiness/MyBusiness\": [\n\t\t207,\n\t\t9\n\t],\n\t\"./components/myBusiness/MyBusiness.js\": [\n\t\t207,\n\t\t9\n\t],\n\t\"./components/myBusiness/MyBusiness_BAK\": [\n\t\t420,\n\t\t9,\n\t\t53\n\t],\n\t\"./components/myBusiness/MyBusiness_BAK.js\": [\n\t\t420,\n\t\t9,\n\t\t53\n\t],\n\t\"./components/myBusiness/MyBusiness_BAK2\": [\n\t\t421,\n\t\t9,\n\t\t54\n\t],\n\t\"./components/myBusiness/MyBusiness_BAK2.js\": [\n\t\t421,\n\t\t9,\n\t\t54\n\t],\n\t\"./components/myBusiness/MyBusiness_NEW\": [\n\t\t422,\n\t\t9,\n\t\t55\n\t],\n\t\"./components/myBusiness/MyBusiness_NEW.js\": [\n\t\t422,\n\t\t9,\n\t\t55\n\t],\n\t\"./components/myBusiness/index\": [\n\t\t129,\n\t\t9\n\t],\n\t\"./components/myBusiness/index.js\": [\n\t\t129,\n\t\t9\n\t],\n\t\"./components/navigation\": [\n\t\t290,\n\t\t9,\n\t\t34\n\t],\n\t\"./components/navigation/\": [\n\t\t290,\n\t\t9,\n\t\t34\n\t],\n\t\"./components/navigation/Navigation\": [\n\t\t379,\n\t\t9,\n\t\t56\n\t],\n\t\"./components/navigation/Navigation.js\": [\n\t\t379,\n\t\t9,\n\t\t56\n\t],\n\t\"./components/navigation/index\": [\n\t\t290,\n\t\t9,\n\t\t34\n\t],\n\t\"./components/navigation/index.js\": [\n\t\t290,\n\t\t9,\n\t\t34\n\t],\n\t\"./components/notConnected\": [\n\t\t123,\n\t\t9\n\t],\n\t\"./components/notConnected/\": [\n\t\t123,\n\t\t9\n\t],\n\t\"./components/notConnected/NotConnected\": [\n\t\t241,\n\t\t9\n\t],\n\t\"./components/notConnected/NotConnected.js\": [\n\t\t241,\n\t\t9\n\t],\n\t\"./components/notConnected/index\": [\n\t\t123,\n\t\t9\n\t],\n\t\"./components/notConnected/index.js\": [\n\t\t123,\n\t\t9\n\t],\n\t\"./components/overlay\": [\n\t\t75,\n\t\t9\n\t],\n\t\"./components/overlay/\": [\n\t\t75,\n\t\t9\n\t],\n\t\"./components/overlay/Overlay\": [\n\t\t222,\n\t\t9\n\t],\n\t\"./components/overlay/Overlay.css\": [\n\t\t327,\n\t\t7\n\t],\n\t\"./components/overlay/Overlay.js\": [\n\t\t222,\n\t\t9\n\t],\n\t\"./components/overlay/index\": [\n\t\t75,\n\t\t9\n\t],\n\t\"./components/overlay/index.js\": [\n\t\t75,\n\t\t9\n\t],\n\t\"./components/pagination\": [\n\t\t45,\n\t\t9\n\t],\n\t\"./components/pagination/\": [\n\t\t45,\n\t\t9\n\t],\n\t\"./components/pagination/Pagination\": [\n\t\t193,\n\t\t9\n\t],\n\t\"./components/pagination/Pagination.js\": [\n\t\t193,\n\t\t9\n\t],\n\t\"./components/pagination/index\": [\n\t\t45,\n\t\t9\n\t],\n\t\"./components/pagination/index.js\": [\n\t\t45,\n\t\t9\n\t],\n\t\"./components/passwordReset\": [\n\t\t136,\n\t\t9\n\t],\n\t\"./components/passwordReset/\": [\n\t\t136,\n\t\t9\n\t],\n\t\"./components/passwordReset/index\": [\n\t\t136,\n\t\t9\n\t],\n\t\"./components/passwordReset/index.js\": [\n\t\t136,\n\t\t9\n\t],\n\t\"./components/passwordReset/passwordReset\": [\n\t\t227,\n\t\t9\n\t],\n\t\"./components/passwordReset/passwordReset.js\": [\n\t\t227,\n\t\t9\n\t],\n\t\"./components/purposeProperty\": [\n\t\t291,\n\t\t9,\n\t\t35\n\t],\n\t\"./components/purposeProperty/\": [\n\t\t291,\n\t\t9,\n\t\t35\n\t],\n\t\"./components/purposeProperty/PurposeProperty\": [\n\t\t380,\n\t\t9,\n\t\t57\n\t],\n\t\"./components/purposeProperty/PurposeProperty.js\": [\n\t\t380,\n\t\t9,\n\t\t57\n\t],\n\t\"./components/purposeProperty/index\": [\n\t\t291,\n\t\t9,\n\t\t35\n\t],\n\t\"./components/purposeProperty/index.js\": [\n\t\t291,\n\t\t9,\n\t\t35\n\t],\n\t\"./components/purposeRegistration\": [\n\t\t116,\n\t\t9\n\t],\n\t\"./components/purposeRegistration/\": [\n\t\t116,\n\t\t9\n\t],\n\t\"./components/purposeRegistration/PurposeRegistration\": [\n\t\t209,\n\t\t9\n\t],\n\t\"./components/purposeRegistration/PurposeRegistration.js\": [\n\t\t209,\n\t\t9\n\t],\n\t\"./components/purposeRegistration/index\": [\n\t\t116,\n\t\t9\n\t],\n\t\"./components/purposeRegistration/index.js\": [\n\t\t116,\n\t\t9\n\t],\n\t\"./components/rating\": [\n\t\t132,\n\t\t9\n\t],\n\t\"./components/rating/\": [\n\t\t132,\n\t\t9\n\t],\n\t\"./components/rating/Rating\": [\n\t\t216,\n\t\t9\n\t],\n\t\"./components/rating/Rating.css\": [\n\t\t325,\n\t\t7\n\t],\n\t\"./components/rating/Rating.js\": [\n\t\t216,\n\t\t9\n\t],\n\t\"./components/rating/index\": [\n\t\t132,\n\t\t9\n\t],\n\t\"./components/rating/index.js\": [\n\t\t132,\n\t\t9\n\t],\n\t\"./components/search\": [\n\t\t36,\n\t\t9\n\t],\n\t\"./components/search/\": [\n\t\t36,\n\t\t9\n\t],\n\t\"./components/search/Search\": [\n\t\t194,\n\t\t9\n\t],\n\t\"./components/search/Search.js\": [\n\t\t194,\n\t\t9\n\t],\n\t\"./components/search/index\": [\n\t\t36,\n\t\t9\n\t],\n\t\"./components/search/index.js\": [\n\t\t36,\n\t\t9\n\t],\n\t\"./components/shareholder\": [\n\t\t83,\n\t\t9\n\t],\n\t\"./components/shareholder/\": [\n\t\t83,\n\t\t9\n\t],\n\t\"./components/shareholder/Shareholder\": [\n\t\t198,\n\t\t9\n\t],\n\t\"./components/shareholder/Shareholder.js\": [\n\t\t198,\n\t\t9\n\t],\n\t\"./components/shareholder/index\": [\n\t\t83,\n\t\t9\n\t],\n\t\"./components/shareholder/index.js\": [\n\t\t83,\n\t\t9\n\t],\n\t\"./components/shareholderRegistration\": [\n\t\t117,\n\t\t9\n\t],\n\t\"./components/shareholderRegistration/\": [\n\t\t117,\n\t\t9\n\t],\n\t\"./components/shareholderRegistration/index\": [\n\t\t117,\n\t\t9\n\t],\n\t\"./components/shareholderRegistration/index.js\": [\n\t\t117,\n\t\t9\n\t],\n\t\"./components/shareholderRegistration/shareholderRegistration\": [\n\t\t210,\n\t\t9\n\t],\n\t\"./components/shareholderRegistration/shareholderRegistration.js\": [\n\t\t210,\n\t\t9\n\t],\n\t\"./components/shares\": [\n\t\t119,\n\t\t9\n\t],\n\t\"./components/shares/\": [\n\t\t119,\n\t\t9\n\t],\n\t\"./components/shares/Shares\": [\n\t\t197,\n\t\t9\n\t],\n\t\"./components/shares/Shares.js\": [\n\t\t197,\n\t\t9\n\t],\n\t\"./components/shares/index\": [\n\t\t119,\n\t\t9\n\t],\n\t\"./components/shares/index.js\": [\n\t\t119,\n\t\t9\n\t],\n\t\"./components/signup\": [\n\t\t135,\n\t\t9\n\t],\n\t\"./components/signup/\": [\n\t\t135,\n\t\t9\n\t],\n\t\"./components/signup/SignUp\": [\n\t\t226,\n\t\t9\n\t],\n\t\"./components/signup/SignUp.js\": [\n\t\t226,\n\t\t9\n\t],\n\t\"./components/signup/index\": [\n\t\t135,\n\t\t9\n\t],\n\t\"./components/signup/index.js\": [\n\t\t135,\n\t\t9\n\t],\n\t\"./components/status_404\": [\n\t\t133,\n\t\t9\n\t],\n\t\"./components/status_404/\": [\n\t\t133,\n\t\t9\n\t],\n\t\"./components/status_404/Status_404\": [\n\t\t217,\n\t\t9\n\t],\n\t\"./components/status_404/Status_404.js\": [\n\t\t217,\n\t\t9\n\t],\n\t\"./components/status_404/index\": [\n\t\t133,\n\t\t9\n\t],\n\t\"./components/status_404/index.js\": [\n\t\t133,\n\t\t9\n\t],\n\t\"./components/submitButton\": [\n\t\t15,\n\t\t9\n\t],\n\t\"./components/submitButton/\": [\n\t\t15,\n\t\t9\n\t],\n\t\"./components/submitButton/SubmitButton\": [\n\t\t187,\n\t\t9\n\t],\n\t\"./components/submitButton/SubmitButton.js\": [\n\t\t187,\n\t\t9\n\t],\n\t\"./components/submitButton/index\": [\n\t\t15,\n\t\t9\n\t],\n\t\"./components/submitButton/index.js\": [\n\t\t15,\n\t\t9\n\t],\n\t\"./components/summary\": [\n\t\t126,\n\t\t9\n\t],\n\t\"./components/summary/\": [\n\t\t126,\n\t\t9\n\t],\n\t\"./components/summary/Summary\": [\n\t\t183,\n\t\t9\n\t],\n\t\"./components/summary/Summary.js\": [\n\t\t183,\n\t\t9\n\t],\n\t\"./components/summary/index\": [\n\t\t126,\n\t\t9\n\t],\n\t\"./components/summary/index.js\": [\n\t\t126,\n\t\t9\n\t],\n\t\"./components/tanInput\": [\n\t\t64,\n\t\t9\n\t],\n\t\"./components/tanInput/\": [\n\t\t64,\n\t\t9\n\t],\n\t\"./components/tanInput/TanInput\": [\n\t\t205,\n\t\t9\n\t],\n\t\"./components/tanInput/TanInput.js\": [\n\t\t205,\n\t\t9\n\t],\n\t\"./components/tanInput/index\": [\n\t\t64,\n\t\t9\n\t],\n\t\"./components/tanInput/index.js\": [\n\t\t64,\n\t\t9\n\t],\n\t\"./components/toasts\": [\n\t\t147,\n\t\t9\n\t],\n\t\"./components/toasts/\": [\n\t\t147,\n\t\t9\n\t],\n\t\"./components/toasts/Toasts\": [\n\t\t239,\n\t\t9\n\t],\n\t\"./components/toasts/Toasts.css\": [\n\t\t314,\n\t\t7\n\t],\n\t\"./components/toasts/Toasts.js\": [\n\t\t239,\n\t\t9\n\t],\n\t\"./components/toasts/Toasts_BAK\": [\n\t\t423,\n\t\t9,\n\t\t41\n\t],\n\t\"./components/toasts/Toasts_BAK.js\": [\n\t\t423,\n\t\t9,\n\t\t41\n\t],\n\t\"./components/toasts/index\": [\n\t\t147,\n\t\t9\n\t],\n\t\"./components/toasts/index.js\": [\n\t\t147,\n\t\t9\n\t],\n\t\"./components/transactions\": [\n\t\t118,\n\t\t9\n\t],\n\t\"./components/transactions/\": [\n\t\t118,\n\t\t9\n\t],\n\t\"./components/transactions/Transactions\": [\n\t\t192,\n\t\t9\n\t],\n\t\"./components/transactions/Transactions.js\": [\n\t\t192,\n\t\t9\n\t],\n\t\"./components/transactions/index\": [\n\t\t118,\n\t\t9\n\t],\n\t\"./components/transactions/index.js\": [\n\t\t118,\n\t\t9\n\t],\n\t\"./components/transfer\": [\n\t\t65,\n\t\t9\n\t],\n\t\"./components/transfer/\": [\n\t\t65,\n\t\t9\n\t],\n\t\"./components/transfer/Transfer\": [\n\t\t202,\n\t\t9\n\t],\n\t\"./components/transfer/Transfer.js\": [\n\t\t202,\n\t\t9\n\t],\n\t\"./components/transfer/TransferToBusiness\": [\n\t\t206,\n\t\t9\n\t],\n\t\"./components/transfer/TransferToBusiness.js\": [\n\t\t206,\n\t\t9\n\t],\n\t\"./components/transfer/TransferToPerson\": [\n\t\t204,\n\t\t9\n\t],\n\t\"./components/transfer/TransferToPerson.js\": [\n\t\t204,\n\t\t9\n\t],\n\t\"./components/transfer/TransferToSelf\": [\n\t\t203,\n\t\t9\n\t],\n\t\"./components/transfer/TransferToSelf.js\": [\n\t\t203,\n\t\t9\n\t],\n\t\"./components/transfer/index\": [\n\t\t65,\n\t\t9\n\t],\n\t\"./components/transfer/index.js\": [\n\t\t65,\n\t\t9\n\t],\n\t\"./components/underConstruction\": [\n\t\t122,\n\t\t9\n\t],\n\t\"./components/underConstruction/\": [\n\t\t122,\n\t\t9\n\t],\n\t\"./components/underConstruction/UnderConstruction\": [\n\t\t240,\n\t\t9\n\t],\n\t\"./components/underConstruction/UnderConstruction.js\": [\n\t\t240,\n\t\t9\n\t],\n\t\"./components/underConstruction/index\": [\n\t\t122,\n\t\t9\n\t],\n\t\"./components/underConstruction/index.js\": [\n\t\t122,\n\t\t9\n\t],\n\t\"./components/userEditor\": [\n\t\t74,\n\t\t9\n\t],\n\t\"./components/userEditor/\": [\n\t\t74,\n\t\t9\n\t],\n\t\"./components/userEditor/UserEditor\": [\n\t\t211,\n\t\t9\n\t],\n\t\"./components/userEditor/UserEditor.css\": [\n\t\t324,\n\t\t7\n\t],\n\t\"./components/userEditor/UserEditor.js\": [\n\t\t211,\n\t\t9\n\t],\n\t\"./components/userEditor/index\": [\n\t\t74,\n\t\t9\n\t],\n\t\"./components/userEditor/index.js\": [\n\t\t74,\n\t\t9\n\t],\n\t\"./components/validateEmail\": [\n\t\t137,\n\t\t9\n\t],\n\t\"./components/validateEmail/\": [\n\t\t137,\n\t\t9\n\t],\n\t\"./components/validateEmail/ValidateEmail\": [\n\t\t228,\n\t\t9\n\t],\n\t\"./components/validateEmail/ValidateEmail.js\": [\n\t\t228,\n\t\t9\n\t],\n\t\"./components/validateEmail/index\": [\n\t\t137,\n\t\t9\n\t],\n\t\"./components/validateEmail/index.js\": [\n\t\t137,\n\t\t9\n\t],\n\t\"./index\": [\n\t\t181,\n\t\t9\n\t],\n\t\"./index.css\": [\n\t\t317,\n\t\t7\n\t],\n\t\"./index.js\": [\n\t\t181,\n\t\t9\n\t],\n\t\"./normalize.css\": [\n\t\t316,\n\t\t7\n\t],\n\t\"./translations/i18n\": [\n\t\t91,\n\t\t9\n\t],\n\t\"./translations/i18n.js\": [\n\t\t91,\n\t\t9\n\t],\n\t\"./utils/config\": [\n\t\t106,\n\t\t9\n\t],\n\t\"./utils/config.js\": [\n\t\t106,\n\t\t9\n\t],\n\t\"./utils/requestHandler\": [\n\t\t251,\n\t\t9\n\t],\n\t\"./utils/requestHandler.js\": [\n\t\t251,\n\t\t9\n\t],\n\t\"./utils/sockets\": [\n\t\t47,\n\t\t9\n\t],\n\t\"./utils/sockets.js\": [\n\t\t47,\n\t\t9\n\t],\n\t\"./utils/state\": [\n\t\t5,\n\t\t9\n\t],\n\t\"./utils/state.js\": [\n\t\t5,\n\t\t9\n\t],\n\t\"./utils/systemErrorHandler\": [\n\t\t254,\n\t\t9\n\t],\n\t\"./utils/systemErrorHandler.js\": [\n\t\t254,\n\t\t9\n\t],\n\t\"./utils/systemResponseHandler\": [\n\t\t255,\n\t\t9\n\t],\n\t\"./utils/systemResponseHandler.js\": [\n\t\t255,\n\t\t9\n\t],\n\t\"./utils/useEventListener\": [\n\t\t250,\n\t\t9\n\t],\n\t\"./utils/useEventListener.js\": [\n\t\t250,\n\t\t9\n\t],\n\t\"./utils/useInterval\": [\n\t\t249,\n\t\t9\n\t],\n\t\"./utils/useInterval.js\": [\n\t\t249,\n\t\t9\n\t],\n\t\"./utils/useTimeout\": [\n\t\t148,\n\t\t9\n\t],\n\t\"./utils/useTimeout.js\": [\n\t\t148,\n\t\t9\n\t],\n\t\"./utils/userErrorHandler\": [\n\t\t252,\n\t\t9\n\t],\n\t\"./utils/userErrorHandler.js\": [\n\t\t252,\n\t\t9\n\t],\n\t\"./utils/userResponseHandler\": [\n\t\t253,\n\t\t9\n\t],\n\t\"./utils/userResponseHandler.js\": [\n\t\t253,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 322;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}